   1              	# 1 "../patron_volteo_arm_arm_opt.asm"
   1              	/*********************************************************************************************
   0              	
   0              	
   0              	
   2              	* Fichero:	patron_volteo_arm_arm_opt.asm
   3              	* Autor:	Fernando Peña Bes (NIA: 756012)
   4              				Pedro José Pérez García (NIA: 756642)
   5              	* Descrip:	Contiene la versión ARM-ARM optimizada de patron_volteo()
   6              	*********************************************************************************************/
   7              	
   8              					.section .text
   9              					.global patron_volteo_arm_arm_opt
  10              	
  11              	.equ DIM, 8
  12              	.equ DESPL, 3   @2^DESPL = DIM
  13              	
  14              	.equ CASILLA_VACIA, 0
  15              	.equ NO_HAY_PATRON, 0
  16              	.equ PATRON_ENCONTRADO, 1
  17              	
  18              	
  19              	@ Versión ARM-ARM optimizada de patron_volteo()
  20              	
  21              	@ La función comprueba si hay que actualizar una determinada dirección, busca
  22              	@ el patrón de volteo (n fichas del rival seguidas de una ficha del jugador actual) en
  23              	@ una dirección determinada
  24              	
  25              	@ Parámetros:
  26              	@ Par. entrada 0 = tablero
  27              	@ Par. entrada/salida 1 = *longitud
  28              	@ Par. entrada 2 = FA	@ casilla a analizar
  29              	@ Par. entrada 3 = CA
  30              	@ Par. entrada 4 = SF	@ dirección de movimiento a analizar
  31              	@ Par. entrada 5 = SC
  32              	@ Par. entrada 6 = color
  33              	
  34              	@ Devuelve si ha encontrado un patrón de volteo y la longitud analizada en el parámetro *longitud
  35              	patron_volteo_arm_arm_opt:
  36 0000 0DC0A0E1 					mov ip, sp
  37 0004 F0DF2DE9 					push {r4-r10, fp, ip, lr, pc}
  38 0008 04B04CE2 					sub fp, ip, #4
  39              					@ r0=@tablero
  40              					@ r1=@longitud
  41              					@ r2=FA
  42              					@ r3=CA
  43 000c D440DBE1 					ldrsb r4,[fp,#4]	@r4 = SF
  44 0010 D850DBE1 					ldrsb r5,[fp,#8]	@r5 = SC
  45 0014 0C60DBE5 					ldrb r6,[fp,#12]	@r6 = color
  46              					
  47 0018 0090A0E3 					mov r9, #NO_HAY_PATRON	@r9=resultado de la subrutina
  48 001c 008091E5 					ldr r8, [r1] @ r8 = longitud inicial
  49              	
  50              					@ FA = FA + SF
  51 0020 042082E0 	WHILE_ARM_OPT:		add r2, r2, r4
  52              					@ CA = CA + SC
  53 0024 053083E0 					add r3, r3, r5
  54              					
  55 0028 82A180E0 					add r10, r0, r2, LSL #DESPL @añadir fila
  56 002c 03A08AE0 					add r10, r10, r3	@añadir columna
  57              					
  58              					@ ficha válida
  59              					@ FA < DIM && FA >= 0 && CA < DIM && CA >= 0 && (tablero[FA][CA] != CASILLA_VACIA)
  60 0030 080052E3 					cmp r2, #DIM
  61 0034 0E0000AA 					bge FIN_ARM_OPT 	@ FA >= DIM
  62 0038 000052E3 					cmp r2, #0	
  63 003c 0C0000BA 					blt FIN_ARM_OPT		@ FA < 0
  64 0040 080053E3 					cmp r3, #DIM
  65 0044 0A0000AA 					bge FIN_ARM_OPT		@ CA >= DIM
  66 0048 000053E3 					cmp r3, #0
  67 004c 080000BA 					blt FIN_ARM_OPT		@ CA < 0
  68              	
  69 0050 0070DAE5 					ldrb r7, [r10]	@ r7=tablero[FA][CA]
  70 0054 000057E3 					cmp r7, #CASILLA_VACIA
  71 0058 0500000A 					beq FIN_ARM_OPT		@r7=CASILLA_VACIA
  72              					
  73              					
  74              					@ En este punto la posición es válida
  75 005c 060057E1 					cmp r7, r6
  76 0060 0100000A 					beq FIN_VALIDA_ARM_OPT		@ tablero[FA][CA] == color
  77              					@ sumar 1 a longitud
  78 0064 018088E2 					add r8, r8, #1
  79 0068 ECFFFFEA 					b WHILE_ARM_OPT
  80              					
  81 006c 000058E3 	FIN_VALIDA_ARM_OPT: cmp r8, #0
  82 0070 0190A013 						movne r9, #PATRON_ENCONTRADO
  83              					
  84 0074 008081E5 	FIN_ARM_OPT:	str r8, [r1]	@ Almacenar longitud calculada
  85 0078 0900A0E1 					mov r0, r9		@ Mover resultado de la subrutina a r0
  86 007c F0AF1BE9 					ldmdb fp,{r4-r10, fp, sp, pc}
DEFINED SYMBOLS
../patron_volteo_arm_arm_opt.asm:35     .text:00000000 patron_volteo_arm_arm_opt
../patron_volteo_arm_arm_opt.asm:11     *ABS*:00000008 DIM
../patron_volteo_arm_arm_opt.asm:12     *ABS*:00000003 DESPL
../patron_volteo_arm_arm_opt.asm:14     *ABS*:00000000 CASILLA_VACIA
../patron_volteo_arm_arm_opt.asm:15     *ABS*:00000000 NO_HAY_PATRON
../patron_volteo_arm_arm_opt.asm:16     *ABS*:00000001 PATRON_ENCONTRADO
../patron_volteo_arm_arm_opt.asm:36     .text:00000000 $a
../patron_volteo_arm_arm_opt.asm:51     .text:00000020 WHILE_ARM_OPT
../patron_volteo_arm_arm_opt.asm:84     .text:00000074 FIN_ARM_OPT
../patron_volteo_arm_arm_opt.asm:81     .text:0000006c FIN_VALIDA_ARM_OPT
                   .debug_aranges:0000000c $d

NO UNDEFINED SYMBOLS
