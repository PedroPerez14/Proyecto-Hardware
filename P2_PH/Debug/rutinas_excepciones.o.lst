   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.file	"rutinas_excepciones.c"
  21              	.Ltext0:
  22              		.file 1 "../rutinas_excepciones.c"
 2227              		.align	2
 2228              		.global	__get_CPSR
 2230              	__get_CPSR:
 2231              	.LFB0:
   1:../rutinas_excepciones.c **** 
   2:../rutinas_excepciones.c **** /*********************************************************************************************
   3:../rutinas_excepciones.c **** * Fichero:	rutinas_excepciones.c
   4:../rutinas_excepciones.c **** * Autor: 	Fernando Peña Bes (756012) y Pedro José Pérez García (756642)
   5:../rutinas_excepciones.c **** * Descrip:	Rutinas de tratamiento de las excepciones DAbort, Undefined y SWI
   6:../rutinas_excepciones.c **** * Version:
   7:../rutinas_excepciones.c **** *********************************************************************************************/
   8:../rutinas_excepciones.c **** /*--- ficheros de cabecera ---*/
   9:../rutinas_excepciones.c **** #include "rutinas_excepciones.h"
  10:../rutinas_excepciones.c **** #include "8led.h"
  11:../rutinas_excepciones.c **** #include "led.h"
  12:../rutinas_excepciones.c **** #include "44blib.h"
  13:../rutinas_excepciones.c **** #include "44b.h"
  14:../rutinas_excepciones.c **** #include "def.h"
  15:../rutinas_excepciones.c **** #include "debug.h"
  16:../rutinas_excepciones.c **** #include <stdint.h>
  17:../rutinas_excepciones.c **** 
  18:../rutinas_excepciones.c **** /*--- variables globales del módulo (hacen falta?)---*/
  19:../rutinas_excepciones.c **** volatile static int hay_excepcion;
  20:../rutinas_excepciones.c **** volatile uint32_t causa_fallo;
  21:../rutinas_excepciones.c **** /*--- Declaraciones de las diferentes rutinas para tratamiento de las excepciones ---*/
  22:../rutinas_excepciones.c **** volatile void Gestion_excepciones(void) __attribute__((interrupt("ABORT")));
  23:../rutinas_excepciones.c **** volatile void Gestion_excepciones(void) __attribute__((interrupt("SWI")));
  24:../rutinas_excepciones.c **** volatile void Gestion_excepciones(void) __attribute__((interrupt("UNDEF")));
  25:../rutinas_excepciones.c **** 
  26:../rutinas_excepciones.c **** //Ignorar warning, sí que devuelve lo que debe, pero sin hacer return en C como tal
  27:../rutinas_excepciones.c **** volatile uint32_t __get_CPSR() 					//Devuelve CPSR
  28:../rutinas_excepciones.c **** 	{
 2232              		.loc 1 28 0
 2233              		.cfi_startproc
 2234              		@ Function supports interworking.
 2235              		@ args = 0, pretend = 0, frame = 0
 2236              		@ frame_needed = 0, uses_anonymous_args = 0
 2237              		@ link register save eliminated.
  29:../rutinas_excepciones.c **** 		__asm volatile ("MRS r0, CPSR");
 2238              		.loc 1 29 0
 2239              	@ 29 "../rutinas_excepciones.c" 1
 2240 0000 00000FE1 		MRS r0, CPSR
 2241              	@ 0 "" 2
  30:../rutinas_excepciones.c **** 		__asm volatile ("bx lr");
 2242              		.loc 1 30 0
 2243              	@ 30 "../rutinas_excepciones.c" 1
 2244 0004 1EFF2FE1 		bx lr
 2245              	@ 0 "" 2
  31:../rutinas_excepciones.c **** 	}
 2246              		.loc 1 31 0
 2247 0008 1EFF2FE1 		bx	lr
 2248              		.cfi_endproc
 2249              	.LFE0:
 2251              		.align	2
 2252              		.global	parpadear_error
 2254              	parpadear_error:
 2255              	.LFB1:
  32:../rutinas_excepciones.c **** 
  33:../rutinas_excepciones.c **** void __attribute__((optimize("O0"))) parpadear_error(int caracter)		//8-led se queda parpadeando co
  34:../rutinas_excepciones.c **** {																		//según lo definido en el enum del .h
 2256              		.loc 1 34 0
 2257              		.cfi_startproc
 2258              		@ Function supports interworking.
 2259              		@ args = 0, pretend = 0, frame = 8
 2260              		@ frame_needed = 1, uses_anonymous_args = 0
 2261              	.LVL0:
 2262 000c 0DC0A0E1 		mov	ip, sp
 2263              	.LCFI0:
 2264              		.cfi_def_cfa_register 12
 2265 0010 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2266 0014 04B04CE2 		sub	fp, ip, #4
 2267              		.cfi_offset 14, -8
 2268              		.cfi_offset 13, -12
 2269              		.cfi_offset 11, -16
 2270              	.LCFI1:
 2271              		.cfi_def_cfa 11, 4
 2272 0018 08D04DE2 		sub	sp, sp, #8
 2273 001c 10000BE5 		str	r0, [fp, #-16]
 2274              	.LVL1:
 2275              	.L3:
  35:../rutinas_excepciones.c **** 	while(1)
  36:../rutinas_excepciones.c **** 	{
  37:../rutinas_excepciones.c **** 		D8Led_symbol(caracter);
 2276              		.loc 1 37 0 discriminator 1
 2277 0020 10001BE5 		ldr	r0, [fp, #-16]
 2278 0024 FEFFFFEB 		bl	D8Led_symbol
  38:../rutinas_excepciones.c **** 		Delay(2500);
 2279              		.loc 1 38 0 discriminator 1
 2280 0028 14009FE5 		ldr	r0, .L4
 2281 002c FEFFFFEB 		bl	Delay
  39:../rutinas_excepciones.c **** 		D8Led_symbol(16);
 2282              		.loc 1 39 0 discriminator 1
 2283 0030 1000A0E3 		mov	r0, #16
 2284 0034 FEFFFFEB 		bl	D8Led_symbol
  40:../rutinas_excepciones.c **** 		Delay(1250);
 2285              		.loc 1 40 0 discriminator 1
 2286 0038 08009FE5 		ldr	r0, .L4+4
 2287 003c FEFFFFEB 		bl	Delay
 2288 0040 F6FFFFEA 		b	.L3
 2289              	.L5:
 2290              		.align	2
 2291              	.L4:
 2292 0044 C4090000 		.word	2500
 2293 0048 E2040000 		.word	1250
 2294              		.cfi_endproc
 2295              	.LFE1:
 2297              		.align	2
 2298              		.global	Gestion_excepciones
 2300              	Gestion_excepciones:
 2301              	.LFB2:
  41:../rutinas_excepciones.c **** 	}
  42:../rutinas_excepciones.c **** }
  43:../rutinas_excepciones.c **** 
  44:../rutinas_excepciones.c **** volatile void Gestion_excepciones(void)
  45:../rutinas_excepciones.c **** {
 2302              		.loc 1 45 0
 2303              		.cfi_startproc
 2304              		@ ARM Exception Handler.
 2305              		@ args = 0, pretend = 0, frame = 8
 2306              		@ frame_needed = 1, uses_anonymous_args = 0
 2307 004c 04C02DE5 		str	ip, [sp, #-4]!
 2308 0050 0DC0A0E1 		mov	ip, sp
 2309              	.LCFI2:
 2310              		.cfi_def_cfa_register 12
 2311 0054 1FD82DE9 		stmfd	sp!, {r0, r1, r2, r3, r4, fp, ip, lr, pc}
 2312 0058 04B04CE2 		sub	fp, ip, #4
 2313              		.cfi_offset 14, -8
 2314              		.cfi_offset 13, -12
 2315              		.cfi_offset 11, -16
 2316              		.cfi_offset 4, -20
 2317              		.cfi_offset 3, -24
 2318              		.cfi_offset 2, -28
 2319              		.cfi_offset 1, -32
 2320              		.cfi_offset 0, -36
 2321              	.LCFI3:
 2322              		.cfi_def_cfa 11, 4
 2323 005c 0CD04DE2 		sub	sp, sp, #12
  46:../rutinas_excepciones.c **** 	asm volatile(" mov %0,lr\n" : "=r" (causa_fallo));
 2324              		.loc 1 46 0
 2325              	@ 46 "../rutinas_excepciones.c" 1
 2326 0060 0E00A0E1 		 mov r0,lr
 2327              	
 2328              	@ 0 "" 2
 2329 0064 78409FE5 		ldr	r4, .L13
 2330 0068 000084E5 		str	r0, [r4, #0]
  47:../rutinas_excepciones.c **** 	volatile uint32_t cpsr = __get_CPSR();
 2331              		.loc 1 47 0
 2332 006c FEFFFFEB 		bl	__get_CPSR
 2333              	.LVL2:
 2334 0070 28000BE5 		str	r0, [fp, #-40]
  48:../rutinas_excepciones.c **** 	if((cpsr & 0x0000001F) == 0x1b) 		//Si Estamos en modo Undef
 2335              		.loc 1 48 0
 2336 0074 28101BE5 		ldr	r1, [fp, #-40]
 2337 0078 1F3001E2 		and	r3, r1, #31
 2338 007c 1B0053E3 		cmp	r3, #27
  49:../rutinas_excepciones.c **** 	{
  50:../rutinas_excepciones.c **** 		hay_excepcion = UNDEF;
 2339              		.loc 1 50 0
 2340 0080 0300A003 		moveq	r0, #3
 2341              	.LVL3:
  48:../rutinas_excepciones.c **** 	if((cpsr & 0x0000001F) == 0x1b) 		//Si Estamos en modo Undef
 2342              		.loc 1 48 0
 2343 0084 0F00000A 		beq	.L10
  51:../rutinas_excepciones.c **** 		causa_fallo = causa_fallo - 4;
  52:../rutinas_excepciones.c **** 		parpadear_error(UNDEF);
  53:../rutinas_excepciones.c **** 	}
  54:../rutinas_excepciones.c **** 	else if((cpsr & 0x0000001F) == 0x13) 	//Si Estamos en modo SVC de SWI
 2344              		.loc 1 54 0
 2345 0088 28C01BE5 		ldr	ip, [fp, #-40]
 2346 008c 1F200CE2 		and	r2, ip, #31
 2347 0090 130052E3 		cmp	r2, #19
 2348 0094 0A00000A 		beq	.L12
  55:../rutinas_excepciones.c **** 	{
  56:../rutinas_excepciones.c **** 		hay_excepcion = SWI;
  57:../rutinas_excepciones.c **** 		causa_fallo = causa_fallo - 4;
  58:../rutinas_excepciones.c **** 		parpadear_error(SWI);
  59:../rutinas_excepciones.c **** 	}
  60:../rutinas_excepciones.c **** 	else									//Estamos en modo ABORT
  61:../rutinas_excepciones.c **** 	{
  62:../rutinas_excepciones.c **** 		hay_excepcion = DABORT;
 2349              		.loc 1 62 0
 2350 0098 48E09FE5 		ldr	lr, .L13+4
 2351 009c 0200A0E3 		mov	r0, #2
 2352 00a0 00008EE5 		str	r0, [lr, #0]
  63:../rutinas_excepciones.c **** 		causa_fallo = causa_fallo - 8;
 2353              		.loc 1 63 0
 2354 00a4 00C094E5 		ldr	ip, [r4, #0]
 2355 00a8 08204CE2 		sub	r2, ip, #8
 2356 00ac 002084E5 		str	r2, [r4, #0]
  64:../rutinas_excepciones.c **** 		parpadear_error(DABORT);
 2357              		.loc 1 64 0
 2358 00b0 FEFFFFEB 		bl	parpadear_error
 2359              	.L6:
  65:../rutinas_excepciones.c **** 	}
  66:../rutinas_excepciones.c **** }
 2360              		.loc 1 66 0
 2361 00b4 20D04BE2 		sub	sp, fp, #32
 2362 00b8 1F689DE8 		ldmfd	sp, {r0, r1, r2, r3, r4, fp, sp, lr}
 2363 00bc 04C09DE4 		ldmfd	sp!, {ip}
 2364 00c0 0EF0B0E1 		movs	pc, lr
 2365              	.L12:
  56:../rutinas_excepciones.c **** 		hay_excepcion = SWI;
 2366              		.loc 1 56 0
 2367 00c4 0100A0E3 		mov	r0, #1
 2368              	.L10:
 2369 00c8 18109FE5 		ldr	r1, .L13+4
 2370 00cc 000081E5 		str	r0, [r1, #0]
  57:../rutinas_excepciones.c **** 		causa_fallo = causa_fallo - 4;
 2371              		.loc 1 57 0
 2372 00d0 003094E5 		ldr	r3, [r4, #0]
 2373 00d4 04E043E2 		sub	lr, r3, #4
 2374 00d8 00E084E5 		str	lr, [r4, #0]
  58:../rutinas_excepciones.c **** 		parpadear_error(SWI);
 2375              		.loc 1 58 0
 2376 00dc FEFFFFEB 		bl	parpadear_error
 2377 00e0 F3FFFFEA 		b	.L6
 2378              	.L14:
 2379              		.align	2
 2380              	.L13:
 2381 00e4 00000000 		.word	causa_fallo
 2382 00e8 00000000 		.word	.LANCHOR0
 2383              		.cfi_endproc
 2384              	.LFE2:
 2386              		.align	2
 2387              		.global	Gestion_excepciones_init
 2389              	Gestion_excepciones_init:
 2390              	.LFB3:
  67:../rutinas_excepciones.c **** 
  68:../rutinas_excepciones.c **** //Inicializa la gestión de las excepciones de los tipos UNDEF, SWi y DABORT
  69:../rutinas_excepciones.c **** 
  70:../rutinas_excepciones.c **** volatile void Gestion_excepciones_init(void)
  71:../rutinas_excepciones.c **** {
 2391              		.loc 1 71 0
 2392              		.cfi_startproc
 2393              		@ Function supports interworking.
 2394              		@ args = 0, pretend = 0, frame = 0
 2395              		@ frame_needed = 0, uses_anonymous_args = 0
 2396              		@ link register save eliminated.
  72:../rutinas_excepciones.c **** 	pISR_DABORT = (int) Gestion_excepciones;
 2397              		.loc 1 72 0
 2398 00ec 1C009FE5 		ldr	r0, .L16
 2399 00f0 1C109FE5 		ldr	r1, .L16+4
  73:../rutinas_excepciones.c **** 	pISR_SWI = (int) Gestion_excepciones;
  74:../rutinas_excepciones.c **** 	pISR_UNDEF = (int) Gestion_excepciones;
  75:../rutinas_excepciones.c **** 	hay_excepcion = NO_EXCEPT;
 2400              		.loc 1 75 0
 2401 00f4 1C309FE5 		ldr	r3, .L16+8
 2402 00f8 0020A0E3 		mov	r2, #0
  72:../rutinas_excepciones.c **** 	pISR_DABORT = (int) Gestion_excepciones;
 2403              		.loc 1 72 0
 2404 00fc EF0001E5 		str	r0, [r1, #-239]
  73:../rutinas_excepciones.c **** 	pISR_SWI = (int) Gestion_excepciones;
 2405              		.loc 1 73 0
 2406 0100 F70001E5 		str	r0, [r1, #-247]
  74:../rutinas_excepciones.c **** 	pISR_UNDEF = (int) Gestion_excepciones;
 2407              		.loc 1 74 0
 2408 0104 FB0001E5 		str	r0, [r1, #-251]
 2409              		.loc 1 75 0
 2410 0108 002083E5 		str	r2, [r3, #0]
  76:../rutinas_excepciones.c **** }
 2411              		.loc 1 76 0
 2412 010c 1EFF2FE1 		bx	lr
 2413              	.L17:
 2414              		.align	2
 2415              	.L16:
 2416 0110 00000000 		.word	Gestion_excepciones
 2417 0114 FFFF7F0C 		.word	209715199
 2418 0118 00000000 		.word	.LANCHOR0
 2419              		.cfi_endproc
 2420              	.LFE3:
 2422              		.comm	causa_fallo,4,4
 2423              		.bss
 2424              		.align	2
 2425              		.set	.LANCHOR0,. + 0
 2428              	hay_excepcion:
 2429 0000 00000000 		.space	4
 2430              		.text
 2431              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 rutinas_excepciones.c
C:\Users\guest\AppData\Local\Temp\ccv8QFru.s:2227   .text:00000000 $a
C:\Users\guest\AppData\Local\Temp\ccv8QFru.s:2230   .text:00000000 __get_CPSR
C:\Users\guest\AppData\Local\Temp\ccv8QFru.s:2254   .text:0000000c parpadear_error
C:\Users\guest\AppData\Local\Temp\ccv8QFru.s:2292   .text:00000044 $d
C:\Users\guest\AppData\Local\Temp\ccv8QFru.s:2297   .text:0000004c $a
C:\Users\guest\AppData\Local\Temp\ccv8QFru.s:2300   .text:0000004c Gestion_excepciones
C:\Users\guest\AppData\Local\Temp\ccv8QFru.s:2381   .text:000000e4 $d
                            *COM*:00000004 causa_fallo
C:\Users\guest\AppData\Local\Temp\ccv8QFru.s:2386   .text:000000ec $a
C:\Users\guest\AppData\Local\Temp\ccv8QFru.s:2389   .text:000000ec Gestion_excepciones_init
C:\Users\guest\AppData\Local\Temp\ccv8QFru.s:2416   .text:00000110 $d
C:\Users\guest\AppData\Local\Temp\ccv8QFru.s:2424   .bss:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccv8QFru.s:2428   .bss:00000000 hay_excepcion
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
D8Led_symbol
Delay
