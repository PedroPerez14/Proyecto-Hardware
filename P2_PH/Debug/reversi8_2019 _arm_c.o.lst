   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.file	"reversi8_2019 _arm_c.c"
  21              	.Ltext0:
  22              		.file 1 "../reversi8_2019 _arm_c.c"
 973              		.align	2
 974              		.global	init_table
 976              	init_table:
 977              	.LFB0:
   1:../reversi8_2019 _arm_c.c **** #include "timer2.h"
   2:../reversi8_2019 _arm_c.c **** 
   3:../reversi8_2019 _arm_c.c **** // Tamaño del tablero
   4:../reversi8_2019 _arm_c.c **** enum { DIM=8 };
   5:../reversi8_2019 _arm_c.c **** 
   6:../reversi8_2019 _arm_c.c **** // Valores que puede devolver la función patron_volteo())
   7:../reversi8_2019 _arm_c.c **** enum {
   8:../reversi8_2019 _arm_c.c **** 	NO_HAY_PATRON = 0,
   9:../reversi8_2019 _arm_c.c ****   PATRON_ENCONTRADO = 1
  10:../reversi8_2019 _arm_c.c **** };
  11:../reversi8_2019 _arm_c.c **** 
  12:../reversi8_2019 _arm_c.c **** // Estados de las casillas del tablero
  13:../reversi8_2019 _arm_c.c **** // deberia ser enum, lo dejamos como const para usar char...
  14:../reversi8_2019 _arm_c.c **** //const char CASILLA_VACIA = 0;
  15:../reversi8_2019 _arm_c.c **** //const char FICHA_BLANCA  = 1;
  16:../reversi8_2019 _arm_c.c **** //const char FICHA_NEGRA   = 2;
  17:../reversi8_2019 _arm_c.c **** 
  18:../reversi8_2019 _arm_c.c **** enum {
  19:../reversi8_2019 _arm_c.c **** 	CASILLA_VACIA = 0,
  20:../reversi8_2019 _arm_c.c **** 	FICHA_BLANCA = 1,
  21:../reversi8_2019 _arm_c.c **** 	FICHA_NEGRA = 2
  22:../reversi8_2019 _arm_c.c **** };
  23:../reversi8_2019 _arm_c.c **** 
  24:../reversi8_2019 _arm_c.c **** 
  25:../reversi8_2019 _arm_c.c **** // candidatas: indica las posiciones a explorar
  26:../reversi8_2019 _arm_c.c **** // Se usa para no explorar todo el tablero innecesariamente
  27:../reversi8_2019 _arm_c.c **** // Sus posibles valores son NO, SI, CASILLA_OCUPADA
  28:../reversi8_2019 _arm_c.c **** const char  NO              = 0;
  29:../reversi8_2019 _arm_c.c **** const char  SI              = 1;
  30:../reversi8_2019 _arm_c.c **** const char  CASILLA_OCUPADA = 2;
  31:../reversi8_2019 _arm_c.c **** 
  32:../reversi8_2019 _arm_c.c **** /////////////////////////////////////////////////////////////////////////////
  33:../reversi8_2019 _arm_c.c **** // TABLAS AUXILIARES
  34:../reversi8_2019 _arm_c.c **** // declaramos las siguientes tablas como globales para que sean más fáciles visualizarlas en el sim
  35:../reversi8_2019 _arm_c.c **** // __attribute__ ((aligned (8))): specifies a minimum alignment for the variable or structure field
  36:../reversi8_2019 _arm_c.c **** 
  37:../reversi8_2019 _arm_c.c **** static const char __attribute__ ((aligned (8))) tabla_valor[DIM][DIM] =
  38:../reversi8_2019 _arm_c.c **** {
  39:../reversi8_2019 _arm_c.c ****     {8,2,7,3,3,7,2,8},
  40:../reversi8_2019 _arm_c.c ****     {2,1,4,4,4,4,1,2},
  41:../reversi8_2019 _arm_c.c ****     {7,4,6,5,5,6,4,7},
  42:../reversi8_2019 _arm_c.c ****     {3,4,5,0,0,5,4,3},
  43:../reversi8_2019 _arm_c.c ****     {3,4,5,0,0,5,4,3},
  44:../reversi8_2019 _arm_c.c ****     {7,4,6,5,5,6,4,7},
  45:../reversi8_2019 _arm_c.c ****     {2,1,4,4,4,4,1,2},
  46:../reversi8_2019 _arm_c.c ****     {8,2,7,3,3,7,2,8}
  47:../reversi8_2019 _arm_c.c **** };
  48:../reversi8_2019 _arm_c.c **** 
  49:../reversi8_2019 _arm_c.c **** 
  50:../reversi8_2019 _arm_c.c **** // Tabla de direcciones. Contiene los desplazamientos de las 8 direcciones posibles
  51:../reversi8_2019 _arm_c.c **** const char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
  52:../reversi8_2019 _arm_c.c **** const char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
  53:../reversi8_2019 _arm_c.c **** 
  54:../reversi8_2019 _arm_c.c **** //////////////////////////////////////////////////////////////////////////////////////
  55:../reversi8_2019 _arm_c.c **** // Variables globales que no deberían serlo
  56:../reversi8_2019 _arm_c.c **** // tablero, fila, columna y ready son varibles que se deberían definir como locales dentro de rever
  57:../reversi8_2019 _arm_c.c **** // Sin embargo, las hemos definido como globales para que sea más fácil visualizar el tablero y las
  58:../reversi8_2019 _arm_c.c **** //////////////////////////////////////////////////////////////////////////////////////
  59:../reversi8_2019 _arm_c.c **** 
  60:../reversi8_2019 _arm_c.c **** ////////////////////////////////////////////////////////////////////
  61:../reversi8_2019 _arm_c.c **** // Tablero sin inicializar
  62:../reversi8_2019 _arm_c.c **** ////////////////////////////////////////////////////////////////////
  63:../reversi8_2019 _arm_c.c **** static char __attribute__ ((aligned (8))) tablero[DIM][DIM] = {
  64:../reversi8_2019 _arm_c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  65:../reversi8_2019 _arm_c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  66:../reversi8_2019 _arm_c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  67:../reversi8_2019 _arm_c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  68:../reversi8_2019 _arm_c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  69:../reversi8_2019 _arm_c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  70:../reversi8_2019 _arm_c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  71:../reversi8_2019 _arm_c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  72:../reversi8_2019 _arm_c.c **** 	    };
  73:../reversi8_2019 _arm_c.c **** 
  74:../reversi8_2019 _arm_c.c ****   ////////////////////////////////////////////////////////////////////
  75:../reversi8_2019 _arm_c.c ****      // VARIABLES PARA INTERACCIONAR CON LA ENTRADA SALIDA
  76:../reversi8_2019 _arm_c.c ****      // Pregunta: ¿hay que hacer algo con ellas para que esto funcione bien?
  77:../reversi8_2019 _arm_c.c ****      // (por ejemplo añadir alguna palabra clave para garantizar que la sincronización a través de 
  78:../reversi8_2019 _arm_c.c **** static volatile char fila=0,
  79:../reversi8_2019 _arm_c.c **** 	    columna=0,
  80:../reversi8_2019 _arm_c.c **** 	    ready = 0;
  81:../reversi8_2019 _arm_c.c **** 
  82:../reversi8_2019 _arm_c.c **** 
  83:../reversi8_2019 _arm_c.c **** extern int patron_volteo_arm_c(char tablero[][DIM], int *longitud,char FA, char CA, char SF, char S
  84:../reversi8_2019 _arm_c.c **** extern int patron_volteo_arm_arm(char tablero[][DIM], int *longitud,char FA, char CA, char SF, char
  85:../reversi8_2019 _arm_c.c **** extern int patron_volteo_arm_arm_opt(char tablero[][DIM], int *longitud,char FA, char CA, char SF, 
  86:../reversi8_2019 _arm_c.c **** 
  87:../reversi8_2019 _arm_c.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  88:../reversi8_2019 _arm_c.c **** // 0 indica CASILLA_VACIA, 1 indica FICHA_BLANCA y 2 indica FICHA_NEGRA
  89:../reversi8_2019 _arm_c.c **** // pone el tablero a cero y luego coloca las fichas centrales.
  90:../reversi8_2019 _arm_c.c **** void init_table(char tablero[][DIM], char candidatas[][DIM])
  91:../reversi8_2019 _arm_c.c **** {
 978              		.loc 1 91 0
 979              		.cfi_startproc
 980              		@ Function supports interworking.
 981              		@ args = 0, pretend = 0, frame = 24
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 983              		@ link register save eliminated.
 984              	.LVL0:
 985 0000 F0072DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
 986              	.LCFI0:
 987              		.cfi_def_cfa_offset 28
 988 0004 1CD04DE2 		sub	sp, sp, #28
 989              	.LCFI1:
 990              		.cfi_def_cfa_offset 56
 991              		.loc 1 91 0
 992 0008 04108DE5 		str	r1, [sp, #4]
  92:../reversi8_2019 _arm_c.c ****     int i, j;
  93:../reversi8_2019 _arm_c.c **** 
  94:../reversi8_2019 _arm_c.c ****     for (i = 0; i < DIM; i++)
  95:../reversi8_2019 _arm_c.c ****     {
  96:../reversi8_2019 _arm_c.c ****         for (j = 0; j < DIM; j++)
  97:../reversi8_2019 _arm_c.c ****             tablero[i][j] = CASILLA_VACIA;
  98:../reversi8_2019 _arm_c.c ****     }
  99:../reversi8_2019 _arm_c.c **** #if 0
 100:../reversi8_2019 _arm_c.c ****     for (i = 3; i < 5; ++i) {
 101:../reversi8_2019 _arm_c.c **** 	for(j = 3; j < 5; ++j) {
 102:../reversi8_2019 _arm_c.c **** 	    tablero[i][j] = i == j ? FICHA_BLANCA : FICHA_NEGRA;
 103:../reversi8_2019 _arm_c.c **** 	}
 104:../reversi8_2019 _arm_c.c ****     }
 105:../reversi8_2019 _arm_c.c **** 
 106:../reversi8_2019 _arm_c.c ****     for (i = 2; i < 6; ++i) {
 107:../reversi8_2019 _arm_c.c **** 	for (j = 2; j < 6; ++j) {
 108:../reversi8_2019 _arm_c.c **** 	    if((i>=3) && (i < 5) && (j>=3) && (j<5)) {
 109:../reversi8_2019 _arm_c.c **** 		candidatas[i][j] = CASILLA_OCUPADA;
 110:../reversi8_2019 _arm_c.c **** 	    } else {
 111:../reversi8_2019 _arm_c.c **** 		candidatas[i][j] = SI; //CASILLA_LIBRE;
 112:../reversi8_2019 _arm_c.c **** 	    }
 113:../reversi8_2019 _arm_c.c **** 	}
 114:../reversi8_2019 _arm_c.c ****     }
 115:../reversi8_2019 _arm_c.c **** #endif
 116:../reversi8_2019 _arm_c.c ****     // arriba hay versión alternativa
 117:../reversi8_2019 _arm_c.c ****     tablero[3][3] = FICHA_BLANCA;
 118:../reversi8_2019 _arm_c.c ****     tablero[4][4] = FICHA_BLANCA;
 119:../reversi8_2019 _arm_c.c ****     tablero[3][4] = FICHA_NEGRA;
 120:../reversi8_2019 _arm_c.c ****     tablero[4][3] = FICHA_NEGRA;
 121:../reversi8_2019 _arm_c.c **** 
 122:../reversi8_2019 _arm_c.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 993              		.loc 1 122 0
 994 000c 04109DE5 		ldr	r1, [sp, #4]
 123:../reversi8_2019 _arm_c.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 995              		.loc 1 123 0
 996 0010 04C09DE5 		ldr	ip, [sp, #4]
 122:../reversi8_2019 _arm_c.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 997              		.loc 1 122 0
 998 0014 18A081E2 		add	sl, r1, #24
 999              		.cfi_offset 10, -4
 1000              		.cfi_offset 9, -8
 1001              		.cfi_offset 8, -12
 1002              		.cfi_offset 7, -16
 1003              		.cfi_offset 6, -20
 1004              		.cfi_offset 5, -24
 1005              		.cfi_offset 4, -28
 1006              		.loc 1 123 0
 1007 0018 20108CE2 		add	r1, ip, #32
 1008              	.LVL1:
 122:../reversi8_2019 _arm_c.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 1009              		.loc 1 122 0
 1010 001c 0CA08DE5 		str	sl, [sp, #12]
 1011              		.loc 1 123 0
 1012 0020 10108DE5 		str	r1, [sp, #16]
 124:../reversi8_2019 _arm_c.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 125:../reversi8_2019 _arm_c.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 126:../reversi8_2019 _arm_c.c **** 
 127:../reversi8_2019 _arm_c.c ****     // casillas a explorar:
 128:../reversi8_2019 _arm_c.c ****     candidatas[2][2] = SI;
 1013              		.loc 1 128 0
 1014 0024 04A09DE5 		ldr	sl, [sp, #4]
 129:../reversi8_2019 _arm_c.c ****     candidatas[2][3] = SI;
 130:../reversi8_2019 _arm_c.c ****     candidatas[2][4] = SI;
 131:../reversi8_2019 _arm_c.c ****     candidatas[2][5] = SI;
 132:../reversi8_2019 _arm_c.c ****     candidatas[3][2] = SI;
 133:../reversi8_2019 _arm_c.c ****     candidatas[3][5] = SI;
 134:../reversi8_2019 _arm_c.c ****     candidatas[4][2] = SI;
 135:../reversi8_2019 _arm_c.c ****     candidatas[4][5] = SI;
 136:../reversi8_2019 _arm_c.c ****     candidatas[5][2] = SI;
 1015              		.loc 1 136 0
 1016 0028 04109DE5 		ldr	r1, [sp, #4]
  97:../reversi8_2019 _arm_c.c ****             tablero[i][j] = CASILLA_VACIA;
 1017              		.loc 1 97 0
 1018 002c 0030A0E3 		mov	r3, #0
 117:../reversi8_2019 _arm_c.c ****     tablero[3][3] = FICHA_BLANCA;
 1019              		.loc 1 117 0
 1020 0030 0120A0E3 		mov	r2, #1
 119:../reversi8_2019 _arm_c.c ****     tablero[3][4] = FICHA_NEGRA;
 1021              		.loc 1 119 0
 1022 0034 0290A0E3 		mov	r9, #2
 128:../reversi8_2019 _arm_c.c ****     candidatas[2][2] = SI;
 1023              		.loc 1 128 0
 1024 0038 10C08AE2 		add	ip, sl, #16
 1025              	.LVL2:
 1026              		.loc 1 136 0
 1027 003c 28A081E2 		add	sl, r1, #40
 128:../reversi8_2019 _arm_c.c ****     candidatas[2][2] = SI;
 1028              		.loc 1 128 0
 1029 0040 14C08DE5 		str	ip, [sp, #20]
 1030              		.loc 1 136 0
 1031 0044 04A08DE5 		str	sl, [sp, #4]
  97:../reversi8_2019 _arm_c.c ****             tablero[i][j] = CASILLA_VACIA;
 1032              		.loc 1 97 0
 1033 0048 0030C0E5 		strb	r3, [r0, #0]
 1034              	.LVL3:
 1035 004c 0130C0E5 		strb	r3, [r0, #1]
 1036              	.LVL4:
 1037 0050 0230C0E5 		strb	r3, [r0, #2]
 1038              	.LVL5:
 1039 0054 0330C0E5 		strb	r3, [r0, #3]
 1040              	.LVL6:
 1041 0058 0430C0E5 		strb	r3, [r0, #4]
 1042              	.LVL7:
 1043 005c 0530C0E5 		strb	r3, [r0, #5]
 1044              	.LVL8:
 1045 0060 0630C0E5 		strb	r3, [r0, #6]
 1046              	.LVL9:
 1047 0064 0730C0E5 		strb	r3, [r0, #7]
 1048              	.LVL10:
 1049 0068 0830C0E5 		strb	r3, [r0, #8]
 1050              	.LVL11:
 1051 006c 0930C0E5 		strb	r3, [r0, #9]
 1052              	.LVL12:
 1053 0070 0A30C0E5 		strb	r3, [r0, #10]
 1054              	.LVL13:
 1055 0074 0B30C0E5 		strb	r3, [r0, #11]
 1056              	.LVL14:
 1057 0078 0C30C0E5 		strb	r3, [r0, #12]
 1058              	.LVL15:
 1059 007c 0D30C0E5 		strb	r3, [r0, #13]
 1060              	.LVL16:
 1061 0080 0E30C0E5 		strb	r3, [r0, #14]
 1062              	.LVL17:
 1063 0084 0F30C0E5 		strb	r3, [r0, #15]
 1064              	.LVL18:
 1065 0088 1030C0E5 		strb	r3, [r0, #16]
 1066              	.LVL19:
 1067 008c 1130C0E5 		strb	r3, [r0, #17]
 1068              	.LVL20:
 1069 0090 1230C0E5 		strb	r3, [r0, #18]
 1070              	.LVL21:
 1071 0094 1330C0E5 		strb	r3, [r0, #19]
 1072              	.LVL22:
 1073 0098 1430C0E5 		strb	r3, [r0, #20]
 1074              	.LVL23:
 1075 009c 1530C0E5 		strb	r3, [r0, #21]
 1076              	.LVL24:
 1077 00a0 1630C0E5 		strb	r3, [r0, #22]
 1078              	.LVL25:
 1079 00a4 1730C0E5 		strb	r3, [r0, #23]
 1080              	.LVL26:
 1081 00a8 1830C0E5 		strb	r3, [r0, #24]
 1082              	.LVL27:
 1083 00ac 1930C0E5 		strb	r3, [r0, #25]
 1084              	.LVL28:
 1085 00b0 1A30C0E5 		strb	r3, [r0, #26]
 1086              	.LVL29:
 1087 00b4 1D30C0E5 		strb	r3, [r0, #29]
 1088              	.LVL30:
 1089 00b8 1E30C0E5 		strb	r3, [r0, #30]
 1090              	.LVL31:
 1091 00bc 1F30C0E5 		strb	r3, [r0, #31]
 1092              	.LVL32:
 1093 00c0 2030C0E5 		strb	r3, [r0, #32]
 1094              	.LVL33:
 1095 00c4 2130C0E5 		strb	r3, [r0, #33]
 1096              	.LVL34:
 1097 00c8 2230C0E5 		strb	r3, [r0, #34]
 1098              	.LVL35:
 1099 00cc 2530C0E5 		strb	r3, [r0, #37]
 1100              	.LVL36:
 1101 00d0 2630C0E5 		strb	r3, [r0, #38]
 1102              	.LVL37:
 1103 00d4 2730C0E5 		strb	r3, [r0, #39]
 1104              	.LVL38:
 1105 00d8 2830C0E5 		strb	r3, [r0, #40]
 1106              	.LVL39:
 1107 00dc 2930C0E5 		strb	r3, [r0, #41]
 1108              	.LVL40:
 1109 00e0 2A30C0E5 		strb	r3, [r0, #42]
 1110              	.LVL41:
 1111 00e4 2B30C0E5 		strb	r3, [r0, #43]
 1112              	.LVL42:
 1113 00e8 2C30C0E5 		strb	r3, [r0, #44]
 1114              	.LVL43:
 1115 00ec 2D30C0E5 		strb	r3, [r0, #45]
 1116              	.LVL44:
 1117 00f0 2E30C0E5 		strb	r3, [r0, #46]
 1118              	.LVL45:
 1119 00f4 2F30C0E5 		strb	r3, [r0, #47]
 1120              	.LVL46:
 1121 00f8 3030C0E5 		strb	r3, [r0, #48]
 1122              	.LVL47:
 1123 00fc 3130C0E5 		strb	r3, [r0, #49]
 1124              	.LVL48:
 1125 0100 3230C0E5 		strb	r3, [r0, #50]
 1126              	.LVL49:
 1127 0104 3330C0E5 		strb	r3, [r0, #51]
 1128              	.LVL50:
 1129 0108 3430C0E5 		strb	r3, [r0, #52]
 1130              	.LVL51:
 1131 010c 3530C0E5 		strb	r3, [r0, #53]
 1132              	.LVL52:
 1133 0110 3630C0E5 		strb	r3, [r0, #54]
 1134              	.LVL53:
 1135 0114 3730C0E5 		strb	r3, [r0, #55]
 1136              	.LVL54:
 1137 0118 3830C0E5 		strb	r3, [r0, #56]
 1138              	.LVL55:
 1139 011c 3930C0E5 		strb	r3, [r0, #57]
 1140              	.LVL56:
 1141 0120 3A30C0E5 		strb	r3, [r0, #58]
 1142              	.LVL57:
 1143 0124 3B30C0E5 		strb	r3, [r0, #59]
 1144              	.LVL58:
 1145 0128 3C30C0E5 		strb	r3, [r0, #60]
 1146              	.LVL59:
 1147 012c 3D30C0E5 		strb	r3, [r0, #61]
 1148              	.LVL60:
 1149 0130 3E30C0E5 		strb	r3, [r0, #62]
 1150              	.LVL61:
 1151 0134 3F30C0E5 		strb	r3, [r0, #63]
 1152              	.LVL62:
 117:../reversi8_2019 _arm_c.c ****     tablero[3][3] = FICHA_BLANCA;
 1153              		.loc 1 117 0
 1154 0138 1B20C0E5 		strb	r2, [r0, #27]
 118:../reversi8_2019 _arm_c.c ****     tablero[4][4] = FICHA_BLANCA;
 1155              		.loc 1 118 0
 1156 013c 2420C0E5 		strb	r2, [r0, #36]
 119:../reversi8_2019 _arm_c.c ****     tablero[3][4] = FICHA_NEGRA;
 1157              		.loc 1 119 0
 1158 0140 1C90C0E5 		strb	r9, [r0, #28]
 120:../reversi8_2019 _arm_c.c ****     tablero[4][3] = FICHA_NEGRA;
 1159              		.loc 1 120 0
 1160 0144 2390C0E5 		strb	r9, [r0, #35]
 122:../reversi8_2019 _arm_c.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 1161              		.loc 1 122 0
 1162 0148 0CC09DE5 		ldr	ip, [sp, #12]
 1163 014c 0390CCE5 		strb	r9, [ip, #3]
 123:../reversi8_2019 _arm_c.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 1164              		.loc 1 123 0
 1165 0150 10109DE5 		ldr	r1, [sp, #16]
 1166              	.LVL63:
 1167 0154 0490C1E5 		strb	r9, [r1, #4]
 124:../reversi8_2019 _arm_c.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 1168              		.loc 1 124 0
 1169 0158 0490CCE5 		strb	r9, [ip, #4]
 125:../reversi8_2019 _arm_c.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 1170              		.loc 1 125 0
 1171 015c 0390C1E5 		strb	r9, [r1, #3]
 128:../reversi8_2019 _arm_c.c ****     candidatas[2][2] = SI;
 1172              		.loc 1 128 0
 1173 0160 14009DE5 		ldr	r0, [sp, #20]
 1174              	.LVL64:
 1175 0164 0220C0E5 		strb	r2, [r0, #2]
 129:../reversi8_2019 _arm_c.c ****     candidatas[2][3] = SI;
 1176              		.loc 1 129 0
 1177 0168 0320C0E5 		strb	r2, [r0, #3]
 130:../reversi8_2019 _arm_c.c ****     candidatas[2][4] = SI;
 1178              		.loc 1 130 0
 1179 016c 0420C0E5 		strb	r2, [r0, #4]
 131:../reversi8_2019 _arm_c.c ****     candidatas[2][5] = SI;
 1180              		.loc 1 131 0
 1181 0170 0520C0E5 		strb	r2, [r0, #5]
 132:../reversi8_2019 _arm_c.c ****     candidatas[3][2] = SI;
 1182              		.loc 1 132 0
 1183 0174 0CA09DE5 		ldr	sl, [sp, #12]
 1184 0178 0220CAE5 		strb	r2, [sl, #2]
 133:../reversi8_2019 _arm_c.c ****     candidatas[3][5] = SI;
 1185              		.loc 1 133 0
 1186 017c 0520CAE5 		strb	r2, [sl, #5]
 134:../reversi8_2019 _arm_c.c ****     candidatas[4][2] = SI;
 1187              		.loc 1 134 0
 1188 0180 10309DE5 		ldr	r3, [sp, #16]
 1189 0184 0220C3E5 		strb	r2, [r3, #2]
 135:../reversi8_2019 _arm_c.c ****     candidatas[4][5] = SI;
 1190              		.loc 1 135 0
 1191 0188 0520C3E5 		strb	r2, [r3, #5]
 1192              		.loc 1 136 0
 1193 018c 04A09DE5 		ldr	sl, [sp, #4]
 1194 0190 0220CAE5 		strb	r2, [sl, #2]
 137:../reversi8_2019 _arm_c.c ****     candidatas[5][3] = SI;
 1195              		.loc 1 137 0
 1196 0194 0320CAE5 		strb	r2, [sl, #3]
 138:../reversi8_2019 _arm_c.c ****     candidatas[5][4] = SI;
 1197              		.loc 1 138 0
 1198 0198 0420CAE5 		strb	r2, [sl, #4]
 139:../reversi8_2019 _arm_c.c ****     candidatas[5][5] = SI;
 1199              		.loc 1 139 0
 1200 019c 0520CAE5 		strb	r2, [sl, #5]
 140:../reversi8_2019 _arm_c.c **** }
 1201              		.loc 1 140 0
 1202 01a0 1CD08DE2 		add	sp, sp, #28
 1203 01a4 F007BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
 1204 01a8 1EFF2FE1 		bx	lr
 1205              		.cfi_endproc
 1206              	.LFE0:
 1208              		.align	2
 1209              		.global	esperar_mov
 1211              	esperar_mov:
 1212              	.LFB1:
 141:../reversi8_2019 _arm_c.c **** 
 142:../reversi8_2019 _arm_c.c **** ////////////////////////////////////////////////////////////////////////////////
 143:../reversi8_2019 _arm_c.c **** // Espera a que ready valga 1.
 144:../reversi8_2019 _arm_c.c **** // CUIDADO: si el compilador coloca esta variable en un registro, no funcionará.
 145:../reversi8_2019 _arm_c.c **** // Hay que definirla como "volatile" para forzar a que antes de cada uso la cargue de memoria
 146:../reversi8_2019 _arm_c.c **** 
 147:../reversi8_2019 _arm_c.c **** void esperar_mov(char *ready)
 148:../reversi8_2019 _arm_c.c **** {
 1213              		.loc 1 148 0
 1214              		.cfi_startproc
 1215              		@ Function supports interworking.
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218              		@ link register save eliminated.
 1219              	.LVL65:
 149:../reversi8_2019 _arm_c.c ****     while (*ready == 0) {};  // bucle de espera de respuestas hasta que el se modifique el valor de
 1220              		.loc 1 149 0
 1221 01ac 0030D0E5 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 1222 01b0 000053E3 		cmp	r3, #0
 150:../reversi8_2019 _arm_c.c **** 
 151:../reversi8_2019 _arm_c.c ****     *ready = 0;  //una vez que pasemos el bucle volvemos a fijar ready a 0;
 1223              		.loc 1 151 0
 1224 01b4 0030A013 		movne	r3, #0
 1225 01b8 0030C015 		strneb	r3, [r0, #0]
 149:../reversi8_2019 _arm_c.c ****     while (*ready == 0) {};  // bucle de espera de respuestas hasta que el se modifique el valor de
 1226              		.loc 1 149 0
 1227 01bc 1EFF2F11 		bxne	lr
 1228              	.L4:
 1229 01c0 FEFFFFEA 		b	.L4
 1230              		.cfi_endproc
 1231              	.LFE1:
 1233              		.align	2
 1234              		.global	ficha_valida
 1236              	ficha_valida:
 1237              	.LFB2:
 152:../reversi8_2019 _arm_c.c **** }
 153:../reversi8_2019 _arm_c.c **** 
 154:../reversi8_2019 _arm_c.c **** ////////////////////////////////////////////////////////////////////////////////
 155:../reversi8_2019 _arm_c.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 156:../reversi8_2019 _arm_c.c **** // IMPORTANTE: AL SUSTITUIR FICHA_VALIDA() Y PATRON_VOLTEO()
 157:../reversi8_2019 _arm_c.c **** // POR RUTINAS EN ENSAMBLADOR HAY QUE RESPETAR LA MODULARIDAD.
 158:../reversi8_2019 _arm_c.c **** // DEBEN SEGUIR SIENDO LLAMADAS A FUNCIONES Y DEBEN CUMPLIR CON EL ATPCS
 159:../reversi8_2019 _arm_c.c **** // (VER TRANSPARENCIAS Y MATERIAL DE PRACTICAS):
 160:../reversi8_2019 _arm_c.c **** //  - DEBEN PASAR LOS PARAMETROS POR LOS REGISTROS CORRESPONDIENTES
 161:../reversi8_2019 _arm_c.c **** //  - GUARDAR EN PILA SOLO LOS REGISTROS QUE TOCAN
 162:../reversi8_2019 _arm_c.c **** //  - CREAR UN MARCO DE PILA TAL Y COMO MUESTRAN LAS TRANSPARENCIAS
 163:../reversi8_2019 _arm_c.c **** //    DE LA ASIGNATURA (CON EL PC, FP, LR,....)
 164:../reversi8_2019 _arm_c.c **** //  - EN EL CASO DE LAS VARIABLES LOCALES, SOLO HAY QUE APILARLAS
 165:../reversi8_2019 _arm_c.c **** //    SI NO SE PUEDEN COLOCAR EN UN REGISTRO.
 166:../reversi8_2019 _arm_c.c **** //    SI SE COLOCAN EN UN REGISTRO NO HACE FALTA
 167:../reversi8_2019 _arm_c.c **** //    NI GUARDARLAS EN PILA NI RESERVAR UN ESPACIO EN LA PILA PARA ELLAS
 168:../reversi8_2019 _arm_c.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 169:../reversi8_2019 _arm_c.c **** ////////////////////////////////////////////////////////////////////////////////
 170:../reversi8_2019 _arm_c.c **** // Devuelve el contenido de la posición indicadas por la fila y columna actual.
 171:../reversi8_2019 _arm_c.c **** // Además informa si la posición es válida y contiene alguna ficha.
 172:../reversi8_2019 _arm_c.c **** // Esto lo hace por referencia (en *posicion_valida)
 173:../reversi8_2019 _arm_c.c **** // Si devuelve un 0 no es válida o está vacia.
 174:../reversi8_2019 _arm_c.c **** char ficha_valida(char tablero[][DIM], char f, char c, int *posicion_valida)
 175:../reversi8_2019 _arm_c.c **** {
 1238              		.loc 1 175 0
 1239              		.cfi_startproc
 1240              		@ Function supports interworking.
 1241              		@ args = 0, pretend = 0, frame = 0
 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243              		@ link register save eliminated.
 1244              	.LVL66:
 176:../reversi8_2019 _arm_c.c ****     char ficha;
 177:../reversi8_2019 _arm_c.c **** 
 178:../reversi8_2019 _arm_c.c ****     // ficha = tablero[f][c];
 179:../reversi8_2019 _arm_c.c ****     // no puede accederse a tablero[f][c]
 180:../reversi8_2019 _arm_c.c ****     // ya que algún índice puede ser negativo
 181:../reversi8_2019 _arm_c.c **** 
 182:../reversi8_2019 _arm_c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1245              		.loc 1 182 0
 1246 01c4 070052E3 		cmp	r2, #7
 1247 01c8 07005193 		cmpls	r1, #7
 1248 01cc 0300008A 		bhi	.L7
 1249              		.loc 1 182 0 is_stmt 0 discriminator 1
 1250 01d0 811180E0 		add	r1, r0, r1, asl #3
 1251              	.LVL67:
 1252 01d4 0200D1E7 		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 1253              	.LVL68:
 1254 01d8 000050E3 		cmp	r0, #0
 1255 01dc 0200001A 		bne	.L9
 1256              	.L7:
 183:../reversi8_2019 _arm_c.c ****     {
 184:../reversi8_2019 _arm_c.c ****         *posicion_valida = 1;
 185:../reversi8_2019 _arm_c.c ****         ficha = tablero[f][c];
 186:../reversi8_2019 _arm_c.c ****     }
 187:../reversi8_2019 _arm_c.c ****     else
 188:../reversi8_2019 _arm_c.c ****     {
 189:../reversi8_2019 _arm_c.c ****         *posicion_valida = 0;
 1257              		.loc 1 189 0 is_stmt 1
 1258 01e0 0000A0E3 		mov	r0, #0
 1259 01e4 000083E5 		str	r0, [r3, #0]
 1260              	.LVL69:
 190:../reversi8_2019 _arm_c.c ****         ficha = CASILLA_VACIA;
 191:../reversi8_2019 _arm_c.c ****     }
 192:../reversi8_2019 _arm_c.c ****     return ficha;
 193:../reversi8_2019 _arm_c.c **** }
 1261              		.loc 1 193 0
 1262 01e8 1EFF2FE1 		bx	lr
 1263              	.LVL70:
 1264              	.L9:
 184:../reversi8_2019 _arm_c.c ****         *posicion_valida = 1;
 1265              		.loc 1 184 0
 1266 01ec 01C0A0E3 		mov	ip, #1
 1267 01f0 00C083E5 		str	ip, [r3, #0]
 185:../reversi8_2019 _arm_c.c ****         ficha = tablero[f][c];
 1268              		.loc 1 185 0
 1269 01f4 0200D1E7 		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 1270              	.LVL71:
 1271 01f8 1EFF2FE1 		bx	lr
 1272              		.cfi_endproc
 1273              	.LFE2:
 1275              		.align	2
 1276              		.global	patron_volteo
 1278              	patron_volteo:
 1279              	.LFB3:
 194:../reversi8_2019 _arm_c.c **** 
 195:../reversi8_2019 _arm_c.c **** ////////////////////////////////////////////////////////////////////////////////
 196:../reversi8_2019 _arm_c.c **** // La función patrón volteo comprueba si hay que actualizar una determinada direccion,
 197:../reversi8_2019 _arm_c.c **** // busca el patrón de volteo (n fichas del rival seguidas de una ficha del jugador actual)
 198:../reversi8_2019 _arm_c.c **** // en una dirección determinada
 199:../reversi8_2019 _arm_c.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 200:../reversi8_2019 _arm_c.c **** // color indica el color de la pieza que se acaba de colocar
 201:../reversi8_2019 _arm_c.c **** // la función devuelve PATRON_ENCONTRADO (1) si encuentra patrón y NO_HAY_PATRON (0) en caso contra
 202:../reversi8_2019 _arm_c.c **** // FA y CA son la fila y columna a analizar
 203:../reversi8_2019 _arm_c.c **** // longitud es un parámetro por referencia. Sirve para saber la longitud del patrón que se está ana
 204:../reversi8_2019 _arm_c.c **** //          Se usa para saber cuantas fichas habría que voltear
 205:../reversi8_2019 _arm_c.c **** int patron_volteo(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char colo
 206:../reversi8_2019 _arm_c.c **** {
 1280              		.loc 1 206 0
 1281              		.cfi_startproc
 1282              		@ Function supports interworking.
 1283              		@ args = 12, pretend = 0, frame = 0
 1284              		@ frame_needed = 0, uses_anonymous_args = 0
 1285              		@ link register save eliminated.
 1286              	.LVL72:
 1287 01fc F0012DE9 		stmfd	sp!, {r4, r5, r6, r7, r8}
 1288              	.LCFI2:
 1289              		.cfi_def_cfa_offset 20
 1290              		.loc 1 206 0
 1291 0200 1440DDE5 		ldrb	r4, [sp, #20]	@ zero_extendqisi2
 1292              		.cfi_offset 8, -4
 1293              		.cfi_offset 7, -8
 1294              		.cfi_offset 6, -12
 1295              		.cfi_offset 5, -16
 1296              		.cfi_offset 4, -20
 1297 0204 18C0DDE5 		ldrb	ip, [sp, #24]	@ zero_extendqisi2
 207:../reversi8_2019 _arm_c.c **** 	int posicion_valida; // indica si la posición es valida y contiene una ficha de algún jugador
 208:../reversi8_2019 _arm_c.c **** 	char casilla;   // casilla es la casilla que se lee del tablero
 209:../reversi8_2019 _arm_c.c **** 
 210:../reversi8_2019 _arm_c.c **** 	FA = FA + SF;
 1298              		.loc 1 210 0
 1299 0208 022084E0 		add	r2, r4, r2
 1300              	.LVL73:
 211:../reversi8_2019 _arm_c.c **** 	CA = CA + SC;
 1301              		.loc 1 211 0
 1302 020c 03308CE0 		add	r3, ip, r3
 1303              	.LVL74:
 210:../reversi8_2019 _arm_c.c **** 	FA = FA + SF;
 1304              		.loc 1 210 0
 1305 0210 FF2002E2 		and	r2, r2, #255
 1306              	.LVL75:
 1307              		.loc 1 211 0
 1308 0214 FF3003E2 		and	r3, r3, #255
 1309              	.LVL76:
 1310              	.LBB10:
 1311              	.LBB11:
 182:../reversi8_2019 _arm_c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1312              		.loc 1 182 0
 1313 0218 070053E3 		cmp	r3, #7
 1314 021c 07005293 		cmpls	r2, #7
 1315 0220 0050A083 		movhi	r5, #0
 1316 0224 0150A093 		movls	r5, #1
 1317              	.LVL77:
 1318              	.LBE11:
 1319              	.LBE10:
 206:../reversi8_2019 _arm_c.c **** {
 1320              		.loc 1 206 0
 1321 0228 1C70DDE5 		ldrb	r7, [sp, #28]	@ zero_extendqisi2
 1322              	.LBB13:
 1323              	.LBB12:
 182:../reversi8_2019 _arm_c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1324              		.loc 1 182 0
 1325 022c 1600008A 		bhi	.L18
 1326              	.LVL78:
 1327              	.L21:
 1328              	.LBE12:
 1329              	.LBE13:
 1330              	.LBB14:
 1331              	.LBB17:
 1332 0230 825180E0 		add	r5, r0, r2, asl #3
 1333 0234 0360D5E7 		ldrb	r6, [r5, r3]	@ zero_extendqisi2
 1334 0238 000056E3 		cmp	r6, #0
 184:../reversi8_2019 _arm_c.c ****         *posicion_valida = 1;
 1335              		.loc 1 184 0
 1336 023c 0650A001 		moveq	r5, r6
 1337 0240 0150A013 		movne	r5, #1
 1338              	.L13:
 1339              	.LBE17:
 1340              	.LBE14:
 212:../reversi8_2019 _arm_c.c **** 	casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 213:../reversi8_2019 _arm_c.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1341              		.loc 1 213 0 discriminator 1
 1342 0244 FF5005E2 		and	r5, r5, #255
 1343 0248 070056E1 		cmp	r6, r7
 1344 024c 0080A003 		moveq	r8, #0
 1345 0250 01800512 		andne	r8, r5, #1
 1346              	.LBB21:
 1347              	.LBB18:
 182:../reversi8_2019 _arm_c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1348              		.loc 1 182 0 discriminator 1
 1349 0254 042082E0 		add	r2, r2, r4
 1350 0258 0C3083E0 		add	r3, r3, ip
 1351              	.LBE18:
 1352              	.LBE21:
 1353              		.loc 1 213 0 discriminator 1
 1354 025c 000058E3 		cmp	r8, #0
 1355              	.LBB22:
 1356              	.LBB16:
 182:../reversi8_2019 _arm_c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1357              		.loc 1 182 0 discriminator 1
 1358 0260 FF2002E2 		and	r2, r2, #255
 1359 0264 FF3003E2 		and	r3, r3, #255
 1360              	.LVL79:
 1361              	.LBE16:
 1362              	.LBE22:
 1363              		.loc 1 213 0 discriminator 1
 1364 0268 0900000A 		beq	.L22
 1365              	.LVL80:
 214:../reversi8_2019 _arm_c.c **** 	// mientras la casilla está en el tablero, no está vací­a,
 215:../reversi8_2019 _arm_c.c **** 	// y es del color rival seguimos buscando el patron de volteo
 216:../reversi8_2019 _arm_c.c **** 	{
 217:../reversi8_2019 _arm_c.c **** 		FA = FA + SF;
 218:../reversi8_2019 _arm_c.c **** 		CA = CA + SC;
 219:../reversi8_2019 _arm_c.c **** 		*longitud = *longitud + 1;
 1366              		.loc 1 219 0
 1367 026c 006091E5 		ldr	r6, [r1, #0]
 1368              	.LVL81:
 1369              	.LBB23:
 1370              	.LBB19:
 182:../reversi8_2019 _arm_c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1371              		.loc 1 182 0
 1372 0270 070053E3 		cmp	r3, #7
 1373 0274 07005293 		cmpls	r2, #7
 1374              	.LBE19:
 1375              	.LBE23:
 1376              		.loc 1 219 0
 1377 0278 018086E2 		add	r8, r6, #1
 1378              	.LBB24:
 1379              	.LBB15:
 182:../reversi8_2019 _arm_c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1380              		.loc 1 182 0
 1381 027c 0050A083 		movhi	r5, #0
 1382 0280 0150A093 		movls	r5, #1
 1383              	.LBE15:
 1384              	.LBE24:
 1385              		.loc 1 219 0
 1386 0284 008081E5 		str	r8, [r1, #0]
 1387              	.LVL82:
 1388              	.LBB25:
 1389              	.LBB20:
 182:../reversi8_2019 _arm_c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1390              		.loc 1 182 0
 1391 0288 E8FFFF9A 		bls	.L21
 1392              	.LVL83:
 1393              	.L18:
 190:../reversi8_2019 _arm_c.c ****         ficha = CASILLA_VACIA;
 1394              		.loc 1 190 0
 1395 028c 0560A0E1 		mov	r6, r5
 1396 0290 EBFFFFEA 		b	.L13
 1397              	.LVL84:
 1398              	.L22:
 1399              	.LBE20:
 1400              	.LBE25:
 220:../reversi8_2019 _arm_c.c **** 		casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 221:../reversi8_2019 _arm_c.c **** 	}
 222:../reversi8_2019 _arm_c.c ****     // si la ultima posición era válida y la ficha es del jugador actual,
 223:../reversi8_2019 _arm_c.c ****     // entonces hemos encontrado el patrón
 224:../reversi8_2019 _arm_c.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0))
 1401              		.loc 1 224 0
 1402 0294 060057E1 		cmp	r7, r6
 1403 0298 0050A013 		movne	r5, #0
 1404 029c 01500502 		andeq	r5, r5, #1
 1405 02a0 000055E3 		cmp	r5, #0
 225:../reversi8_2019 _arm_c.c **** 		return PATRON_ENCONTRADO; // si hay que voltear una ficha o más hemos encontrado el patrón
 226:../reversi8_2019 _arm_c.c **** 	else
 227:../reversi8_2019 _arm_c.c **** 		return NO_HAY_PATRON; // si no hay que voltear no hay patrón
 1406              		.loc 1 227 0
 1407 02a4 0500A001 		moveq	r0, r5
 1408              	.LVL85:
 224:../reversi8_2019 _arm_c.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0))
 1409              		.loc 1 224 0
 1410 02a8 0300000A 		beq	.L15
 205:../reversi8_2019 _arm_c.c **** int patron_volteo(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char colo
 1411              		.loc 1 205 0 discriminator 1
 1412 02ac 000091E5 		ldr	r0, [r1, #0]
 1413 02b0 000050E3 		cmp	r0, #0
 1414 02b4 0000A0D3 		movle	r0, #0
 1415 02b8 0100A0C3 		movgt	r0, #1
 1416              	.L15:
 228:../reversi8_2019 _arm_c.c **** }
 1417              		.loc 1 228 0
 1418 02bc F001BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8}
 1419 02c0 1EFF2FE1 		bx	lr
 1420              		.cfi_endproc
 1421              	.LFE3:
 1423              		.align	2
 1424              		.global	patron_volteo_test
 1426              	patron_volteo_test:
 1427              	.LFB4:
 229:../reversi8_2019 _arm_c.c **** 
 230:../reversi8_2019 _arm_c.c **** int patron_volteo_test(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char
 231:../reversi8_2019 _arm_c.c **** {
 1428              		.loc 1 231 0
 1429              		.cfi_startproc
 1430              		@ Function supports interworking.
 1431              		@ args = 12, pretend = 0, frame = 32
 1432              		@ frame_needed = 1, uses_anonymous_args = 0
 1433              	.LVL86:
 1434 02c4 0DC0A0E1 		mov	ip, sp
 1435              	.LCFI3:
 1436              		.cfi_def_cfa_register 12
 1437 02c8 F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 1438 02cc 04B04CE2 		sub	fp, ip, #4
 1439              		.cfi_offset 14, -8
 1440              		.cfi_offset 13, -12
 1441              		.cfi_offset 11, -16
 1442              		.cfi_offset 10, -20
 1443              		.cfi_offset 9, -24
 1444              		.cfi_offset 8, -28
 1445              		.cfi_offset 7, -32
 1446              		.cfi_offset 6, -36
 1447              		.cfi_offset 5, -40
 1448              		.cfi_offset 4, -44
 1449              	.LCFI4:
 1450              		.cfi_def_cfa 11, 4
 1451 02d0 34D04DE2 		sub	sp, sp, #52
 1452              		.loc 1 231 0
 1453 02d4 0140A0E1 		mov	r4, r1
 1454 02d8 0350A0E1 		mov	r5, r3
 1455 02dc 0070A0E1 		mov	r7, r0
 1456 02e0 0260A0E1 		mov	r6, r2
 1457 02e4 0480DBE5 		ldrb	r8, [fp, #4]	@ zero_extendqisi2
 1458 02e8 08A0DBE5 		ldrb	sl, [fp, #8]	@ zero_extendqisi2
 1459 02ec 0C90DBE5 		ldrb	r9, [fp, #12]	@ zero_extendqisi2
 232:../reversi8_2019 _arm_c.c **** 	int patron_c_c, patron_arm_c, patron_arm_arm;
 233:../reversi8_2019 _arm_c.c **** 
 234:../reversi8_2019 _arm_c.c **** 	int volatile timeA;
 235:../reversi8_2019 _arm_c.c **** 	int volatile timeD;
 236:../reversi8_2019 _arm_c.c **** 	int volatile timeT;
 237:../reversi8_2019 _arm_c.c **** 
 238:../reversi8_2019 _arm_c.c **** 	timer2_inicializar();
 1460              		.loc 1 238 0
 1461 02f0 FEFFFFEB 		bl	timer2_inicializar
 1462              	.LVL87:
 239:../reversi8_2019 _arm_c.c **** 
 240:../reversi8_2019 _arm_c.c **** 	// Ejecutar patron_volteo
 241:../reversi8_2019 _arm_c.c **** 	timer2_empezar();
 1463              		.loc 1 241 0
 1464 02f4 FEFFFFEB 		bl	timer2_empezar
 242:../reversi8_2019 _arm_c.c **** 	timeA = timer2_leer();
 1465              		.loc 1 242 0
 1466 02f8 FEFFFFEB 		bl	timer2_leer
 243:../reversi8_2019 _arm_c.c **** 	patron_c_c = patron_volteo(tablero, longitud, FA, CA, SF, SC, color);
 1467              		.loc 1 243 0
 1468 02fc 0530A0E1 		mov	r3, r5
 242:../reversi8_2019 _arm_c.c **** 	timeA = timer2_leer();
 1469              		.loc 1 242 0
 1470 0300 00C0A0E1 		mov	ip, r0
 1471              		.loc 1 243 0
 1472 0304 0410A0E1 		mov	r1, r4
 1473 0308 0620A0E1 		mov	r2, r6
 1474 030c 0700A0E1 		mov	r0, r7
 242:../reversi8_2019 _arm_c.c **** 	timeA = timer2_leer();
 1475              		.loc 1 242 0
 1476 0310 30C00BE5 		str	ip, [fp, #-48]
 1477              	.LVL88:
 1478              		.loc 1 243 0
 1479 0314 00058DE8 		stmia	sp, {r8, sl}	@ phole stm
 1480 0318 08908DE5 		str	r9, [sp, #8]
 1481 031c FEFFFFEB 		bl	patron_volteo
 244:../reversi8_2019 _arm_c.c **** 	timeD = timer2_parar();
 1482              		.loc 1 244 0
 1483 0320 4C000BE5 		str	r0, [fp, #-76]
 1484 0324 FEFFFFEB 		bl	timer2_parar
 1485 0328 34000BE5 		str	r0, [fp, #-52]
 1486              	.LVL89:
 245:../reversi8_2019 _arm_c.c **** 	timeT = timeD - timeA;
 1487              		.loc 1 245 0
 1488 032c 34201BE5 		ldr	r2, [fp, #-52]
 246:../reversi8_2019 _arm_c.c **** 
 247:../reversi8_2019 _arm_c.c **** 	int longitud_c_c = *longitud;
 1489              		.loc 1 247 0
 1490 0330 001094E5 		ldr	r1, [r4, #0]
 245:../reversi8_2019 _arm_c.c **** 	timeT = timeD - timeA;
 1491              		.loc 1 245 0
 1492 0334 30001BE5 		ldr	r0, [fp, #-48]
 248:../reversi8_2019 _arm_c.c **** 	*longitud = 0;
 1493              		.loc 1 248 0
 1494 0338 0030A0E3 		mov	r3, #0
 245:../reversi8_2019 _arm_c.c **** 	timeT = timeD - timeA;
 1495              		.loc 1 245 0
 1496 033c 02C060E0 		rsb	ip, r0, r2
 1497              	.LVL90:
 247:../reversi8_2019 _arm_c.c **** 	int longitud_c_c = *longitud;
 1498              		.loc 1 247 0
 1499 0340 40100BE5 		str	r1, [fp, #-64]
 1500              	.LVL91:
 1501              		.loc 1 248 0
 1502 0344 003084E5 		str	r3, [r4, #0]
 245:../reversi8_2019 _arm_c.c **** 	timeT = timeD - timeA;
 1503              		.loc 1 245 0
 1504 0348 38C00BE5 		str	ip, [fp, #-56]
 1505              	.LVL92:
 249:../reversi8_2019 _arm_c.c **** 
 250:../reversi8_2019 _arm_c.c **** 	// Ejecutar patron_volteo_arm_c
 251:../reversi8_2019 _arm_c.c **** 	timer2_empezar();
 1506              		.loc 1 251 0
 1507 034c FEFFFFEB 		bl	timer2_empezar
 1508              	.LVL93:
 252:../reversi8_2019 _arm_c.c **** 	timeA = timer2_leer();
 1509              		.loc 1 252 0
 1510 0350 FEFFFFEB 		bl	timer2_leer
 253:../reversi8_2019 _arm_c.c **** 	patron_arm_c = patron_volteo_arm_c(tablero, longitud, FA, CA, SF, SC, color);
 1511              		.loc 1 253 0
 1512 0354 0530A0E1 		mov	r3, r5
 252:../reversi8_2019 _arm_c.c **** 	timeA = timer2_leer();
 1513              		.loc 1 252 0
 1514 0358 00E0A0E1 		mov	lr, r0
 1515              		.loc 1 253 0
 1516 035c 0410A0E1 		mov	r1, r4
 1517 0360 0620A0E1 		mov	r2, r6
 1518 0364 0700A0E1 		mov	r0, r7
 252:../reversi8_2019 _arm_c.c **** 	timeA = timer2_leer();
 1519              		.loc 1 252 0
 1520 0368 30E00BE5 		str	lr, [fp, #-48]
 1521              		.loc 1 253 0
 1522 036c 00058DE8 		stmia	sp, {r8, sl}	@ phole stm
 1523 0370 08908DE5 		str	r9, [sp, #8]
 1524 0374 FEFFFFEB 		bl	patron_volteo_arm_c
 1525 0378 44000BE5 		str	r0, [fp, #-68]
 1526              	.LVL94:
 254:../reversi8_2019 _arm_c.c **** 	timeD = timer2_parar();
 1527              		.loc 1 254 0
 1528 037c FEFFFFEB 		bl	timer2_parar
 1529              	.LVL95:
 1530 0380 34000BE5 		str	r0, [fp, #-52]
 255:../reversi8_2019 _arm_c.c **** 	timeT = timeD - timeA;
 1531              		.loc 1 255 0
 1532 0384 34201BE5 		ldr	r2, [fp, #-52]
 256:../reversi8_2019 _arm_c.c **** 
 257:../reversi8_2019 _arm_c.c **** 	int longitud_arm_c = *longitud;
 1533              		.loc 1 257 0
 1534 0388 000094E5 		ldr	r0, [r4, #0]
 255:../reversi8_2019 _arm_c.c **** 	timeT = timeD - timeA;
 1535              		.loc 1 255 0
 1536 038c 30101BE5 		ldr	r1, [fp, #-48]
 258:../reversi8_2019 _arm_c.c **** 	*longitud = 0;
 1537              		.loc 1 258 0
 1538 0390 0030A0E3 		mov	r3, #0
 255:../reversi8_2019 _arm_c.c **** 	timeT = timeD - timeA;
 1539              		.loc 1 255 0
 1540 0394 02C061E0 		rsb	ip, r1, r2
 1541              	.LVL96:
 257:../reversi8_2019 _arm_c.c **** 	int longitud_arm_c = *longitud;
 1542              		.loc 1 257 0
 1543 0398 48000BE5 		str	r0, [fp, #-72]
 1544              	.LVL97:
 1545              		.loc 1 258 0
 1546 039c 003084E5 		str	r3, [r4, #0]
 255:../reversi8_2019 _arm_c.c **** 	timeT = timeD - timeA;
 1547              		.loc 1 255 0
 1548 03a0 38C00BE5 		str	ip, [fp, #-56]
 1549              	.LVL98:
 259:../reversi8_2019 _arm_c.c **** 
 260:../reversi8_2019 _arm_c.c **** 	// Ejecutar patron_volteo_arm_arm
 261:../reversi8_2019 _arm_c.c **** 	timer2_empezar();
 1550              		.loc 1 261 0
 1551 03a4 FEFFFFEB 		bl	timer2_empezar
 1552              	.LVL99:
 262:../reversi8_2019 _arm_c.c **** 	timeA = timer2_leer();
 1553              		.loc 1 262 0
 1554 03a8 FEFFFFEB 		bl	timer2_leer
 263:../reversi8_2019 _arm_c.c **** 	patron_arm_arm = patron_volteo_arm_arm_opt(tablero, longitud, FA, CA, SF, SC, color);
 1555              		.loc 1 263 0
 1556 03ac 0530A0E1 		mov	r3, r5
 262:../reversi8_2019 _arm_c.c **** 	timeA = timer2_leer();
 1557              		.loc 1 262 0
 1558 03b0 00E0A0E1 		mov	lr, r0
 1559              		.loc 1 263 0
 1560 03b4 0410A0E1 		mov	r1, r4
 1561 03b8 0620A0E1 		mov	r2, r6
 1562 03bc 0700A0E1 		mov	r0, r7
 262:../reversi8_2019 _arm_c.c **** 	timeA = timer2_leer();
 1563              		.loc 1 262 0
 1564 03c0 30E00BE5 		str	lr, [fp, #-48]
 1565              		.loc 1 263 0
 1566 03c4 00058DE8 		stmia	sp, {r8, sl}	@ phole stm
 1567 03c8 08908DE5 		str	r9, [sp, #8]
 1568 03cc FEFFFFEB 		bl	patron_volteo_arm_arm_opt
 1569 03d0 0050A0E1 		mov	r5, r0
 1570              	.LVL100:
 264:../reversi8_2019 _arm_c.c **** 	timeD = timer2_parar();
 1571              		.loc 1 264 0
 1572 03d4 FEFFFFEB 		bl	timer2_parar
 1573              	.LVL101:
 1574 03d8 34000BE5 		str	r0, [fp, #-52]
 265:../reversi8_2019 _arm_c.c **** 	timeT = timeD - timeA;
 1575              		.loc 1 265 0
 1576 03dc 34201BE5 		ldr	r2, [fp, #-52]
 1577 03e0 30101BE5 		ldr	r1, [fp, #-48]
 266:../reversi8_2019 _arm_c.c **** 
 267:../reversi8_2019 _arm_c.c **** 	int longitud_arm_arm = *longitud;
 268:../reversi8_2019 _arm_c.c **** 
 269:../reversi8_2019 _arm_c.c **** 	// Comprobar que los resultados de todas las funciones sean iguales
 270:../reversi8_2019 _arm_c.c **** 	if (patron_c_c != patron_arm_c || patron_c_c != patron_arm_arm) {
 1578              		.loc 1 270 0
 1579 03e4 4CC01BE5 		ldr	ip, [fp, #-76]
 265:../reversi8_2019 _arm_c.c **** 	timeT = timeD - timeA;
 1580              		.loc 1 265 0
 1581 03e8 023061E0 		rsb	r3, r1, r2
 1582              	.LVL102:
 1583              		.loc 1 270 0
 1584 03ec 44001BE5 		ldr	r0, [fp, #-68]
 265:../reversi8_2019 _arm_c.c **** 	timeT = timeD - timeA;
 1585              		.loc 1 265 0
 1586 03f0 38300BE5 		str	r3, [fp, #-56]
 1587              	.LVL103:
 1588              		.loc 1 270 0
 1589 03f4 00005CE1 		cmp	ip, r0
 1590 03f8 05005C01 		cmpeq	ip, r5
 267:../reversi8_2019 _arm_c.c **** 	int longitud_arm_arm = *longitud;
 1591              		.loc 1 267 0
 1592 03fc 003094E5 		ldr	r3, [r4, #0]
 1593              	.LVL104:
 1594              		.loc 1 270 0
 1595 0400 0500001A 		bne	.L28
 271:../reversi8_2019 _arm_c.c **** 		while (1);
 272:../reversi8_2019 _arm_c.c **** 	}
 273:../reversi8_2019 _arm_c.c **** 	if (longitud_c_c != longitud_arm_c || longitud_c_c != longitud_arm_arm) {
 1596              		.loc 1 273 0
 1597 0404 40101BE5 		ldr	r1, [fp, #-64]
 1598 0408 48001BE5 		ldr	r0, [fp, #-72]
 1599 040c 000051E1 		cmp	r1, r0
 1600 0410 03005101 		cmpeq	r1, r3
 1601 0414 0100000A 		beq	.L26
 1602              	.L29:
 1603 0418 FEFFFFEA 		b	.L29
 1604              	.L28:
 1605 041c FEFFFFEA 		b	.L28
 1606              	.L26:
 274:../reversi8_2019 _arm_c.c **** 		while(1);
 275:../reversi8_2019 _arm_c.c **** 	}
 276:../reversi8_2019 _arm_c.c **** 	return patron_c_c;
 277:../reversi8_2019 _arm_c.c **** }
 1607              		.loc 1 277 0
 1608 0420 0C00A0E1 		mov	r0, ip
 1609 0424 28D04BE2 		sub	sp, fp, #40
 1610 0428 F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 1611 042c 1EFF2FE1 		bx	lr
 1612              		.cfi_endproc
 1613              	.LFE4:
 1615              		.align	2
 1616              		.global	voltear
 1618              	voltear:
 1619              	.LFB5:
 278:../reversi8_2019 _arm_c.c **** 
 279:../reversi8_2019 _arm_c.c **** 
 280:../reversi8_2019 _arm_c.c **** /*
 281:../reversi8_2019 _arm_c.c **** int patron_volteo_test(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char
 282:../reversi8_2019 _arm_c.c **** {
 283:../reversi8_2019 _arm_c.c **** 	int patron_c_c, patron_arm_c, patron_arm_arm;
 284:../reversi8_2019 _arm_c.c **** 
 285:../reversi8_2019 _arm_c.c **** 
 286:../reversi8_2019 _arm_c.c **** 
 287:../reversi8_2019 _arm_c.c **** 	// Ejecutar patron_volteo
 288:../reversi8_2019 _arm_c.c **** 
 289:../reversi8_2019 _arm_c.c **** 	patron_c_c = patron_volteo(tablero, longitud, FA, CA, SF, SC, color);
 290:../reversi8_2019 _arm_c.c **** 
 291:../reversi8_2019 _arm_c.c **** 
 292:../reversi8_2019 _arm_c.c **** 	int longitud_c_c = *longitud;
 293:../reversi8_2019 _arm_c.c **** 	*longitud = 0;
 294:../reversi8_2019 _arm_c.c **** 
 295:../reversi8_2019 _arm_c.c **** 	// Ejecutar patron_volteo_arm_c
 296:../reversi8_2019 _arm_c.c **** 
 297:../reversi8_2019 _arm_c.c **** 	patron_arm_c = patron_volteo_arm_c(tablero, longitud, FA, CA, SF, SC, color);
 298:../reversi8_2019 _arm_c.c **** 
 299:../reversi8_2019 _arm_c.c **** 
 300:../reversi8_2019 _arm_c.c **** 	int longitud_arm_c = *longitud;
 301:../reversi8_2019 _arm_c.c **** 	*longitud = 0;
 302:../reversi8_2019 _arm_c.c **** 
 303:../reversi8_2019 _arm_c.c **** 	// Ejecutar patron_volteo_arm_arm
 304:../reversi8_2019 _arm_c.c **** 
 305:../reversi8_2019 _arm_c.c **** 	patron_arm_arm = patron_volteo_arm_arm(tablero, longitud, FA, CA, SF, SC, color);
 306:../reversi8_2019 _arm_c.c **** 
 307:../reversi8_2019 _arm_c.c **** 	int longitud_arm_arm = *longitud;
 308:../reversi8_2019 _arm_c.c **** 
 309:../reversi8_2019 _arm_c.c **** 	// Comprobar que los resultados de todas las funciones sean iguales
 310:../reversi8_2019 _arm_c.c **** 	if (patron_c_c != patron_arm_c || patron_c_c != patron_arm_arm) {
 311:../reversi8_2019 _arm_c.c **** 		while (1);
 312:../reversi8_2019 _arm_c.c **** 	}
 313:../reversi8_2019 _arm_c.c **** 	if (longitud_c_c != longitud_arm_c || longitud_c_c != longitud_arm_arm) {
 314:../reversi8_2019 _arm_c.c **** 		while(1);
 315:../reversi8_2019 _arm_c.c **** 	}
 316:../reversi8_2019 _arm_c.c **** 	return patron_c_c;
 317:../reversi8_2019 _arm_c.c **** }^
 318:../reversi8_2019 _arm_c.c **** */
 319:../reversi8_2019 _arm_c.c **** 
 320:../reversi8_2019 _arm_c.c **** ////////////////////////////////////////////////////////////////////////////////
 321:../reversi8_2019 _arm_c.c **** // voltea n fichas en la dirección que toque
 322:../reversi8_2019 _arm_c.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 323:../reversi8_2019 _arm_c.c **** // color indica el color de la pieza que se acaba de colocar
 324:../reversi8_2019 _arm_c.c **** // FA y CA son la fila y columna a analizar
 325:../reversi8_2019 _arm_c.c **** void voltear(char tablero[][DIM], char FA, char CA, char SF, char SC, int n, char color)
 326:../reversi8_2019 _arm_c.c **** {
 1620              		.loc 1 326 0
 1621              		.cfi_startproc
 1622              		@ Function supports interworking.
 1623              		@ args = 12, pretend = 0, frame = 0
 1624              		@ frame_needed = 0, uses_anonymous_args = 0
 1625              		@ link register save eliminated.
 1626              	.LVL105:
 1627 0430 F0052DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, sl}
 1628              	.LCFI5:
 1629              		.cfi_def_cfa_offset 24
 1630              		.loc 1 326 0
 1631 0434 1CC09DE5 		ldr	ip, [sp, #28]
 327:../reversi8_2019 _arm_c.c ****     int i;
 328:../reversi8_2019 _arm_c.c **** 
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1632              		.loc 1 329 0
 1633 0438 00005CE3 		cmp	ip, #0
 326:../reversi8_2019 _arm_c.c **** {
 1634              		.loc 1 326 0
 1635 043c 1870DDE5 		ldrb	r7, [sp, #24]	@ zero_extendqisi2
 1636              		.cfi_offset 10, -4
 1637              		.cfi_offset 8, -8
 1638              		.cfi_offset 7, -12
 1639              		.cfi_offset 6, -16
 1640              		.cfi_offset 5, -20
 1641              		.cfi_offset 4, -24
 1642 0440 2060DDE5 		ldrb	r6, [sp, #32]	@ zero_extendqisi2
 1643              		.loc 1 329 0
 1644 0444 240000DA 		ble	.L30
 330:../reversi8_2019 _arm_c.c ****     {
 331:../reversi8_2019 _arm_c.c ****         FA = FA + SF;
 1645              		.loc 1 331 0 discriminator 2
 1646 0448 031081E0 		add	r1, r1, r3
 1647              	.LVL106:
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1648              		.loc 1 329 0 discriminator 2
 1649 044c 0140A0E3 		mov	r4, #1
 1650              		.loc 1 331 0 discriminator 2
 1651 0450 FF1001E2 		and	r1, r1, #255
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1652              		.loc 1 332 0 discriminator 2
 1653 0454 072082E0 		add	r2, r2, r7
 1654              	.LVL107:
 1655 0458 01804CE2 		sub	r8, ip, #1
 1656 045c FF2002E2 		and	r2, r2, #255
 1657              	.LVL108:
 333:../reversi8_2019 _arm_c.c ****         tablero[FA][CA] = color;
 1658              		.loc 1 333 0 discriminator 2
 1659 0460 815180E0 		add	r5, r0, r1, asl #3
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1660              		.loc 1 329 0 discriminator 2
 1661 0464 0C0054E1 		cmp	r4, ip
 1662 0468 048008E0 		and	r8, r8, r4
 1663              		.loc 1 333 0 discriminator 2
 1664 046c 0260C5E7 		strb	r6, [r5, r2]
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1665              		.loc 1 329 0 discriminator 2
 1666 0470 1900000A 		beq	.L30
 1667 0474 000058E3 		cmp	r8, #0
 1668 0478 0800000A 		beq	.L32
 331:../reversi8_2019 _arm_c.c ****         FA = FA + SF;
 1669              		.loc 1 331 0
 1670 047c 034081E0 		add	r4, r1, r3
 1671 0480 FF1004E2 		and	r1, r4, #255
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1672              		.loc 1 332 0
 1673 0484 072082E0 		add	r2, r2, r7
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1674              		.loc 1 329 0
 1675 0488 0240A0E3 		mov	r4, #2
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1676              		.loc 1 332 0
 1677 048c FF2002E2 		and	r2, r2, #255
 1678              		.loc 1 333 0
 1679 0490 815180E0 		add	r5, r0, r1, asl #3
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1680              		.loc 1 329 0
 1681 0494 0C0054E1 		cmp	r4, ip
 1682              		.loc 1 333 0
 1683 0498 0260C5E7 		strb	r6, [r5, r2]
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1684              		.loc 1 329 0
 1685 049c 0E00000A 		beq	.L30
 1686              	.L32:
 331:../reversi8_2019 _arm_c.c ****         FA = FA + SF;
 1687              		.loc 1 331 0 discriminator 2
 1688 04a0 031081E0 		add	r1, r1, r3
 1689 04a4 FF8001E2 		and	r8, r1, #255
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1690              		.loc 1 332 0 discriminator 2
 1691 04a8 075082E0 		add	r5, r2, r7
 1692 04ac FF5005E2 		and	r5, r5, #255
 331:../reversi8_2019 _arm_c.c ****         FA = FA + SF;
 1693              		.loc 1 331 0 discriminator 2
 1694 04b0 032088E0 		add	r2, r8, r3
 1695 04b4 FF1002E2 		and	r1, r2, #255
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1696              		.loc 1 332 0 discriminator 2
 1697 04b8 07A085E0 		add	sl, r5, r7
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1698              		.loc 1 329 0 discriminator 2
 1699 04bc 024084E2 		add	r4, r4, #2
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1700              		.loc 1 332 0 discriminator 2
 1701 04c0 FF200AE2 		and	r2, sl, #255
 1702              		.loc 1 333 0 discriminator 2
 1703 04c4 888180E0 		add	r8, r0, r8, asl #3
 1704 04c8 81A180E0 		add	sl, r0, r1, asl #3
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1705              		.loc 1 329 0 discriminator 2
 1706 04cc 0C0054E1 		cmp	r4, ip
 1707              		.loc 1 333 0 discriminator 2
 1708 04d0 0560C8E7 		strb	r6, [r8, r5]
 1709 04d4 0260CAE7 		strb	r6, [sl, r2]
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1710              		.loc 1 329 0 discriminator 2
 1711 04d8 F0FFFF1A 		bne	.L32
 1712              	.L30:
 334:../reversi8_2019 _arm_c.c ****     }
 335:../reversi8_2019 _arm_c.c **** }
 1713              		.loc 1 335 0
 1714 04dc F005BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, sl}
 1715 04e0 1EFF2FE1 		bx	lr
 1716              		.cfi_endproc
 1717              	.LFE5:
 1719              		.align	2
 1720              		.global	actualizar_tablero
 1722              	actualizar_tablero:
 1723              	.LFB6:
 336:../reversi8_2019 _arm_c.c **** ////////////////////////////////////////////////////////////////////////////////
 337:../reversi8_2019 _arm_c.c **** // comprueba si hay que actualizar alguna ficha
 338:../reversi8_2019 _arm_c.c **** // no comprueba que el movimiento realizado sea válido
 339:../reversi8_2019 _arm_c.c **** // f y c son la fila y columna a analizar
 340:../reversi8_2019 _arm_c.c **** // char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
 341:../reversi8_2019 _arm_c.c **** // char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
 342:../reversi8_2019 _arm_c.c **** int actualizar_tablero(char tablero[][DIM], char f, char c, char color)
 343:../reversi8_2019 _arm_c.c **** {
 1724              		.loc 1 343 0
 1725              		.cfi_startproc
 1726              		@ Function supports interworking.
 1727              		@ args = 0, pretend = 0, frame = 16
 1728              		@ frame_needed = 1, uses_anonymous_args = 0
 1729              	.LVL109:
 1730 04e4 0DC0A0E1 		mov	ip, sp
 1731              	.LCFI6:
 1732              		.cfi_def_cfa_register 12
 1733 04e8 F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 1734 04ec 04B04CE2 		sub	fp, ip, #4
 1735              		.cfi_offset 14, -8
 1736              		.cfi_offset 13, -12
 1737              		.cfi_offset 11, -16
 1738              		.cfi_offset 10, -20
 1739              		.cfi_offset 9, -24
 1740              		.cfi_offset 8, -28
 1741              		.cfi_offset 7, -32
 1742              		.cfi_offset 6, -36
 1743              		.cfi_offset 5, -40
 1744              		.cfi_offset 4, -44
 1745              	.LCFI7:
 1746              		.cfi_def_cfa 11, 4
 1747 04f0 24D04DE2 		sub	sp, sp, #36
 344:../reversi8_2019 _arm_c.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 345:../reversi8_2019 _arm_c.c ****     int i, flip, patron;
 346:../reversi8_2019 _arm_c.c **** 
 347:../reversi8_2019 _arm_c.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1748              		.loc 1 347 0
 1749 04f4 0040A0E3 		mov	r4, #0
 343:../reversi8_2019 _arm_c.c **** {
 1750              		.loc 1 343 0
 1751 04f8 0070A0E1 		mov	r7, r0
 1752 04fc 38100BE5 		str	r1, [fp, #-56]
 1753 0500 3C200BE5 		str	r2, [fp, #-60]
 1754 0504 0380A0E1 		mov	r8, r3
 1755 0508 020000EA 		b	.L42
 1756              	.LVL110:
 1757              	.L40:
 1758              		.loc 1 347 0
 1759 050c 014084E2 		add	r4, r4, #1
 1760              	.LVL111:
 1761 0510 080054E3 		cmp	r4, #8
 1762 0514 3C00000A 		beq	.L52
 1763              	.LVL112:
 1764              	.L42:
 348:../reversi8_2019 _arm_c.c ****     {
 349:../reversi8_2019 _arm_c.c ****         SF = vSF[i];
 1765              		.loc 1 349 0
 1766 0518 FC109FE5 		ldr	r1, .L53
 350:../reversi8_2019 _arm_c.c ****         SC = vSC[i];
 1767              		.loc 1 350 0
 1768 051c 083081E2 		add	r3, r1, #8
 349:../reversi8_2019 _arm_c.c ****         SF = vSF[i];
 1769              		.loc 1 349 0
 1770 0520 0460D1E7 		ldrb	r6, [r1, r4]	@ zero_extendqisi2
 1771              	.LVL113:
 1772              		.loc 1 350 0
 1773 0524 0450D3E7 		ldrb	r5, [r3, r4]	@ zero_extendqisi2
 1774              	.LVL114:
 351:../reversi8_2019 _arm_c.c ****         // flip: numero de fichas a voltear
 352:../reversi8_2019 _arm_c.c ****         flip = 0;
 1775              		.loc 1 352 0
 1776 0528 00C0A0E3 		mov	ip, #0
 353:../reversi8_2019 _arm_c.c ****         //patron = patron_volteo(tablero, &flip, f, c, SF, SC, color); //WASD
 354:../reversi8_2019 _arm_c.c ****         //patron = patron_volteo_arm_c(tablero, &flip, f, c, SF, SC, color);
 355:../reversi8_2019 _arm_c.c ****         patron = patron_volteo_test(tablero, &flip, f, c, SF, SC, color);
 1777              		.loc 1 355 0
 1778 052c 0700A0E1 		mov	r0, r7
 1779 0530 30104BE2 		sub	r1, fp, #48
 1780 0534 38201BE5 		ldr	r2, [fp, #-56]
 1781 0538 3C301BE5 		ldr	r3, [fp, #-60]
 352:../reversi8_2019 _arm_c.c ****         flip = 0;
 1782              		.loc 1 352 0
 1783 053c 30C00BE5 		str	ip, [fp, #-48]
 1784              		.loc 1 355 0
 1785 0540 00608DE5 		str	r6, [sp, #0]
 1786 0544 20018DE9 		stmib	sp, {r5, r8}	@ phole stm
 1787 0548 FEFFFFEB 		bl	patron_volteo_test
 1788              	.LVL115:
 356:../reversi8_2019 _arm_c.c ****         //printf("Flip: %d \n", flip);
 357:../reversi8_2019 _arm_c.c ****         if (patron == PATRON_ENCONTRADO )
 1789              		.loc 1 357 0
 1790 054c 010050E3 		cmp	r0, #1
 1791 0550 EDFFFF1A 		bne	.L40
 358:../reversi8_2019 _arm_c.c ****         {
 359:../reversi8_2019 _arm_c.c ****             voltear(tablero, f, c, SF, SC, flip, color);
 1792              		.loc 1 359 0
 1793 0554 30901BE5 		ldr	r9, [fp, #-48]
 1794              	.LVL116:
 1795              	.LBB26:
 1796              	.LBB27:
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1797              		.loc 1 329 0
 1798 0558 000059E3 		cmp	r9, #0
 1799 055c EAFFFFDA 		ble	.L40
 331:../reversi8_2019 _arm_c.c ****         FA = FA + SF;
 1800              		.loc 1 331 0
 1801 0560 3C104BE2 		sub	r1, fp, #60
 1802 0564 024091E8 		ldmia	r1, {r1, lr}	@ phole ldm
 1803 0568 06208EE0 		add	r2, lr, r6
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1804              		.loc 1 332 0
 1805 056c 053081E0 		add	r3, r1, r5
 331:../reversi8_2019 _arm_c.c ****         FA = FA + SF;
 1806              		.loc 1 331 0
 1807 0570 FF2002E2 		and	r2, r2, #255
 1808              	.LVL117:
 1809 0574 01C049E2 		sub	ip, r9, #1
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1810              		.loc 1 332 0
 1811 0578 FF3003E2 		and	r3, r3, #255
 1812              	.LVL118:
 333:../reversi8_2019 _arm_c.c ****         tablero[FA][CA] = color;
 1813              		.loc 1 333 0
 1814 057c 82E187E0 		add	lr, r7, r2, asl #3
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1815              		.loc 1 329 0
 1816 0580 090050E1 		cmp	r0, r9
 1817 0584 01100CE2 		and	r1, ip, #1
 333:../reversi8_2019 _arm_c.c ****         tablero[FA][CA] = color;
 1818              		.loc 1 333 0
 1819 0588 0380CEE7 		strb	r8, [lr, r3]
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1820              		.loc 1 329 0
 1821 058c DEFFFF0A 		beq	.L40
 1822 0590 000051E3 		cmp	r1, #0
 1823 0594 0800000A 		beq	.L51
 331:../reversi8_2019 _arm_c.c ****         FA = FA + SF;
 1824              		.loc 1 331 0
 1825 0598 060082E0 		add	r0, r2, r6
 1826              	.LVL119:
 1827 059c FF2000E2 		and	r2, r0, #255
 1828              	.LVL120:
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1829              		.loc 1 332 0
 1830 05a0 053083E0 		add	r3, r3, r5
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1831              		.loc 1 329 0
 1832 05a4 0200A0E3 		mov	r0, #2
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1833              		.loc 1 332 0
 1834 05a8 FF3003E2 		and	r3, r3, #255
 1835              	.LVL121:
 333:../reversi8_2019 _arm_c.c ****         tablero[FA][CA] = color;
 1836              		.loc 1 333 0
 1837 05ac 82C187E0 		add	ip, r7, r2, asl #3
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1838              		.loc 1 329 0
 1839 05b0 090050E1 		cmp	r0, r9
 333:../reversi8_2019 _arm_c.c ****         tablero[FA][CA] = color;
 1840              		.loc 1 333 0
 1841 05b4 0380CCE7 		strb	r8, [ip, r3]
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1842              		.loc 1 329 0
 1843 05b8 D3FFFF0A 		beq	.L40
 1844              	.L51:
 1845 05bc 04A0A0E1 		mov	sl, r4
 1846              	.L41:
 331:../reversi8_2019 _arm_c.c ****         FA = FA + SF;
 1847              		.loc 1 331 0
 1848 05c0 061082E0 		add	r1, r2, r6
 1849 05c4 FFE001E2 		and	lr, r1, #255
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1850              		.loc 1 332 0
 1851 05c8 054083E0 		add	r4, r3, r5
 1852 05cc FF1004E2 		and	r1, r4, #255
 331:../reversi8_2019 _arm_c.c ****         FA = FA + SF;
 1853              		.loc 1 331 0
 1854 05d0 06208EE0 		add	r2, lr, r6
 1855 05d4 FF2002E2 		and	r2, r2, #255
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1856              		.loc 1 332 0
 1857 05d8 053081E0 		add	r3, r1, r5
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1858              		.loc 1 329 0
 1859 05dc 020080E2 		add	r0, r0, #2
 333:../reversi8_2019 _arm_c.c ****         tablero[FA][CA] = color;
 1860              		.loc 1 333 0
 1861 05e0 8EC187E0 		add	ip, r7, lr, asl #3
 332:../reversi8_2019 _arm_c.c ****         CA = CA + SC;
 1862              		.loc 1 332 0
 1863 05e4 FF3003E2 		and	r3, r3, #255
 333:../reversi8_2019 _arm_c.c ****         tablero[FA][CA] = color;
 1864              		.loc 1 333 0
 1865 05e8 824187E0 		add	r4, r7, r2, asl #3
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1866              		.loc 1 329 0
 1867 05ec 090050E1 		cmp	r0, r9
 333:../reversi8_2019 _arm_c.c ****         tablero[FA][CA] = color;
 1868              		.loc 1 333 0
 1869 05f0 0180CCE7 		strb	r8, [ip, r1]
 1870 05f4 0380C4E7 		strb	r8, [r4, r3]
 329:../reversi8_2019 _arm_c.c ****     for (i = 0; i < n; i++)
 1871              		.loc 1 329 0
 1872 05f8 F0FFFF1A 		bne	.L41
 1873 05fc 0A40A0E1 		mov	r4, sl
 1874              	.LBE27:
 1875              	.LBE26:
 347:../reversi8_2019 _arm_c.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1876              		.loc 1 347 0
 1877 0600 014084E2 		add	r4, r4, #1
 1878              	.LVL122:
 1879 0604 080054E3 		cmp	r4, #8
 1880 0608 C2FFFF1A 		bne	.L42
 1881              	.LVL123:
 1882              	.L52:
 360:../reversi8_2019 _arm_c.c ****         }
 361:../reversi8_2019 _arm_c.c ****     }
 362:../reversi8_2019 _arm_c.c ****     return 0;
 363:../reversi8_2019 _arm_c.c **** }
 1883              		.loc 1 363 0
 1884 060c 0000A0E3 		mov	r0, #0
 1885 0610 28D04BE2 		sub	sp, fp, #40
 1886 0614 F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 1887 0618 1EFF2FE1 		bx	lr
 1888              	.L54:
 1889              		.align	2
 1890              	.L53:
 1891 061c 00000000 		.word	.LANCHOR0
 1892              		.cfi_endproc
 1893              	.LFE6:
 1895              		.align	2
 1896              		.global	elegir_mov
 1898              	elegir_mov:
 1899              	.LFB7:
 364:../reversi8_2019 _arm_c.c **** 
 365:../reversi8_2019 _arm_c.c **** /////////////////////////////////////////////////////////////////////////////////
 366:../reversi8_2019 _arm_c.c **** // Recorre todo el tablero comprobando en cada posición si se puede mover
 367:../reversi8_2019 _arm_c.c **** // En caso afirmativo, consulta la puntuación de la posición y si es la mejor
 368:../reversi8_2019 _arm_c.c **** // que se ha encontrado la guarda
 369:../reversi8_2019 _arm_c.c **** // Al acabar escribe el movimiento seleccionado en f y c
 370:../reversi8_2019 _arm_c.c **** 
 371:../reversi8_2019 _arm_c.c **** // Candidatas
 372:../reversi8_2019 _arm_c.c **** // NO    0
 373:../reversi8_2019 _arm_c.c **** // SI    1
 374:../reversi8_2019 _arm_c.c **** // CASILLA_OCUPADA 2
 375:../reversi8_2019 _arm_c.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 376:../reversi8_2019 _arm_c.c **** {
 1900              		.loc 1 376 0
 1901              		.cfi_startproc
 1902              		@ Function supports interworking.
 1903              		@ args = 0, pretend = 0, frame = 40
 1904              		@ frame_needed = 1, uses_anonymous_args = 0
 1905              	.LVL124:
 1906 0620 0DC0A0E1 		mov	ip, sp
 1907              	.LCFI8:
 1908              		.cfi_def_cfa_register 12
 1909 0624 F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 1910 0628 04B04CE2 		sub	fp, ip, #4
 1911              		.cfi_offset 14, -8
 1912              		.cfi_offset 13, -12
 1913              		.cfi_offset 11, -16
 1914              		.cfi_offset 10, -20
 1915              		.cfi_offset 9, -24
 1916              		.cfi_offset 8, -28
 1917              		.cfi_offset 7, -32
 1918              		.cfi_offset 6, -36
 1919              		.cfi_offset 5, -40
 1920              		.cfi_offset 4, -44
 1921              	.LCFI9:
 1922              		.cfi_def_cfa 11, 4
 1923 062c 3CD04DE2 		sub	sp, sp, #60
 377:../reversi8_2019 _arm_c.c ****     int i, j, k, found;
 378:../reversi8_2019 _arm_c.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 379:../reversi8_2019 _arm_c.c ****     int mc;      // almacena la columna del mejor movimiento encontrado
 380:../reversi8_2019 _arm_c.c ****     char mejor = 0; // almacena el mejor valor encontrado
 381:../reversi8_2019 _arm_c.c ****     int patron, longitud;
 382:../reversi8_2019 _arm_c.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 383:../reversi8_2019 _arm_c.c **** 
 384:../reversi8_2019 _arm_c.c ****     // Recorremos todo el tablero comprobando dónde podemos mover
 385:../reversi8_2019 _arm_c.c ****     // Comparamos la puntuación de los movimientos encontrados y nos quedamos con el mejor
 386:../reversi8_2019 _arm_c.c ****     for (i=0; i<DIM; i++)
 1924              		.loc 1 386 0
 1925 0630 0080A0E3 		mov	r8, #0
 376:../reversi8_2019 _arm_c.c **** {
 1926              		.loc 1 376 0
 1927 0634 50200BE5 		str	r2, [fp, #-80]
 378:../reversi8_2019 _arm_c.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 1928              		.loc 1 378 0
 1929 0638 0020E0E3 		mvn	r2, #0
 1930              	.LVL125:
 376:../reversi8_2019 _arm_c.c **** {
 1931              		.loc 1 376 0
 1932 063c 38100BE5 		str	r1, [fp, #-56]
 1933 0640 54300BE5 		str	r3, [fp, #-84]
 380:../reversi8_2019 _arm_c.c ****     char mejor = 0; // almacena el mejor valor encontrado
 1934              		.loc 1 380 0
 1935 0644 3C800BE5 		str	r8, [fp, #-60]
 378:../reversi8_2019 _arm_c.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 1936              		.loc 1 378 0
 1937 0648 48200BE5 		str	r2, [fp, #-72]
 387:../reversi8_2019 _arm_c.c ****     {
 388:../reversi8_2019 _arm_c.c ****         for (j=0; j<DIM; j++)
 389:../reversi8_2019 _arm_c.c ****         {   // indica en qué casillas quizá se pueda mover
 390:../reversi8_2019 _arm_c.c ****             if (candidatas[i][j] == SI)
 391:../reversi8_2019 _arm_c.c ****             {
 392:../reversi8_2019 _arm_c.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 393:../reversi8_2019 _arm_c.c ****                 {
 394:../reversi8_2019 _arm_c.c ****                     found = 0;
 395:../reversi8_2019 _arm_c.c ****                     k = 0;
 396:../reversi8_2019 _arm_c.c **** 
 397:../reversi8_2019 _arm_c.c ****                     // en este bucle comprobamos si es un movimiento válido
 398:../reversi8_2019 _arm_c.c ****                     // (es decir si implica voltear en alguna dirección)
 399:../reversi8_2019 _arm_c.c ****                     while ((found == 0) && (k < DIM))
 400:../reversi8_2019 _arm_c.c ****                     {
 401:../reversi8_2019 _arm_c.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 402:../reversi8_2019 _arm_c.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 403:../reversi8_2019 _arm_c.c **** 
 404:../reversi8_2019 _arm_c.c ****                         // nos dice qué hay que voltear en cada dirección
 405:../reversi8_2019 _arm_c.c ****                         longitud = 0;
 406:../reversi8_2019 _arm_c.c ****                         //patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); /
 407:../reversi8_2019 _arm_c.c ****                         //patron = patron_volteo_arm_c(tablero, &longitud, i, j, SF, SC, FICHA_BLAN
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 409:../reversi8_2019 _arm_c.c ****                         //  //printf("%d ", patron);
 410:../reversi8_2019 _arm_c.c ****                         if (patron == PATRON_ENCONTRADO)
 411:../reversi8_2019 _arm_c.c ****                         {
 412:../reversi8_2019 _arm_c.c ****                             found = 1;
 413:../reversi8_2019 _arm_c.c ****                             if (tabla_valor[i][j] > mejor)
 1938              		.loc 1 413 0
 1939 064c 0070A0E1 		mov	r7, r0
 1940              	.LVL126:
 1941              	.L56:
 375:../reversi8_2019 _arm_c.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 1942              		.loc 1 375 0 discriminator 1
 1943 0650 38101BE5 		ldr	r1, [fp, #-56]
 1944 0654 10C29FE5 		ldr	ip, .L64
 1945 0658 8831A0E1 		mov	r3, r8, asl #3
 1946 065c 030081E0 		add	r0, r1, r3
 1947 0660 03508CE0 		add	r5, ip, r3
 376:../reversi8_2019 _arm_c.c **** {
 1948              		.loc 1 376 0 discriminator 1
 1949 0664 0040A0E3 		mov	r4, #0
 375:../reversi8_2019 _arm_c.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 1950              		.loc 1 375 0 discriminator 1
 1951 0668 44000BE5 		str	r0, [fp, #-68]
 1952 066c 40500BE5 		str	r5, [fp, #-64]
 1953 0670 020000EA 		b	.L60
 1954              	.LVL127:
 1955              	.L57:
 388:../reversi8_2019 _arm_c.c ****         for (j=0; j<DIM; j++)
 1956              		.loc 1 388 0
 1957 0674 014084E2 		add	r4, r4, #1
 1958              	.LVL128:
 1959 0678 080054E3 		cmp	r4, #8
 1960 067c 6C00000A 		beq	.L63
 1961              	.LVL129:
 1962              	.L60:
 390:../reversi8_2019 _arm_c.c ****             if (candidatas[i][j] == SI)
 1963              		.loc 1 390 0
 1964 0680 0450D7E7 		ldrb	r5, [r7, r4]	@ zero_extendqisi2
 1965 0684 010055E3 		cmp	r5, #1
 1966 0688 F9FFFF1A 		bne	.L57
 392:../reversi8_2019 _arm_c.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 1967              		.loc 1 392 0
 1968 068c 44301BE5 		ldr	r3, [fp, #-68]
 1969 0690 0460D3E7 		ldrb	r6, [r3, r4]	@ zero_extendqisi2
 1970 0694 000056E3 		cmp	r6, #0
 1971 0698 F5FFFF1A 		bne	.L57
 1972              	.LVL130:
 1973 069c FFA008E2 		and	sl, r8, #255
 1974 06a0 FF9004E2 		and	r9, r4, #255
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 1975              		.loc 1 408 0
 1976 06a4 FFC0A0E3 		mov	ip, #255
 1977 06a8 38001BE5 		ldr	r0, [fp, #-56]
 1978 06ac 30104BE2 		sub	r1, fp, #48
 1979 06b0 0A20A0E1 		mov	r2, sl
 1980 06b4 0930A0E1 		mov	r3, r9
 405:../reversi8_2019 _arm_c.c ****                         longitud = 0;
 1981              		.loc 1 405 0
 1982 06b8 30600BE5 		str	r6, [fp, #-48]
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 1983              		.loc 1 408 0
 1984 06bc 00C08DE5 		str	ip, [sp, #0]
 1985 06c0 04608DE5 		str	r6, [sp, #4]
 1986 06c4 08508DE5 		str	r5, [sp, #8]
 1987 06c8 FEFFFFEB 		bl	patron_volteo_test
 1988              	.LVL131:
 410:../reversi8_2019 _arm_c.c ****                         if (patron == PATRON_ENCONTRADO)
 1989              		.loc 1 410 0
 1990 06cc 010050E3 		cmp	r0, #1
 1991 06d0 4D00000A 		beq	.L58
 1992              	.LVL132:
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 1993              		.loc 1 408 0
 1994 06d4 FFE0A0E3 		mov	lr, #255
 1995 06d8 38001BE5 		ldr	r0, [fp, #-56]
 1996              	.LVL133:
 1997 06dc 30104BE2 		sub	r1, fp, #48
 1998 06e0 0A20A0E1 		mov	r2, sl
 1999 06e4 0930A0E1 		mov	r3, r9
 405:../reversi8_2019 _arm_c.c ****                         longitud = 0;
 2000              		.loc 1 405 0
 2001 06e8 30600BE5 		str	r6, [fp, #-48]
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2002              		.loc 1 408 0
 2003 06ec 00E08DE5 		str	lr, [sp, #0]
 2004 06f0 04508DE5 		str	r5, [sp, #4]
 2005 06f4 08508DE5 		str	r5, [sp, #8]
 2006 06f8 FEFFFFEB 		bl	patron_volteo_test
 2007              	.LVL134:
 410:../reversi8_2019 _arm_c.c ****                         if (patron == PATRON_ENCONTRADO)
 2008              		.loc 1 410 0
 2009 06fc 010050E3 		cmp	r0, #1
 2010 0700 4100000A 		beq	.L58
 2011              	.LVL135:
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2012              		.loc 1 408 0
 2013 0704 38001BE5 		ldr	r0, [fp, #-56]
 2014              	.LVL136:
 2015 0708 30104BE2 		sub	r1, fp, #48
 2016 070c 0A20A0E1 		mov	r2, sl
 2017 0710 0930A0E1 		mov	r3, r9
 405:../reversi8_2019 _arm_c.c ****                         longitud = 0;
 2018              		.loc 1 405 0
 2019 0714 30600BE5 		str	r6, [fp, #-48]
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2020              		.loc 1 408 0
 2021 0718 00608DE5 		str	r6, [sp, #0]
 2022 071c 04508DE5 		str	r5, [sp, #4]
 2023 0720 08508DE5 		str	r5, [sp, #8]
 2024 0724 FEFFFFEB 		bl	patron_volteo_test
 2025              	.LVL137:
 410:../reversi8_2019 _arm_c.c ****                         if (patron == PATRON_ENCONTRADO)
 2026              		.loc 1 410 0
 2027 0728 010050E3 		cmp	r0, #1
 2028 072c 3600000A 		beq	.L58
 2029              	.LVL138:
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2030              		.loc 1 408 0
 2031 0730 38001BE5 		ldr	r0, [fp, #-56]
 2032              	.LVL139:
 2033 0734 30104BE2 		sub	r1, fp, #48
 2034 0738 0A20A0E1 		mov	r2, sl
 2035 073c 0930A0E1 		mov	r3, r9
 405:../reversi8_2019 _arm_c.c ****                         longitud = 0;
 2036              		.loc 1 405 0
 2037 0740 30600BE5 		str	r6, [fp, #-48]
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2038              		.loc 1 408 0
 2039 0744 00508DE5 		str	r5, [sp, #0]
 2040 0748 04508DE5 		str	r5, [sp, #4]
 2041 074c 08508DE5 		str	r5, [sp, #8]
 2042 0750 FEFFFFEB 		bl	patron_volteo_test
 2043              	.LVL140:
 410:../reversi8_2019 _arm_c.c ****                         if (patron == PATRON_ENCONTRADO)
 2044              		.loc 1 410 0
 2045 0754 010050E3 		cmp	r0, #1
 2046 0758 2B00000A 		beq	.L58
 2047              	.LVL141:
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2048              		.loc 1 408 0
 2049 075c 38001BE5 		ldr	r0, [fp, #-56]
 2050              	.LVL142:
 2051 0760 30104BE2 		sub	r1, fp, #48
 2052 0764 0A20A0E1 		mov	r2, sl
 2053 0768 0930A0E1 		mov	r3, r9
 405:../reversi8_2019 _arm_c.c ****                         longitud = 0;
 2054              		.loc 1 405 0
 2055 076c 30600BE5 		str	r6, [fp, #-48]
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2056              		.loc 1 408 0
 2057 0770 60008DE8 		stmia	sp, {r5, r6}	@ phole stm
 2058 0774 08508DE5 		str	r5, [sp, #8]
 2059 0778 FEFFFFEB 		bl	patron_volteo_test
 2060              	.LVL143:
 410:../reversi8_2019 _arm_c.c ****                         if (patron == PATRON_ENCONTRADO)
 2061              		.loc 1 410 0
 2062 077c 010050E3 		cmp	r0, #1
 2063 0780 2100000A 		beq	.L58
 2064              	.LVL144:
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2065              		.loc 1 408 0
 2066 0784 FFC0A0E3 		mov	ip, #255
 2067 0788 38001BE5 		ldr	r0, [fp, #-56]
 2068              	.LVL145:
 2069 078c 30104BE2 		sub	r1, fp, #48
 2070 0790 0A20A0E1 		mov	r2, sl
 2071 0794 0930A0E1 		mov	r3, r9
 405:../reversi8_2019 _arm_c.c ****                         longitud = 0;
 2072              		.loc 1 405 0
 2073 0798 30600BE5 		str	r6, [fp, #-48]
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2074              		.loc 1 408 0
 2075 079c 20108DE8 		stmia	sp, {r5, ip}	@ phole stm
 2076 07a0 08508DE5 		str	r5, [sp, #8]
 2077 07a4 FEFFFFEB 		bl	patron_volteo_test
 2078              	.LVL146:
 410:../reversi8_2019 _arm_c.c ****                         if (patron == PATRON_ENCONTRADO)
 2079              		.loc 1 410 0
 2080 07a8 010050E3 		cmp	r0, #1
 2081 07ac 1600000A 		beq	.L58
 2082              	.LVL147:
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2083              		.loc 1 408 0
 2084 07b0 FFE0A0E3 		mov	lr, #255
 2085 07b4 38001BE5 		ldr	r0, [fp, #-56]
 2086              	.LVL148:
 2087 07b8 30104BE2 		sub	r1, fp, #48
 2088 07bc 0A20A0E1 		mov	r2, sl
 2089 07c0 0930A0E1 		mov	r3, r9
 405:../reversi8_2019 _arm_c.c ****                         longitud = 0;
 2090              		.loc 1 405 0
 2091 07c4 30600BE5 		str	r6, [fp, #-48]
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2092              		.loc 1 408 0
 2093 07c8 40408DE8 		stmia	sp, {r6, lr}	@ phole stm
 2094 07cc 08508DE5 		str	r5, [sp, #8]
 2095 07d0 FEFFFFEB 		bl	patron_volteo_test
 2096              	.LVL149:
 410:../reversi8_2019 _arm_c.c ****                         if (patron == PATRON_ENCONTRADO)
 2097              		.loc 1 410 0
 2098 07d4 010050E3 		cmp	r0, #1
 2099 07d8 0B00000A 		beq	.L58
 2100              	.LVL150:
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2101              		.loc 1 408 0
 2102 07dc FFC0A0E3 		mov	ip, #255
 2103 07e0 38001BE5 		ldr	r0, [fp, #-56]
 2104              	.LVL151:
 2105 07e4 30104BE2 		sub	r1, fp, #48
 2106 07e8 0A20A0E1 		mov	r2, sl
 2107 07ec 0930A0E1 		mov	r3, r9
 405:../reversi8_2019 _arm_c.c ****                         longitud = 0;
 2108              		.loc 1 405 0
 2109 07f0 30600BE5 		str	r6, [fp, #-48]
 408:../reversi8_2019 _arm_c.c ****                         patron = patron_volteo_test(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA)
 2110              		.loc 1 408 0
 2111 07f4 00C08DE5 		str	ip, [sp, #0]
 2112 07f8 04C08DE5 		str	ip, [sp, #4]
 2113 07fc 08508DE5 		str	r5, [sp, #8]
 2114 0800 FEFFFFEB 		bl	patron_volteo_test
 2115              	.LVL152:
 410:../reversi8_2019 _arm_c.c ****                         if (patron == PATRON_ENCONTRADO)
 2116              		.loc 1 410 0
 2117 0804 010050E3 		cmp	r0, #1
 2118 0808 99FFFF1A 		bne	.L57
 2119              	.LVL153:
 2120              	.L58:
 2121              		.loc 1 413 0
 2122 080c 40201BE5 		ldr	r2, [fp, #-64]
 2123 0810 3C101BE5 		ldr	r1, [fp, #-60]
 2124 0814 0400D2E7 		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 2125              	.LVL154:
 2126 0818 010050E1 		cmp	r0, r1
 2127 081c 4C400B85 		strhi	r4, [fp, #-76]
 388:../reversi8_2019 _arm_c.c ****         for (j=0; j<DIM; j++)
 2128              		.loc 1 388 0
 2129 0820 014084E2 		add	r4, r4, #1
 2130              		.loc 1 413 0
 2131 0824 3C000B85 		strhi	r0, [fp, #-60]
 2132 0828 48800B85 		strhi	r8, [fp, #-72]
 2133              	.LVL155:
 388:../reversi8_2019 _arm_c.c ****         for (j=0; j<DIM; j++)
 2134              		.loc 1 388 0
 2135 082c 080054E3 		cmp	r4, #8
 2136 0830 92FFFF1A 		bne	.L60
 2137              	.LVL156:
 2138              	.L63:
 386:../reversi8_2019 _arm_c.c ****     for (i=0; i<DIM; i++)
 2139              		.loc 1 386 0
 2140 0834 018088E2 		add	r8, r8, #1
 2141              	.LVL157:
 2142 0838 080058E3 		cmp	r8, #8
 2143 083c 087087E2 		add	r7, r7, #8
 2144 0840 82FFFF1A 		bne	.L56
 414:../reversi8_2019 _arm_c.c ****                             {
 415:../reversi8_2019 _arm_c.c ****                                 mf = i;
 416:../reversi8_2019 _arm_c.c ****                                 mc = j;
 417:../reversi8_2019 _arm_c.c ****                                 mejor = tabla_valor[i][j];
 418:../reversi8_2019 _arm_c.c ****                             }
 419:../reversi8_2019 _arm_c.c ****                         }
 420:../reversi8_2019 _arm_c.c ****                         k++;
 421:../reversi8_2019 _arm_c.c ****                         // si no hemos encontrado nada probamos con la siguiente dirección
 422:../reversi8_2019 _arm_c.c ****                     }
 423:../reversi8_2019 _arm_c.c ****                 }
 424:../reversi8_2019 _arm_c.c ****             }
 425:../reversi8_2019 _arm_c.c ****         }
 426:../reversi8_2019 _arm_c.c ****     }
 427:../reversi8_2019 _arm_c.c ****     *f = (char) mf;
 2145              		.loc 1 427 0
 2146 0844 50001BE5 		ldr	r0, [fp, #-80]
 2147 0848 48C01BE5 		ldr	ip, [fp, #-72]
 2148 084c 00C0C0E5 		strb	ip, [r0, #0]
 428:../reversi8_2019 _arm_c.c ****     *c = (char) mc;
 2149              		.loc 1 428 0
 2150 0850 4C301BE5 		ldr	r3, [fp, #-76]
 2151 0854 54201BE5 		ldr	r2, [fp, #-84]
 429:../reversi8_2019 _arm_c.c ****     // si no se ha encontrado una posición válida devuelve -1
 430:../reversi8_2019 _arm_c.c ****     return mf;
 431:../reversi8_2019 _arm_c.c **** }
 2152              		.loc 1 431 0
 2153 0858 48001BE5 		ldr	r0, [fp, #-72]
 428:../reversi8_2019 _arm_c.c ****     *c = (char) mc;
 2154              		.loc 1 428 0
 2155 085c 0030C2E5 		strb	r3, [r2, #0]
 2156              		.loc 1 431 0
 2157 0860 28D04BE2 		sub	sp, fp, #40
 2158 0864 F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 2159 0868 1EFF2FE1 		bx	lr
 2160              	.L65:
 2161              		.align	2
 2162              	.L64:
 2163 086c 10000000 		.word	.LANCHOR0+16
 2164              		.cfi_endproc
 2165              	.LFE7:
 2167              		.align	2
 2168              		.global	contar
 2170              	contar:
 2171              	.LFB8:
 432:../reversi8_2019 _arm_c.c **** ////////////////////////////////////////////////////////////////////////////////
 433:../reversi8_2019 _arm_c.c **** // Cuenta el número de fichas de cada color.
 434:../reversi8_2019 _arm_c.c **** // Los guarda en la dirección b (blancas) y n (negras)
 435:../reversi8_2019 _arm_c.c **** void contar(char tablero[][DIM], int *b, int *n)
 436:../reversi8_2019 _arm_c.c **** {
 2172              		.loc 1 436 0
 2173              		.cfi_startproc
 2174              		@ Function supports interworking.
 2175              		@ args = 0, pretend = 0, frame = 0
 2176              		@ frame_needed = 0, uses_anonymous_args = 0
 2177              		@ link register save eliminated.
 2178              	.LVL158:
 437:../reversi8_2019 _arm_c.c ****     int i,j;
 438:../reversi8_2019 _arm_c.c **** 
 439:../reversi8_2019 _arm_c.c ****     *b = 0;
 2179              		.loc 1 439 0
 2180 0870 0030A0E3 		mov	r3, #0
 2181 0874 003081E5 		str	r3, [r1, #0]
 435:../reversi8_2019 _arm_c.c **** void contar(char tablero[][DIM], int *b, int *n)
 2182              		.loc 1 435 0
 2183 0878 40C080E2 		add	ip, r0, #64
 440:../reversi8_2019 _arm_c.c ****     *n = 0;
 2184              		.loc 1 440 0
 2185 087c 003082E5 		str	r3, [r2, #0]
 2186              	.LVL159:
 2187 0880 290000EA 		b	.L67
 2188              	.LVL160:
 2189              	.L95:
 441:../reversi8_2019 _arm_c.c **** 
 442:../reversi8_2019 _arm_c.c ****     // recorremos todo el tablero contando las fichas de cada color
 443:../reversi8_2019 _arm_c.c ****     for (i=0; i<DIM; i++)
 444:../reversi8_2019 _arm_c.c ****     {
 445:../reversi8_2019 _arm_c.c ****         for (j=0; j<DIM; j++)
 446:../reversi8_2019 _arm_c.c ****         {
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 448:../reversi8_2019 _arm_c.c ****             {
 449:../reversi8_2019 _arm_c.c ****                 (*b)++;
 450:../reversi8_2019 _arm_c.c ****             }
 451:../reversi8_2019 _arm_c.c ****             else if (tablero[i][j] == FICHA_NEGRA)
 2190              		.loc 1 451 0
 2191 0884 020053E3 		cmp	r3, #2
 2192 0888 5B00000A 		beq	.L87
 2193              	.L71:
 2194              	.LVL161:
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2195              		.loc 1 447 0
 2196 088c 0130D0E5 		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 2197 0890 010053E3 		cmp	r3, #1
 2198 0894 2D00000A 		beq	.L72
 2199              	.L96:
 2200              		.loc 1 451 0
 2201 0898 020053E3 		cmp	r3, #2
 2202 089c 5E00000A 		beq	.L88
 2203              	.L73:
 2204              	.LVL162:
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2205              		.loc 1 447 0
 2206 08a0 0230D0E5 		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 2207 08a4 010053E3 		cmp	r3, #1
 2208 08a8 2E00000A 		beq	.L74
 2209              	.LVL163:
 2210              	.L97:
 2211              		.loc 1 451 0
 2212 08ac 020053E3 		cmp	r3, #2
 2213 08b0 5500000A 		beq	.L89
 2214              	.L75:
 2215              	.LVL164:
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2216              		.loc 1 447 0
 2217 08b4 0330D0E5 		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 2218 08b8 010053E3 		cmp	r3, #1
 2219 08bc 2F00000A 		beq	.L76
 2220              	.LVL165:
 2221              	.L98:
 2222              		.loc 1 451 0
 2223 08c0 020053E3 		cmp	r3, #2
 2224 08c4 6400000A 		beq	.L90
 2225              	.L77:
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2226              		.loc 1 447 0
 2227 08c8 0430D0E5 		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2228 08cc 010053E3 		cmp	r3, #1
 2229 08d0 3000000A 		beq	.L78
 2230              	.L99:
 2231              		.loc 1 451 0
 2232 08d4 020053E3 		cmp	r3, #2
 2233 08d8 5B00000A 		beq	.L91
 2234              	.L79:
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2235              		.loc 1 447 0
 2236 08dc 0530D0E5 		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 2237 08e0 010053E3 		cmp	r3, #1
 2238 08e4 3100000A 		beq	.L80
 2239              	.L100:
 2240              		.loc 1 451 0
 2241 08e8 020053E3 		cmp	r3, #2
 2242 08ec 5200000A 		beq	.L92
 2243              	.L81:
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2244              		.loc 1 447 0
 2245 08f0 0630D0E5 		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 2246 08f4 010053E3 		cmp	r3, #1
 2247 08f8 3200000A 		beq	.L82
 2248              	.L101:
 2249              		.loc 1 451 0
 2250 08fc 020053E3 		cmp	r3, #2
 2251 0900 4900000A 		beq	.L93
 2252              	.L83:
 2253              	.LVL166:
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2254              		.loc 1 447 0
 2255 0904 0730D0E5 		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 2256 0908 010053E3 		cmp	r3, #1
 2257 090c 3300000A 		beq	.L94
 2258              	.L86:
 2259              		.loc 1 451 0
 2260 0910 020053E3 		cmp	r3, #2
 452:../reversi8_2019 _arm_c.c ****             {
 453:../reversi8_2019 _arm_c.c ****                 (*n)++;
 2261              		.loc 1 453 0
 2262 0914 00309205 		ldreq	r3, [r2, #0]
 2263 0918 080080E2 		add	r0, r0, #8
 2264 091c 01308302 		addeq	r3, r3, #1
 2265 0920 00308205 		streq	r3, [r2, #0]
 2266              	.LVL167:
 443:../reversi8_2019 _arm_c.c ****     for (i=0; i<DIM; i++)
 2267              		.loc 1 443 0
 2268 0924 0C0050E1 		cmp	r0, ip
 2269 0928 1EFF2F01 		bxeq	lr
 2270              	.LVL168:
 2271              	.L67:
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2272              		.loc 1 447 0 discriminator 1
 2273 092c 0030D0E5 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 2274 0930 010053E3 		cmp	r3, #1
 2275 0934 D2FFFF1A 		bne	.L95
 449:../reversi8_2019 _arm_c.c ****                 (*b)++;
 2276              		.loc 1 449 0
 2277 0938 003091E5 		ldr	r3, [r1, #0]
 2278 093c 013083E2 		add	r3, r3, #1
 2279 0940 003081E5 		str	r3, [r1, #0]
 2280              	.LVL169:
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2281              		.loc 1 447 0
 2282 0944 0130D0E5 		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 2283 0948 010053E3 		cmp	r3, #1
 2284 094c D1FFFF1A 		bne	.L96
 2285              	.L72:
 449:../reversi8_2019 _arm_c.c ****                 (*b)++;
 2286              		.loc 1 449 0
 2287 0950 003091E5 		ldr	r3, [r1, #0]
 2288 0954 013083E2 		add	r3, r3, #1
 2289 0958 003081E5 		str	r3, [r1, #0]
 2290              	.LVL170:
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2291              		.loc 1 447 0
 2292 095c 0230D0E5 		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 2293 0960 010053E3 		cmp	r3, #1
 2294 0964 D0FFFF1A 		bne	.L97
 2295              	.LVL171:
 2296              	.L74:
 449:../reversi8_2019 _arm_c.c ****                 (*b)++;
 2297              		.loc 1 449 0
 2298 0968 003091E5 		ldr	r3, [r1, #0]
 2299 096c 013083E2 		add	r3, r3, #1
 2300 0970 003081E5 		str	r3, [r1, #0]
 2301              	.LVL172:
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2302              		.loc 1 447 0
 2303 0974 0330D0E5 		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 2304 0978 010053E3 		cmp	r3, #1
 2305 097c CFFFFF1A 		bne	.L98
 2306              	.LVL173:
 2307              	.L76:
 449:../reversi8_2019 _arm_c.c ****                 (*b)++;
 2308              		.loc 1 449 0
 2309 0980 003091E5 		ldr	r3, [r1, #0]
 2310 0984 013083E2 		add	r3, r3, #1
 2311 0988 003081E5 		str	r3, [r1, #0]
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2312              		.loc 1 447 0
 2313 098c 0430D0E5 		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2314 0990 010053E3 		cmp	r3, #1
 2315 0994 CEFFFF1A 		bne	.L99
 2316              	.L78:
 449:../reversi8_2019 _arm_c.c ****                 (*b)++;
 2317              		.loc 1 449 0
 2318 0998 003091E5 		ldr	r3, [r1, #0]
 2319 099c 013083E2 		add	r3, r3, #1
 2320 09a0 003081E5 		str	r3, [r1, #0]
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2321              		.loc 1 447 0
 2322 09a4 0530D0E5 		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 2323 09a8 010053E3 		cmp	r3, #1
 2324 09ac CDFFFF1A 		bne	.L100
 2325              	.L80:
 449:../reversi8_2019 _arm_c.c ****                 (*b)++;
 2326              		.loc 1 449 0
 2327 09b0 003091E5 		ldr	r3, [r1, #0]
 2328 09b4 013083E2 		add	r3, r3, #1
 2329 09b8 003081E5 		str	r3, [r1, #0]
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2330              		.loc 1 447 0
 2331 09bc 0630D0E5 		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 2332 09c0 010053E3 		cmp	r3, #1
 2333 09c4 CCFFFF1A 		bne	.L101
 2334              	.L82:
 449:../reversi8_2019 _arm_c.c ****                 (*b)++;
 2335              		.loc 1 449 0
 2336 09c8 003091E5 		ldr	r3, [r1, #0]
 2337 09cc 013083E2 		add	r3, r3, #1
 2338 09d0 003081E5 		str	r3, [r1, #0]
 2339              	.LVL174:
 447:../reversi8_2019 _arm_c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2340              		.loc 1 447 0
 2341 09d4 0730D0E5 		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 2342 09d8 010053E3 		cmp	r3, #1
 2343 09dc CBFFFF1A 		bne	.L86
 2344              	.L94:
 449:../reversi8_2019 _arm_c.c ****                 (*b)++;
 2345              		.loc 1 449 0
 2346 09e0 003091E5 		ldr	r3, [r1, #0]
 2347              		.loc 1 453 0
 2348 09e4 080080E2 		add	r0, r0, #8
 449:../reversi8_2019 _arm_c.c ****                 (*b)++;
 2349              		.loc 1 449 0
 2350 09e8 013083E2 		add	r3, r3, #1
 443:../reversi8_2019 _arm_c.c ****     for (i=0; i<DIM; i++)
 2351              		.loc 1 443 0
 2352 09ec 0C0050E1 		cmp	r0, ip
 449:../reversi8_2019 _arm_c.c ****                 (*b)++;
 2353              		.loc 1 449 0
 2354 09f0 003081E5 		str	r3, [r1, #0]
 2355              	.LVL175:
 443:../reversi8_2019 _arm_c.c ****     for (i=0; i<DIM; i++)
 2356              		.loc 1 443 0
 2357 09f4 1EFF2F01 		bxeq	lr
 2358 09f8 CBFFFFEA 		b	.L67
 2359              	.LVL176:
 2360              	.L87:
 2361              		.loc 1 453 0
 2362 09fc 003092E5 		ldr	r3, [r2, #0]
 2363 0a00 013083E2 		add	r3, r3, #1
 2364 0a04 003082E5 		str	r3, [r2, #0]
 2365 0a08 9FFFFFEA 		b	.L71
 2366              	.LVL177:
 2367              	.L89:
 2368 0a0c 003092E5 		ldr	r3, [r2, #0]
 2369 0a10 013083E2 		add	r3, r3, #1
 2370 0a14 003082E5 		str	r3, [r2, #0]
 2371 0a18 A5FFFFEA 		b	.L75
 2372              	.LVL178:
 2373              	.L88:
 2374 0a1c 003092E5 		ldr	r3, [r2, #0]
 2375 0a20 013083E2 		add	r3, r3, #1
 2376 0a24 003082E5 		str	r3, [r2, #0]
 2377 0a28 9CFFFFEA 		b	.L73
 2378              	.LVL179:
 2379              	.L93:
 2380 0a2c 003092E5 		ldr	r3, [r2, #0]
 2381 0a30 013083E2 		add	r3, r3, #1
 2382 0a34 003082E5 		str	r3, [r2, #0]
 2383 0a38 B1FFFFEA 		b	.L83
 2384              	.L92:
 2385 0a3c 003092E5 		ldr	r3, [r2, #0]
 2386 0a40 013083E2 		add	r3, r3, #1
 2387 0a44 003082E5 		str	r3, [r2, #0]
 2388 0a48 A8FFFFEA 		b	.L81
 2389              	.L91:
 2390 0a4c 003092E5 		ldr	r3, [r2, #0]
 2391 0a50 013083E2 		add	r3, r3, #1
 2392 0a54 003082E5 		str	r3, [r2, #0]
 2393 0a58 9FFFFFEA 		b	.L79
 2394              	.L90:
 2395 0a5c 003092E5 		ldr	r3, [r2, #0]
 2396 0a60 013083E2 		add	r3, r3, #1
 2397 0a64 003082E5 		str	r3, [r2, #0]
 2398 0a68 96FFFFEA 		b	.L77
 2399              		.cfi_endproc
 2400              	.LFE8:
 2402              		.align	2
 2403              		.global	actualizar_candidatas
 2405              	actualizar_candidatas:
 2406              	.LFB9:
 454:../reversi8_2019 _arm_c.c ****             }
 455:../reversi8_2019 _arm_c.c ****         }
 456:../reversi8_2019 _arm_c.c ****     }
 457:../reversi8_2019 _arm_c.c **** }
 458:../reversi8_2019 _arm_c.c **** 
 459:../reversi8_2019 _arm_c.c **** void actualizar_candidatas(char candidatas[][DIM], char f, char c)
 460:../reversi8_2019 _arm_c.c **** {
 2407              		.loc 1 460 0
 2408              		.cfi_startproc
 2409              		@ Function supports interworking.
 2410              		@ args = 0, pretend = 0, frame = 0
 2411              		@ frame_needed = 0, uses_anonymous_args = 0
 2412              		@ link register save eliminated.
 2413              	.LVL180:
 461:../reversi8_2019 _arm_c.c ****     // donde ya se ha colocado no se puede volver a colocar
 462:../reversi8_2019 _arm_c.c ****     // En las posiciones alrededor sí
 463:../reversi8_2019 _arm_c.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 2414              		.loc 1 463 0
 2415 0a6c 813180E0 		add	r3, r0, r1, asl #3
 2416 0a70 02C0A0E3 		mov	ip, #2
 464:../reversi8_2019 _arm_c.c ****     if (f > 0)
 2417              		.loc 1 464 0
 2418 0a74 000051E3 		cmp	r1, #0
 460:../reversi8_2019 _arm_c.c **** {
 2419              		.loc 1 460 0
 2420 0a78 30002DE9 		stmfd	sp!, {r4, r5}
 2421              	.LCFI10:
 2422              		.cfi_def_cfa_offset 8
 463:../reversi8_2019 _arm_c.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 2423              		.loc 1 463 0
 2424 0a7c 02C0C3E7 		strb	ip, [r3, r2]
 2425              		.loc 1 464 0
 2426 0a80 0E00000A 		beq	.L103
 2427              		.cfi_offset 5, -4
 2428              		.cfi_offset 4, -8
 465:../reversi8_2019 _arm_c.c ****     {
 466:../reversi8_2019 _arm_c.c ****         if (candidatas[f-1][c] != CASILLA_OCUPADA)
 2429              		.loc 1 466 0
 2430 0a84 015041E2 		sub	r5, r1, #1
 2431 0a88 85C180E0 		add	ip, r0, r5, asl #3
 2432 0a8c 0240DCE7 		ldrb	r4, [ip, r2]	@ zero_extendqisi2
 2433 0a90 020054E3 		cmp	r4, #2
 467:../reversi8_2019 _arm_c.c ****             candidatas[f-1][c] = SI;
 2434              		.loc 1 467 0
 2435 0a94 0140A013 		movne	r4, #1
 2436 0a98 0240CC17 		strneb	r4, [ip, r2]
 468:../reversi8_2019 _arm_c.c **** 
 469:../reversi8_2019 _arm_c.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2437              		.loc 1 469 0
 2438 0a9c 000052E3 		cmp	r2, #0
 2439 0aa0 2A00001A 		bne	.L116
 2440              	.L105:
 470:../reversi8_2019 _arm_c.c ****             candidatas[f-1][c-1] = SI;
 471:../reversi8_2019 _arm_c.c **** 
 472:../reversi8_2019 _arm_c.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2441              		.loc 1 472 0 discriminator 1
 2442 0aa4 014082E2 		add	r4, r2, #1
 2443 0aa8 0450DCE7 		ldrb	r5, [ip, r4]	@ zero_extendqisi2
 2444 0aac 020055E3 		cmp	r5, #2
 473:../reversi8_2019 _arm_c.c ****             candidatas[f-1][c+1] = SI;
 2445              		.loc 1 473 0 discriminator 1
 2446 0ab0 0150A013 		movne	r5, #1
 2447 0ab4 0450CC17 		strneb	r5, [ip, r4]
 2448              	.L107:
 474:../reversi8_2019 _arm_c.c ****     }
 475:../reversi8_2019 _arm_c.c ****     if (f < 7)
 2449              		.loc 1 475 0
 2450 0ab8 060051E3 		cmp	r1, #6
 2451 0abc 0C00008A 		bhi	.L108
 2452              	.L103:
 476:../reversi8_2019 _arm_c.c ****     {
 477:../reversi8_2019 _arm_c.c ****         if (candidatas[f+1][c] != CASILLA_OCUPADA)
 2453              		.loc 1 477 0
 2454 0ac0 01C081E2 		add	ip, r1, #1
 2455 0ac4 8C0180E0 		add	r0, r0, ip, asl #3
 2456              	.LVL181:
 2457 0ac8 0210D0E7 		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 2458              	.LVL182:
 2459 0acc 020051E3 		cmp	r1, #2
 478:../reversi8_2019 _arm_c.c ****             candidatas[f+1][c] = SI;
 2460              		.loc 1 478 0
 2461 0ad0 0110A013 		movne	r1, #1
 2462 0ad4 0210C017 		strneb	r1, [r0, r2]
 479:../reversi8_2019 _arm_c.c **** 
 480:../reversi8_2019 _arm_c.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2463              		.loc 1 480 0
 2464 0ad8 000052E3 		cmp	r2, #0
 2465 0adc 0D00001A 		bne	.L117
 2466              	.L110:
 481:../reversi8_2019 _arm_c.c ****             candidatas[f+1][c-1] = SI;
 482:../reversi8_2019 _arm_c.c **** 
 483:../reversi8_2019 _arm_c.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2467              		.loc 1 483 0 discriminator 1
 2468 0ae0 011082E2 		add	r1, r2, #1
 2469 0ae4 01C0D0E7 		ldrb	ip, [r0, r1]	@ zero_extendqisi2
 2470 0ae8 02005CE3 		cmp	ip, #2
 484:../reversi8_2019 _arm_c.c ****             candidatas[f+1][c+1] = SI;
 2471              		.loc 1 484 0 discriminator 1
 2472 0aec 01C0A013 		movne	ip, #1
 2473 0af0 01C0C017 		strneb	ip, [r0, r1]
 2474              	.L108:
 485:../reversi8_2019 _arm_c.c ****     }
 486:../reversi8_2019 _arm_c.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2475              		.loc 1 486 0
 2476 0af4 000052E3 		cmp	r2, #0
 2477 0af8 1C00001A 		bne	.L118
 2478              	.L113:
 487:../reversi8_2019 _arm_c.c ****         candidatas[f][c-1] = SI;
 488:../reversi8_2019 _arm_c.c **** 
 489:../reversi8_2019 _arm_c.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2479              		.loc 1 489 0 discriminator 1
 2480 0afc 012082E2 		add	r2, r2, #1
 2481              	.LVL183:
 2482 0b00 0210D3E7 		ldrb	r1, [r3, r2]	@ zero_extendqisi2
 2483 0b04 020051E3 		cmp	r1, #2
 490:../reversi8_2019 _arm_c.c ****         candidatas[f][c+1] = SI;
 2484              		.loc 1 490 0 discriminator 1
 2485 0b08 0110A013 		movne	r1, #1
 2486 0b0c 0210C317 		strneb	r1, [r3, r2]
 2487              	.L102:
 491:../reversi8_2019 _arm_c.c **** }
 2488              		.loc 1 491 0
 2489 0b10 3000BDE8 		ldmfd	sp!, {r4, r5}
 2490 0b14 1EFF2FE1 		bx	lr
 2491              	.LVL184:
 2492              	.L117:
 480:../reversi8_2019 _arm_c.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2493              		.loc 1 480 0 discriminator 1
 2494 0b18 011042E2 		sub	r1, r2, #1
 2495 0b1c 01C0D0E7 		ldrb	ip, [r0, r1]	@ zero_extendqisi2
 2496 0b20 02005CE3 		cmp	ip, #2
 481:../reversi8_2019 _arm_c.c ****             candidatas[f+1][c-1] = SI;
 2497              		.loc 1 481 0 discriminator 1
 2498 0b24 01C0A013 		movne	ip, #1
 2499 0b28 01C0C017 		strneb	ip, [r0, r1]
 483:../reversi8_2019 _arm_c.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2500              		.loc 1 483 0 discriminator 1
 2501 0b2c 060052E3 		cmp	r2, #6
 2502 0b30 EAFFFF9A 		bls	.L110
 2503              	.L112:
 486:../reversi8_2019 _arm_c.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2504              		.loc 1 486 0 discriminator 1
 2505 0b34 0100D3E7 		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 2506 0b38 020050E3 		cmp	r0, #2
 487:../reversi8_2019 _arm_c.c ****         candidatas[f][c-1] = SI;
 2507              		.loc 1 487 0 discriminator 1
 2508 0b3c 0100A013 		movne	r0, #1
 2509 0b40 0100C317 		strneb	r0, [r3, r1]
 489:../reversi8_2019 _arm_c.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2510              		.loc 1 489 0 discriminator 1
 2511 0b44 060052E3 		cmp	r2, #6
 2512 0b48 F0FFFF8A 		bhi	.L102
 2513 0b4c EAFFFFEA 		b	.L113
 2514              	.LVL185:
 2515              	.L116:
 469:../reversi8_2019 _arm_c.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2516              		.loc 1 469 0 discriminator 1
 2517 0b50 014042E2 		sub	r4, r2, #1
 2518 0b54 0450DCE7 		ldrb	r5, [ip, r4]	@ zero_extendqisi2
 2519 0b58 020055E3 		cmp	r5, #2
 470:../reversi8_2019 _arm_c.c ****             candidatas[f-1][c-1] = SI;
 2520              		.loc 1 470 0 discriminator 1
 2521 0b5c 0150A013 		movne	r5, #1
 2522 0b60 0450CC17 		strneb	r5, [ip, r4]
 472:../reversi8_2019 _arm_c.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2523              		.loc 1 472 0 discriminator 1
 2524 0b64 060052E3 		cmp	r2, #6
 2525 0b68 D2FFFF8A 		bhi	.L107
 2526 0b6c CCFFFFEA 		b	.L105
 2527              	.LVL186:
 2528              	.L118:
 486:../reversi8_2019 _arm_c.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2529              		.loc 1 486 0
 2530 0b70 011042E2 		sub	r1, r2, #1
 2531 0b74 EEFFFFEA 		b	.L112
 2532              		.cfi_endproc
 2533              	.LFE9:
 2535              		.align	2
 2536              		.global	reversi8
 2538              	reversi8:
 2539              	.LFB10:
 492:../reversi8_2019 _arm_c.c **** 
 493:../reversi8_2019 _arm_c.c **** 
 494:../reversi8_2019 _arm_c.c **** 
 495:../reversi8_2019 _arm_c.c **** 
 496:../reversi8_2019 _arm_c.c **** ////////////////////////////////////////////////////////////////////////////////
 497:../reversi8_2019 _arm_c.c **** // Proceso principal del juego
 498:../reversi8_2019 _arm_c.c **** // Utiliza el tablero,
 499:../reversi8_2019 _arm_c.c **** // y las direcciones en las que indica el jugador la fila y la columna
 500:../reversi8_2019 _arm_c.c **** // y la señal de ready que indica que se han actualizado fila y columna
 501:../reversi8_2019 _arm_c.c **** // tablero, fila, columna y ready son variables globales aunque deberían ser locales de reversi8,
 502:../reversi8_2019 _arm_c.c **** // la razón es que al meterlas en la pila no las pone juntas, y así jugar es más complicado.
 503:../reversi8_2019 _arm_c.c **** // en esta versión el humano lleva negras y la máquina blancas
 504:../reversi8_2019 _arm_c.c **** // no se comprueba que el humano mueva correctamente.
 505:../reversi8_2019 _arm_c.c **** // Sólo que la máquina realice un movimiento correcto.
 506:../reversi8_2019 _arm_c.c **** void reversi8()
 507:../reversi8_2019 _arm_c.c **** {
 2540              		.loc 1 507 0
 2541              		.cfi_startproc
 2542              		@ Function supports interworking.
 2543              		@ args = 0, pretend = 0, frame = 80
 2544              		@ frame_needed = 1, uses_anonymous_args = 0
 2545 0b78 0DC0A0E1 		mov	ip, sp
 2546              	.LCFI11:
 2547              		.cfi_def_cfa_register 12
 2548 0b7c F0D82DE9 		stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}
 2549 0b80 04B04CE2 		sub	fp, ip, #4
 2550              		.cfi_offset 14, -8
 2551              		.cfi_offset 13, -12
 2552              		.cfi_offset 11, -16
 2553              		.cfi_offset 7, -20
 2554              		.cfi_offset 6, -24
 2555              		.cfi_offset 5, -28
 2556              		.cfi_offset 4, -32
 2557              	.LCFI12:
 2558              		.cfi_def_cfa 11, 4
 2559 0b84 50D04DE2 		sub	sp, sp, #80
 508:../reversi8_2019 _arm_c.c **** 
 509:../reversi8_2019 _arm_c.c **** 	 ////////////////////////////////////////////////////////////////////
 510:../reversi8_2019 _arm_c.c **** 	 // Tablero candidatas: se usa para no explorar todas las posiciones del tablero
 511:../reversi8_2019 _arm_c.c **** 	// sólo se exploran las que están alrededor de las fichas colocadas
 512:../reversi8_2019 _arm_c.c **** 	 ////////////////////////////////////////////////////////////////////
 513:../reversi8_2019 _arm_c.c **** 	char __attribute__ ((aligned (8))) candidatas[DIM][DIM] =
 2560              		.loc 1 513 0
 2561 0b88 0010A0E3 		mov	r1, #0
 2562 0b8c 4020A0E3 		mov	r2, #64
 2563              		.loc 1 513 0
 2564 0b90 6C004BE2 		sub	r0, fp, #108
 2565 0b94 FEFFFFEB 		bl	memset
 2566              	.LVL187:
 514:../reversi8_2019 _arm_c.c ****     {
 515:../reversi8_2019 _arm_c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 516:../reversi8_2019 _arm_c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 517:../reversi8_2019 _arm_c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 518:../reversi8_2019 _arm_c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 519:../reversi8_2019 _arm_c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 520:../reversi8_2019 _arm_c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 521:../reversi8_2019 _arm_c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 522:../reversi8_2019 _arm_c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO}
 523:../reversi8_2019 _arm_c.c ****     };
 524:../reversi8_2019 _arm_c.c **** 
 525:../reversi8_2019 _arm_c.c **** 
 526:../reversi8_2019 _arm_c.c ****     int done;     // la máquina ha conseguido mover o no
 527:../reversi8_2019 _arm_c.c ****     int move = 0; // el humano ha conseguido mover o no
 528:../reversi8_2019 _arm_c.c ****     int blancas, negras; // número de fichas de cada color
 529:../reversi8_2019 _arm_c.c ****     int fin = 0;  // fin vale 1 si el humano no ha podido mover
 530:../reversi8_2019 _arm_c.c ****                   // (ha introducido un valor de movimiento con algún 8)
 531:../reversi8_2019 _arm_c.c ****                   // y luego la máquina tampoco puede
 532:../reversi8_2019 _arm_c.c ****     char f, c;    // fila y columna elegidas por la máquina para su movimiento
 533:../reversi8_2019 _arm_c.c **** 
 534:../reversi8_2019 _arm_c.c ****     timer2_inicializar();
 2567              		.loc 1 534 0
 2568 0b98 FEFFFFEB 		bl	timer2_inicializar
 535:../reversi8_2019 _arm_c.c ****     init_table(tablero, candidatas);
 2569              		.loc 1 535 0
 2570 0b9c 08019FE5 		ldr	r0, .L132
 2571 0ba0 6C104BE2 		sub	r1, fp, #108
 2572 0ba4 FEFFFFEB 		bl	init_table
 2573 0ba8 FC409FE5 		ldr	r4, .L132
 2574              	.LBB28:
 2575              	.LBB29:
 151:../reversi8_2019 _arm_c.c ****     *ready = 0;  //una vez que pasemos el bucle volvemos a fijar ready a 0;
 2576              		.loc 1 151 0
 2577 0bac 0070A0E3 		mov	r7, #0
 149:../reversi8_2019 _arm_c.c ****     while (*ready == 0) {};  // bucle de espera de respuestas hasta que el se modifique el valor de
 2578              		.loc 1 149 0
 2579 0bb0 0450A0E1 		mov	r5, r4
 2580              	.LVL188:
 2581              	.L130:
 2582 0bb4 4030D4E5 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 2583 0bb8 000053E3 		cmp	r3, #0
 2584 0bbc FCFFFF0A 		beq	.L130
 151:../reversi8_2019 _arm_c.c ****     *ready = 0;  //una vez que pasemos el bucle volvemos a fijar ready a 0;
 2585              		.loc 1 151 0
 2586 0bc0 4070C5E5 		strb	r7, [r5, #64]
 2587              	.LBE29:
 2588              	.LBE28:
 536:../reversi8_2019 _arm_c.c **** 
 537:../reversi8_2019 _arm_c.c ****     while (fin == 0)
 538:../reversi8_2019 _arm_c.c ****     {
 539:../reversi8_2019 _arm_c.c ****         move = 0;
 540:../reversi8_2019 _arm_c.c ****         esperar_mov(&ready);
 541:../reversi8_2019 _arm_c.c ****         // si la fila o columna son 8 asumimos que el jugador no puede mover
 542:../reversi8_2019 _arm_c.c ****         if (((fila) != DIM) && ((columna) != DIM))
 2589              		.loc 1 542 0
 2590 0bc4 4100D5E5 		ldrb	r0, [r5, #65]	@ zero_extendqisi2
 2591 0bc8 080050E3 		cmp	r0, #8
 2592 0bcc 2100000A 		beq	.L127
 2593              		.loc 1 542 0 is_stmt 0 discriminator 1
 2594 0bd0 4210D5E5 		ldrb	r1, [r5, #66]	@ zero_extendqisi2
 2595 0bd4 080051E3 		cmp	r1, #8
 2596 0bd8 1E00000A 		beq	.L127
 543:../reversi8_2019 _arm_c.c ****         {
 544:../reversi8_2019 _arm_c.c ****             tablero[fila][columna] = FICHA_NEGRA;
 2597              		.loc 1 544 0 is_stmt 1
 2598 0bdc 4160D5E5 		ldrb	r6, [r5, #65]	@ zero_extendqisi2
 2599 0be0 4230D5E5 		ldrb	r3, [r5, #66]	@ zero_extendqisi2
 2600 0be4 02C0A0E3 		mov	ip, #2
 2601 0be8 86E183E0 		add	lr, r3, r6, asl #3
 545:../reversi8_2019 _arm_c.c ****             actualizar_tablero(tablero, fila, columna, FICHA_NEGRA);
 2602              		.loc 1 545 0
 2603 0bec 4110D5E5 		ldrb	r1, [r5, #65]	@ zero_extendqisi2
 2604 0bf0 0C30A0E1 		mov	r3, ip
 544:../reversi8_2019 _arm_c.c ****             tablero[fila][columna] = FICHA_NEGRA;
 2605              		.loc 1 544 0
 2606 0bf4 0EC0C5E7 		strb	ip, [r5, lr]
 2607              		.loc 1 545 0
 2608 0bf8 4220D5E5 		ldrb	r2, [r5, #66]	@ zero_extendqisi2
 2609 0bfc A8009FE5 		ldr	r0, .L132
 2610 0c00 FEFFFFEB 		bl	actualizar_tablero
 546:../reversi8_2019 _arm_c.c ****             actualizar_candidatas(candidatas, fila, columna);
 2611              		.loc 1 546 0
 2612 0c04 4110D5E5 		ldrb	r1, [r5, #65]	@ zero_extendqisi2
 2613 0c08 6C004BE2 		sub	r0, fp, #108
 2614 0c0c 4220D5E5 		ldrb	r2, [r5, #66]	@ zero_extendqisi2
 2615 0c10 FEFFFFEB 		bl	actualizar_candidatas
 2616              	.LVL189:
 547:../reversi8_2019 _arm_c.c ****             move = 1;
 548:../reversi8_2019 _arm_c.c ****         }
 549:../reversi8_2019 _arm_c.c **** 
 550:../reversi8_2019 _arm_c.c ****         // escribe el movimiento en las variables globales fila columna
 551:../reversi8_2019 _arm_c.c ****         done = elegir_mov(candidatas, tablero, &f, &c);
 2617              		.loc 1 551 0
 2618 0c14 1D204BE2 		sub	r2, fp, #29
 2619 0c18 1E304BE2 		sub	r3, fp, #30
 2620 0c1c 6C004BE2 		sub	r0, fp, #108
 2621 0c20 84109FE5 		ldr	r1, .L132
 2622 0c24 FEFFFFEB 		bl	elegir_mov
 552:../reversi8_2019 _arm_c.c ****         if (done == -1)
 2623              		.loc 1 552 0
 2624 0c28 010070E3 		cmn	r0, #1
 547:../reversi8_2019 _arm_c.c ****             move = 1;
 2625              		.loc 1 547 0
 2626 0c2c 0160A0E3 		mov	r6, #1
 2627              	.LVL190:
 2628              		.loc 1 552 0
 2629 0c30 1000001A 		bne	.L122
 2630              	.L131:
 553:../reversi8_2019 _arm_c.c ****         {
 554:../reversi8_2019 _arm_c.c ****             if (move == 0)
 2631              		.loc 1 554 0
 2632 0c34 000056E3 		cmp	r6, #0
 2633 0c38 DDFFFF1A 		bne	.L130
 2634              	.LVL191:
 555:../reversi8_2019 _arm_c.c ****                 fin = 1;
 556:../reversi8_2019 _arm_c.c ****         }
 557:../reversi8_2019 _arm_c.c ****         else
 558:../reversi8_2019 _arm_c.c ****         {
 559:../reversi8_2019 _arm_c.c ****             tablero[f][c] = FICHA_BLANCA;
 560:../reversi8_2019 _arm_c.c ****             actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 561:../reversi8_2019 _arm_c.c ****             actualizar_candidatas(candidatas, f, c);
 562:../reversi8_2019 _arm_c.c ****         }
 563:../reversi8_2019 _arm_c.c ****     }
 564:../reversi8_2019 _arm_c.c ****     contar(tablero, &blancas, &negras);
 2635              		.loc 1 564 0 discriminator 1
 2636 0c3c 68009FE5 		ldr	r0, .L132
 2637              	.LVL192:
 2638 0c40 24104BE2 		sub	r1, fp, #36
 2639 0c44 28204BE2 		sub	r2, fp, #40
 2640 0c48 FEFFFFEB 		bl	contar
 565:../reversi8_2019 _arm_c.c **** }
 2641              		.loc 1 565 0 discriminator 1
 2642 0c4c 1CD04BE2 		sub	sp, fp, #28
 2643 0c50 F0689DE8 		ldmfd	sp, {r4, r5, r6, r7, fp, sp, lr}
 2644 0c54 1EFF2FE1 		bx	lr
 2645              	.LVL193:
 2646              	.L127:
 551:../reversi8_2019 _arm_c.c ****         done = elegir_mov(candidatas, tablero, &f, &c);
 2647              		.loc 1 551 0
 2648 0c58 1D204BE2 		sub	r2, fp, #29
 2649 0c5c 1E304BE2 		sub	r3, fp, #30
 2650 0c60 6C004BE2 		sub	r0, fp, #108
 2651 0c64 40109FE5 		ldr	r1, .L132
 2652 0c68 FEFFFFEB 		bl	elegir_mov
 552:../reversi8_2019 _arm_c.c ****         if (done == -1)
 2653              		.loc 1 552 0
 2654 0c6c 010070E3 		cmn	r0, #1
 539:../reversi8_2019 _arm_c.c ****         move = 0;
 2655              		.loc 1 539 0
 2656 0c70 0060A0E3 		mov	r6, #0
 2657              	.LVL194:
 552:../reversi8_2019 _arm_c.c ****         if (done == -1)
 2658              		.loc 1 552 0
 2659 0c74 EEFFFF0A 		beq	.L131
 2660              	.LVL195:
 2661              	.L122:
 559:../reversi8_2019 _arm_c.c ****             tablero[f][c] = FICHA_BLANCA;
 2662              		.loc 1 559 0
 2663 0c78 1D105BE5 		ldrb	r1, [fp, #-29]	@ zero_extendqisi2
 2664 0c7c 1E205BE5 		ldrb	r2, [fp, #-30]	@ zero_extendqisi2
 2665 0c80 01C0A0E3 		mov	ip, #1
 2666 0c84 81E182E0 		add	lr, r2, r1, asl #3
 560:../reversi8_2019 _arm_c.c ****             actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 2667              		.loc 1 560 0
 2668 0c88 0C30A0E1 		mov	r3, ip
 559:../reversi8_2019 _arm_c.c ****             tablero[f][c] = FICHA_BLANCA;
 2669              		.loc 1 559 0
 2670 0c8c 0EC0C5E7 		strb	ip, [r5, lr]
 560:../reversi8_2019 _arm_c.c ****             actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 2671              		.loc 1 560 0
 2672 0c90 14009FE5 		ldr	r0, .L132
 2673              	.LVL196:
 2674 0c94 FEFFFFEB 		bl	actualizar_tablero
 561:../reversi8_2019 _arm_c.c ****             actualizar_candidatas(candidatas, f, c);
 2675              		.loc 1 561 0
 2676 0c98 6C004BE2 		sub	r0, fp, #108
 2677 0c9c 1D105BE5 		ldrb	r1, [fp, #-29]	@ zero_extendqisi2
 2678 0ca0 1E205BE5 		ldrb	r2, [fp, #-30]	@ zero_extendqisi2
 2679 0ca4 FEFFFFEB 		bl	actualizar_candidatas
 2680 0ca8 C1FFFFEA 		b	.L130
 2681              	.L133:
 2682              		.align	2
 2683              	.L132:
 2684 0cac 00000000 		.word	.LANCHOR1
 2685              		.cfi_endproc
 2686              	.LFE10:
 2688              		.global	NO
 2689              		.global	SI
 2690              		.global	CASILLA_OCUPADA
 2691              		.global	vSF
 2692              		.global	vSC
 2693              		.section	.rodata
 2694              		.align	3
 2695              		.set	.LANCHOR0,. + 0
 2698              	vSF:
 2699 0000 FF       		.byte	-1
 2700 0001 FF       		.byte	-1
 2701 0002 00       		.byte	0
 2702 0003 01       		.byte	1
 2703 0004 01       		.byte	1
 2704 0005 01       		.byte	1
 2705 0006 00       		.byte	0
 2706 0007 FF       		.byte	-1
 2709              	vSC:
 2710 0008 00       		.byte	0
 2711 0009 01       		.byte	1
 2712 000a 01       		.byte	1
 2713 000b 01       		.byte	1
 2714 000c 00       		.byte	0
 2715 000d FF       		.byte	-1
 2716 000e FF       		.byte	-1
 2717 000f FF       		.byte	-1
 2720              	tabla_valor:
 2721 0010 08       		.byte	8
 2722 0011 02       		.byte	2
 2723 0012 07       		.byte	7
 2724 0013 03       		.byte	3
 2725 0014 03       		.byte	3
 2726 0015 07       		.byte	7
 2727 0016 02       		.byte	2
 2728 0017 08       		.byte	8
 2729 0018 02       		.byte	2
 2730 0019 01       		.byte	1
 2731 001a 04       		.byte	4
 2732 001b 04       		.byte	4
 2733 001c 04       		.byte	4
 2734 001d 04       		.byte	4
 2735 001e 01       		.byte	1
 2736 001f 02       		.byte	2
 2737 0020 07       		.byte	7
 2738 0021 04       		.byte	4
 2739 0022 06       		.byte	6
 2740 0023 05       		.byte	5
 2741 0024 05       		.byte	5
 2742 0025 06       		.byte	6
 2743 0026 04       		.byte	4
 2744 0027 07       		.byte	7
 2745 0028 03       		.byte	3
 2746 0029 04       		.byte	4
 2747 002a 05       		.byte	5
 2748 002b 00       		.byte	0
 2749 002c 00       		.byte	0
 2750 002d 05       		.byte	5
 2751 002e 04       		.byte	4
 2752 002f 03       		.byte	3
 2753 0030 03       		.byte	3
 2754 0031 04       		.byte	4
 2755 0032 05       		.byte	5
 2756 0033 00       		.byte	0
 2757 0034 00       		.byte	0
 2758 0035 05       		.byte	5
 2759 0036 04       		.byte	4
 2760 0037 03       		.byte	3
 2761 0038 07       		.byte	7
 2762 0039 04       		.byte	4
 2763 003a 06       		.byte	6
 2764 003b 05       		.byte	5
 2765 003c 05       		.byte	5
 2766 003d 06       		.byte	6
 2767 003e 04       		.byte	4
 2768 003f 07       		.byte	7
 2769 0040 02       		.byte	2
 2770 0041 01       		.byte	1
 2771 0042 04       		.byte	4
 2772 0043 04       		.byte	4
 2773 0044 04       		.byte	4
 2774 0045 04       		.byte	4
 2775 0046 01       		.byte	1
 2776 0047 02       		.byte	2
 2777 0048 08       		.byte	8
 2778 0049 02       		.byte	2
 2779 004a 07       		.byte	7
 2780 004b 03       		.byte	3
 2781 004c 03       		.byte	3
 2782 004d 07       		.byte	7
 2783 004e 02       		.byte	2
 2784 004f 08       		.byte	8
 2787              	NO:
 2788 0050 00       		.space	1
 2791              	SI:
 2792 0051 01       		.byte	1
 2795              	CASILLA_OCUPADA:
 2796 0052 02       		.byte	2
 2797 0053 00000000 		.bss
 2797      00
 2798              		.align	3
 2799              		.set	.LANCHOR1,. + 0
 2802              	tablero:
 2803 0000 00000000 		.space	64
 2803      00000000 
 2803      00000000 
 2803      00000000 
 2803      00000000 
 2806              	ready:
 2807 0040 00       		.space	1
 2810              	fila:
 2811 0041 00       		.space	1
 2814              	columna:
 2815 0042 00       		.space	1
 2816 0043 00000000 		.text
 2816      00
 2817              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 reversi8_2019 _arm_c.c
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:973    .text:00000000 $a
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:976    .text:00000000 init_table
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:1211   .text:000001ac esperar_mov
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:1236   .text:000001c4 ficha_valida
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:1278   .text:000001fc patron_volteo
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:1426   .text:000002c4 patron_volteo_test
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:1618   .text:00000430 voltear
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:1722   .text:000004e4 actualizar_tablero
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:1891   .text:0000061c $d
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:1895   .text:00000620 $a
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:1898   .text:00000620 elegir_mov
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2163   .text:0000086c $d
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2167   .text:00000870 $a
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2170   .text:00000870 contar
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2405   .text:00000a6c actualizar_candidatas
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2538   .text:00000b78 reversi8
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2684   .text:00000cac $d
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2787   .rodata:00000050 NO
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2791   .rodata:00000051 SI
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2795   .rodata:00000052 CASILLA_OCUPADA
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2698   .rodata:00000000 vSF
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2709   .rodata:00000008 vSC
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2694   .rodata:00000000 $d
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2720   .rodata:00000010 tabla_valor
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2798   .bss:00000000 $d
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2802   .bss:00000000 tablero
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2806   .bss:00000040 ready
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2810   .bss:00000041 fila
C:\Users\guest\AppData\Local\Temp\cceN0RbS.s:2814   .bss:00000042 columna
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timer2_inicializar
timer2_empezar
timer2_leer
timer2_parar
patron_volteo_arm_c
patron_volteo_arm_arm_opt
memset
