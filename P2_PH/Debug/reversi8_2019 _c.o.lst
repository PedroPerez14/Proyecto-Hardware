   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.file	"reversi8_2019 _c.c"
  21              	.Ltext0:
  22              		.file 1 "../reversi8_2019 _c.c"
 973              		.align	2
 974              		.global	init_table
 976              	init_table:
 977              	.LFB0:
   1:../reversi8_2019 _c.c **** #include "timer2.h"
   2:../reversi8_2019 _c.c **** 
   3:../reversi8_2019 _c.c **** // Tamaño del tablero
   4:../reversi8_2019 _c.c **** enum { DIM=8 };
   5:../reversi8_2019 _c.c **** 
   6:../reversi8_2019 _c.c **** // Valores que puede devolver la función patron_volteo())
   7:../reversi8_2019 _c.c **** enum {
   8:../reversi8_2019 _c.c **** 	NO_HAY_PATRON = 0,
   9:../reversi8_2019 _c.c ****   PATRON_ENCONTRADO = 1
  10:../reversi8_2019 _c.c **** };
  11:../reversi8_2019 _c.c **** 
  12:../reversi8_2019 _c.c **** // Estados de las casillas del tablero
  13:../reversi8_2019 _c.c **** // deberia ser enum, lo dejamos como const para usar char...
  14:../reversi8_2019 _c.c **** //const char CASILLA_VACIA = 0;
  15:../reversi8_2019 _c.c **** //const char FICHA_BLANCA  = 1;
  16:../reversi8_2019 _c.c **** //const char FICHA_NEGRA   = 2;
  17:../reversi8_2019 _c.c **** 
  18:../reversi8_2019 _c.c **** enum {
  19:../reversi8_2019 _c.c **** 	CASILLA_VACIA = 0,
  20:../reversi8_2019 _c.c **** 	FICHA_BLANCA = 1,
  21:../reversi8_2019 _c.c **** 	FICHA_NEGRA = 2
  22:../reversi8_2019 _c.c **** };
  23:../reversi8_2019 _c.c **** 
  24:../reversi8_2019 _c.c **** 
  25:../reversi8_2019 _c.c **** // candidatas: indica las posiciones a explorar
  26:../reversi8_2019 _c.c **** // Se usa para no explorar todo el tablero innecesariamente
  27:../reversi8_2019 _c.c **** // Sus posibles valores son NO, SI, CASILLA_OCUPADA
  28:../reversi8_2019 _c.c **** const char  NO              = 0;
  29:../reversi8_2019 _c.c **** const char  SI              = 1;
  30:../reversi8_2019 _c.c **** const char  CASILLA_OCUPADA = 2;
  31:../reversi8_2019 _c.c **** 
  32:../reversi8_2019 _c.c **** /////////////////////////////////////////////////////////////////////////////
  33:../reversi8_2019 _c.c **** // TABLAS AUXILIARES
  34:../reversi8_2019 _c.c **** // declaramos las siguientes tablas como globales para que sean más fáciles visualizarlas en el sim
  35:../reversi8_2019 _c.c **** // __attribute__ ((aligned (8))): specifies a minimum alignment for the variable or structure field
  36:../reversi8_2019 _c.c **** 
  37:../reversi8_2019 _c.c **** static const char __attribute__ ((aligned (8))) tabla_valor[DIM][DIM] =
  38:../reversi8_2019 _c.c **** {
  39:../reversi8_2019 _c.c ****     {8,2,7,3,3,7,2,8},
  40:../reversi8_2019 _c.c ****     {2,1,4,4,4,4,1,2},
  41:../reversi8_2019 _c.c ****     {7,4,6,5,5,6,4,7},
  42:../reversi8_2019 _c.c ****     {3,4,5,0,0,5,4,3},
  43:../reversi8_2019 _c.c ****     {3,4,5,0,0,5,4,3},
  44:../reversi8_2019 _c.c ****     {7,4,6,5,5,6,4,7},
  45:../reversi8_2019 _c.c ****     {2,1,4,4,4,4,1,2},
  46:../reversi8_2019 _c.c ****     {8,2,7,3,3,7,2,8}
  47:../reversi8_2019 _c.c **** };
  48:../reversi8_2019 _c.c **** 
  49:../reversi8_2019 _c.c **** 
  50:../reversi8_2019 _c.c **** // Tabla de direcciones. Contiene los desplazamientos de las 8 direcciones posibles
  51:../reversi8_2019 _c.c **** const char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
  52:../reversi8_2019 _c.c **** const char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
  53:../reversi8_2019 _c.c **** 
  54:../reversi8_2019 _c.c **** //////////////////////////////////////////////////////////////////////////////////////
  55:../reversi8_2019 _c.c **** // Variables globales que no deberían serlo
  56:../reversi8_2019 _c.c **** // tablero, fila, columna y ready son varibles que se deberían definir como locales dentro de rever
  57:../reversi8_2019 _c.c **** // Sin embargo, las hemos definido como globales para que sea más fácil visualizar el tablero y las
  58:../reversi8_2019 _c.c **** //////////////////////////////////////////////////////////////////////////////////////
  59:../reversi8_2019 _c.c **** 
  60:../reversi8_2019 _c.c **** ////////////////////////////////////////////////////////////////////
  61:../reversi8_2019 _c.c **** // Tablero sin inicializar
  62:../reversi8_2019 _c.c **** ////////////////////////////////////////////////////////////////////
  63:../reversi8_2019 _c.c **** static char __attribute__ ((aligned (8))) tablero[DIM][DIM] = {
  64:../reversi8_2019 _c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  65:../reversi8_2019 _c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  66:../reversi8_2019 _c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  67:../reversi8_2019 _c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  68:../reversi8_2019 _c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  69:../reversi8_2019 _c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  70:../reversi8_2019 _c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  71:../reversi8_2019 _c.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  72:../reversi8_2019 _c.c **** 	    };
  73:../reversi8_2019 _c.c **** 
  74:../reversi8_2019 _c.c ****   ////////////////////////////////////////////////////////////////////
  75:../reversi8_2019 _c.c ****      // VARIABLES PARA INTERACCIONAR CON LA ENTRADA SALIDA
  76:../reversi8_2019 _c.c ****      // Pregunta: ¿hay que hacer algo con ellas para que esto funcione bien?
  77:../reversi8_2019 _c.c ****      // (por ejemplo añadir alguna palabra clave para garantizar que la sincronización a través de 
  78:../reversi8_2019 _c.c **** static volatile char fila=0,
  79:../reversi8_2019 _c.c **** 	    columna=0,
  80:../reversi8_2019 _c.c **** 	    ready = 0;
  81:../reversi8_2019 _c.c **** 
  82:../reversi8_2019 _c.c **** 
  83:../reversi8_2019 _c.c **** extern int patron_volteo_arm_c(char tablero[][DIM], int *longitud,char FA, char CA, char SF, char S
  84:../reversi8_2019 _c.c **** extern int patron_volteo_arm_arm(char tablero[][DIM], int *longitud,char FA, char CA, char SF, char
  85:../reversi8_2019 _c.c **** extern int patron_volteo_arm_arm_opt(char tablero[][DIM], int *longitud,char FA, char CA, char SF, 
  86:../reversi8_2019 _c.c **** 
  87:../reversi8_2019 _c.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  88:../reversi8_2019 _c.c **** // 0 indica CASILLA_VACIA, 1 indica FICHA_BLANCA y 2 indica FICHA_NEGRA
  89:../reversi8_2019 _c.c **** // pone el tablero a cero y luego coloca las fichas centrales.
  90:../reversi8_2019 _c.c **** void init_table(char tablero[][DIM], char candidatas[][DIM])
  91:../reversi8_2019 _c.c **** {
 978              		.loc 1 91 0
 979              		.cfi_startproc
 980              		@ Function supports interworking.
 981              		@ args = 0, pretend = 0, frame = 24
 982              		@ frame_needed = 0, uses_anonymous_args = 0
 983              		@ link register save eliminated.
 984              	.LVL0:
 985 0000 F0072DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
 986              	.LCFI0:
 987              		.cfi_def_cfa_offset 28
 988 0004 1CD04DE2 		sub	sp, sp, #28
 989              	.LCFI1:
 990              		.cfi_def_cfa_offset 56
 991              		.loc 1 91 0
 992 0008 04108DE5 		str	r1, [sp, #4]
  92:../reversi8_2019 _c.c ****     int i, j;
  93:../reversi8_2019 _c.c **** 
  94:../reversi8_2019 _c.c ****     for (i = 0; i < DIM; i++)
  95:../reversi8_2019 _c.c ****     {
  96:../reversi8_2019 _c.c ****         for (j = 0; j < DIM; j++)
  97:../reversi8_2019 _c.c ****             tablero[i][j] = CASILLA_VACIA;
  98:../reversi8_2019 _c.c ****     }
  99:../reversi8_2019 _c.c **** #if 0
 100:../reversi8_2019 _c.c ****     for (i = 3; i < 5; ++i) {
 101:../reversi8_2019 _c.c **** 	for(j = 3; j < 5; ++j) {
 102:../reversi8_2019 _c.c **** 	    tablero[i][j] = i == j ? FICHA_BLANCA : FICHA_NEGRA;
 103:../reversi8_2019 _c.c **** 	}
 104:../reversi8_2019 _c.c ****     }
 105:../reversi8_2019 _c.c **** 
 106:../reversi8_2019 _c.c ****     for (i = 2; i < 6; ++i) {
 107:../reversi8_2019 _c.c **** 	for (j = 2; j < 6; ++j) {
 108:../reversi8_2019 _c.c **** 	    if((i>=3) && (i < 5) && (j>=3) && (j<5)) {
 109:../reversi8_2019 _c.c **** 		candidatas[i][j] = CASILLA_OCUPADA;
 110:../reversi8_2019 _c.c **** 	    } else {
 111:../reversi8_2019 _c.c **** 		candidatas[i][j] = SI; //CASILLA_LIBRE;
 112:../reversi8_2019 _c.c **** 	    }
 113:../reversi8_2019 _c.c **** 	}
 114:../reversi8_2019 _c.c ****     }
 115:../reversi8_2019 _c.c **** #endif
 116:../reversi8_2019 _c.c ****     // arriba hay versión alternativa
 117:../reversi8_2019 _c.c ****     tablero[3][3] = FICHA_BLANCA;
 118:../reversi8_2019 _c.c ****     tablero[4][4] = FICHA_BLANCA;
 119:../reversi8_2019 _c.c ****     tablero[3][4] = FICHA_NEGRA;
 120:../reversi8_2019 _c.c ****     tablero[4][3] = FICHA_NEGRA;
 121:../reversi8_2019 _c.c **** 
 122:../reversi8_2019 _c.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 993              		.loc 1 122 0
 994 000c 04109DE5 		ldr	r1, [sp, #4]
 123:../reversi8_2019 _c.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 995              		.loc 1 123 0
 996 0010 04C09DE5 		ldr	ip, [sp, #4]
 122:../reversi8_2019 _c.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 997              		.loc 1 122 0
 998 0014 18A081E2 		add	sl, r1, #24
 999              		.cfi_offset 10, -4
 1000              		.cfi_offset 9, -8
 1001              		.cfi_offset 8, -12
 1002              		.cfi_offset 7, -16
 1003              		.cfi_offset 6, -20
 1004              		.cfi_offset 5, -24
 1005              		.cfi_offset 4, -28
 1006              		.loc 1 123 0
 1007 0018 20108CE2 		add	r1, ip, #32
 1008              	.LVL1:
 122:../reversi8_2019 _c.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 1009              		.loc 1 122 0
 1010 001c 0CA08DE5 		str	sl, [sp, #12]
 1011              		.loc 1 123 0
 1012 0020 10108DE5 		str	r1, [sp, #16]
 124:../reversi8_2019 _c.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 125:../reversi8_2019 _c.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 126:../reversi8_2019 _c.c **** 
 127:../reversi8_2019 _c.c ****     // casillas a explorar:
 128:../reversi8_2019 _c.c ****     candidatas[2][2] = SI;
 1013              		.loc 1 128 0
 1014 0024 04A09DE5 		ldr	sl, [sp, #4]
 129:../reversi8_2019 _c.c ****     candidatas[2][3] = SI;
 130:../reversi8_2019 _c.c ****     candidatas[2][4] = SI;
 131:../reversi8_2019 _c.c ****     candidatas[2][5] = SI;
 132:../reversi8_2019 _c.c ****     candidatas[3][2] = SI;
 133:../reversi8_2019 _c.c ****     candidatas[3][5] = SI;
 134:../reversi8_2019 _c.c ****     candidatas[4][2] = SI;
 135:../reversi8_2019 _c.c ****     candidatas[4][5] = SI;
 136:../reversi8_2019 _c.c ****     candidatas[5][2] = SI;
 1015              		.loc 1 136 0
 1016 0028 04109DE5 		ldr	r1, [sp, #4]
  97:../reversi8_2019 _c.c ****             tablero[i][j] = CASILLA_VACIA;
 1017              		.loc 1 97 0
 1018 002c 0030A0E3 		mov	r3, #0
 117:../reversi8_2019 _c.c ****     tablero[3][3] = FICHA_BLANCA;
 1019              		.loc 1 117 0
 1020 0030 0120A0E3 		mov	r2, #1
 119:../reversi8_2019 _c.c ****     tablero[3][4] = FICHA_NEGRA;
 1021              		.loc 1 119 0
 1022 0034 0290A0E3 		mov	r9, #2
 128:../reversi8_2019 _c.c ****     candidatas[2][2] = SI;
 1023              		.loc 1 128 0
 1024 0038 10C08AE2 		add	ip, sl, #16
 1025              	.LVL2:
 1026              		.loc 1 136 0
 1027 003c 28A081E2 		add	sl, r1, #40
 128:../reversi8_2019 _c.c ****     candidatas[2][2] = SI;
 1028              		.loc 1 128 0
 1029 0040 14C08DE5 		str	ip, [sp, #20]
 1030              		.loc 1 136 0
 1031 0044 04A08DE5 		str	sl, [sp, #4]
  97:../reversi8_2019 _c.c ****             tablero[i][j] = CASILLA_VACIA;
 1032              		.loc 1 97 0
 1033 0048 0030C0E5 		strb	r3, [r0, #0]
 1034              	.LVL3:
 1035 004c 0130C0E5 		strb	r3, [r0, #1]
 1036              	.LVL4:
 1037 0050 0230C0E5 		strb	r3, [r0, #2]
 1038              	.LVL5:
 1039 0054 0330C0E5 		strb	r3, [r0, #3]
 1040              	.LVL6:
 1041 0058 0430C0E5 		strb	r3, [r0, #4]
 1042              	.LVL7:
 1043 005c 0530C0E5 		strb	r3, [r0, #5]
 1044              	.LVL8:
 1045 0060 0630C0E5 		strb	r3, [r0, #6]
 1046              	.LVL9:
 1047 0064 0730C0E5 		strb	r3, [r0, #7]
 1048              	.LVL10:
 1049 0068 0830C0E5 		strb	r3, [r0, #8]
 1050              	.LVL11:
 1051 006c 0930C0E5 		strb	r3, [r0, #9]
 1052              	.LVL12:
 1053 0070 0A30C0E5 		strb	r3, [r0, #10]
 1054              	.LVL13:
 1055 0074 0B30C0E5 		strb	r3, [r0, #11]
 1056              	.LVL14:
 1057 0078 0C30C0E5 		strb	r3, [r0, #12]
 1058              	.LVL15:
 1059 007c 0D30C0E5 		strb	r3, [r0, #13]
 1060              	.LVL16:
 1061 0080 0E30C0E5 		strb	r3, [r0, #14]
 1062              	.LVL17:
 1063 0084 0F30C0E5 		strb	r3, [r0, #15]
 1064              	.LVL18:
 1065 0088 1030C0E5 		strb	r3, [r0, #16]
 1066              	.LVL19:
 1067 008c 1130C0E5 		strb	r3, [r0, #17]
 1068              	.LVL20:
 1069 0090 1230C0E5 		strb	r3, [r0, #18]
 1070              	.LVL21:
 1071 0094 1330C0E5 		strb	r3, [r0, #19]
 1072              	.LVL22:
 1073 0098 1430C0E5 		strb	r3, [r0, #20]
 1074              	.LVL23:
 1075 009c 1530C0E5 		strb	r3, [r0, #21]
 1076              	.LVL24:
 1077 00a0 1630C0E5 		strb	r3, [r0, #22]
 1078              	.LVL25:
 1079 00a4 1730C0E5 		strb	r3, [r0, #23]
 1080              	.LVL26:
 1081 00a8 1830C0E5 		strb	r3, [r0, #24]
 1082              	.LVL27:
 1083 00ac 1930C0E5 		strb	r3, [r0, #25]
 1084              	.LVL28:
 1085 00b0 1A30C0E5 		strb	r3, [r0, #26]
 1086              	.LVL29:
 1087 00b4 1D30C0E5 		strb	r3, [r0, #29]
 1088              	.LVL30:
 1089 00b8 1E30C0E5 		strb	r3, [r0, #30]
 1090              	.LVL31:
 1091 00bc 1F30C0E5 		strb	r3, [r0, #31]
 1092              	.LVL32:
 1093 00c0 2030C0E5 		strb	r3, [r0, #32]
 1094              	.LVL33:
 1095 00c4 2130C0E5 		strb	r3, [r0, #33]
 1096              	.LVL34:
 1097 00c8 2230C0E5 		strb	r3, [r0, #34]
 1098              	.LVL35:
 1099 00cc 2530C0E5 		strb	r3, [r0, #37]
 1100              	.LVL36:
 1101 00d0 2630C0E5 		strb	r3, [r0, #38]
 1102              	.LVL37:
 1103 00d4 2730C0E5 		strb	r3, [r0, #39]
 1104              	.LVL38:
 1105 00d8 2830C0E5 		strb	r3, [r0, #40]
 1106              	.LVL39:
 1107 00dc 2930C0E5 		strb	r3, [r0, #41]
 1108              	.LVL40:
 1109 00e0 2A30C0E5 		strb	r3, [r0, #42]
 1110              	.LVL41:
 1111 00e4 2B30C0E5 		strb	r3, [r0, #43]
 1112              	.LVL42:
 1113 00e8 2C30C0E5 		strb	r3, [r0, #44]
 1114              	.LVL43:
 1115 00ec 2D30C0E5 		strb	r3, [r0, #45]
 1116              	.LVL44:
 1117 00f0 2E30C0E5 		strb	r3, [r0, #46]
 1118              	.LVL45:
 1119 00f4 2F30C0E5 		strb	r3, [r0, #47]
 1120              	.LVL46:
 1121 00f8 3030C0E5 		strb	r3, [r0, #48]
 1122              	.LVL47:
 1123 00fc 3130C0E5 		strb	r3, [r0, #49]
 1124              	.LVL48:
 1125 0100 3230C0E5 		strb	r3, [r0, #50]
 1126              	.LVL49:
 1127 0104 3330C0E5 		strb	r3, [r0, #51]
 1128              	.LVL50:
 1129 0108 3430C0E5 		strb	r3, [r0, #52]
 1130              	.LVL51:
 1131 010c 3530C0E5 		strb	r3, [r0, #53]
 1132              	.LVL52:
 1133 0110 3630C0E5 		strb	r3, [r0, #54]
 1134              	.LVL53:
 1135 0114 3730C0E5 		strb	r3, [r0, #55]
 1136              	.LVL54:
 1137 0118 3830C0E5 		strb	r3, [r0, #56]
 1138              	.LVL55:
 1139 011c 3930C0E5 		strb	r3, [r0, #57]
 1140              	.LVL56:
 1141 0120 3A30C0E5 		strb	r3, [r0, #58]
 1142              	.LVL57:
 1143 0124 3B30C0E5 		strb	r3, [r0, #59]
 1144              	.LVL58:
 1145 0128 3C30C0E5 		strb	r3, [r0, #60]
 1146              	.LVL59:
 1147 012c 3D30C0E5 		strb	r3, [r0, #61]
 1148              	.LVL60:
 1149 0130 3E30C0E5 		strb	r3, [r0, #62]
 1150              	.LVL61:
 1151 0134 3F30C0E5 		strb	r3, [r0, #63]
 1152              	.LVL62:
 117:../reversi8_2019 _c.c ****     tablero[3][3] = FICHA_BLANCA;
 1153              		.loc 1 117 0
 1154 0138 1B20C0E5 		strb	r2, [r0, #27]
 118:../reversi8_2019 _c.c ****     tablero[4][4] = FICHA_BLANCA;
 1155              		.loc 1 118 0
 1156 013c 2420C0E5 		strb	r2, [r0, #36]
 119:../reversi8_2019 _c.c ****     tablero[3][4] = FICHA_NEGRA;
 1157              		.loc 1 119 0
 1158 0140 1C90C0E5 		strb	r9, [r0, #28]
 120:../reversi8_2019 _c.c ****     tablero[4][3] = FICHA_NEGRA;
 1159              		.loc 1 120 0
 1160 0144 2390C0E5 		strb	r9, [r0, #35]
 122:../reversi8_2019 _c.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 1161              		.loc 1 122 0
 1162 0148 0CC09DE5 		ldr	ip, [sp, #12]
 1163 014c 0390CCE5 		strb	r9, [ip, #3]
 123:../reversi8_2019 _c.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 1164              		.loc 1 123 0
 1165 0150 10109DE5 		ldr	r1, [sp, #16]
 1166              	.LVL63:
 1167 0154 0490C1E5 		strb	r9, [r1, #4]
 124:../reversi8_2019 _c.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 1168              		.loc 1 124 0
 1169 0158 0490CCE5 		strb	r9, [ip, #4]
 125:../reversi8_2019 _c.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 1170              		.loc 1 125 0
 1171 015c 0390C1E5 		strb	r9, [r1, #3]
 128:../reversi8_2019 _c.c ****     candidatas[2][2] = SI;
 1172              		.loc 1 128 0
 1173 0160 14009DE5 		ldr	r0, [sp, #20]
 1174              	.LVL64:
 1175 0164 0220C0E5 		strb	r2, [r0, #2]
 129:../reversi8_2019 _c.c ****     candidatas[2][3] = SI;
 1176              		.loc 1 129 0
 1177 0168 0320C0E5 		strb	r2, [r0, #3]
 130:../reversi8_2019 _c.c ****     candidatas[2][4] = SI;
 1178              		.loc 1 130 0
 1179 016c 0420C0E5 		strb	r2, [r0, #4]
 131:../reversi8_2019 _c.c ****     candidatas[2][5] = SI;
 1180              		.loc 1 131 0
 1181 0170 0520C0E5 		strb	r2, [r0, #5]
 132:../reversi8_2019 _c.c ****     candidatas[3][2] = SI;
 1182              		.loc 1 132 0
 1183 0174 0CA09DE5 		ldr	sl, [sp, #12]
 1184 0178 0220CAE5 		strb	r2, [sl, #2]
 133:../reversi8_2019 _c.c ****     candidatas[3][5] = SI;
 1185              		.loc 1 133 0
 1186 017c 0520CAE5 		strb	r2, [sl, #5]
 134:../reversi8_2019 _c.c ****     candidatas[4][2] = SI;
 1187              		.loc 1 134 0
 1188 0180 10309DE5 		ldr	r3, [sp, #16]
 1189 0184 0220C3E5 		strb	r2, [r3, #2]
 135:../reversi8_2019 _c.c ****     candidatas[4][5] = SI;
 1190              		.loc 1 135 0
 1191 0188 0520C3E5 		strb	r2, [r3, #5]
 1192              		.loc 1 136 0
 1193 018c 04A09DE5 		ldr	sl, [sp, #4]
 1194 0190 0220CAE5 		strb	r2, [sl, #2]
 137:../reversi8_2019 _c.c ****     candidatas[5][3] = SI;
 1195              		.loc 1 137 0
 1196 0194 0320CAE5 		strb	r2, [sl, #3]
 138:../reversi8_2019 _c.c ****     candidatas[5][4] = SI;
 1197              		.loc 1 138 0
 1198 0198 0420CAE5 		strb	r2, [sl, #4]
 139:../reversi8_2019 _c.c ****     candidatas[5][5] = SI;
 1199              		.loc 1 139 0
 1200 019c 0520CAE5 		strb	r2, [sl, #5]
 140:../reversi8_2019 _c.c **** }
 1201              		.loc 1 140 0
 1202 01a0 1CD08DE2 		add	sp, sp, #28
 1203 01a4 F007BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl}
 1204 01a8 1EFF2FE1 		bx	lr
 1205              		.cfi_endproc
 1206              	.LFE0:
 1208              		.align	2
 1209              		.global	esperar_mov
 1211              	esperar_mov:
 1212              	.LFB1:
 141:../reversi8_2019 _c.c **** 
 142:../reversi8_2019 _c.c **** ////////////////////////////////////////////////////////////////////////////////
 143:../reversi8_2019 _c.c **** // Espera a que ready valga 1.
 144:../reversi8_2019 _c.c **** // CUIDADO: si el compilador coloca esta variable en un registro, no funcionará.
 145:../reversi8_2019 _c.c **** // Hay que definirla como "volatile" para forzar a que antes de cada uso la cargue de memoria
 146:../reversi8_2019 _c.c **** 
 147:../reversi8_2019 _c.c **** void esperar_mov(char *ready)
 148:../reversi8_2019 _c.c **** {
 1213              		.loc 1 148 0
 1214              		.cfi_startproc
 1215              		@ Function supports interworking.
 1216              		@ args = 0, pretend = 0, frame = 0
 1217              		@ frame_needed = 0, uses_anonymous_args = 0
 1218              		@ link register save eliminated.
 1219              	.LVL65:
 149:../reversi8_2019 _c.c ****     while (*ready == 0) {};  // bucle de espera de respuestas hasta que el se modifique el valor de
 1220              		.loc 1 149 0
 1221 01ac 0030D0E5 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 1222 01b0 000053E3 		cmp	r3, #0
 150:../reversi8_2019 _c.c **** 
 151:../reversi8_2019 _c.c ****     *ready = 0;  //una vez que pasemos el bucle volvemos a fijar ready a 0;
 1223              		.loc 1 151 0
 1224 01b4 0030A013 		movne	r3, #0
 1225 01b8 0030C015 		strneb	r3, [r0, #0]
 149:../reversi8_2019 _c.c ****     while (*ready == 0) {};  // bucle de espera de respuestas hasta que el se modifique el valor de
 1226              		.loc 1 149 0
 1227 01bc 1EFF2F11 		bxne	lr
 1228              	.L4:
 1229 01c0 FEFFFFEA 		b	.L4
 1230              		.cfi_endproc
 1231              	.LFE1:
 1233              		.align	2
 1234              		.global	ficha_valida
 1236              	ficha_valida:
 1237              	.LFB2:
 152:../reversi8_2019 _c.c **** }
 153:../reversi8_2019 _c.c **** 
 154:../reversi8_2019 _c.c **** ////////////////////////////////////////////////////////////////////////////////
 155:../reversi8_2019 _c.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 156:../reversi8_2019 _c.c **** // IMPORTANTE: AL SUSTITUIR FICHA_VALIDA() Y PATRON_VOLTEO()
 157:../reversi8_2019 _c.c **** // POR RUTINAS EN ENSAMBLADOR HAY QUE RESPETAR LA MODULARIDAD.
 158:../reversi8_2019 _c.c **** // DEBEN SEGUIR SIENDO LLAMADAS A FUNCIONES Y DEBEN CUMPLIR CON EL ATPCS
 159:../reversi8_2019 _c.c **** // (VER TRANSPARENCIAS Y MATERIAL DE PRACTICAS):
 160:../reversi8_2019 _c.c **** //  - DEBEN PASAR LOS PARAMETROS POR LOS REGISTROS CORRESPONDIENTES
 161:../reversi8_2019 _c.c **** //  - GUARDAR EN PILA SOLO LOS REGISTROS QUE TOCAN
 162:../reversi8_2019 _c.c **** //  - CREAR UN MARCO DE PILA TAL Y COMO MUESTRAN LAS TRANSPARENCIAS
 163:../reversi8_2019 _c.c **** //    DE LA ASIGNATURA (CON EL PC, FP, LR,....)
 164:../reversi8_2019 _c.c **** //  - EN EL CASO DE LAS VARIABLES LOCALES, SOLO HAY QUE APILARLAS
 165:../reversi8_2019 _c.c **** //    SI NO SE PUEDEN COLOCAR EN UN REGISTRO.
 166:../reversi8_2019 _c.c **** //    SI SE COLOCAN EN UN REGISTRO NO HACE FALTA
 167:../reversi8_2019 _c.c **** //    NI GUARDARLAS EN PILA NI RESERVAR UN ESPACIO EN LA PILA PARA ELLAS
 168:../reversi8_2019 _c.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 169:../reversi8_2019 _c.c **** ////////////////////////////////////////////////////////////////////////////////
 170:../reversi8_2019 _c.c **** // Devuelve el contenido de la posición indicadas por la fila y columna actual.
 171:../reversi8_2019 _c.c **** // Además informa si la posición es válida y contiene alguna ficha.
 172:../reversi8_2019 _c.c **** // Esto lo hace por referencia (en *posicion_valida)
 173:../reversi8_2019 _c.c **** // Si devuelve un 0 no es válida o está vacia.
 174:../reversi8_2019 _c.c **** char ficha_valida(char tablero[][DIM], char f, char c, int *posicion_valida)
 175:../reversi8_2019 _c.c **** {
 1238              		.loc 1 175 0
 1239              		.cfi_startproc
 1240              		@ Function supports interworking.
 1241              		@ args = 0, pretend = 0, frame = 0
 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243              		@ link register save eliminated.
 1244              	.LVL66:
 176:../reversi8_2019 _c.c ****     char ficha;
 177:../reversi8_2019 _c.c **** 
 178:../reversi8_2019 _c.c ****     // ficha = tablero[f][c];
 179:../reversi8_2019 _c.c ****     // no puede accederse a tablero[f][c]
 180:../reversi8_2019 _c.c ****     // ya que algún índice puede ser negativo
 181:../reversi8_2019 _c.c **** 
 182:../reversi8_2019 _c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1245              		.loc 1 182 0
 1246 01c4 070052E3 		cmp	r2, #7
 1247 01c8 07005193 		cmpls	r1, #7
 1248 01cc 0300008A 		bhi	.L7
 1249              		.loc 1 182 0 is_stmt 0 discriminator 1
 1250 01d0 811180E0 		add	r1, r0, r1, asl #3
 1251              	.LVL67:
 1252 01d4 0200D1E7 		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 1253              	.LVL68:
 1254 01d8 000050E3 		cmp	r0, #0
 1255 01dc 0200001A 		bne	.L9
 1256              	.L7:
 183:../reversi8_2019 _c.c ****     {
 184:../reversi8_2019 _c.c ****         *posicion_valida = 1;
 185:../reversi8_2019 _c.c ****         ficha = tablero[f][c];
 186:../reversi8_2019 _c.c ****     }
 187:../reversi8_2019 _c.c ****     else
 188:../reversi8_2019 _c.c ****     {
 189:../reversi8_2019 _c.c ****         *posicion_valida = 0;
 1257              		.loc 1 189 0 is_stmt 1
 1258 01e0 0000A0E3 		mov	r0, #0
 1259 01e4 000083E5 		str	r0, [r3, #0]
 1260              	.LVL69:
 190:../reversi8_2019 _c.c ****         ficha = CASILLA_VACIA;
 191:../reversi8_2019 _c.c ****     }
 192:../reversi8_2019 _c.c ****     return ficha;
 193:../reversi8_2019 _c.c **** }
 1261              		.loc 1 193 0
 1262 01e8 1EFF2FE1 		bx	lr
 1263              	.LVL70:
 1264              	.L9:
 184:../reversi8_2019 _c.c ****         *posicion_valida = 1;
 1265              		.loc 1 184 0
 1266 01ec 01C0A0E3 		mov	ip, #1
 1267 01f0 00C083E5 		str	ip, [r3, #0]
 185:../reversi8_2019 _c.c ****         ficha = tablero[f][c];
 1268              		.loc 1 185 0
 1269 01f4 0200D1E7 		ldrb	r0, [r1, r2]	@ zero_extendqisi2
 1270              	.LVL71:
 1271 01f8 1EFF2FE1 		bx	lr
 1272              		.cfi_endproc
 1273              	.LFE2:
 1275              		.align	2
 1276              		.global	patron_volteo
 1278              	patron_volteo:
 1279              	.LFB3:
 194:../reversi8_2019 _c.c **** 
 195:../reversi8_2019 _c.c **** ////////////////////////////////////////////////////////////////////////////////
 196:../reversi8_2019 _c.c **** // La función patrón volteo comprueba si hay que actualizar una determinada direccion,
 197:../reversi8_2019 _c.c **** // busca el patrón de volteo (n fichas del rival seguidas de una ficha del jugador actual)
 198:../reversi8_2019 _c.c **** // en una dirección determinada
 199:../reversi8_2019 _c.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 200:../reversi8_2019 _c.c **** // color indica el color de la pieza que se acaba de colocar
 201:../reversi8_2019 _c.c **** // la función devuelve PATRON_ENCONTRADO (1) si encuentra patrón y NO_HAY_PATRON (0) en caso contra
 202:../reversi8_2019 _c.c **** // FA y CA son la fila y columna a analizar
 203:../reversi8_2019 _c.c **** // longitud es un parámetro por referencia. Sirve para saber la longitud del patrón que se está ana
 204:../reversi8_2019 _c.c **** //          Se usa para saber cuantas fichas habría que voltear
 205:../reversi8_2019 _c.c **** int patron_volteo(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char colo
 206:../reversi8_2019 _c.c **** {
 1280              		.loc 1 206 0
 1281              		.cfi_startproc
 1282              		@ Function supports interworking.
 1283              		@ args = 12, pretend = 0, frame = 0
 1284              		@ frame_needed = 0, uses_anonymous_args = 0
 1285              		@ link register save eliminated.
 1286              	.LVL72:
 1287 01fc F0012DE9 		stmfd	sp!, {r4, r5, r6, r7, r8}
 1288              	.LCFI2:
 1289              		.cfi_def_cfa_offset 20
 1290              		.loc 1 206 0
 1291 0200 1440DDE5 		ldrb	r4, [sp, #20]	@ zero_extendqisi2
 1292              		.cfi_offset 8, -4
 1293              		.cfi_offset 7, -8
 1294              		.cfi_offset 6, -12
 1295              		.cfi_offset 5, -16
 1296              		.cfi_offset 4, -20
 1297 0204 18C0DDE5 		ldrb	ip, [sp, #24]	@ zero_extendqisi2
 207:../reversi8_2019 _c.c **** 	int posicion_valida; // indica si la posición es valida y contiene una ficha de algún jugador
 208:../reversi8_2019 _c.c **** 	char casilla;   // casilla es la casilla que se lee del tablero
 209:../reversi8_2019 _c.c **** 
 210:../reversi8_2019 _c.c **** 	FA = FA + SF;
 1298              		.loc 1 210 0
 1299 0208 022084E0 		add	r2, r4, r2
 1300              	.LVL73:
 211:../reversi8_2019 _c.c **** 	CA = CA + SC;
 1301              		.loc 1 211 0
 1302 020c 03308CE0 		add	r3, ip, r3
 1303              	.LVL74:
 210:../reversi8_2019 _c.c **** 	FA = FA + SF;
 1304              		.loc 1 210 0
 1305 0210 FF2002E2 		and	r2, r2, #255
 1306              	.LVL75:
 1307              		.loc 1 211 0
 1308 0214 FF3003E2 		and	r3, r3, #255
 1309              	.LVL76:
 1310              	.LBB10:
 1311              	.LBB11:
 182:../reversi8_2019 _c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1312              		.loc 1 182 0
 1313 0218 070053E3 		cmp	r3, #7
 1314 021c 07005293 		cmpls	r2, #7
 1315 0220 0050A083 		movhi	r5, #0
 1316 0224 0150A093 		movls	r5, #1
 1317              	.LVL77:
 1318              	.LBE11:
 1319              	.LBE10:
 206:../reversi8_2019 _c.c **** {
 1320              		.loc 1 206 0
 1321 0228 1C70DDE5 		ldrb	r7, [sp, #28]	@ zero_extendqisi2
 1322              	.LBB13:
 1323              	.LBB12:
 182:../reversi8_2019 _c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1324              		.loc 1 182 0
 1325 022c 1600008A 		bhi	.L18
 1326              	.LVL78:
 1327              	.L21:
 1328              	.LBE12:
 1329              	.LBE13:
 1330              	.LBB14:
 1331              	.LBB17:
 1332 0230 825180E0 		add	r5, r0, r2, asl #3
 1333 0234 0360D5E7 		ldrb	r6, [r5, r3]	@ zero_extendqisi2
 1334 0238 000056E3 		cmp	r6, #0
 184:../reversi8_2019 _c.c ****         *posicion_valida = 1;
 1335              		.loc 1 184 0
 1336 023c 0650A001 		moveq	r5, r6
 1337 0240 0150A013 		movne	r5, #1
 1338              	.L13:
 1339              	.LBE17:
 1340              	.LBE14:
 212:../reversi8_2019 _c.c **** 	casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 213:../reversi8_2019 _c.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1341              		.loc 1 213 0 discriminator 1
 1342 0244 FF5005E2 		and	r5, r5, #255
 1343 0248 070056E1 		cmp	r6, r7
 1344 024c 0080A003 		moveq	r8, #0
 1345 0250 01800512 		andne	r8, r5, #1
 1346              	.LBB21:
 1347              	.LBB18:
 182:../reversi8_2019 _c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1348              		.loc 1 182 0 discriminator 1
 1349 0254 042082E0 		add	r2, r2, r4
 1350 0258 0C3083E0 		add	r3, r3, ip
 1351              	.LBE18:
 1352              	.LBE21:
 1353              		.loc 1 213 0 discriminator 1
 1354 025c 000058E3 		cmp	r8, #0
 1355              	.LBB22:
 1356              	.LBB16:
 182:../reversi8_2019 _c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1357              		.loc 1 182 0 discriminator 1
 1358 0260 FF2002E2 		and	r2, r2, #255
 1359 0264 FF3003E2 		and	r3, r3, #255
 1360              	.LVL79:
 1361              	.LBE16:
 1362              	.LBE22:
 1363              		.loc 1 213 0 discriminator 1
 1364 0268 0900000A 		beq	.L22
 1365              	.LVL80:
 214:../reversi8_2019 _c.c **** 	// mientras la casilla está en el tablero, no está vací­a,
 215:../reversi8_2019 _c.c **** 	// y es del color rival seguimos buscando el patron de volteo
 216:../reversi8_2019 _c.c **** 	{
 217:../reversi8_2019 _c.c **** 		FA = FA + SF;
 218:../reversi8_2019 _c.c **** 		CA = CA + SC;
 219:../reversi8_2019 _c.c **** 		*longitud = *longitud + 1;
 1366              		.loc 1 219 0
 1367 026c 006091E5 		ldr	r6, [r1, #0]
 1368              	.LVL81:
 1369              	.LBB23:
 1370              	.LBB19:
 182:../reversi8_2019 _c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1371              		.loc 1 182 0
 1372 0270 070053E3 		cmp	r3, #7
 1373 0274 07005293 		cmpls	r2, #7
 1374              	.LBE19:
 1375              	.LBE23:
 1376              		.loc 1 219 0
 1377 0278 018086E2 		add	r8, r6, #1
 1378              	.LBB24:
 1379              	.LBB15:
 182:../reversi8_2019 _c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1380              		.loc 1 182 0
 1381 027c 0050A083 		movhi	r5, #0
 1382 0280 0150A093 		movls	r5, #1
 1383              	.LBE15:
 1384              	.LBE24:
 1385              		.loc 1 219 0
 1386 0284 008081E5 		str	r8, [r1, #0]
 1387              	.LVL82:
 1388              	.LBB25:
 1389              	.LBB20:
 182:../reversi8_2019 _c.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1390              		.loc 1 182 0
 1391 0288 E8FFFF9A 		bls	.L21
 1392              	.LVL83:
 1393              	.L18:
 190:../reversi8_2019 _c.c ****         ficha = CASILLA_VACIA;
 1394              		.loc 1 190 0
 1395 028c 0560A0E1 		mov	r6, r5
 1396 0290 EBFFFFEA 		b	.L13
 1397              	.LVL84:
 1398              	.L22:
 1399              	.LBE20:
 1400              	.LBE25:
 220:../reversi8_2019 _c.c **** 		casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 221:../reversi8_2019 _c.c **** 	}
 222:../reversi8_2019 _c.c ****     // si la ultima posición era válida y la ficha es del jugador actual,
 223:../reversi8_2019 _c.c ****     // entonces hemos encontrado el patrón
 224:../reversi8_2019 _c.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0))
 1401              		.loc 1 224 0
 1402 0294 060057E1 		cmp	r7, r6
 1403 0298 0050A013 		movne	r5, #0
 1404 029c 01500502 		andeq	r5, r5, #1
 1405 02a0 000055E3 		cmp	r5, #0
 225:../reversi8_2019 _c.c **** 		return PATRON_ENCONTRADO; // si hay que voltear una ficha o más hemos encontrado el patrón
 226:../reversi8_2019 _c.c **** 	else
 227:../reversi8_2019 _c.c **** 		return NO_HAY_PATRON; // si no hay que voltear no hay patrón
 1406              		.loc 1 227 0
 1407 02a4 0500A001 		moveq	r0, r5
 1408              	.LVL85:
 224:../reversi8_2019 _c.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0))
 1409              		.loc 1 224 0
 1410 02a8 0300000A 		beq	.L15
 205:../reversi8_2019 _c.c **** int patron_volteo(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char colo
 1411              		.loc 1 205 0 discriminator 1
 1412 02ac 000091E5 		ldr	r0, [r1, #0]
 1413 02b0 000050E3 		cmp	r0, #0
 1414 02b4 0000A0D3 		movle	r0, #0
 1415 02b8 0100A0C3 		movgt	r0, #1
 1416              	.L15:
 228:../reversi8_2019 _c.c **** }
 1417              		.loc 1 228 0
 1418 02bc F001BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8}
 1419 02c0 1EFF2FE1 		bx	lr
 1420              		.cfi_endproc
 1421              	.LFE3:
 1423              		.align	2
 1424              		.global	voltear
 1426              	voltear:
 1427              	.LFB4:
 229:../reversi8_2019 _c.c **** 
 230:../reversi8_2019 _c.c **** 
 231:../reversi8_2019 _c.c **** 
 232:../reversi8_2019 _c.c **** ////////////////////////////////////////////////////////////////////////////////
 233:../reversi8_2019 _c.c **** // voltea n fichas en la dirección que toque
 234:../reversi8_2019 _c.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 235:../reversi8_2019 _c.c **** // color indica el color de la pieza que se acaba de colocar
 236:../reversi8_2019 _c.c **** // FA y CA son la fila y columna a analizar
 237:../reversi8_2019 _c.c **** void voltear(char tablero[][DIM], char FA, char CA, char SF, char SC, int n, char color)
 238:../reversi8_2019 _c.c **** {
 1428              		.loc 1 238 0
 1429              		.cfi_startproc
 1430              		@ Function supports interworking.
 1431              		@ args = 12, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433              		@ link register save eliminated.
 1434              	.LVL86:
 1435 02c4 F0052DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, sl}
 1436              	.LCFI3:
 1437              		.cfi_def_cfa_offset 24
 1438              		.loc 1 238 0
 1439 02c8 1CC09DE5 		ldr	ip, [sp, #28]
 239:../reversi8_2019 _c.c ****     int i;
 240:../reversi8_2019 _c.c **** 
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1440              		.loc 1 241 0
 1441 02cc 00005CE3 		cmp	ip, #0
 238:../reversi8_2019 _c.c **** {
 1442              		.loc 1 238 0
 1443 02d0 1870DDE5 		ldrb	r7, [sp, #24]	@ zero_extendqisi2
 1444              		.cfi_offset 10, -4
 1445              		.cfi_offset 8, -8
 1446              		.cfi_offset 7, -12
 1447              		.cfi_offset 6, -16
 1448              		.cfi_offset 5, -20
 1449              		.cfi_offset 4, -24
 1450 02d4 2060DDE5 		ldrb	r6, [sp, #32]	@ zero_extendqisi2
 1451              		.loc 1 241 0
 1452 02d8 240000DA 		ble	.L23
 242:../reversi8_2019 _c.c ****     {
 243:../reversi8_2019 _c.c ****         FA = FA + SF;
 1453              		.loc 1 243 0 discriminator 2
 1454 02dc 031081E0 		add	r1, r1, r3
 1455              	.LVL87:
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1456              		.loc 1 241 0 discriminator 2
 1457 02e0 0140A0E3 		mov	r4, #1
 1458              		.loc 1 243 0 discriminator 2
 1459 02e4 FF1001E2 		and	r1, r1, #255
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1460              		.loc 1 244 0 discriminator 2
 1461 02e8 072082E0 		add	r2, r2, r7
 1462              	.LVL88:
 1463 02ec 01804CE2 		sub	r8, ip, #1
 1464 02f0 FF2002E2 		and	r2, r2, #255
 1465              	.LVL89:
 245:../reversi8_2019 _c.c ****         tablero[FA][CA] = color;
 1466              		.loc 1 245 0 discriminator 2
 1467 02f4 815180E0 		add	r5, r0, r1, asl #3
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1468              		.loc 1 241 0 discriminator 2
 1469 02f8 0C0054E1 		cmp	r4, ip
 1470 02fc 048008E0 		and	r8, r8, r4
 1471              		.loc 1 245 0 discriminator 2
 1472 0300 0260C5E7 		strb	r6, [r5, r2]
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1473              		.loc 1 241 0 discriminator 2
 1474 0304 1900000A 		beq	.L23
 1475 0308 000058E3 		cmp	r8, #0
 1476 030c 0800000A 		beq	.L25
 243:../reversi8_2019 _c.c ****         FA = FA + SF;
 1477              		.loc 1 243 0
 1478 0310 034081E0 		add	r4, r1, r3
 1479 0314 FF1004E2 		and	r1, r4, #255
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1480              		.loc 1 244 0
 1481 0318 072082E0 		add	r2, r2, r7
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1482              		.loc 1 241 0
 1483 031c 0240A0E3 		mov	r4, #2
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1484              		.loc 1 244 0
 1485 0320 FF2002E2 		and	r2, r2, #255
 1486              		.loc 1 245 0
 1487 0324 815180E0 		add	r5, r0, r1, asl #3
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1488              		.loc 1 241 0
 1489 0328 0C0054E1 		cmp	r4, ip
 1490              		.loc 1 245 0
 1491 032c 0260C5E7 		strb	r6, [r5, r2]
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1492              		.loc 1 241 0
 1493 0330 0E00000A 		beq	.L23
 1494              	.L25:
 243:../reversi8_2019 _c.c ****         FA = FA + SF;
 1495              		.loc 1 243 0 discriminator 2
 1496 0334 031081E0 		add	r1, r1, r3
 1497 0338 FF8001E2 		and	r8, r1, #255
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1498              		.loc 1 244 0 discriminator 2
 1499 033c 075082E0 		add	r5, r2, r7
 1500 0340 FF5005E2 		and	r5, r5, #255
 243:../reversi8_2019 _c.c ****         FA = FA + SF;
 1501              		.loc 1 243 0 discriminator 2
 1502 0344 032088E0 		add	r2, r8, r3
 1503 0348 FF1002E2 		and	r1, r2, #255
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1504              		.loc 1 244 0 discriminator 2
 1505 034c 07A085E0 		add	sl, r5, r7
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1506              		.loc 1 241 0 discriminator 2
 1507 0350 024084E2 		add	r4, r4, #2
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1508              		.loc 1 244 0 discriminator 2
 1509 0354 FF200AE2 		and	r2, sl, #255
 1510              		.loc 1 245 0 discriminator 2
 1511 0358 888180E0 		add	r8, r0, r8, asl #3
 1512 035c 81A180E0 		add	sl, r0, r1, asl #3
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1513              		.loc 1 241 0 discriminator 2
 1514 0360 0C0054E1 		cmp	r4, ip
 1515              		.loc 1 245 0 discriminator 2
 1516 0364 0560C8E7 		strb	r6, [r8, r5]
 1517 0368 0260CAE7 		strb	r6, [sl, r2]
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1518              		.loc 1 241 0 discriminator 2
 1519 036c F0FFFF1A 		bne	.L25
 1520              	.L23:
 246:../reversi8_2019 _c.c ****     }
 247:../reversi8_2019 _c.c **** }
 1521              		.loc 1 247 0
 1522 0370 F005BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, sl}
 1523 0374 1EFF2FE1 		bx	lr
 1524              		.cfi_endproc
 1525              	.LFE4:
 1527              		.align	2
 1528              		.global	actualizar_tablero
 1530              	actualizar_tablero:
 1531              	.LFB5:
 248:../reversi8_2019 _c.c **** ////////////////////////////////////////////////////////////////////////////////
 249:../reversi8_2019 _c.c **** // comprueba si hay que actualizar alguna ficha
 250:../reversi8_2019 _c.c **** // no comprueba que el movimiento realizado sea válido
 251:../reversi8_2019 _c.c **** // f y c son la fila y columna a analizar
 252:../reversi8_2019 _c.c **** // char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
 253:../reversi8_2019 _c.c **** // char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
 254:../reversi8_2019 _c.c **** int actualizar_tablero(char tablero[][DIM], char f, char c, char color)
 255:../reversi8_2019 _c.c **** {
 1532              		.loc 1 255 0
 1533              		.cfi_startproc
 1534              		@ Function supports interworking.
 1535              		@ args = 0, pretend = 0, frame = 16
 1536              		@ frame_needed = 1, uses_anonymous_args = 0
 1537              	.LVL90:
 1538 0378 0DC0A0E1 		mov	ip, sp
 1539              	.LCFI4:
 1540              		.cfi_def_cfa_register 12
 1541 037c F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 1542 0380 04B04CE2 		sub	fp, ip, #4
 1543              		.cfi_offset 14, -8
 1544              		.cfi_offset 13, -12
 1545              		.cfi_offset 11, -16
 1546              		.cfi_offset 10, -20
 1547              		.cfi_offset 9, -24
 1548              		.cfi_offset 8, -28
 1549              		.cfi_offset 7, -32
 1550              		.cfi_offset 6, -36
 1551              		.cfi_offset 5, -40
 1552              		.cfi_offset 4, -44
 1553              	.LCFI5:
 1554              		.cfi_def_cfa 11, 4
 1555 0384 24D04DE2 		sub	sp, sp, #36
 256:../reversi8_2019 _c.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 257:../reversi8_2019 _c.c ****     int i, flip, patron;
 258:../reversi8_2019 _c.c **** 
 259:../reversi8_2019 _c.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1556              		.loc 1 259 0
 1557 0388 0040A0E3 		mov	r4, #0
 255:../reversi8_2019 _c.c **** {
 1558              		.loc 1 255 0
 1559 038c 0070A0E1 		mov	r7, r0
 1560 0390 38100BE5 		str	r1, [fp, #-56]
 1561 0394 3C200BE5 		str	r2, [fp, #-60]
 1562 0398 0380A0E1 		mov	r8, r3
 1563 039c 020000EA 		b	.L35
 1564              	.LVL91:
 1565              	.L33:
 1566              		.loc 1 259 0
 1567 03a0 014084E2 		add	r4, r4, #1
 1568              	.LVL92:
 1569 03a4 080054E3 		cmp	r4, #8
 1570 03a8 3C00000A 		beq	.L45
 1571              	.LVL93:
 1572              	.L35:
 260:../reversi8_2019 _c.c ****     {
 261:../reversi8_2019 _c.c ****         SF = vSF[i];
 1573              		.loc 1 261 0
 1574 03ac FC109FE5 		ldr	r1, .L46
 262:../reversi8_2019 _c.c ****         SC = vSC[i];
 1575              		.loc 1 262 0
 1576 03b0 083081E2 		add	r3, r1, #8
 261:../reversi8_2019 _c.c ****         SF = vSF[i];
 1577              		.loc 1 261 0
 1578 03b4 0460D1E7 		ldrb	r6, [r1, r4]	@ zero_extendqisi2
 1579              	.LVL94:
 1580              		.loc 1 262 0
 1581 03b8 0450D3E7 		ldrb	r5, [r3, r4]	@ zero_extendqisi2
 1582              	.LVL95:
 263:../reversi8_2019 _c.c ****         // flip: numero de fichas a voltear
 264:../reversi8_2019 _c.c ****         flip = 0;
 1583              		.loc 1 264 0
 1584 03bc 00C0A0E3 		mov	ip, #0
 265:../reversi8_2019 _c.c ****         patron = patron_volteo(tablero, &flip, f, c, SF, SC, color); //WASD
 1585              		.loc 1 265 0
 1586 03c0 0700A0E1 		mov	r0, r7
 1587 03c4 30104BE2 		sub	r1, fp, #48
 1588 03c8 38201BE5 		ldr	r2, [fp, #-56]
 1589 03cc 3C301BE5 		ldr	r3, [fp, #-60]
 264:../reversi8_2019 _c.c ****         flip = 0;
 1590              		.loc 1 264 0
 1591 03d0 30C00BE5 		str	ip, [fp, #-48]
 1592              		.loc 1 265 0
 1593 03d4 00608DE5 		str	r6, [sp, #0]
 1594 03d8 20018DE9 		stmib	sp, {r5, r8}	@ phole stm
 1595 03dc FEFFFFEB 		bl	patron_volteo
 1596              	.LVL96:
 266:../reversi8_2019 _c.c ****         //printf("Flip: %d \n", flip);
 267:../reversi8_2019 _c.c ****         if (patron == PATRON_ENCONTRADO )
 1597              		.loc 1 267 0
 1598 03e0 010050E3 		cmp	r0, #1
 1599 03e4 EDFFFF1A 		bne	.L33
 268:../reversi8_2019 _c.c ****         {
 269:../reversi8_2019 _c.c ****             voltear(tablero, f, c, SF, SC, flip, color);
 1600              		.loc 1 269 0
 1601 03e8 30901BE5 		ldr	r9, [fp, #-48]
 1602              	.LVL97:
 1603              	.LBB26:
 1604              	.LBB27:
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1605              		.loc 1 241 0
 1606 03ec 000059E3 		cmp	r9, #0
 1607 03f0 EAFFFFDA 		ble	.L33
 243:../reversi8_2019 _c.c ****         FA = FA + SF;
 1608              		.loc 1 243 0
 1609 03f4 3C104BE2 		sub	r1, fp, #60
 1610 03f8 024091E8 		ldmia	r1, {r1, lr}	@ phole ldm
 1611 03fc 06208EE0 		add	r2, lr, r6
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1612              		.loc 1 244 0
 1613 0400 053081E0 		add	r3, r1, r5
 243:../reversi8_2019 _c.c ****         FA = FA + SF;
 1614              		.loc 1 243 0
 1615 0404 FF2002E2 		and	r2, r2, #255
 1616              	.LVL98:
 1617 0408 01C049E2 		sub	ip, r9, #1
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1618              		.loc 1 244 0
 1619 040c FF3003E2 		and	r3, r3, #255
 1620              	.LVL99:
 245:../reversi8_2019 _c.c ****         tablero[FA][CA] = color;
 1621              		.loc 1 245 0
 1622 0410 82E187E0 		add	lr, r7, r2, asl #3
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1623              		.loc 1 241 0
 1624 0414 090050E1 		cmp	r0, r9
 1625 0418 01100CE2 		and	r1, ip, #1
 245:../reversi8_2019 _c.c ****         tablero[FA][CA] = color;
 1626              		.loc 1 245 0
 1627 041c 0380CEE7 		strb	r8, [lr, r3]
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1628              		.loc 1 241 0
 1629 0420 DEFFFF0A 		beq	.L33
 1630 0424 000051E3 		cmp	r1, #0
 1631 0428 0800000A 		beq	.L44
 243:../reversi8_2019 _c.c ****         FA = FA + SF;
 1632              		.loc 1 243 0
 1633 042c 060082E0 		add	r0, r2, r6
 1634              	.LVL100:
 1635 0430 FF2000E2 		and	r2, r0, #255
 1636              	.LVL101:
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1637              		.loc 1 244 0
 1638 0434 053083E0 		add	r3, r3, r5
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1639              		.loc 1 241 0
 1640 0438 0200A0E3 		mov	r0, #2
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1641              		.loc 1 244 0
 1642 043c FF3003E2 		and	r3, r3, #255
 1643              	.LVL102:
 245:../reversi8_2019 _c.c ****         tablero[FA][CA] = color;
 1644              		.loc 1 245 0
 1645 0440 82C187E0 		add	ip, r7, r2, asl #3
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1646              		.loc 1 241 0
 1647 0444 090050E1 		cmp	r0, r9
 245:../reversi8_2019 _c.c ****         tablero[FA][CA] = color;
 1648              		.loc 1 245 0
 1649 0448 0380CCE7 		strb	r8, [ip, r3]
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1650              		.loc 1 241 0
 1651 044c D3FFFF0A 		beq	.L33
 1652              	.L44:
 1653 0450 04A0A0E1 		mov	sl, r4
 1654              	.L34:
 243:../reversi8_2019 _c.c ****         FA = FA + SF;
 1655              		.loc 1 243 0
 1656 0454 061082E0 		add	r1, r2, r6
 1657 0458 FFE001E2 		and	lr, r1, #255
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1658              		.loc 1 244 0
 1659 045c 054083E0 		add	r4, r3, r5
 1660 0460 FF1004E2 		and	r1, r4, #255
 243:../reversi8_2019 _c.c ****         FA = FA + SF;
 1661              		.loc 1 243 0
 1662 0464 06208EE0 		add	r2, lr, r6
 1663 0468 FF2002E2 		and	r2, r2, #255
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1664              		.loc 1 244 0
 1665 046c 053081E0 		add	r3, r1, r5
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1666              		.loc 1 241 0
 1667 0470 020080E2 		add	r0, r0, #2
 245:../reversi8_2019 _c.c ****         tablero[FA][CA] = color;
 1668              		.loc 1 245 0
 1669 0474 8EC187E0 		add	ip, r7, lr, asl #3
 244:../reversi8_2019 _c.c ****         CA = CA + SC;
 1670              		.loc 1 244 0
 1671 0478 FF3003E2 		and	r3, r3, #255
 245:../reversi8_2019 _c.c ****         tablero[FA][CA] = color;
 1672              		.loc 1 245 0
 1673 047c 824187E0 		add	r4, r7, r2, asl #3
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1674              		.loc 1 241 0
 1675 0480 090050E1 		cmp	r0, r9
 245:../reversi8_2019 _c.c ****         tablero[FA][CA] = color;
 1676              		.loc 1 245 0
 1677 0484 0180CCE7 		strb	r8, [ip, r1]
 1678 0488 0380C4E7 		strb	r8, [r4, r3]
 241:../reversi8_2019 _c.c ****     for (i = 0; i < n; i++)
 1679              		.loc 1 241 0
 1680 048c F0FFFF1A 		bne	.L34
 1681 0490 0A40A0E1 		mov	r4, sl
 1682              	.LBE27:
 1683              	.LBE26:
 259:../reversi8_2019 _c.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1684              		.loc 1 259 0
 1685 0494 014084E2 		add	r4, r4, #1
 1686              	.LVL103:
 1687 0498 080054E3 		cmp	r4, #8
 1688 049c C2FFFF1A 		bne	.L35
 1689              	.LVL104:
 1690              	.L45:
 270:../reversi8_2019 _c.c ****         }
 271:../reversi8_2019 _c.c ****     }
 272:../reversi8_2019 _c.c ****     return 0;
 273:../reversi8_2019 _c.c **** }
 1691              		.loc 1 273 0
 1692 04a0 0000A0E3 		mov	r0, #0
 1693 04a4 28D04BE2 		sub	sp, fp, #40
 1694 04a8 F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 1695 04ac 1EFF2FE1 		bx	lr
 1696              	.L47:
 1697              		.align	2
 1698              	.L46:
 1699 04b0 00000000 		.word	.LANCHOR0
 1700              		.cfi_endproc
 1701              	.LFE5:
 1703              		.align	2
 1704              		.global	elegir_mov
 1706              	elegir_mov:
 1707              	.LFB6:
 274:../reversi8_2019 _c.c **** 
 275:../reversi8_2019 _c.c **** /////////////////////////////////////////////////////////////////////////////////
 276:../reversi8_2019 _c.c **** // Recorre todo el tablero comprobando en cada posición si se puede mover
 277:../reversi8_2019 _c.c **** // En caso afirmativo, consulta la puntuación de la posición y si es la mejor
 278:../reversi8_2019 _c.c **** // que se ha encontrado la guarda
 279:../reversi8_2019 _c.c **** // Al acabar escribe el movimiento seleccionado en f y c
 280:../reversi8_2019 _c.c **** 
 281:../reversi8_2019 _c.c **** // Candidatas
 282:../reversi8_2019 _c.c **** // NO    0
 283:../reversi8_2019 _c.c **** // SI    1
 284:../reversi8_2019 _c.c **** // CASILLA_OCUPADA 2
 285:../reversi8_2019 _c.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 286:../reversi8_2019 _c.c **** {
 1708              		.loc 1 286 0
 1709              		.cfi_startproc
 1710              		@ Function supports interworking.
 1711              		@ args = 0, pretend = 0, frame = 40
 1712              		@ frame_needed = 1, uses_anonymous_args = 0
 1713              	.LVL105:
 1714 04b4 0DC0A0E1 		mov	ip, sp
 1715              	.LCFI6:
 1716              		.cfi_def_cfa_register 12
 1717 04b8 F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 1718 04bc 04B04CE2 		sub	fp, ip, #4
 1719              		.cfi_offset 14, -8
 1720              		.cfi_offset 13, -12
 1721              		.cfi_offset 11, -16
 1722              		.cfi_offset 10, -20
 1723              		.cfi_offset 9, -24
 1724              		.cfi_offset 8, -28
 1725              		.cfi_offset 7, -32
 1726              		.cfi_offset 6, -36
 1727              		.cfi_offset 5, -40
 1728              		.cfi_offset 4, -44
 1729              	.LCFI7:
 1730              		.cfi_def_cfa 11, 4
 1731 04c0 3CD04DE2 		sub	sp, sp, #60
 287:../reversi8_2019 _c.c ****     int i, j, k, found;
 288:../reversi8_2019 _c.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 289:../reversi8_2019 _c.c ****     int mc;      // almacena la columna del mejor movimiento encontrado
 290:../reversi8_2019 _c.c ****     char mejor = 0; // almacena el mejor valor encontrado
 291:../reversi8_2019 _c.c ****     int patron, longitud;
 292:../reversi8_2019 _c.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 293:../reversi8_2019 _c.c **** 
 294:../reversi8_2019 _c.c ****     // Recorremos todo el tablero comprobando dónde podemos mover
 295:../reversi8_2019 _c.c ****     // Comparamos la puntuación de los movimientos encontrados y nos quedamos con el mejor
 296:../reversi8_2019 _c.c ****     for (i=0; i<DIM; i++)
 1732              		.loc 1 296 0
 1733 04c4 0080A0E3 		mov	r8, #0
 286:../reversi8_2019 _c.c **** {
 1734              		.loc 1 286 0
 1735 04c8 50200BE5 		str	r2, [fp, #-80]
 288:../reversi8_2019 _c.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 1736              		.loc 1 288 0
 1737 04cc 0020E0E3 		mvn	r2, #0
 1738              	.LVL106:
 286:../reversi8_2019 _c.c **** {
 1739              		.loc 1 286 0
 1740 04d0 38100BE5 		str	r1, [fp, #-56]
 1741 04d4 54300BE5 		str	r3, [fp, #-84]
 290:../reversi8_2019 _c.c ****     char mejor = 0; // almacena el mejor valor encontrado
 1742              		.loc 1 290 0
 1743 04d8 3C800BE5 		str	r8, [fp, #-60]
 288:../reversi8_2019 _c.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 1744              		.loc 1 288 0
 1745 04dc 48200BE5 		str	r2, [fp, #-72]
 297:../reversi8_2019 _c.c ****     {
 298:../reversi8_2019 _c.c ****         for (j=0; j<DIM; j++)
 299:../reversi8_2019 _c.c ****         {   // indica en qué casillas quizá se pueda mover
 300:../reversi8_2019 _c.c ****             if (candidatas[i][j] == SI)
 301:../reversi8_2019 _c.c ****             {
 302:../reversi8_2019 _c.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 303:../reversi8_2019 _c.c ****                 {
 304:../reversi8_2019 _c.c ****                     found = 0;
 305:../reversi8_2019 _c.c ****                     k = 0;
 306:../reversi8_2019 _c.c **** 
 307:../reversi8_2019 _c.c ****                     // en este bucle comprobamos si es un movimiento válido
 308:../reversi8_2019 _c.c ****                     // (es decir si implica voltear en alguna dirección)
 309:../reversi8_2019 _c.c ****                     while ((found == 0) && (k < DIM))
 310:../reversi8_2019 _c.c ****                     {
 311:../reversi8_2019 _c.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 312:../reversi8_2019 _c.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 313:../reversi8_2019 _c.c **** 
 314:../reversi8_2019 _c.c ****                         // nos dice qué hay que voltear en cada dirección
 315:../reversi8_2019 _c.c ****                         longitud = 0;
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 317:../reversi8_2019 _c.c ****                         //  //printf("%d ", patron);
 318:../reversi8_2019 _c.c ****                         if (patron == PATRON_ENCONTRADO)
 319:../reversi8_2019 _c.c ****                         {
 320:../reversi8_2019 _c.c ****                             found = 1;
 321:../reversi8_2019 _c.c ****                             if (tabla_valor[i][j] > mejor)
 1746              		.loc 1 321 0
 1747 04e0 0070A0E1 		mov	r7, r0
 1748              	.LVL107:
 1749              	.L49:
 285:../reversi8_2019 _c.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 1750              		.loc 1 285 0 discriminator 1
 1751 04e4 38101BE5 		ldr	r1, [fp, #-56]
 1752 04e8 10C29FE5 		ldr	ip, .L57
 1753 04ec 8831A0E1 		mov	r3, r8, asl #3
 1754 04f0 030081E0 		add	r0, r1, r3
 1755 04f4 03508CE0 		add	r5, ip, r3
 286:../reversi8_2019 _c.c **** {
 1756              		.loc 1 286 0 discriminator 1
 1757 04f8 0040A0E3 		mov	r4, #0
 285:../reversi8_2019 _c.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 1758              		.loc 1 285 0 discriminator 1
 1759 04fc 44000BE5 		str	r0, [fp, #-68]
 1760 0500 40500BE5 		str	r5, [fp, #-64]
 1761 0504 020000EA 		b	.L53
 1762              	.LVL108:
 1763              	.L50:
 298:../reversi8_2019 _c.c ****         for (j=0; j<DIM; j++)
 1764              		.loc 1 298 0
 1765 0508 014084E2 		add	r4, r4, #1
 1766              	.LVL109:
 1767 050c 080054E3 		cmp	r4, #8
 1768 0510 6C00000A 		beq	.L56
 1769              	.LVL110:
 1770              	.L53:
 300:../reversi8_2019 _c.c ****             if (candidatas[i][j] == SI)
 1771              		.loc 1 300 0
 1772 0514 0450D7E7 		ldrb	r5, [r7, r4]	@ zero_extendqisi2
 1773 0518 010055E3 		cmp	r5, #1
 1774 051c F9FFFF1A 		bne	.L50
 302:../reversi8_2019 _c.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 1775              		.loc 1 302 0
 1776 0520 44301BE5 		ldr	r3, [fp, #-68]
 1777 0524 0460D3E7 		ldrb	r6, [r3, r4]	@ zero_extendqisi2
 1778 0528 000056E3 		cmp	r6, #0
 1779 052c F5FFFF1A 		bne	.L50
 1780              	.LVL111:
 1781 0530 FFA008E2 		and	sl, r8, #255
 1782 0534 FF9004E2 		and	r9, r4, #255
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1783              		.loc 1 316 0
 1784 0538 FFC0A0E3 		mov	ip, #255
 1785 053c 38001BE5 		ldr	r0, [fp, #-56]
 1786 0540 30104BE2 		sub	r1, fp, #48
 1787 0544 0A20A0E1 		mov	r2, sl
 1788 0548 0930A0E1 		mov	r3, r9
 315:../reversi8_2019 _c.c ****                         longitud = 0;
 1789              		.loc 1 315 0
 1790 054c 30600BE5 		str	r6, [fp, #-48]
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1791              		.loc 1 316 0
 1792 0550 00C08DE5 		str	ip, [sp, #0]
 1793 0554 04608DE5 		str	r6, [sp, #4]
 1794 0558 08508DE5 		str	r5, [sp, #8]
 1795 055c FEFFFFEB 		bl	patron_volteo
 1796              	.LVL112:
 318:../reversi8_2019 _c.c ****                         if (patron == PATRON_ENCONTRADO)
 1797              		.loc 1 318 0
 1798 0560 010050E3 		cmp	r0, #1
 1799 0564 4D00000A 		beq	.L51
 1800              	.LVL113:
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1801              		.loc 1 316 0
 1802 0568 FFE0A0E3 		mov	lr, #255
 1803 056c 38001BE5 		ldr	r0, [fp, #-56]
 1804              	.LVL114:
 1805 0570 30104BE2 		sub	r1, fp, #48
 1806 0574 0A20A0E1 		mov	r2, sl
 1807 0578 0930A0E1 		mov	r3, r9
 315:../reversi8_2019 _c.c ****                         longitud = 0;
 1808              		.loc 1 315 0
 1809 057c 30600BE5 		str	r6, [fp, #-48]
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1810              		.loc 1 316 0
 1811 0580 00E08DE5 		str	lr, [sp, #0]
 1812 0584 04508DE5 		str	r5, [sp, #4]
 1813 0588 08508DE5 		str	r5, [sp, #8]
 1814 058c FEFFFFEB 		bl	patron_volteo
 1815              	.LVL115:
 318:../reversi8_2019 _c.c ****                         if (patron == PATRON_ENCONTRADO)
 1816              		.loc 1 318 0
 1817 0590 010050E3 		cmp	r0, #1
 1818 0594 4100000A 		beq	.L51
 1819              	.LVL116:
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1820              		.loc 1 316 0
 1821 0598 38001BE5 		ldr	r0, [fp, #-56]
 1822              	.LVL117:
 1823 059c 30104BE2 		sub	r1, fp, #48
 1824 05a0 0A20A0E1 		mov	r2, sl
 1825 05a4 0930A0E1 		mov	r3, r9
 315:../reversi8_2019 _c.c ****                         longitud = 0;
 1826              		.loc 1 315 0
 1827 05a8 30600BE5 		str	r6, [fp, #-48]
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1828              		.loc 1 316 0
 1829 05ac 00608DE5 		str	r6, [sp, #0]
 1830 05b0 04508DE5 		str	r5, [sp, #4]
 1831 05b4 08508DE5 		str	r5, [sp, #8]
 1832 05b8 FEFFFFEB 		bl	patron_volteo
 1833              	.LVL118:
 318:../reversi8_2019 _c.c ****                         if (patron == PATRON_ENCONTRADO)
 1834              		.loc 1 318 0
 1835 05bc 010050E3 		cmp	r0, #1
 1836 05c0 3600000A 		beq	.L51
 1837              	.LVL119:
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1838              		.loc 1 316 0
 1839 05c4 38001BE5 		ldr	r0, [fp, #-56]
 1840              	.LVL120:
 1841 05c8 30104BE2 		sub	r1, fp, #48
 1842 05cc 0A20A0E1 		mov	r2, sl
 1843 05d0 0930A0E1 		mov	r3, r9
 315:../reversi8_2019 _c.c ****                         longitud = 0;
 1844              		.loc 1 315 0
 1845 05d4 30600BE5 		str	r6, [fp, #-48]
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1846              		.loc 1 316 0
 1847 05d8 00508DE5 		str	r5, [sp, #0]
 1848 05dc 04508DE5 		str	r5, [sp, #4]
 1849 05e0 08508DE5 		str	r5, [sp, #8]
 1850 05e4 FEFFFFEB 		bl	patron_volteo
 1851              	.LVL121:
 318:../reversi8_2019 _c.c ****                         if (patron == PATRON_ENCONTRADO)
 1852              		.loc 1 318 0
 1853 05e8 010050E3 		cmp	r0, #1
 1854 05ec 2B00000A 		beq	.L51
 1855              	.LVL122:
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1856              		.loc 1 316 0
 1857 05f0 38001BE5 		ldr	r0, [fp, #-56]
 1858              	.LVL123:
 1859 05f4 30104BE2 		sub	r1, fp, #48
 1860 05f8 0A20A0E1 		mov	r2, sl
 1861 05fc 0930A0E1 		mov	r3, r9
 315:../reversi8_2019 _c.c ****                         longitud = 0;
 1862              		.loc 1 315 0
 1863 0600 30600BE5 		str	r6, [fp, #-48]
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1864              		.loc 1 316 0
 1865 0604 60008DE8 		stmia	sp, {r5, r6}	@ phole stm
 1866 0608 08508DE5 		str	r5, [sp, #8]
 1867 060c FEFFFFEB 		bl	patron_volteo
 1868              	.LVL124:
 318:../reversi8_2019 _c.c ****                         if (patron == PATRON_ENCONTRADO)
 1869              		.loc 1 318 0
 1870 0610 010050E3 		cmp	r0, #1
 1871 0614 2100000A 		beq	.L51
 1872              	.LVL125:
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1873              		.loc 1 316 0
 1874 0618 FFC0A0E3 		mov	ip, #255
 1875 061c 38001BE5 		ldr	r0, [fp, #-56]
 1876              	.LVL126:
 1877 0620 30104BE2 		sub	r1, fp, #48
 1878 0624 0A20A0E1 		mov	r2, sl
 1879 0628 0930A0E1 		mov	r3, r9
 315:../reversi8_2019 _c.c ****                         longitud = 0;
 1880              		.loc 1 315 0
 1881 062c 30600BE5 		str	r6, [fp, #-48]
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1882              		.loc 1 316 0
 1883 0630 20108DE8 		stmia	sp, {r5, ip}	@ phole stm
 1884 0634 08508DE5 		str	r5, [sp, #8]
 1885 0638 FEFFFFEB 		bl	patron_volteo
 1886              	.LVL127:
 318:../reversi8_2019 _c.c ****                         if (patron == PATRON_ENCONTRADO)
 1887              		.loc 1 318 0
 1888 063c 010050E3 		cmp	r0, #1
 1889 0640 1600000A 		beq	.L51
 1890              	.LVL128:
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1891              		.loc 1 316 0
 1892 0644 FFE0A0E3 		mov	lr, #255
 1893 0648 38001BE5 		ldr	r0, [fp, #-56]
 1894              	.LVL129:
 1895 064c 30104BE2 		sub	r1, fp, #48
 1896 0650 0A20A0E1 		mov	r2, sl
 1897 0654 0930A0E1 		mov	r3, r9
 315:../reversi8_2019 _c.c ****                         longitud = 0;
 1898              		.loc 1 315 0
 1899 0658 30600BE5 		str	r6, [fp, #-48]
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1900              		.loc 1 316 0
 1901 065c 40408DE8 		stmia	sp, {r6, lr}	@ phole stm
 1902 0660 08508DE5 		str	r5, [sp, #8]
 1903 0664 FEFFFFEB 		bl	patron_volteo
 1904              	.LVL130:
 318:../reversi8_2019 _c.c ****                         if (patron == PATRON_ENCONTRADO)
 1905              		.loc 1 318 0
 1906 0668 010050E3 		cmp	r0, #1
 1907 066c 0B00000A 		beq	.L51
 1908              	.LVL131:
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1909              		.loc 1 316 0
 1910 0670 FFC0A0E3 		mov	ip, #255
 1911 0674 38001BE5 		ldr	r0, [fp, #-56]
 1912              	.LVL132:
 1913 0678 30104BE2 		sub	r1, fp, #48
 1914 067c 0A20A0E1 		mov	r2, sl
 1915 0680 0930A0E1 		mov	r3, r9
 315:../reversi8_2019 _c.c ****                         longitud = 0;
 1916              		.loc 1 315 0
 1917 0684 30600BE5 		str	r6, [fp, #-48]
 316:../reversi8_2019 _c.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA); //W
 1918              		.loc 1 316 0
 1919 0688 00C08DE5 		str	ip, [sp, #0]
 1920 068c 04C08DE5 		str	ip, [sp, #4]
 1921 0690 08508DE5 		str	r5, [sp, #8]
 1922 0694 FEFFFFEB 		bl	patron_volteo
 1923              	.LVL133:
 318:../reversi8_2019 _c.c ****                         if (patron == PATRON_ENCONTRADO)
 1924              		.loc 1 318 0
 1925 0698 010050E3 		cmp	r0, #1
 1926 069c 99FFFF1A 		bne	.L50
 1927              	.LVL134:
 1928              	.L51:
 1929              		.loc 1 321 0
 1930 06a0 40201BE5 		ldr	r2, [fp, #-64]
 1931 06a4 3C101BE5 		ldr	r1, [fp, #-60]
 1932 06a8 0400D2E7 		ldrb	r0, [r2, r4]	@ zero_extendqisi2
 1933              	.LVL135:
 1934 06ac 010050E1 		cmp	r0, r1
 1935 06b0 4C400B85 		strhi	r4, [fp, #-76]
 298:../reversi8_2019 _c.c ****         for (j=0; j<DIM; j++)
 1936              		.loc 1 298 0
 1937 06b4 014084E2 		add	r4, r4, #1
 1938              		.loc 1 321 0
 1939 06b8 3C000B85 		strhi	r0, [fp, #-60]
 1940 06bc 48800B85 		strhi	r8, [fp, #-72]
 1941              	.LVL136:
 298:../reversi8_2019 _c.c ****         for (j=0; j<DIM; j++)
 1942              		.loc 1 298 0
 1943 06c0 080054E3 		cmp	r4, #8
 1944 06c4 92FFFF1A 		bne	.L53
 1945              	.LVL137:
 1946              	.L56:
 296:../reversi8_2019 _c.c ****     for (i=0; i<DIM; i++)
 1947              		.loc 1 296 0
 1948 06c8 018088E2 		add	r8, r8, #1
 1949              	.LVL138:
 1950 06cc 080058E3 		cmp	r8, #8
 1951 06d0 087087E2 		add	r7, r7, #8
 1952 06d4 82FFFF1A 		bne	.L49
 322:../reversi8_2019 _c.c ****                             {
 323:../reversi8_2019 _c.c ****                                 mf = i;
 324:../reversi8_2019 _c.c ****                                 mc = j;
 325:../reversi8_2019 _c.c ****                                 mejor = tabla_valor[i][j];
 326:../reversi8_2019 _c.c ****                             }
 327:../reversi8_2019 _c.c ****                         }
 328:../reversi8_2019 _c.c ****                         k++;
 329:../reversi8_2019 _c.c ****                         // si no hemos encontrado nada probamos con la siguiente dirección
 330:../reversi8_2019 _c.c ****                     }
 331:../reversi8_2019 _c.c ****                 }
 332:../reversi8_2019 _c.c ****             }
 333:../reversi8_2019 _c.c ****         }
 334:../reversi8_2019 _c.c ****     }
 335:../reversi8_2019 _c.c ****     *f = (char) mf;
 1953              		.loc 1 335 0
 1954 06d8 50001BE5 		ldr	r0, [fp, #-80]
 1955 06dc 48C01BE5 		ldr	ip, [fp, #-72]
 1956 06e0 00C0C0E5 		strb	ip, [r0, #0]
 336:../reversi8_2019 _c.c ****     *c = (char) mc;
 1957              		.loc 1 336 0
 1958 06e4 4C301BE5 		ldr	r3, [fp, #-76]
 1959 06e8 54201BE5 		ldr	r2, [fp, #-84]
 337:../reversi8_2019 _c.c ****     // si no se ha encontrado una posición válida devuelve -1
 338:../reversi8_2019 _c.c ****     return mf;
 339:../reversi8_2019 _c.c **** }
 1960              		.loc 1 339 0
 1961 06ec 48001BE5 		ldr	r0, [fp, #-72]
 336:../reversi8_2019 _c.c ****     *c = (char) mc;
 1962              		.loc 1 336 0
 1963 06f0 0030C2E5 		strb	r3, [r2, #0]
 1964              		.loc 1 339 0
 1965 06f4 28D04BE2 		sub	sp, fp, #40
 1966 06f8 F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 1967 06fc 1EFF2FE1 		bx	lr
 1968              	.L58:
 1969              		.align	2
 1970              	.L57:
 1971 0700 10000000 		.word	.LANCHOR0+16
 1972              		.cfi_endproc
 1973              	.LFE6:
 1975              		.align	2
 1976              		.global	contar
 1978              	contar:
 1979              	.LFB7:
 340:../reversi8_2019 _c.c **** ////////////////////////////////////////////////////////////////////////////////
 341:../reversi8_2019 _c.c **** // Cuenta el número de fichas de cada color.
 342:../reversi8_2019 _c.c **** // Los guarda en la dirección b (blancas) y n (negras)
 343:../reversi8_2019 _c.c **** void contar(char tablero[][DIM], int *b, int *n)
 344:../reversi8_2019 _c.c **** {
 1980              		.loc 1 344 0
 1981              		.cfi_startproc
 1982              		@ Function supports interworking.
 1983              		@ args = 0, pretend = 0, frame = 0
 1984              		@ frame_needed = 0, uses_anonymous_args = 0
 1985              		@ link register save eliminated.
 1986              	.LVL139:
 345:../reversi8_2019 _c.c ****     int i,j;
 346:../reversi8_2019 _c.c **** 
 347:../reversi8_2019 _c.c ****     *b = 0;
 1987              		.loc 1 347 0
 1988 0704 0030A0E3 		mov	r3, #0
 1989 0708 003081E5 		str	r3, [r1, #0]
 343:../reversi8_2019 _c.c **** void contar(char tablero[][DIM], int *b, int *n)
 1990              		.loc 1 343 0
 1991 070c 40C080E2 		add	ip, r0, #64
 348:../reversi8_2019 _c.c ****     *n = 0;
 1992              		.loc 1 348 0
 1993 0710 003082E5 		str	r3, [r2, #0]
 1994              	.LVL140:
 1995 0714 290000EA 		b	.L60
 1996              	.LVL141:
 1997              	.L88:
 349:../reversi8_2019 _c.c **** 
 350:../reversi8_2019 _c.c ****     // recorremos todo el tablero contando las fichas de cada color
 351:../reversi8_2019 _c.c ****     for (i=0; i<DIM; i++)
 352:../reversi8_2019 _c.c ****     {
 353:../reversi8_2019 _c.c ****         for (j=0; j<DIM; j++)
 354:../reversi8_2019 _c.c ****         {
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 356:../reversi8_2019 _c.c ****             {
 357:../reversi8_2019 _c.c ****                 (*b)++;
 358:../reversi8_2019 _c.c ****             }
 359:../reversi8_2019 _c.c ****             else if (tablero[i][j] == FICHA_NEGRA)
 1998              		.loc 1 359 0
 1999 0718 020053E3 		cmp	r3, #2
 2000 071c 5B00000A 		beq	.L80
 2001              	.L64:
 2002              	.LVL142:
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2003              		.loc 1 355 0
 2004 0720 0130D0E5 		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 2005 0724 010053E3 		cmp	r3, #1
 2006 0728 2D00000A 		beq	.L65
 2007              	.L89:
 2008              		.loc 1 359 0
 2009 072c 020053E3 		cmp	r3, #2
 2010 0730 5E00000A 		beq	.L81
 2011              	.L66:
 2012              	.LVL143:
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2013              		.loc 1 355 0
 2014 0734 0230D0E5 		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 2015 0738 010053E3 		cmp	r3, #1
 2016 073c 2E00000A 		beq	.L67
 2017              	.LVL144:
 2018              	.L90:
 2019              		.loc 1 359 0
 2020 0740 020053E3 		cmp	r3, #2
 2021 0744 5500000A 		beq	.L82
 2022              	.L68:
 2023              	.LVL145:
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2024              		.loc 1 355 0
 2025 0748 0330D0E5 		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 2026 074c 010053E3 		cmp	r3, #1
 2027 0750 2F00000A 		beq	.L69
 2028              	.LVL146:
 2029              	.L91:
 2030              		.loc 1 359 0
 2031 0754 020053E3 		cmp	r3, #2
 2032 0758 6400000A 		beq	.L83
 2033              	.L70:
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2034              		.loc 1 355 0
 2035 075c 0430D0E5 		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2036 0760 010053E3 		cmp	r3, #1
 2037 0764 3000000A 		beq	.L71
 2038              	.L92:
 2039              		.loc 1 359 0
 2040 0768 020053E3 		cmp	r3, #2
 2041 076c 5B00000A 		beq	.L84
 2042              	.L72:
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2043              		.loc 1 355 0
 2044 0770 0530D0E5 		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 2045 0774 010053E3 		cmp	r3, #1
 2046 0778 3100000A 		beq	.L73
 2047              	.L93:
 2048              		.loc 1 359 0
 2049 077c 020053E3 		cmp	r3, #2
 2050 0780 5200000A 		beq	.L85
 2051              	.L74:
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2052              		.loc 1 355 0
 2053 0784 0630D0E5 		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 2054 0788 010053E3 		cmp	r3, #1
 2055 078c 3200000A 		beq	.L75
 2056              	.L94:
 2057              		.loc 1 359 0
 2058 0790 020053E3 		cmp	r3, #2
 2059 0794 4900000A 		beq	.L86
 2060              	.L76:
 2061              	.LVL147:
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2062              		.loc 1 355 0
 2063 0798 0730D0E5 		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 2064 079c 010053E3 		cmp	r3, #1
 2065 07a0 3300000A 		beq	.L87
 2066              	.L79:
 2067              		.loc 1 359 0
 2068 07a4 020053E3 		cmp	r3, #2
 360:../reversi8_2019 _c.c ****             {
 361:../reversi8_2019 _c.c ****                 (*n)++;
 2069              		.loc 1 361 0
 2070 07a8 00309205 		ldreq	r3, [r2, #0]
 2071 07ac 080080E2 		add	r0, r0, #8
 2072 07b0 01308302 		addeq	r3, r3, #1
 2073 07b4 00308205 		streq	r3, [r2, #0]
 2074              	.LVL148:
 351:../reversi8_2019 _c.c ****     for (i=0; i<DIM; i++)
 2075              		.loc 1 351 0
 2076 07b8 0C0050E1 		cmp	r0, ip
 2077 07bc 1EFF2F01 		bxeq	lr
 2078              	.LVL149:
 2079              	.L60:
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2080              		.loc 1 355 0 discriminator 1
 2081 07c0 0030D0E5 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 2082 07c4 010053E3 		cmp	r3, #1
 2083 07c8 D2FFFF1A 		bne	.L88
 357:../reversi8_2019 _c.c ****                 (*b)++;
 2084              		.loc 1 357 0
 2085 07cc 003091E5 		ldr	r3, [r1, #0]
 2086 07d0 013083E2 		add	r3, r3, #1
 2087 07d4 003081E5 		str	r3, [r1, #0]
 2088              	.LVL150:
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2089              		.loc 1 355 0
 2090 07d8 0130D0E5 		ldrb	r3, [r0, #1]	@ zero_extendqisi2
 2091 07dc 010053E3 		cmp	r3, #1
 2092 07e0 D1FFFF1A 		bne	.L89
 2093              	.L65:
 357:../reversi8_2019 _c.c ****                 (*b)++;
 2094              		.loc 1 357 0
 2095 07e4 003091E5 		ldr	r3, [r1, #0]
 2096 07e8 013083E2 		add	r3, r3, #1
 2097 07ec 003081E5 		str	r3, [r1, #0]
 2098              	.LVL151:
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2099              		.loc 1 355 0
 2100 07f0 0230D0E5 		ldrb	r3, [r0, #2]	@ zero_extendqisi2
 2101 07f4 010053E3 		cmp	r3, #1
 2102 07f8 D0FFFF1A 		bne	.L90
 2103              	.LVL152:
 2104              	.L67:
 357:../reversi8_2019 _c.c ****                 (*b)++;
 2105              		.loc 1 357 0
 2106 07fc 003091E5 		ldr	r3, [r1, #0]
 2107 0800 013083E2 		add	r3, r3, #1
 2108 0804 003081E5 		str	r3, [r1, #0]
 2109              	.LVL153:
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2110              		.loc 1 355 0
 2111 0808 0330D0E5 		ldrb	r3, [r0, #3]	@ zero_extendqisi2
 2112 080c 010053E3 		cmp	r3, #1
 2113 0810 CFFFFF1A 		bne	.L91
 2114              	.LVL154:
 2115              	.L69:
 357:../reversi8_2019 _c.c ****                 (*b)++;
 2116              		.loc 1 357 0
 2117 0814 003091E5 		ldr	r3, [r1, #0]
 2118 0818 013083E2 		add	r3, r3, #1
 2119 081c 003081E5 		str	r3, [r1, #0]
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2120              		.loc 1 355 0
 2121 0820 0430D0E5 		ldrb	r3, [r0, #4]	@ zero_extendqisi2
 2122 0824 010053E3 		cmp	r3, #1
 2123 0828 CEFFFF1A 		bne	.L92
 2124              	.L71:
 357:../reversi8_2019 _c.c ****                 (*b)++;
 2125              		.loc 1 357 0
 2126 082c 003091E5 		ldr	r3, [r1, #0]
 2127 0830 013083E2 		add	r3, r3, #1
 2128 0834 003081E5 		str	r3, [r1, #0]
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2129              		.loc 1 355 0
 2130 0838 0530D0E5 		ldrb	r3, [r0, #5]	@ zero_extendqisi2
 2131 083c 010053E3 		cmp	r3, #1
 2132 0840 CDFFFF1A 		bne	.L93
 2133              	.L73:
 357:../reversi8_2019 _c.c ****                 (*b)++;
 2134              		.loc 1 357 0
 2135 0844 003091E5 		ldr	r3, [r1, #0]
 2136 0848 013083E2 		add	r3, r3, #1
 2137 084c 003081E5 		str	r3, [r1, #0]
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2138              		.loc 1 355 0
 2139 0850 0630D0E5 		ldrb	r3, [r0, #6]	@ zero_extendqisi2
 2140 0854 010053E3 		cmp	r3, #1
 2141 0858 CCFFFF1A 		bne	.L94
 2142              	.L75:
 357:../reversi8_2019 _c.c ****                 (*b)++;
 2143              		.loc 1 357 0
 2144 085c 003091E5 		ldr	r3, [r1, #0]
 2145 0860 013083E2 		add	r3, r3, #1
 2146 0864 003081E5 		str	r3, [r1, #0]
 2147              	.LVL155:
 355:../reversi8_2019 _c.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2148              		.loc 1 355 0
 2149 0868 0730D0E5 		ldrb	r3, [r0, #7]	@ zero_extendqisi2
 2150 086c 010053E3 		cmp	r3, #1
 2151 0870 CBFFFF1A 		bne	.L79
 2152              	.L87:
 357:../reversi8_2019 _c.c ****                 (*b)++;
 2153              		.loc 1 357 0
 2154 0874 003091E5 		ldr	r3, [r1, #0]
 2155              		.loc 1 361 0
 2156 0878 080080E2 		add	r0, r0, #8
 357:../reversi8_2019 _c.c ****                 (*b)++;
 2157              		.loc 1 357 0
 2158 087c 013083E2 		add	r3, r3, #1
 351:../reversi8_2019 _c.c ****     for (i=0; i<DIM; i++)
 2159              		.loc 1 351 0
 2160 0880 0C0050E1 		cmp	r0, ip
 357:../reversi8_2019 _c.c ****                 (*b)++;
 2161              		.loc 1 357 0
 2162 0884 003081E5 		str	r3, [r1, #0]
 2163              	.LVL156:
 351:../reversi8_2019 _c.c ****     for (i=0; i<DIM; i++)
 2164              		.loc 1 351 0
 2165 0888 1EFF2F01 		bxeq	lr
 2166 088c CBFFFFEA 		b	.L60
 2167              	.LVL157:
 2168              	.L80:
 2169              		.loc 1 361 0
 2170 0890 003092E5 		ldr	r3, [r2, #0]
 2171 0894 013083E2 		add	r3, r3, #1
 2172 0898 003082E5 		str	r3, [r2, #0]
 2173 089c 9FFFFFEA 		b	.L64
 2174              	.LVL158:
 2175              	.L82:
 2176 08a0 003092E5 		ldr	r3, [r2, #0]
 2177 08a4 013083E2 		add	r3, r3, #1
 2178 08a8 003082E5 		str	r3, [r2, #0]
 2179 08ac A5FFFFEA 		b	.L68
 2180              	.LVL159:
 2181              	.L81:
 2182 08b0 003092E5 		ldr	r3, [r2, #0]
 2183 08b4 013083E2 		add	r3, r3, #1
 2184 08b8 003082E5 		str	r3, [r2, #0]
 2185 08bc 9CFFFFEA 		b	.L66
 2186              	.LVL160:
 2187              	.L86:
 2188 08c0 003092E5 		ldr	r3, [r2, #0]
 2189 08c4 013083E2 		add	r3, r3, #1
 2190 08c8 003082E5 		str	r3, [r2, #0]
 2191 08cc B1FFFFEA 		b	.L76
 2192              	.L85:
 2193 08d0 003092E5 		ldr	r3, [r2, #0]
 2194 08d4 013083E2 		add	r3, r3, #1
 2195 08d8 003082E5 		str	r3, [r2, #0]
 2196 08dc A8FFFFEA 		b	.L74
 2197              	.L84:
 2198 08e0 003092E5 		ldr	r3, [r2, #0]
 2199 08e4 013083E2 		add	r3, r3, #1
 2200 08e8 003082E5 		str	r3, [r2, #0]
 2201 08ec 9FFFFFEA 		b	.L72
 2202              	.L83:
 2203 08f0 003092E5 		ldr	r3, [r2, #0]
 2204 08f4 013083E2 		add	r3, r3, #1
 2205 08f8 003082E5 		str	r3, [r2, #0]
 2206 08fc 96FFFFEA 		b	.L70
 2207              		.cfi_endproc
 2208              	.LFE7:
 2210              		.align	2
 2211              		.global	actualizar_candidatas
 2213              	actualizar_candidatas:
 2214              	.LFB8:
 362:../reversi8_2019 _c.c ****             }
 363:../reversi8_2019 _c.c ****         }
 364:../reversi8_2019 _c.c ****     }
 365:../reversi8_2019 _c.c **** }
 366:../reversi8_2019 _c.c **** 
 367:../reversi8_2019 _c.c **** void actualizar_candidatas(char candidatas[][DIM], char f, char c)
 368:../reversi8_2019 _c.c **** {
 2215              		.loc 1 368 0
 2216              		.cfi_startproc
 2217              		@ Function supports interworking.
 2218              		@ args = 0, pretend = 0, frame = 0
 2219              		@ frame_needed = 0, uses_anonymous_args = 0
 2220              		@ link register save eliminated.
 2221              	.LVL161:
 369:../reversi8_2019 _c.c ****     // donde ya se ha colocado no se puede volver a colocar
 370:../reversi8_2019 _c.c ****     // En las posiciones alrededor sí
 371:../reversi8_2019 _c.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 2222              		.loc 1 371 0
 2223 0900 813180E0 		add	r3, r0, r1, asl #3
 2224 0904 02C0A0E3 		mov	ip, #2
 372:../reversi8_2019 _c.c ****     if (f > 0)
 2225              		.loc 1 372 0
 2226 0908 000051E3 		cmp	r1, #0
 368:../reversi8_2019 _c.c **** {
 2227              		.loc 1 368 0
 2228 090c 30002DE9 		stmfd	sp!, {r4, r5}
 2229              	.LCFI8:
 2230              		.cfi_def_cfa_offset 8
 371:../reversi8_2019 _c.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 2231              		.loc 1 371 0
 2232 0910 02C0C3E7 		strb	ip, [r3, r2]
 2233              		.loc 1 372 0
 2234 0914 0E00000A 		beq	.L96
 2235              		.cfi_offset 5, -4
 2236              		.cfi_offset 4, -8
 373:../reversi8_2019 _c.c ****     {
 374:../reversi8_2019 _c.c ****         if (candidatas[f-1][c] != CASILLA_OCUPADA)
 2237              		.loc 1 374 0
 2238 0918 015041E2 		sub	r5, r1, #1
 2239 091c 85C180E0 		add	ip, r0, r5, asl #3
 2240 0920 0240DCE7 		ldrb	r4, [ip, r2]	@ zero_extendqisi2
 2241 0924 020054E3 		cmp	r4, #2
 375:../reversi8_2019 _c.c ****             candidatas[f-1][c] = SI;
 2242              		.loc 1 375 0
 2243 0928 0140A013 		movne	r4, #1
 2244 092c 0240CC17 		strneb	r4, [ip, r2]
 376:../reversi8_2019 _c.c **** 
 377:../reversi8_2019 _c.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2245              		.loc 1 377 0
 2246 0930 000052E3 		cmp	r2, #0
 2247 0934 2A00001A 		bne	.L109
 2248              	.L98:
 378:../reversi8_2019 _c.c ****             candidatas[f-1][c-1] = SI;
 379:../reversi8_2019 _c.c **** 
 380:../reversi8_2019 _c.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2249              		.loc 1 380 0 discriminator 1
 2250 0938 014082E2 		add	r4, r2, #1
 2251 093c 0450DCE7 		ldrb	r5, [ip, r4]	@ zero_extendqisi2
 2252 0940 020055E3 		cmp	r5, #2
 381:../reversi8_2019 _c.c ****             candidatas[f-1][c+1] = SI;
 2253              		.loc 1 381 0 discriminator 1
 2254 0944 0150A013 		movne	r5, #1
 2255 0948 0450CC17 		strneb	r5, [ip, r4]
 2256              	.L100:
 382:../reversi8_2019 _c.c ****     }
 383:../reversi8_2019 _c.c ****     if (f < 7)
 2257              		.loc 1 383 0
 2258 094c 060051E3 		cmp	r1, #6
 2259 0950 0C00008A 		bhi	.L101
 2260              	.L96:
 384:../reversi8_2019 _c.c ****     {
 385:../reversi8_2019 _c.c ****         if (candidatas[f+1][c] != CASILLA_OCUPADA)
 2261              		.loc 1 385 0
 2262 0954 01C081E2 		add	ip, r1, #1
 2263 0958 8C0180E0 		add	r0, r0, ip, asl #3
 2264              	.LVL162:
 2265 095c 0210D0E7 		ldrb	r1, [r0, r2]	@ zero_extendqisi2
 2266              	.LVL163:
 2267 0960 020051E3 		cmp	r1, #2
 386:../reversi8_2019 _c.c ****             candidatas[f+1][c] = SI;
 2268              		.loc 1 386 0
 2269 0964 0110A013 		movne	r1, #1
 2270 0968 0210C017 		strneb	r1, [r0, r2]
 387:../reversi8_2019 _c.c **** 
 388:../reversi8_2019 _c.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2271              		.loc 1 388 0
 2272 096c 000052E3 		cmp	r2, #0
 2273 0970 0D00001A 		bne	.L110
 2274              	.L103:
 389:../reversi8_2019 _c.c ****             candidatas[f+1][c-1] = SI;
 390:../reversi8_2019 _c.c **** 
 391:../reversi8_2019 _c.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2275              		.loc 1 391 0 discriminator 1
 2276 0974 011082E2 		add	r1, r2, #1
 2277 0978 01C0D0E7 		ldrb	ip, [r0, r1]	@ zero_extendqisi2
 2278 097c 02005CE3 		cmp	ip, #2
 392:../reversi8_2019 _c.c ****             candidatas[f+1][c+1] = SI;
 2279              		.loc 1 392 0 discriminator 1
 2280 0980 01C0A013 		movne	ip, #1
 2281 0984 01C0C017 		strneb	ip, [r0, r1]
 2282              	.L101:
 393:../reversi8_2019 _c.c ****     }
 394:../reversi8_2019 _c.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2283              		.loc 1 394 0
 2284 0988 000052E3 		cmp	r2, #0
 2285 098c 1C00001A 		bne	.L111
 2286              	.L106:
 395:../reversi8_2019 _c.c ****         candidatas[f][c-1] = SI;
 396:../reversi8_2019 _c.c **** 
 397:../reversi8_2019 _c.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2287              		.loc 1 397 0 discriminator 1
 2288 0990 012082E2 		add	r2, r2, #1
 2289              	.LVL164:
 2290 0994 0210D3E7 		ldrb	r1, [r3, r2]	@ zero_extendqisi2
 2291 0998 020051E3 		cmp	r1, #2
 398:../reversi8_2019 _c.c ****         candidatas[f][c+1] = SI;
 2292              		.loc 1 398 0 discriminator 1
 2293 099c 0110A013 		movne	r1, #1
 2294 09a0 0210C317 		strneb	r1, [r3, r2]
 2295              	.L95:
 399:../reversi8_2019 _c.c **** }
 2296              		.loc 1 399 0
 2297 09a4 3000BDE8 		ldmfd	sp!, {r4, r5}
 2298 09a8 1EFF2FE1 		bx	lr
 2299              	.LVL165:
 2300              	.L110:
 388:../reversi8_2019 _c.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2301              		.loc 1 388 0 discriminator 1
 2302 09ac 011042E2 		sub	r1, r2, #1
 2303 09b0 01C0D0E7 		ldrb	ip, [r0, r1]	@ zero_extendqisi2
 2304 09b4 02005CE3 		cmp	ip, #2
 389:../reversi8_2019 _c.c ****             candidatas[f+1][c-1] = SI;
 2305              		.loc 1 389 0 discriminator 1
 2306 09b8 01C0A013 		movne	ip, #1
 2307 09bc 01C0C017 		strneb	ip, [r0, r1]
 391:../reversi8_2019 _c.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2308              		.loc 1 391 0 discriminator 1
 2309 09c0 060052E3 		cmp	r2, #6
 2310 09c4 EAFFFF9A 		bls	.L103
 2311              	.L105:
 394:../reversi8_2019 _c.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2312              		.loc 1 394 0 discriminator 1
 2313 09c8 0100D3E7 		ldrb	r0, [r3, r1]	@ zero_extendqisi2
 2314 09cc 020050E3 		cmp	r0, #2
 395:../reversi8_2019 _c.c ****         candidatas[f][c-1] = SI;
 2315              		.loc 1 395 0 discriminator 1
 2316 09d0 0100A013 		movne	r0, #1
 2317 09d4 0100C317 		strneb	r0, [r3, r1]
 397:../reversi8_2019 _c.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2318              		.loc 1 397 0 discriminator 1
 2319 09d8 060052E3 		cmp	r2, #6
 2320 09dc F0FFFF8A 		bhi	.L95
 2321 09e0 EAFFFFEA 		b	.L106
 2322              	.LVL166:
 2323              	.L109:
 377:../reversi8_2019 _c.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2324              		.loc 1 377 0 discriminator 1
 2325 09e4 014042E2 		sub	r4, r2, #1
 2326 09e8 0450DCE7 		ldrb	r5, [ip, r4]	@ zero_extendqisi2
 2327 09ec 020055E3 		cmp	r5, #2
 378:../reversi8_2019 _c.c ****             candidatas[f-1][c-1] = SI;
 2328              		.loc 1 378 0 discriminator 1
 2329 09f0 0150A013 		movne	r5, #1
 2330 09f4 0450CC17 		strneb	r5, [ip, r4]
 380:../reversi8_2019 _c.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2331              		.loc 1 380 0 discriminator 1
 2332 09f8 060052E3 		cmp	r2, #6
 2333 09fc D2FFFF8A 		bhi	.L100
 2334 0a00 CCFFFFEA 		b	.L98
 2335              	.LVL167:
 2336              	.L111:
 394:../reversi8_2019 _c.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2337              		.loc 1 394 0
 2338 0a04 011042E2 		sub	r1, r2, #1
 2339 0a08 EEFFFFEA 		b	.L105
 2340              		.cfi_endproc
 2341              	.LFE8:
 2343              		.align	2
 2344              		.global	reversi8_c
 2346              	reversi8_c:
 2347              	.LFB9:
 400:../reversi8_2019 _c.c **** 
 401:../reversi8_2019 _c.c **** 
 402:../reversi8_2019 _c.c **** 
 403:../reversi8_2019 _c.c **** 
 404:../reversi8_2019 _c.c **** ////////////////////////////////////////////////////////////////////////////////
 405:../reversi8_2019 _c.c **** // Proceso principal del juego
 406:../reversi8_2019 _c.c **** // Utiliza el tablero,
 407:../reversi8_2019 _c.c **** // y las direcciones en las que indica el jugador la fila y la columna
 408:../reversi8_2019 _c.c **** // y la señal de ready que indica que se han actualizado fila y columna
 409:../reversi8_2019 _c.c **** // tablero, fila, columna y ready son variables globales aunque deberían ser locales de reversi8,
 410:../reversi8_2019 _c.c **** // la razón es que al meterlas en la pila no las pone juntas, y así jugar es más complicado.
 411:../reversi8_2019 _c.c **** // en esta versión el humano lleva negras y la máquina blancas
 412:../reversi8_2019 _c.c **** // no se comprueba que el humano mueva correctamente.
 413:../reversi8_2019 _c.c **** // Sólo que la máquina realice un movimiento correcto.
 414:../reversi8_2019 _c.c **** void reversi8_c()
 415:../reversi8_2019 _c.c **** {
 2348              		.loc 1 415 0
 2349              		.cfi_startproc
 2350              		@ Function supports interworking.
 2351              		@ args = 0, pretend = 0, frame = 80
 2352              		@ frame_needed = 1, uses_anonymous_args = 0
 2353 0a0c 0DC0A0E1 		mov	ip, sp
 2354              	.LCFI9:
 2355              		.cfi_def_cfa_register 12
 2356 0a10 F0D82DE9 		stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}
 2357 0a14 04B04CE2 		sub	fp, ip, #4
 2358              		.cfi_offset 14, -8
 2359              		.cfi_offset 13, -12
 2360              		.cfi_offset 11, -16
 2361              		.cfi_offset 7, -20
 2362              		.cfi_offset 6, -24
 2363              		.cfi_offset 5, -28
 2364              		.cfi_offset 4, -32
 2365              	.LCFI10:
 2366              		.cfi_def_cfa 11, 4
 2367 0a18 50D04DE2 		sub	sp, sp, #80
 416:../reversi8_2019 _c.c **** 
 417:../reversi8_2019 _c.c **** 	 ////////////////////////////////////////////////////////////////////
 418:../reversi8_2019 _c.c **** 	 // Tablero candidatas: se usa para no explorar todas las posiciones del tablero
 419:../reversi8_2019 _c.c **** 	// sólo se exploran las que están alrededor de las fichas colocadas
 420:../reversi8_2019 _c.c **** 	 ////////////////////////////////////////////////////////////////////
 421:../reversi8_2019 _c.c **** 	char __attribute__ ((aligned (8))) candidatas[DIM][DIM] =
 2368              		.loc 1 421 0
 2369 0a1c 0010A0E3 		mov	r1, #0
 2370 0a20 4020A0E3 		mov	r2, #64
 2371              		.loc 1 421 0
 2372 0a24 6C004BE2 		sub	r0, fp, #108
 2373 0a28 FEFFFFEB 		bl	memset
 2374              	.LVL168:
 422:../reversi8_2019 _c.c ****     {
 423:../reversi8_2019 _c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 424:../reversi8_2019 _c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 425:../reversi8_2019 _c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 426:../reversi8_2019 _c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 427:../reversi8_2019 _c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 428:../reversi8_2019 _c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 429:../reversi8_2019 _c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 430:../reversi8_2019 _c.c ****         {NO,NO,NO,NO,NO,NO,NO,NO}
 431:../reversi8_2019 _c.c ****     };
 432:../reversi8_2019 _c.c **** 
 433:../reversi8_2019 _c.c **** 
 434:../reversi8_2019 _c.c ****     int done;     // la máquina ha conseguido mover o no
 435:../reversi8_2019 _c.c ****     int move = 0; // el humano ha conseguido mover o no
 436:../reversi8_2019 _c.c ****     int blancas, negras; // número de fichas de cada color
 437:../reversi8_2019 _c.c ****     int fin = 0;  // fin vale 1 si el humano no ha podido mover
 438:../reversi8_2019 _c.c ****                   // (ha introducido un valor de movimiento con algún 8)
 439:../reversi8_2019 _c.c ****                   // y luego la máquina tampoco puede
 440:../reversi8_2019 _c.c ****     char f, c;    // fila y columna elegidas por la máquina para su movimiento
 441:../reversi8_2019 _c.c **** 
 442:../reversi8_2019 _c.c ****     timer2_inicializar();
 2375              		.loc 1 442 0
 2376 0a2c FEFFFFEB 		bl	timer2_inicializar
 443:../reversi8_2019 _c.c ****     init_table(tablero, candidatas);
 2377              		.loc 1 443 0
 2378 0a30 08019FE5 		ldr	r0, .L125
 2379 0a34 6C104BE2 		sub	r1, fp, #108
 2380 0a38 FEFFFFEB 		bl	init_table
 2381 0a3c FC409FE5 		ldr	r4, .L125
 2382              	.LBB28:
 2383              	.LBB29:
 151:../reversi8_2019 _c.c ****     *ready = 0;  //una vez que pasemos el bucle volvemos a fijar ready a 0;
 2384              		.loc 1 151 0
 2385 0a40 0070A0E3 		mov	r7, #0
 149:../reversi8_2019 _c.c ****     while (*ready == 0) {};  // bucle de espera de respuestas hasta que el se modifique el valor de
 2386              		.loc 1 149 0
 2387 0a44 0450A0E1 		mov	r5, r4
 2388              	.LVL169:
 2389              	.L123:
 2390 0a48 4030D4E5 		ldrb	r3, [r4, #64]	@ zero_extendqisi2
 2391 0a4c 000053E3 		cmp	r3, #0
 2392 0a50 FCFFFF0A 		beq	.L123
 151:../reversi8_2019 _c.c ****     *ready = 0;  //una vez que pasemos el bucle volvemos a fijar ready a 0;
 2393              		.loc 1 151 0
 2394 0a54 4070C5E5 		strb	r7, [r5, #64]
 2395              	.LBE29:
 2396              	.LBE28:
 444:../reversi8_2019 _c.c **** 
 445:../reversi8_2019 _c.c ****     while (fin == 0)
 446:../reversi8_2019 _c.c ****     {
 447:../reversi8_2019 _c.c ****         move = 0;
 448:../reversi8_2019 _c.c ****         esperar_mov(&ready);
 449:../reversi8_2019 _c.c ****         // si la fila o columna son 8 asumimos que el jugador no puede mover
 450:../reversi8_2019 _c.c ****         if (((fila) != DIM) && ((columna) != DIM))
 2397              		.loc 1 450 0
 2398 0a58 4100D5E5 		ldrb	r0, [r5, #65]	@ zero_extendqisi2
 2399 0a5c 080050E3 		cmp	r0, #8
 2400 0a60 2100000A 		beq	.L120
 2401              		.loc 1 450 0 is_stmt 0 discriminator 1
 2402 0a64 4210D5E5 		ldrb	r1, [r5, #66]	@ zero_extendqisi2
 2403 0a68 080051E3 		cmp	r1, #8
 2404 0a6c 1E00000A 		beq	.L120
 451:../reversi8_2019 _c.c ****         {
 452:../reversi8_2019 _c.c ****             tablero[fila][columna] = FICHA_NEGRA;
 2405              		.loc 1 452 0 is_stmt 1
 2406 0a70 4160D5E5 		ldrb	r6, [r5, #65]	@ zero_extendqisi2
 2407 0a74 4230D5E5 		ldrb	r3, [r5, #66]	@ zero_extendqisi2
 2408 0a78 02C0A0E3 		mov	ip, #2
 2409 0a7c 86E183E0 		add	lr, r3, r6, asl #3
 453:../reversi8_2019 _c.c ****             actualizar_tablero(tablero, fila, columna, FICHA_NEGRA);
 2410              		.loc 1 453 0
 2411 0a80 4110D5E5 		ldrb	r1, [r5, #65]	@ zero_extendqisi2
 2412 0a84 0C30A0E1 		mov	r3, ip
 452:../reversi8_2019 _c.c ****             tablero[fila][columna] = FICHA_NEGRA;
 2413              		.loc 1 452 0
 2414 0a88 0EC0C5E7 		strb	ip, [r5, lr]
 2415              		.loc 1 453 0
 2416 0a8c 4220D5E5 		ldrb	r2, [r5, #66]	@ zero_extendqisi2
 2417 0a90 A8009FE5 		ldr	r0, .L125
 2418 0a94 FEFFFFEB 		bl	actualizar_tablero
 454:../reversi8_2019 _c.c ****             actualizar_candidatas(candidatas, fila, columna);
 2419              		.loc 1 454 0
 2420 0a98 4110D5E5 		ldrb	r1, [r5, #65]	@ zero_extendqisi2
 2421 0a9c 6C004BE2 		sub	r0, fp, #108
 2422 0aa0 4220D5E5 		ldrb	r2, [r5, #66]	@ zero_extendqisi2
 2423 0aa4 FEFFFFEB 		bl	actualizar_candidatas
 2424              	.LVL170:
 455:../reversi8_2019 _c.c ****             move = 1;
 456:../reversi8_2019 _c.c ****         }
 457:../reversi8_2019 _c.c **** 
 458:../reversi8_2019 _c.c ****         // escribe el movimiento en las variables globales fila columna
 459:../reversi8_2019 _c.c ****         done = elegir_mov(candidatas, tablero, &f, &c);
 2425              		.loc 1 459 0
 2426 0aa8 1D204BE2 		sub	r2, fp, #29
 2427 0aac 1E304BE2 		sub	r3, fp, #30
 2428 0ab0 6C004BE2 		sub	r0, fp, #108
 2429 0ab4 84109FE5 		ldr	r1, .L125
 2430 0ab8 FEFFFFEB 		bl	elegir_mov
 460:../reversi8_2019 _c.c ****         if (done == -1)
 2431              		.loc 1 460 0
 2432 0abc 010070E3 		cmn	r0, #1
 455:../reversi8_2019 _c.c ****             move = 1;
 2433              		.loc 1 455 0
 2434 0ac0 0160A0E3 		mov	r6, #1
 2435              	.LVL171:
 2436              		.loc 1 460 0
 2437 0ac4 1000001A 		bne	.L115
 2438              	.L124:
 461:../reversi8_2019 _c.c ****         {
 462:../reversi8_2019 _c.c ****             if (move == 0)
 2439              		.loc 1 462 0
 2440 0ac8 000056E3 		cmp	r6, #0
 2441 0acc DDFFFF1A 		bne	.L123
 2442              	.LVL172:
 463:../reversi8_2019 _c.c ****                 fin = 1;
 464:../reversi8_2019 _c.c ****         }
 465:../reversi8_2019 _c.c ****         else
 466:../reversi8_2019 _c.c ****         {
 467:../reversi8_2019 _c.c ****             tablero[f][c] = FICHA_BLANCA;
 468:../reversi8_2019 _c.c ****             actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 469:../reversi8_2019 _c.c ****             actualizar_candidatas(candidatas, f, c);
 470:../reversi8_2019 _c.c ****         }
 471:../reversi8_2019 _c.c ****     }
 472:../reversi8_2019 _c.c ****     contar(tablero, &blancas, &negras);
 2443              		.loc 1 472 0 discriminator 1
 2444 0ad0 68009FE5 		ldr	r0, .L125
 2445              	.LVL173:
 2446 0ad4 24104BE2 		sub	r1, fp, #36
 2447 0ad8 28204BE2 		sub	r2, fp, #40
 2448 0adc FEFFFFEB 		bl	contar
 473:../reversi8_2019 _c.c **** }
 2449              		.loc 1 473 0 discriminator 1
 2450 0ae0 1CD04BE2 		sub	sp, fp, #28
 2451 0ae4 F0689DE8 		ldmfd	sp, {r4, r5, r6, r7, fp, sp, lr}
 2452 0ae8 1EFF2FE1 		bx	lr
 2453              	.LVL174:
 2454              	.L120:
 459:../reversi8_2019 _c.c ****         done = elegir_mov(candidatas, tablero, &f, &c);
 2455              		.loc 1 459 0
 2456 0aec 1D204BE2 		sub	r2, fp, #29
 2457 0af0 1E304BE2 		sub	r3, fp, #30
 2458 0af4 6C004BE2 		sub	r0, fp, #108
 2459 0af8 40109FE5 		ldr	r1, .L125
 2460 0afc FEFFFFEB 		bl	elegir_mov
 460:../reversi8_2019 _c.c ****         if (done == -1)
 2461              		.loc 1 460 0
 2462 0b00 010070E3 		cmn	r0, #1
 447:../reversi8_2019 _c.c ****         move = 0;
 2463              		.loc 1 447 0
 2464 0b04 0060A0E3 		mov	r6, #0
 2465              	.LVL175:
 460:../reversi8_2019 _c.c ****         if (done == -1)
 2466              		.loc 1 460 0
 2467 0b08 EEFFFF0A 		beq	.L124
 2468              	.LVL176:
 2469              	.L115:
 467:../reversi8_2019 _c.c ****             tablero[f][c] = FICHA_BLANCA;
 2470              		.loc 1 467 0
 2471 0b0c 1D105BE5 		ldrb	r1, [fp, #-29]	@ zero_extendqisi2
 2472 0b10 1E205BE5 		ldrb	r2, [fp, #-30]	@ zero_extendqisi2
 2473 0b14 01C0A0E3 		mov	ip, #1
 2474 0b18 81E182E0 		add	lr, r2, r1, asl #3
 468:../reversi8_2019 _c.c ****             actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 2475              		.loc 1 468 0
 2476 0b1c 0C30A0E1 		mov	r3, ip
 467:../reversi8_2019 _c.c ****             tablero[f][c] = FICHA_BLANCA;
 2477              		.loc 1 467 0
 2478 0b20 0EC0C5E7 		strb	ip, [r5, lr]
 468:../reversi8_2019 _c.c ****             actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 2479              		.loc 1 468 0
 2480 0b24 14009FE5 		ldr	r0, .L125
 2481              	.LVL177:
 2482 0b28 FEFFFFEB 		bl	actualizar_tablero
 469:../reversi8_2019 _c.c ****             actualizar_candidatas(candidatas, f, c);
 2483              		.loc 1 469 0
 2484 0b2c 6C004BE2 		sub	r0, fp, #108
 2485 0b30 1D105BE5 		ldrb	r1, [fp, #-29]	@ zero_extendqisi2
 2486 0b34 1E205BE5 		ldrb	r2, [fp, #-30]	@ zero_extendqisi2
 2487 0b38 FEFFFFEB 		bl	actualizar_candidatas
 2488 0b3c C1FFFFEA 		b	.L123
 2489              	.L126:
 2490              		.align	2
 2491              	.L125:
 2492 0b40 00000000 		.word	.LANCHOR1
 2493              		.cfi_endproc
 2494              	.LFE9:
 2496              		.global	NO
 2497              		.global	SI
 2498              		.global	CASILLA_OCUPADA
 2499              		.global	vSF
 2500              		.global	vSC
 2501              		.section	.rodata
 2502              		.align	3
 2503              		.set	.LANCHOR0,. + 0
 2506              	vSF:
 2507 0000 FF       		.byte	-1
 2508 0001 FF       		.byte	-1
 2509 0002 00       		.byte	0
 2510 0003 01       		.byte	1
 2511 0004 01       		.byte	1
 2512 0005 01       		.byte	1
 2513 0006 00       		.byte	0
 2514 0007 FF       		.byte	-1
 2517              	vSC:
 2518 0008 00       		.byte	0
 2519 0009 01       		.byte	1
 2520 000a 01       		.byte	1
 2521 000b 01       		.byte	1
 2522 000c 00       		.byte	0
 2523 000d FF       		.byte	-1
 2524 000e FF       		.byte	-1
 2525 000f FF       		.byte	-1
 2528              	tabla_valor:
 2529 0010 08       		.byte	8
 2530 0011 02       		.byte	2
 2531 0012 07       		.byte	7
 2532 0013 03       		.byte	3
 2533 0014 03       		.byte	3
 2534 0015 07       		.byte	7
 2535 0016 02       		.byte	2
 2536 0017 08       		.byte	8
 2537 0018 02       		.byte	2
 2538 0019 01       		.byte	1
 2539 001a 04       		.byte	4
 2540 001b 04       		.byte	4
 2541 001c 04       		.byte	4
 2542 001d 04       		.byte	4
 2543 001e 01       		.byte	1
 2544 001f 02       		.byte	2
 2545 0020 07       		.byte	7
 2546 0021 04       		.byte	4
 2547 0022 06       		.byte	6
 2548 0023 05       		.byte	5
 2549 0024 05       		.byte	5
 2550 0025 06       		.byte	6
 2551 0026 04       		.byte	4
 2552 0027 07       		.byte	7
 2553 0028 03       		.byte	3
 2554 0029 04       		.byte	4
 2555 002a 05       		.byte	5
 2556 002b 00       		.byte	0
 2557 002c 00       		.byte	0
 2558 002d 05       		.byte	5
 2559 002e 04       		.byte	4
 2560 002f 03       		.byte	3
 2561 0030 03       		.byte	3
 2562 0031 04       		.byte	4
 2563 0032 05       		.byte	5
 2564 0033 00       		.byte	0
 2565 0034 00       		.byte	0
 2566 0035 05       		.byte	5
 2567 0036 04       		.byte	4
 2568 0037 03       		.byte	3
 2569 0038 07       		.byte	7
 2570 0039 04       		.byte	4
 2571 003a 06       		.byte	6
 2572 003b 05       		.byte	5
 2573 003c 05       		.byte	5
 2574 003d 06       		.byte	6
 2575 003e 04       		.byte	4
 2576 003f 07       		.byte	7
 2577 0040 02       		.byte	2
 2578 0041 01       		.byte	1
 2579 0042 04       		.byte	4
 2580 0043 04       		.byte	4
 2581 0044 04       		.byte	4
 2582 0045 04       		.byte	4
 2583 0046 01       		.byte	1
 2584 0047 02       		.byte	2
 2585 0048 08       		.byte	8
 2586 0049 02       		.byte	2
 2587 004a 07       		.byte	7
 2588 004b 03       		.byte	3
 2589 004c 03       		.byte	3
 2590 004d 07       		.byte	7
 2591 004e 02       		.byte	2
 2592 004f 08       		.byte	8
 2595              	NO:
 2596 0050 00       		.space	1
 2599              	SI:
 2600 0051 01       		.byte	1
 2603              	CASILLA_OCUPADA:
 2604 0052 02       		.byte	2
 2605 0053 00000000 		.bss
 2605      00
 2606              		.align	3
 2607              		.set	.LANCHOR1,. + 0
 2610              	tablero:
 2611 0000 00000000 		.space	64
 2611      00000000 
 2611      00000000 
 2611      00000000 
 2611      00000000 
 2614              	ready:
 2615 0040 00       		.space	1
 2618              	fila:
 2619 0041 00       		.space	1
 2622              	columna:
 2623 0042 00       		.space	1
 2624 0043 00000000 		.text
 2624      00
 2625              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 reversi8_2019 _c.c
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:973    .text:00000000 $a
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:976    .text:00000000 init_table
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:1211   .text:000001ac esperar_mov
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:1236   .text:000001c4 ficha_valida
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:1278   .text:000001fc patron_volteo
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:1426   .text:000002c4 voltear
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:1530   .text:00000378 actualizar_tablero
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:1699   .text:000004b0 $d
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:1703   .text:000004b4 $a
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:1706   .text:000004b4 elegir_mov
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:1971   .text:00000700 $d
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:1975   .text:00000704 $a
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:1978   .text:00000704 contar
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2213   .text:00000900 actualizar_candidatas
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2346   .text:00000a0c reversi8_c
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2492   .text:00000b40 $d
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2595   .rodata:00000050 NO
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2599   .rodata:00000051 SI
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2603   .rodata:00000052 CASILLA_OCUPADA
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2506   .rodata:00000000 vSF
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2517   .rodata:00000008 vSC
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2502   .rodata:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2528   .rodata:00000010 tabla_valor
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2606   .bss:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2610   .bss:00000000 tablero
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2614   .bss:00000040 ready
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2618   .bss:00000041 fila
C:\Users\guest\AppData\Local\Temp\ccSXj35c.s:2622   .bss:00000042 columna
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
memset
timer2_inicializar
