   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"reversi8_2019.c"
  21              	.Ltext0:
  22              		.file 1 "../reversi8_2019.c"
 981              		.align	2
 982              	timer2_num_int:
 983 0000 00000000 		.space	4
 984              		.section	.rodata
 985              		.align	3
 988              	tabla_valor:
 989 0000 08       		.byte	8
 990 0001 02       		.byte	2
 991 0002 07       		.byte	7
 992 0003 03       		.byte	3
 993 0004 03       		.byte	3
 994 0005 07       		.byte	7
 995 0006 02       		.byte	2
 996 0007 08       		.byte	8
 997 0008 02       		.byte	2
 998 0009 01       		.byte	1
 999 000a 04       		.byte	4
 1000 000b 04       		.byte	4
 1001 000c 04       		.byte	4
 1002 000d 04       		.byte	4
 1003 000e 01       		.byte	1
 1004 000f 02       		.byte	2
 1005 0010 07       		.byte	7
 1006 0011 04       		.byte	4
 1007 0012 06       		.byte	6
 1008 0013 05       		.byte	5
 1009 0014 05       		.byte	5
 1010 0015 06       		.byte	6
 1011 0016 04       		.byte	4
 1012 0017 07       		.byte	7
 1013 0018 03       		.byte	3
 1014 0019 04       		.byte	4
 1015 001a 05       		.byte	5
 1016 001b 00       		.byte	0
 1017 001c 00       		.byte	0
 1018 001d 05       		.byte	5
 1019 001e 04       		.byte	4
 1020 001f 03       		.byte	3
 1021 0020 03       		.byte	3
 1022 0021 04       		.byte	4
 1023 0022 05       		.byte	5
 1024 0023 00       		.byte	0
 1025 0024 00       		.byte	0
 1026 0025 05       		.byte	5
 1027 0026 04       		.byte	4
 1028 0027 03       		.byte	3
 1029 0028 07       		.byte	7
 1030 0029 04       		.byte	4
 1031 002a 06       		.byte	6
 1032 002b 05       		.byte	5
 1033 002c 05       		.byte	5
 1034 002d 06       		.byte	6
 1035 002e 04       		.byte	4
 1036 002f 07       		.byte	7
 1037 0030 02       		.byte	2
 1038 0031 01       		.byte	1
 1039 0032 04       		.byte	4
 1040 0033 04       		.byte	4
 1041 0034 04       		.byte	4
 1042 0035 04       		.byte	4
 1043 0036 01       		.byte	1
 1044 0037 02       		.byte	2
 1045 0038 08       		.byte	8
 1046 0039 02       		.byte	2
 1047 003a 07       		.byte	7
 1048 003b 03       		.byte	3
 1049 003c 03       		.byte	3
 1050 003d 07       		.byte	7
 1051 003e 02       		.byte	2
 1052 003f 08       		.byte	8
 1053              		.global	vSF
 1054              		.align	2
 1057              	vSF:
 1058 0040 FF       		.byte	-1
 1059 0041 FF       		.byte	-1
 1060 0042 00       		.byte	0
 1061 0043 01       		.byte	1
 1062 0044 01       		.byte	1
 1063 0045 01       		.byte	1
 1064 0046 00       		.byte	0
 1065 0047 FF       		.byte	-1
 1066              		.global	vSC
 1067              		.align	2
 1070              	vSC:
 1071 0048 00       		.byte	0
 1072 0049 01       		.byte	1
 1073 004a 01       		.byte	1
 1074 004b 01       		.byte	1
 1075 004c 00       		.byte	0
 1076 004d FF       		.byte	-1
 1077 004e FF       		.byte	-1
 1078 004f FF       		.byte	-1
 1079              		.bss
 1080 0004 00000000 		.align	3
 1081              	tablero:
 1082 0008 00000000 		.space	64
 1082      00000000 
 1082      00000000 
 1082      00000000 
 1082      00000000 
 1083              		.align	3
 1084              	candidatas:
 1085 0048 00000000 		.space	64
 1085      00000000 
 1085      00000000 
 1085      00000000 
 1085      00000000 
 1086              		.comm	done,4,4
 1087              		.global	move
 1088              		.align	2
 1091              	move:
 1092 0088 00000000 		.space	4
 1093              		.comm	blancas,4,4
 1094              		.comm	negras,4,4
 1095              		.global	fin
 1096              		.align	2
 1099              	fin:
 1100 008c 00000000 		.space	4
 1101              		.comm	f,1,1
 1102              		.comm	c,1,1
 1103              	fila:
 1104 0090 00       		.space	1
 1105              	columna:
 1106 0091 00       		.space	1
 1107              	ready:
 1108 0092 00       		.space	1
 1109 0093 00000000 		.text
 1109      00
 1110              		.align	2
 1111              		.global	reversi_procesar
 1113              	reversi_procesar:
 1114              	.LFB0:
   1:../reversi8_2019.c **** /*********************************************************************************************
   2:../reversi8_2019.c **** * Fichero:	reversi8_2019.c
   3:../reversi8_2019.c **** * Autor:	Profesores de la asignatura
   4:../reversi8_2019.c **** 			Fernando Peña Bes (NIA: 756012)
   5:../reversi8_2019.c **** 			Pedro José Pérez García (NIA: 756642)
   6:../reversi8_2019.c **** * Descrip:	Implementación del juego reversi8.
   7:../reversi8_2019.c **** * Version:
   8:../reversi8_2019.c **** *********************************************************************************************/
   9:../reversi8_2019.c **** #include "reversi8_2019.h"
  10:../reversi8_2019.c **** 
  11:../reversi8_2019.c **** // Tamaño del tablero
  12:../reversi8_2019.c **** enum { DIM=8 };
  13:../reversi8_2019.c **** 
  14:../reversi8_2019.c **** // Valores que puede devolver la función patron_volteo())
  15:../reversi8_2019.c **** enum {
  16:../reversi8_2019.c **** 	NO_HAY_PATRON = 0,
  17:../reversi8_2019.c ****   PATRON_ENCONTRADO = 1
  18:../reversi8_2019.c **** };
  19:../reversi8_2019.c **** 
  20:../reversi8_2019.c **** // Estados de las casillas del tablero
  21:../reversi8_2019.c **** // deberia ser enum, lo dejamos como const para usar char...
  22:../reversi8_2019.c **** //const char CASILLA_VACIA = 0;
  23:../reversi8_2019.c **** //const char FICHA_BLANCA  = 1;
  24:../reversi8_2019.c **** //const char FICHA_NEGRA   = 2;
  25:../reversi8_2019.c **** 
  26:../reversi8_2019.c **** enum {
  27:../reversi8_2019.c **** 	CASILLA_VACIA = 0,
  28:../reversi8_2019.c **** 	FICHA_BLANCA = 1,
  29:../reversi8_2019.c **** 	FICHA_NEGRA = 2
  30:../reversi8_2019.c **** };
  31:../reversi8_2019.c **** 
  32:../reversi8_2019.c **** // candidatas: indica las posiciones a explorar
  33:../reversi8_2019.c **** // Se usa para no explorar todo el tablero innecesariamente
  34:../reversi8_2019.c **** // Sus posibles valores son NO, SI, CASILLA_OCUPADA
  35:../reversi8_2019.c **** enum {NO=0,SI=1,CASILLA_OCUPADA=2};
  36:../reversi8_2019.c **** /*
  37:../reversi8_2019.c **** const char  NO              = 0;
  38:../reversi8_2019.c **** const char  SI              = 1;
  39:../reversi8_2019.c **** const char  CASILLA_OCUPADA = 2;*/
  40:../reversi8_2019.c **** 
  41:../reversi8_2019.c **** /////////////////////////////////////////////////////////////////////////////
  42:../reversi8_2019.c **** // TABLAS AUXILIARES
  43:../reversi8_2019.c **** // declaramos las siguientes tablas como globales para que sean más fáciles visualizarlas en el sim
  44:../reversi8_2019.c **** // __attribute__ ((aligned (8))): specifies a minimum alignment for the variable or structure field
  45:../reversi8_2019.c **** 
  46:../reversi8_2019.c **** static const char __attribute__ ((aligned (8))) tabla_valor[DIM][DIM] =
  47:../reversi8_2019.c **** {
  48:../reversi8_2019.c ****     {8,2,7,3,3,7,2,8},
  49:../reversi8_2019.c ****     {2,1,4,4,4,4,1,2},
  50:../reversi8_2019.c ****     {7,4,6,5,5,6,4,7},
  51:../reversi8_2019.c ****     {3,4,5,0,0,5,4,3},
  52:../reversi8_2019.c ****     {3,4,5,0,0,5,4,3},
  53:../reversi8_2019.c ****     {7,4,6,5,5,6,4,7},
  54:../reversi8_2019.c ****     {2,1,4,4,4,4,1,2},
  55:../reversi8_2019.c ****     {8,2,7,3,3,7,2,8}
  56:../reversi8_2019.c **** };
  57:../reversi8_2019.c **** 
  58:../reversi8_2019.c **** 
  59:../reversi8_2019.c **** // Tabla de direcciones. Contiene los desplazamientos de las 8 direcciones posibles
  60:../reversi8_2019.c **** const char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
  61:../reversi8_2019.c **** const char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
  62:../reversi8_2019.c **** 
  63:../reversi8_2019.c **** //////////////////////////////////////////////////////////////////////////////////////
  64:../reversi8_2019.c **** // Variables globales que no deberían serlo
  65:../reversi8_2019.c **** // tablero, fila, columna y ready son varibles que se deberían definir como locales dentro de rever
  66:../reversi8_2019.c **** // Sin embargo, las hemos definido como globales para que sea más fácil visualizar el tablero y las
  67:../reversi8_2019.c **** //////////////////////////////////////////////////////////////////////////////////////
  68:../reversi8_2019.c **** 
  69:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////
  70:../reversi8_2019.c **** // Tablero sin inicializar
  71:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////
  72:../reversi8_2019.c **** static char __attribute__ ((aligned (8))) tablero[DIM][DIM] = {
  73:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  74:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  75:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  76:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  77:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  78:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  79:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  80:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  81:../reversi8_2019.c **** 	    };
  82:../reversi8_2019.c **** 
  83:../reversi8_2019.c **** 	static char __attribute__ ((aligned (8))) candidatas[DIM][DIM] =
  84:../reversi8_2019.c ****     {
  85:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  86:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  87:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  88:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  89:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  90:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  91:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  92:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO}
  93:../reversi8_2019.c ****     };
  94:../reversi8_2019.c **** 
  95:../reversi8_2019.c **** 	int done;     // la máquina ha conseguido mover o no
  96:../reversi8_2019.c ****     int move = 0; // el humano ha conseguido mover o no
  97:../reversi8_2019.c ****     int blancas, negras; // número de fichas de cada color
  98:../reversi8_2019.c ****     volatile int fin = 0;  // fin vale 1 si el humano no ha podido mover
  99:../reversi8_2019.c ****                   // (ha introducido un valor de movimiento con algún 8)
 100:../reversi8_2019.c ****                   // y luego la máquina tampoco puede
 101:../reversi8_2019.c ****     char f, c;    // fila y columna elegidas por la máquina para su movimiento
 102:../reversi8_2019.c **** 
 103:../reversi8_2019.c ****   ////////////////////////////////////////////////////////////////////
 104:../reversi8_2019.c ****      // VARIABLES PARA INTERACCIONAR CON LA ENTRADA SALIDA
 105:../reversi8_2019.c ****      // Pregunta: ¿hay que hacer algo con ellas para que esto funcione bien?
 106:../reversi8_2019.c ****      // (por ejemplo añadir alguna palabra clave para garantizar que la sincronización a través de 
 107:../reversi8_2019.c **** static volatile char fila=0, columna=0, ready=0;
 108:../reversi8_2019.c **** 
 109:../reversi8_2019.c **** 
 110:../reversi8_2019.c **** void reversi_procesar(char f, char c)
 111:../reversi8_2019.c **** {
 1115              		.loc 1 111 0
 1116              		.cfi_startproc
 1117              		@ Function supports interworking.
 1118              		@ args = 0, pretend = 0, frame = 8
 1119              		@ frame_needed = 1, uses_anonymous_args = 0
 1120 0000 0DC0A0E1 		mov	ip, sp
 1121              	.LCFI0:
 1122              		.cfi_def_cfa_register 12
 1123 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1124 0008 04B04CE2 		sub	fp, ip, #4
 1125              		.cfi_offset 14, -8
 1126              		.cfi_offset 13, -12
 1127              		.cfi_offset 11, -16
 1128              	.LCFI1:
 1129              		.cfi_def_cfa 11, 4
 1130 000c 08D04DE2 		sub	sp, sp, #8
 1131 0010 0020A0E1 		mov	r2, r0
 1132 0014 0130A0E1 		mov	r3, r1
 1133 0018 0D204BE5 		strb	r2, [fp, #-13]
 1134 001c 0E304BE5 		strb	r3, [fp, #-14]
 112:../reversi8_2019.c **** 	fila = f;
 1135              		.loc 1 112 0
 1136 0020 2C309FE5 		ldr	r3, .L2
 1137 0024 0D205BE5 		ldrb	r2, [fp, #-13]
 1138 0028 0020C3E5 		strb	r2, [r3, #0]
 113:../reversi8_2019.c **** 	columna = c;
 1139              		.loc 1 113 0
 1140 002c 24309FE5 		ldr	r3, .L2+4
 1141 0030 0E205BE5 		ldrb	r2, [fp, #-14]
 1142 0034 0020C3E5 		strb	r2, [r3, #0]
 114:../reversi8_2019.c **** 	ready = 1;
 1143              		.loc 1 114 0
 1144 0038 1C309FE5 		ldr	r3, .L2+8
 1145 003c 0120A0E3 		mov	r2, #1
 1146 0040 0020C3E5 		strb	r2, [r3, #0]
 115:../reversi8_2019.c **** 	reversi8();
 1147              		.loc 1 115 0
 1148 0044 FEFFFFEB 		bl	reversi8
 116:../reversi8_2019.c **** }
 1149              		.loc 1 116 0
 1150 0048 0CD04BE2 		sub	sp, fp, #12
 1151 004c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1152 0050 1EFF2FE1 		bx	lr
 1153              	.L3:
 1154              		.align	2
 1155              	.L2:
 1156 0054 90000000 		.word	fila
 1157 0058 91000000 		.word	columna
 1158 005c 92000000 		.word	ready
 1159              		.cfi_endproc
 1160              	.LFE0:
 1162              		.align	2
 1163              		.global	init_table
 1165              	init_table:
 1166              	.LFB1:
 117:../reversi8_2019.c **** 
 118:../reversi8_2019.c **** 
 119:../reversi8_2019.c **** 
 120:../reversi8_2019.c **** //extern int patron_volteo_arm_c(char tablero[][DIM], int *longitud,char FA, char CA, char SF, char
 121:../reversi8_2019.c **** extern int patron_volteo_arm_arm(char tablero[][DIM], int *longitud,char FA, char CA, char SF, char
 122:../reversi8_2019.c **** //extern int patron_volteo_arm_arm_opt(char tablero[][DIM], int *longitud,char FA, char CA, char SF
 123:../reversi8_2019.c **** 
 124:../reversi8_2019.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 125:../reversi8_2019.c **** // 0 indica CASILLA_VACIA, 1 indica FICHA_BLANCA y 2 indica FICHA_NEGRA
 126:../reversi8_2019.c **** // pone el tablero a cero y luego coloca las fichas centrales.
 127:../reversi8_2019.c **** void init_table(char tablero[][DIM], char candidatas[][DIM])
 128:../reversi8_2019.c **** {
 1167              		.loc 1 128 0
 1168              		.cfi_startproc
 1169              		@ Function supports interworking.
 1170              		@ args = 0, pretend = 0, frame = 16
 1171              		@ frame_needed = 1, uses_anonymous_args = 0
 1172 0060 0DC0A0E1 		mov	ip, sp
 1173              	.LCFI2:
 1174              		.cfi_def_cfa_register 12
 1175 0064 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1176 0068 04B04CE2 		sub	fp, ip, #4
 1177              		.cfi_offset 14, -8
 1178              		.cfi_offset 13, -12
 1179              		.cfi_offset 11, -16
 1180              	.LCFI3:
 1181              		.cfi_def_cfa 11, 4
 1182 006c 10D04DE2 		sub	sp, sp, #16
 1183 0070 18000BE5 		str	r0, [fp, #-24]
 1184 0074 1C100BE5 		str	r1, [fp, #-28]
 129:../reversi8_2019.c ****     int i, j;
 130:../reversi8_2019.c **** 
 131:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1185              		.loc 1 131 0
 1186 0078 0030A0E3 		mov	r3, #0
 1187 007c 10300BE5 		str	r3, [fp, #-16]
 1188 0080 130000EA 		b	.L5
 1189              	.L8:
 132:../reversi8_2019.c ****     {
 133:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1190              		.loc 1 133 0
 1191 0084 0030A0E3 		mov	r3, #0
 1192 0088 14300BE5 		str	r3, [fp, #-20]
 1193 008c 0A0000EA 		b	.L6
 1194              	.L7:
 134:../reversi8_2019.c ****             tablero[i][j] = CASILLA_VACIA;
 1195              		.loc 1 134 0 discriminator 2
 1196 0090 10301BE5 		ldr	r3, [fp, #-16]
 1197 0094 8331A0E1 		mov	r3, r3, asl #3
 1198 0098 18201BE5 		ldr	r2, [fp, #-24]
 1199 009c 032082E0 		add	r2, r2, r3
 1200 00a0 14301BE5 		ldr	r3, [fp, #-20]
 1201 00a4 033082E0 		add	r3, r2, r3
 1202 00a8 0020A0E3 		mov	r2, #0
 1203 00ac 0020C3E5 		strb	r2, [r3, #0]
 133:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1204              		.loc 1 133 0 discriminator 2
 1205 00b0 14301BE5 		ldr	r3, [fp, #-20]
 1206 00b4 013083E2 		add	r3, r3, #1
 1207 00b8 14300BE5 		str	r3, [fp, #-20]
 1208              	.L6:
 133:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1209              		.loc 1 133 0 is_stmt 0 discriminator 1
 1210 00bc 14301BE5 		ldr	r3, [fp, #-20]
 1211 00c0 070053E3 		cmp	r3, #7
 1212 00c4 F1FFFFDA 		ble	.L7
 131:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1213              		.loc 1 131 0 is_stmt 1
 1214 00c8 10301BE5 		ldr	r3, [fp, #-16]
 1215 00cc 013083E2 		add	r3, r3, #1
 1216 00d0 10300BE5 		str	r3, [fp, #-16]
 1217              	.L5:
 131:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1218              		.loc 1 131 0 is_stmt 0 discriminator 1
 1219 00d4 10301BE5 		ldr	r3, [fp, #-16]
 1220 00d8 070053E3 		cmp	r3, #7
 1221 00dc E8FFFFDA 		ble	.L8
 135:../reversi8_2019.c ****     }
 136:../reversi8_2019.c **** #if 0
 137:../reversi8_2019.c ****     for (i = 3; i < 5; ++i) {
 138:../reversi8_2019.c **** 	for(j = 3; j < 5; ++j) {
 139:../reversi8_2019.c **** 	    tablero[i][j] = i == j ? FICHA_BLANCA : FICHA_NEGRA;
 140:../reversi8_2019.c **** 	}
 141:../reversi8_2019.c ****     }
 142:../reversi8_2019.c **** 
 143:../reversi8_2019.c ****     for (i = 2; i < 6; ++i) {
 144:../reversi8_2019.c **** 	for (j = 2; j < 6; ++j) {
 145:../reversi8_2019.c **** 	    if((i>=3) && (i < 5) && (j>=3) && (j<5)) {
 146:../reversi8_2019.c **** 		candidatas[i][j] = CASILLA_OCUPADA;
 147:../reversi8_2019.c **** 	    } else {
 148:../reversi8_2019.c **** 		candidatas[i][j] = SI; //CASILLA_LIBRE;
 149:../reversi8_2019.c **** 	    }
 150:../reversi8_2019.c **** 	}
 151:../reversi8_2019.c ****     }
 152:../reversi8_2019.c **** #endif
 153:../reversi8_2019.c ****     // arriba hay versión alternativa
 154:../reversi8_2019.c ****     tablero[3][3] = FICHA_BLANCA;
 1222              		.loc 1 154 0 is_stmt 1
 1223 00e0 18301BE5 		ldr	r3, [fp, #-24]
 1224 00e4 183083E2 		add	r3, r3, #24
 1225 00e8 0120A0E3 		mov	r2, #1
 1226 00ec 0320C3E5 		strb	r2, [r3, #3]
 155:../reversi8_2019.c ****     tablero[4][4] = FICHA_BLANCA;
 1227              		.loc 1 155 0
 1228 00f0 18301BE5 		ldr	r3, [fp, #-24]
 1229 00f4 203083E2 		add	r3, r3, #32
 1230 00f8 0120A0E3 		mov	r2, #1
 1231 00fc 0420C3E5 		strb	r2, [r3, #4]
 156:../reversi8_2019.c ****     tablero[3][4] = FICHA_NEGRA;
 1232              		.loc 1 156 0
 1233 0100 18301BE5 		ldr	r3, [fp, #-24]
 1234 0104 183083E2 		add	r3, r3, #24
 1235 0108 0220A0E3 		mov	r2, #2
 1236 010c 0420C3E5 		strb	r2, [r3, #4]
 157:../reversi8_2019.c ****     tablero[4][3] = FICHA_NEGRA;
 1237              		.loc 1 157 0
 1238 0110 18301BE5 		ldr	r3, [fp, #-24]
 1239 0114 203083E2 		add	r3, r3, #32
 1240 0118 0220A0E3 		mov	r2, #2
 1241 011c 0320C3E5 		strb	r2, [r3, #3]
 158:../reversi8_2019.c **** 
 159:../reversi8_2019.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 1242              		.loc 1 159 0
 1243 0120 1C301BE5 		ldr	r3, [fp, #-28]
 1244 0124 183083E2 		add	r3, r3, #24
 1245 0128 0220A0E3 		mov	r2, #2
 1246 012c 0320C3E5 		strb	r2, [r3, #3]
 160:../reversi8_2019.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 1247              		.loc 1 160 0
 1248 0130 1C301BE5 		ldr	r3, [fp, #-28]
 1249 0134 203083E2 		add	r3, r3, #32
 1250 0138 0220A0E3 		mov	r2, #2
 1251 013c 0420C3E5 		strb	r2, [r3, #4]
 161:../reversi8_2019.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 1252              		.loc 1 161 0
 1253 0140 1C301BE5 		ldr	r3, [fp, #-28]
 1254 0144 183083E2 		add	r3, r3, #24
 1255 0148 0220A0E3 		mov	r2, #2
 1256 014c 0420C3E5 		strb	r2, [r3, #4]
 162:../reversi8_2019.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 1257              		.loc 1 162 0
 1258 0150 1C301BE5 		ldr	r3, [fp, #-28]
 1259 0154 203083E2 		add	r3, r3, #32
 1260 0158 0220A0E3 		mov	r2, #2
 1261 015c 0320C3E5 		strb	r2, [r3, #3]
 163:../reversi8_2019.c **** 
 164:../reversi8_2019.c ****     // casillas a explorar:
 165:../reversi8_2019.c ****     candidatas[2][2] = SI;
 1262              		.loc 1 165 0
 1263 0160 1C301BE5 		ldr	r3, [fp, #-28]
 1264 0164 103083E2 		add	r3, r3, #16
 1265 0168 0120A0E3 		mov	r2, #1
 1266 016c 0220C3E5 		strb	r2, [r3, #2]
 166:../reversi8_2019.c ****     candidatas[2][3] = SI;
 1267              		.loc 1 166 0
 1268 0170 1C301BE5 		ldr	r3, [fp, #-28]
 1269 0174 103083E2 		add	r3, r3, #16
 1270 0178 0120A0E3 		mov	r2, #1
 1271 017c 0320C3E5 		strb	r2, [r3, #3]
 167:../reversi8_2019.c ****     candidatas[2][4] = SI;
 1272              		.loc 1 167 0
 1273 0180 1C301BE5 		ldr	r3, [fp, #-28]
 1274 0184 103083E2 		add	r3, r3, #16
 1275 0188 0120A0E3 		mov	r2, #1
 1276 018c 0420C3E5 		strb	r2, [r3, #4]
 168:../reversi8_2019.c ****     candidatas[2][5] = SI;
 1277              		.loc 1 168 0
 1278 0190 1C301BE5 		ldr	r3, [fp, #-28]
 1279 0194 103083E2 		add	r3, r3, #16
 1280 0198 0120A0E3 		mov	r2, #1
 1281 019c 0520C3E5 		strb	r2, [r3, #5]
 169:../reversi8_2019.c ****     candidatas[3][2] = SI;
 1282              		.loc 1 169 0
 1283 01a0 1C301BE5 		ldr	r3, [fp, #-28]
 1284 01a4 183083E2 		add	r3, r3, #24
 1285 01a8 0120A0E3 		mov	r2, #1
 1286 01ac 0220C3E5 		strb	r2, [r3, #2]
 170:../reversi8_2019.c ****     candidatas[3][5] = SI;
 1287              		.loc 1 170 0
 1288 01b0 1C301BE5 		ldr	r3, [fp, #-28]
 1289 01b4 183083E2 		add	r3, r3, #24
 1290 01b8 0120A0E3 		mov	r2, #1
 1291 01bc 0520C3E5 		strb	r2, [r3, #5]
 171:../reversi8_2019.c ****     candidatas[4][2] = SI;
 1292              		.loc 1 171 0
 1293 01c0 1C301BE5 		ldr	r3, [fp, #-28]
 1294 01c4 203083E2 		add	r3, r3, #32
 1295 01c8 0120A0E3 		mov	r2, #1
 1296 01cc 0220C3E5 		strb	r2, [r3, #2]
 172:../reversi8_2019.c ****     candidatas[4][5] = SI;
 1297              		.loc 1 172 0
 1298 01d0 1C301BE5 		ldr	r3, [fp, #-28]
 1299 01d4 203083E2 		add	r3, r3, #32
 1300 01d8 0120A0E3 		mov	r2, #1
 1301 01dc 0520C3E5 		strb	r2, [r3, #5]
 173:../reversi8_2019.c ****     candidatas[5][2] = SI;
 1302              		.loc 1 173 0
 1303 01e0 1C301BE5 		ldr	r3, [fp, #-28]
 1304 01e4 283083E2 		add	r3, r3, #40
 1305 01e8 0120A0E3 		mov	r2, #1
 1306 01ec 0220C3E5 		strb	r2, [r3, #2]
 174:../reversi8_2019.c ****     candidatas[5][3] = SI;
 1307              		.loc 1 174 0
 1308 01f0 1C301BE5 		ldr	r3, [fp, #-28]
 1309 01f4 283083E2 		add	r3, r3, #40
 1310 01f8 0120A0E3 		mov	r2, #1
 1311 01fc 0320C3E5 		strb	r2, [r3, #3]
 175:../reversi8_2019.c ****     candidatas[5][4] = SI;
 1312              		.loc 1 175 0
 1313 0200 1C301BE5 		ldr	r3, [fp, #-28]
 1314 0204 283083E2 		add	r3, r3, #40
 1315 0208 0120A0E3 		mov	r2, #1
 1316 020c 0420C3E5 		strb	r2, [r3, #4]
 176:../reversi8_2019.c ****     candidatas[5][5] = SI;
 1317              		.loc 1 176 0
 1318 0210 1C301BE5 		ldr	r3, [fp, #-28]
 1319 0214 283083E2 		add	r3, r3, #40
 1320 0218 0120A0E3 		mov	r2, #1
 1321 021c 0520C3E5 		strb	r2, [r3, #5]
 177:../reversi8_2019.c **** }
 1322              		.loc 1 177 0
 1323 0220 0CD04BE2 		sub	sp, fp, #12
 1324 0224 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1325 0228 1EFF2FE1 		bx	lr
 1326              		.cfi_endproc
 1327              	.LFE1:
 1329              		.align	2
 1330              		.global	ficha_valida
 1332              	ficha_valida:
 1333              	.LFB2:
 178:../reversi8_2019.c **** 
 179:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 180:../reversi8_2019.c **** // Espera a que ready valga 1.
 181:../reversi8_2019.c **** // CUIDADO: si el compilador coloca esta variable en un registro, no funcionará.
 182:../reversi8_2019.c **** // Hay que definirla como "volatile" para forzar a que antes de cada uso la cargue de memoria
 183:../reversi8_2019.c **** 
 184:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 185:../reversi8_2019.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 186:../reversi8_2019.c **** // IMPORTANTE: AL SUSTITUIR FICHA_VALIDA() Y PATRON_VOLTEO()
 187:../reversi8_2019.c **** // POR RUTINAS EN ENSAMBLADOR HAY QUE RESPETAR LA MODULARIDAD.
 188:../reversi8_2019.c **** // DEBEN SEGUIR SIENDO LLAMADAS A FUNCIONES Y DEBEN CUMPLIR CON EL ATPCS
 189:../reversi8_2019.c **** // (VER TRANSPARENCIAS Y MATERIAL DE PRACTICAS):
 190:../reversi8_2019.c **** //  - DEBEN PASAR LOS PARAMETROS POR LOS REGISTROS CORRESPONDIENTES
 191:../reversi8_2019.c **** //  - GUARDAR EN PILA SOLO LOS REGISTROS QUE TOCAN
 192:../reversi8_2019.c **** //  - CREAR UN MARCO DE PILA TAL Y COMO MUESTRAN LAS TRANSPARENCIAS
 193:../reversi8_2019.c **** //    DE LA ASIGNATURA (CON EL PC, FP, LR,....)
 194:../reversi8_2019.c **** //  - EN EL CASO DE LAS VARIABLES LOCALES, SOLO HAY QUE APILARLAS
 195:../reversi8_2019.c **** //    SI NO SE PUEDEN COLOCAR EN UN REGISTRO.
 196:../reversi8_2019.c **** //    SI SE COLOCAN EN UN REGISTRO NO HACE FALTA
 197:../reversi8_2019.c **** //    NI GUARDARLAS EN PILA NI RESERVAR UN ESPACIO EN LA PILA PARA ELLAS
 198:../reversi8_2019.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 199:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 200:../reversi8_2019.c **** // Devuelve el contenido de la posición indicadas por la fila y columna actual.
 201:../reversi8_2019.c **** // Además informa si la posición es válida y contiene alguna ficha.
 202:../reversi8_2019.c **** // Esto lo hace por referencia (en *posicion_valida)
 203:../reversi8_2019.c **** // Si devuelve un 0 no es válida o está vacia.
 204:../reversi8_2019.c **** char ficha_valida(char tablero[][DIM], char f, char c, int *posicion_valida)
 205:../reversi8_2019.c **** {
 1334              		.loc 1 205 0
 1335              		.cfi_startproc
 1336              		@ Function supports interworking.
 1337              		@ args = 0, pretend = 0, frame = 24
 1338              		@ frame_needed = 1, uses_anonymous_args = 0
 1339 022c 0DC0A0E1 		mov	ip, sp
 1340              	.LCFI4:
 1341              		.cfi_def_cfa_register 12
 1342 0230 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1343 0234 04B04CE2 		sub	fp, ip, #4
 1344              		.cfi_offset 14, -8
 1345              		.cfi_offset 13, -12
 1346              		.cfi_offset 11, -16
 1347              	.LCFI5:
 1348              		.cfi_def_cfa 11, 4
 1349 0238 18D04DE2 		sub	sp, sp, #24
 1350 023c 18000BE5 		str	r0, [fp, #-24]
 1351 0240 20300BE5 		str	r3, [fp, #-32]
 1352 0244 0130A0E1 		mov	r3, r1
 1353 0248 19304BE5 		strb	r3, [fp, #-25]
 1354 024c 0230A0E1 		mov	r3, r2
 1355 0250 1A304BE5 		strb	r3, [fp, #-26]
 206:../reversi8_2019.c ****     char ficha;
 207:../reversi8_2019.c **** 
 208:../reversi8_2019.c ****     // ficha = tablero[f][c];
 209:../reversi8_2019.c ****     // no puede accederse a tablero[f][c]
 210:../reversi8_2019.c ****     // ya que algún índice puede ser negativo
 211:../reversi8_2019.c **** 
 212:../reversi8_2019.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1356              		.loc 1 212 0
 1357 0254 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1358 0258 070053E3 		cmp	r3, #7
 1359 025c 1500008A 		bhi	.L10
 1360              		.loc 1 212 0 is_stmt 0 discriminator 1
 1361 0260 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1362 0264 070053E3 		cmp	r3, #7
 1363 0268 1200008A 		bhi	.L10
 1364 026c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1365 0270 8331A0E1 		mov	r3, r3, asl #3
 1366 0274 18201BE5 		ldr	r2, [fp, #-24]
 1367 0278 032082E0 		add	r2, r2, r3
 1368 027c 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1369 0280 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1370 0284 000053E3 		cmp	r3, #0
 1371 0288 0A00000A 		beq	.L10
 213:../reversi8_2019.c ****     {
 214:../reversi8_2019.c ****         *posicion_valida = 1;
 1372              		.loc 1 214 0 is_stmt 1
 1373 028c 20301BE5 		ldr	r3, [fp, #-32]
 1374 0290 0120A0E3 		mov	r2, #1
 1375 0294 002083E5 		str	r2, [r3, #0]
 215:../reversi8_2019.c ****         ficha = tablero[f][c];
 1376              		.loc 1 215 0
 1377 0298 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1378 029c 8331A0E1 		mov	r3, r3, asl #3
 1379 02a0 18201BE5 		ldr	r2, [fp, #-24]
 1380 02a4 032082E0 		add	r2, r2, r3
 1381 02a8 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1382 02ac 0330D2E7 		ldrb	r3, [r2, r3]
 1383 02b0 0D304BE5 		strb	r3, [fp, #-13]
 1384 02b4 040000EA 		b	.L11
 1385              	.L10:
 216:../reversi8_2019.c ****     }
 217:../reversi8_2019.c ****     else
 218:../reversi8_2019.c ****     {
 219:../reversi8_2019.c ****         *posicion_valida = 0;
 1386              		.loc 1 219 0
 1387 02b8 20301BE5 		ldr	r3, [fp, #-32]
 1388 02bc 0020A0E3 		mov	r2, #0
 1389 02c0 002083E5 		str	r2, [r3, #0]
 220:../reversi8_2019.c ****         ficha = CASILLA_VACIA;
 1390              		.loc 1 220 0
 1391 02c4 0030A0E3 		mov	r3, #0
 1392 02c8 0D304BE5 		strb	r3, [fp, #-13]
 1393              	.L11:
 221:../reversi8_2019.c ****     }
 222:../reversi8_2019.c ****     return ficha;
 1394              		.loc 1 222 0
 1395 02cc 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 223:../reversi8_2019.c **** }
 1396              		.loc 1 223 0
 1397 02d0 0300A0E1 		mov	r0, r3
 1398 02d4 0CD04BE2 		sub	sp, fp, #12
 1399 02d8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1400 02dc 1EFF2FE1 		bx	lr
 1401              		.cfi_endproc
 1402              	.LFE2:
 1404              		.align	2
 1405              		.global	patron_volteo
 1407              	patron_volteo:
 1408              	.LFB3:
 224:../reversi8_2019.c **** 
 225:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 226:../reversi8_2019.c **** // La función patrón volteo comprueba si hay que actualizar una determinada direccion,
 227:../reversi8_2019.c **** // busca el patrón de volteo (n fichas del rival seguidas de una ficha del jugador actual)
 228:../reversi8_2019.c **** // en una dirección determinada
 229:../reversi8_2019.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 230:../reversi8_2019.c **** // color indica el color de la pieza que se acaba de colocar
 231:../reversi8_2019.c **** // la función devuelve PATRON_ENCONTRADO (1) si encuentra patrón y NO_HAY_PATRON (0) en caso contra
 232:../reversi8_2019.c **** // FA y CA son la fila y columna a analizar
 233:../reversi8_2019.c **** // longitud es un parámetro por referencia. Sirve para saber la longitud del patrón que se está ana
 234:../reversi8_2019.c **** //          Se usa para saber cuantas fichas habría que voltear
 235:../reversi8_2019.c **** int patron_volteo(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char colo
 236:../reversi8_2019.c **** {
 1409              		.loc 1 236 0
 1410              		.cfi_startproc
 1411              		@ Function supports interworking.
 1412              		@ args = 12, pretend = 0, frame = 24
 1413              		@ frame_needed = 1, uses_anonymous_args = 0
 1414 02e0 0DC0A0E1 		mov	ip, sp
 1415              	.LCFI6:
 1416              		.cfi_def_cfa_register 12
 1417 02e4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1418 02e8 04B04CE2 		sub	fp, ip, #4
 1419              		.cfi_offset 14, -8
 1420              		.cfi_offset 13, -12
 1421              		.cfi_offset 11, -16
 1422              	.LCFI7:
 1423              		.cfi_def_cfa 11, 4
 1424 02ec 18D04DE2 		sub	sp, sp, #24
 1425 02f0 18000BE5 		str	r0, [fp, #-24]
 1426 02f4 1C100BE5 		str	r1, [fp, #-28]
 1427 02f8 1D204BE5 		strb	r2, [fp, #-29]
 1428 02fc 1E304BE5 		strb	r3, [fp, #-30]
 237:../reversi8_2019.c **** 	int posicion_valida; // indica si la posición es valida y contiene una ficha de algún jugador
 238:../reversi8_2019.c **** 	char casilla;   // casilla es la casilla que se lee del tablero
 239:../reversi8_2019.c **** 
 240:../reversi8_2019.c **** 	FA = FA + SF;
 1429              		.loc 1 240 0
 1430 0300 1D205BE5 		ldrb	r2, [fp, #-29]
 1431 0304 0430DBE5 		ldrb	r3, [fp, #4]
 1432 0308 033082E0 		add	r3, r2, r3
 1433 030c 1D304BE5 		strb	r3, [fp, #-29]
 241:../reversi8_2019.c **** 	CA = CA + SC;
 1434              		.loc 1 241 0
 1435 0310 1E205BE5 		ldrb	r2, [fp, #-30]
 1436 0314 0830DBE5 		ldrb	r3, [fp, #8]
 1437 0318 033082E0 		add	r3, r2, r3
 1438 031c 1E304BE5 		strb	r3, [fp, #-30]
 242:../reversi8_2019.c **** 	casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 1439              		.loc 1 242 0
 1440 0320 1D105BE5 		ldrb	r1, [fp, #-29]	@ zero_extendqisi2
 1441 0324 1E205BE5 		ldrb	r2, [fp, #-30]	@ zero_extendqisi2
 1442 0328 14304BE2 		sub	r3, fp, #20
 1443 032c 18001BE5 		ldr	r0, [fp, #-24]
 1444 0330 FEFFFFEB 		bl	ficha_valida
 1445 0334 0030A0E1 		mov	r3, r0
 1446 0338 0D304BE5 		strb	r3, [fp, #-13]
 243:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1447              		.loc 1 243 0
 1448 033c 130000EA 		b	.L13
 1449              	.L15:
 244:../reversi8_2019.c **** 	// mientras la casilla está en el tablero, no está vací­a,
 245:../reversi8_2019.c **** 	// y es del color rival seguimos buscando el patron de volteo
 246:../reversi8_2019.c **** 	{
 247:../reversi8_2019.c **** 		FA = FA + SF;
 1450              		.loc 1 247 0
 1451 0340 1D205BE5 		ldrb	r2, [fp, #-29]
 1452 0344 0430DBE5 		ldrb	r3, [fp, #4]
 1453 0348 033082E0 		add	r3, r2, r3
 1454 034c 1D304BE5 		strb	r3, [fp, #-29]
 248:../reversi8_2019.c **** 		CA = CA + SC;
 1455              		.loc 1 248 0
 1456 0350 1E205BE5 		ldrb	r2, [fp, #-30]
 1457 0354 0830DBE5 		ldrb	r3, [fp, #8]
 1458 0358 033082E0 		add	r3, r2, r3
 1459 035c 1E304BE5 		strb	r3, [fp, #-30]
 249:../reversi8_2019.c **** 		*longitud = *longitud + 1;
 1460              		.loc 1 249 0
 1461 0360 1C301BE5 		ldr	r3, [fp, #-28]
 1462 0364 003093E5 		ldr	r3, [r3, #0]
 1463 0368 012083E2 		add	r2, r3, #1
 1464 036c 1C301BE5 		ldr	r3, [fp, #-28]
 1465 0370 002083E5 		str	r2, [r3, #0]
 250:../reversi8_2019.c **** 		casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 1466              		.loc 1 250 0
 1467 0374 1D105BE5 		ldrb	r1, [fp, #-29]	@ zero_extendqisi2
 1468 0378 1E205BE5 		ldrb	r2, [fp, #-30]	@ zero_extendqisi2
 1469 037c 14304BE2 		sub	r3, fp, #20
 1470 0380 18001BE5 		ldr	r0, [fp, #-24]
 1471 0384 FEFFFFEB 		bl	ficha_valida
 1472 0388 0030A0E1 		mov	r3, r0
 1473 038c 0D304BE5 		strb	r3, [fp, #-13]
 1474              	.L13:
 243:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1475              		.loc 1 243 0 discriminator 1
 1476 0390 14301BE5 		ldr	r3, [fp, #-20]
 1477 0394 010053E3 		cmp	r3, #1
 1478 0398 0300001A 		bne	.L14
 243:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1479              		.loc 1 243 0 is_stmt 0 discriminator 2
 1480 039c 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1481 03a0 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1482 03a4 030052E1 		cmp	r2, r3
 1483 03a8 E4FFFF1A 		bne	.L15
 1484              	.L14:
 251:../reversi8_2019.c **** 	}
 252:../reversi8_2019.c ****     // si la ultima posición era válida y la ficha es del jugador actual,
 253:../reversi8_2019.c ****     // entonces hemos encontrado el patrón
 254:../reversi8_2019.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0))
 1485              		.loc 1 254 0 is_stmt 1
 1486 03ac 14301BE5 		ldr	r3, [fp, #-20]
 1487 03b0 010053E3 		cmp	r3, #1
 1488 03b4 0900001A 		bne	.L16
 1489              		.loc 1 254 0 is_stmt 0 discriminator 1
 1490 03b8 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1491 03bc 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1492 03c0 030052E1 		cmp	r2, r3
 1493 03c4 0500001A 		bne	.L16
 1494 03c8 1C301BE5 		ldr	r3, [fp, #-28]
 1495 03cc 003093E5 		ldr	r3, [r3, #0]
 1496 03d0 000053E3 		cmp	r3, #0
 1497 03d4 010000DA 		ble	.L16
 255:../reversi8_2019.c **** 		return PATRON_ENCONTRADO; // si hay que voltear una ficha o más hemos encontrado el patrón
 1498              		.loc 1 255 0 is_stmt 1
 1499 03d8 0130A0E3 		mov	r3, #1
 1500 03dc 000000EA 		b	.L17
 1501              	.L16:
 256:../reversi8_2019.c **** 	else
 257:../reversi8_2019.c **** 		return NO_HAY_PATRON; // si no hay que voltear no hay patrón
 1502              		.loc 1 257 0
 1503 03e0 0030A0E3 		mov	r3, #0
 1504              	.L17:
 258:../reversi8_2019.c **** }
 1505              		.loc 1 258 0
 1506 03e4 0300A0E1 		mov	r0, r3
 1507 03e8 0CD04BE2 		sub	sp, fp, #12
 1508 03ec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1509 03f0 1EFF2FE1 		bx	lr
 1510              		.cfi_endproc
 1511              	.LFE3:
 1513              		.align	2
 1514              		.global	voltear
 1516              	voltear:
 1517              	.LFB4:
 259:../reversi8_2019.c **** 
 260:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 261:../reversi8_2019.c **** // voltea n fichas en la dirección que toque
 262:../reversi8_2019.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 263:../reversi8_2019.c **** // color indica el color de la pieza que se acaba de colocar
 264:../reversi8_2019.c **** // FA y CA son la fila y columna a analizar
 265:../reversi8_2019.c **** void voltear(char tablero[][DIM], char FA, char CA, char SF, char SC, int n, char color)
 266:../reversi8_2019.c **** {
 1518              		.loc 1 266 0
 1519              		.cfi_startproc
 1520              		@ Function supports interworking.
 1521              		@ args = 12, pretend = 0, frame = 16
 1522              		@ frame_needed = 1, uses_anonymous_args = 0
 1523 03f4 0DC0A0E1 		mov	ip, sp
 1524              	.LCFI8:
 1525              		.cfi_def_cfa_register 12
 1526 03f8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1527 03fc 04B04CE2 		sub	fp, ip, #4
 1528              		.cfi_offset 14, -8
 1529              		.cfi_offset 13, -12
 1530              		.cfi_offset 11, -16
 1531              	.LCFI9:
 1532              		.cfi_def_cfa 11, 4
 1533 0400 10D04DE2 		sub	sp, sp, #16
 1534 0404 18000BE5 		str	r0, [fp, #-24]
 1535 0408 19104BE5 		strb	r1, [fp, #-25]
 1536 040c 1A204BE5 		strb	r2, [fp, #-26]
 1537 0410 1B304BE5 		strb	r3, [fp, #-27]
 267:../reversi8_2019.c ****     int i;
 268:../reversi8_2019.c **** 
 269:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1538              		.loc 1 269 0
 1539 0414 0030A0E3 		mov	r3, #0
 1540 0418 10300BE5 		str	r3, [fp, #-16]
 1541 041c 110000EA 		b	.L19
 1542              	.L20:
 270:../reversi8_2019.c ****     {
 271:../reversi8_2019.c ****         FA = FA + SF;
 1543              		.loc 1 271 0 discriminator 2
 1544 0420 19205BE5 		ldrb	r2, [fp, #-25]
 1545 0424 1B305BE5 		ldrb	r3, [fp, #-27]
 1546 0428 033082E0 		add	r3, r2, r3
 1547 042c 19304BE5 		strb	r3, [fp, #-25]
 272:../reversi8_2019.c ****         CA = CA + SC;
 1548              		.loc 1 272 0 discriminator 2
 1549 0430 1A205BE5 		ldrb	r2, [fp, #-26]
 1550 0434 0430DBE5 		ldrb	r3, [fp, #4]
 1551 0438 033082E0 		add	r3, r2, r3
 1552 043c 1A304BE5 		strb	r3, [fp, #-26]
 273:../reversi8_2019.c ****         tablero[FA][CA] = color;
 1553              		.loc 1 273 0 discriminator 2
 1554 0440 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1555 0444 8331A0E1 		mov	r3, r3, asl #3
 1556 0448 18201BE5 		ldr	r2, [fp, #-24]
 1557 044c 032082E0 		add	r2, r2, r3
 1558 0450 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1559 0454 0C10DBE5 		ldrb	r1, [fp, #12]
 1560 0458 0310C2E7 		strb	r1, [r2, r3]
 269:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1561              		.loc 1 269 0 discriminator 2
 1562 045c 10301BE5 		ldr	r3, [fp, #-16]
 1563 0460 013083E2 		add	r3, r3, #1
 1564 0464 10300BE5 		str	r3, [fp, #-16]
 1565              	.L19:
 269:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1566              		.loc 1 269 0 is_stmt 0 discriminator 1
 1567 0468 10201BE5 		ldr	r2, [fp, #-16]
 1568 046c 08309BE5 		ldr	r3, [fp, #8]
 1569 0470 030052E1 		cmp	r2, r3
 1570 0474 E9FFFFBA 		blt	.L20
 274:../reversi8_2019.c ****     }
 275:../reversi8_2019.c **** }
 1571              		.loc 1 275 0 is_stmt 1
 1572 0478 0CD04BE2 		sub	sp, fp, #12
 1573 047c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1574 0480 1EFF2FE1 		bx	lr
 1575              		.cfi_endproc
 1576              	.LFE4:
 1578              		.align	2
 1579              		.global	actualizar_tablero
 1581              	actualizar_tablero:
 1582              	.LFB5:
 276:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 277:../reversi8_2019.c **** // comprueba si hay que actualizar alguna ficha
 278:../reversi8_2019.c **** // no comprueba que el movimiento realizado sea válido
 279:../reversi8_2019.c **** // f y c son la fila y columna a analizar
 280:../reversi8_2019.c **** // char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
 281:../reversi8_2019.c **** // char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
 282:../reversi8_2019.c **** int actualizar_tablero(char tablero[][DIM], char f, char c, char color)
 283:../reversi8_2019.c **** {
 1583              		.loc 1 283 0
 1584              		.cfi_startproc
 1585              		@ Function supports interworking.
 1586              		@ args = 0, pretend = 0, frame = 24
 1587              		@ frame_needed = 1, uses_anonymous_args = 0
 1588 0484 0DC0A0E1 		mov	ip, sp
 1589              	.LCFI10:
 1590              		.cfi_def_cfa_register 12
 1591 0488 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1592 048c 04B04CE2 		sub	fp, ip, #4
 1593              		.cfi_offset 14, -8
 1594              		.cfi_offset 13, -12
 1595              		.cfi_offset 11, -16
 1596              	.LCFI11:
 1597              		.cfi_def_cfa 11, 4
 1598 0490 28D04DE2 		sub	sp, sp, #40
 1599 0494 20000BE5 		str	r0, [fp, #-32]
 1600 0498 21104BE5 		strb	r1, [fp, #-33]
 1601 049c 22204BE5 		strb	r2, [fp, #-34]
 1602 04a0 23304BE5 		strb	r3, [fp, #-35]
 284:../reversi8_2019.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 285:../reversi8_2019.c ****     int i, flip, patron;
 286:../reversi8_2019.c **** 
 287:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1603              		.loc 1 287 0
 1604 04a4 0030A0E3 		mov	r3, #0
 1605 04a8 10300BE5 		str	r3, [fp, #-16]
 1606 04ac 280000EA 		b	.L22
 1607              	.L24:
 288:../reversi8_2019.c ****     {
 289:../reversi8_2019.c ****         SF = vSF[i];
 1608              		.loc 1 289 0
 1609 04b0 BC209FE5 		ldr	r2, .L25
 1610 04b4 10301BE5 		ldr	r3, [fp, #-16]
 1611 04b8 033082E0 		add	r3, r2, r3
 1612 04bc 0030D3E5 		ldrb	r3, [r3, #0]
 1613 04c0 11304BE5 		strb	r3, [fp, #-17]
 290:../reversi8_2019.c ****         SC = vSC[i];
 1614              		.loc 1 290 0
 1615 04c4 AC209FE5 		ldr	r2, .L25+4
 1616 04c8 10301BE5 		ldr	r3, [fp, #-16]
 1617 04cc 033082E0 		add	r3, r2, r3
 1618 04d0 0030D3E5 		ldrb	r3, [r3, #0]
 1619 04d4 12304BE5 		strb	r3, [fp, #-18]
 291:../reversi8_2019.c ****         // flip: numero de fichas a voltear
 292:../reversi8_2019.c ****         flip = 0;
 1620              		.loc 1 292 0
 1621 04d8 0030A0E3 		mov	r3, #0
 1622 04dc 1C300BE5 		str	r3, [fp, #-28]
 293:../reversi8_2019.c ****         patron = patron_volteo_arm_arm(tablero, &flip, f, c, SF, SC, color);
 1623              		.loc 1 293 0
 1624 04e0 1C104BE2 		sub	r1, fp, #28
 1625 04e4 21205BE5 		ldrb	r2, [fp, #-33]	@ zero_extendqisi2
 1626 04e8 22305BE5 		ldrb	r3, [fp, #-34]	@ zero_extendqisi2
 1627 04ec 11005BE5 		ldrb	r0, [fp, #-17]	@ zero_extendqisi2
 1628 04f0 00008DE5 		str	r0, [sp, #0]
 1629 04f4 12005BE5 		ldrb	r0, [fp, #-18]	@ zero_extendqisi2
 1630 04f8 04008DE5 		str	r0, [sp, #4]
 1631 04fc 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 1632 0500 08008DE5 		str	r0, [sp, #8]
 1633 0504 20001BE5 		ldr	r0, [fp, #-32]
 1634 0508 FEFFFFEB 		bl	patron_volteo_arm_arm
 1635 050c 18000BE5 		str	r0, [fp, #-24]
 294:../reversi8_2019.c ****         if (patron == PATRON_ENCONTRADO )
 1636              		.loc 1 294 0
 1637 0510 18301BE5 		ldr	r3, [fp, #-24]
 1638 0514 010053E3 		cmp	r3, #1
 1639 0518 0A00001A 		bne	.L23
 295:../reversi8_2019.c ****         {
 296:../reversi8_2019.c ****             voltear(tablero, f, c, SF, SC, flip, color);
 1640              		.loc 1 296 0
 1641 051c 1C001BE5 		ldr	r0, [fp, #-28]
 1642 0520 21105BE5 		ldrb	r1, [fp, #-33]	@ zero_extendqisi2
 1643 0524 22205BE5 		ldrb	r2, [fp, #-34]	@ zero_extendqisi2
 1644 0528 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1645 052c 12C05BE5 		ldrb	ip, [fp, #-18]	@ zero_extendqisi2
 1646 0530 00C08DE5 		str	ip, [sp, #0]
 1647 0534 04008DE5 		str	r0, [sp, #4]
 1648 0538 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 1649 053c 08008DE5 		str	r0, [sp, #8]
 1650 0540 20001BE5 		ldr	r0, [fp, #-32]
 1651 0544 FEFFFFEB 		bl	voltear
 1652              	.L23:
 287:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1653              		.loc 1 287 0
 1654 0548 10301BE5 		ldr	r3, [fp, #-16]
 1655 054c 013083E2 		add	r3, r3, #1
 1656 0550 10300BE5 		str	r3, [fp, #-16]
 1657              	.L22:
 287:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1658              		.loc 1 287 0 is_stmt 0 discriminator 1
 1659 0554 10301BE5 		ldr	r3, [fp, #-16]
 1660 0558 070053E3 		cmp	r3, #7
 1661 055c D3FFFFDA 		ble	.L24
 297:../reversi8_2019.c ****         }
 298:../reversi8_2019.c ****     }
 299:../reversi8_2019.c ****     return 0;
 1662              		.loc 1 299 0 is_stmt 1
 1663 0560 0030A0E3 		mov	r3, #0
 300:../reversi8_2019.c **** }
 1664              		.loc 1 300 0
 1665 0564 0300A0E1 		mov	r0, r3
 1666 0568 0CD04BE2 		sub	sp, fp, #12
 1667 056c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1668 0570 1EFF2FE1 		bx	lr
 1669              	.L26:
 1670              		.align	2
 1671              	.L25:
 1672 0574 00000000 		.word	vSF
 1673 0578 00000000 		.word	vSC
 1674              		.cfi_endproc
 1675              	.LFE5:
 1677              		.align	2
 1678              		.global	elegir_mov
 1680              	elegir_mov:
 1681              	.LFB6:
 301:../reversi8_2019.c **** 
 302:../reversi8_2019.c **** /////////////////////////////////////////////////////////////////////////////////
 303:../reversi8_2019.c **** // Recorre todo el tablero comprobando en cada posición si se puede mover
 304:../reversi8_2019.c **** // En caso afirmativo, consulta la puntuación de la posición y si es la mejor
 305:../reversi8_2019.c **** // que se ha encontrado la guarda
 306:../reversi8_2019.c **** // Al acabar escribe el movimiento seleccionado en f y c
 307:../reversi8_2019.c **** 
 308:../reversi8_2019.c **** // Candidatas
 309:../reversi8_2019.c **** // NO    0
 310:../reversi8_2019.c **** // SI    1
 311:../reversi8_2019.c **** // CASILLA_OCUPADA 2
 312:../reversi8_2019.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 313:../reversi8_2019.c **** {
 1682              		.loc 1 313 0
 1683              		.cfi_startproc
 1684              		@ Function supports interworking.
 1685              		@ args = 0, pretend = 0, frame = 56
 1686              		@ frame_needed = 1, uses_anonymous_args = 0
 1687 057c 0DC0A0E1 		mov	ip, sp
 1688              	.LCFI12:
 1689              		.cfi_def_cfa_register 12
 1690 0580 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1691 0584 04B04CE2 		sub	fp, ip, #4
 1692              		.cfi_offset 14, -8
 1693              		.cfi_offset 13, -12
 1694              		.cfi_offset 11, -16
 1695              	.LCFI13:
 1696              		.cfi_def_cfa 11, 4
 1697 0588 48D04DE2 		sub	sp, sp, #72
 1698 058c 38000BE5 		str	r0, [fp, #-56]
 1699 0590 3C100BE5 		str	r1, [fp, #-60]
 1700 0594 40200BE5 		str	r2, [fp, #-64]
 1701 0598 44300BE5 		str	r3, [fp, #-68]
 314:../reversi8_2019.c ****     int i, j, k, found;
 315:../reversi8_2019.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 1702              		.loc 1 315 0
 1703 059c 0030E0E3 		mvn	r3, #0
 1704 05a0 20300BE5 		str	r3, [fp, #-32]
 316:../reversi8_2019.c ****     int mc;      // almacena la columna del mejor movimiento encontrado
 317:../reversi8_2019.c ****     char mejor = 0; // almacena el mejor valor encontrado
 1705              		.loc 1 317 0
 1706 05a4 0030A0E3 		mov	r3, #0
 1707 05a8 25304BE5 		strb	r3, [fp, #-37]
 318:../reversi8_2019.c ****     int patron, longitud;
 319:../reversi8_2019.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 320:../reversi8_2019.c **** 
 321:../reversi8_2019.c ****     // Recorremos todo el tablero comprobando dónde podemos mover
 322:../reversi8_2019.c ****     // Comparamos la puntuación de los movimientos encontrados y nos quedamos con el mejor
 323:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1708              		.loc 1 323 0
 1709 05ac 0030A0E3 		mov	r3, #0
 1710 05b0 10300BE5 		str	r3, [fp, #-16]
 1711 05b4 600000EA 		b	.L28
 1712              	.L35:
 324:../reversi8_2019.c ****     {
 325:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1713              		.loc 1 325 0
 1714 05b8 0030A0E3 		mov	r3, #0
 1715 05bc 14300BE5 		str	r3, [fp, #-20]
 1716 05c0 570000EA 		b	.L29
 1717              	.L34:
 326:../reversi8_2019.c ****         {   // indica en qué casillas quizá se pueda mover
 327:../reversi8_2019.c ****             if (candidatas[i][j] == SI)
 1718              		.loc 1 327 0
 1719 05c4 10301BE5 		ldr	r3, [fp, #-16]
 1720 05c8 8331A0E1 		mov	r3, r3, asl #3
 1721 05cc 38201BE5 		ldr	r2, [fp, #-56]
 1722 05d0 032082E0 		add	r2, r2, r3
 1723 05d4 14301BE5 		ldr	r3, [fp, #-20]
 1724 05d8 033082E0 		add	r3, r2, r3
 1725 05dc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1726 05e0 010053E3 		cmp	r3, #1
 1727 05e4 4B00001A 		bne	.L30
 328:../reversi8_2019.c ****             {
 329:../reversi8_2019.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 1728              		.loc 1 329 0
 1729 05e8 10301BE5 		ldr	r3, [fp, #-16]
 1730 05ec 8331A0E1 		mov	r3, r3, asl #3
 1731 05f0 3C201BE5 		ldr	r2, [fp, #-60]
 1732 05f4 032082E0 		add	r2, r2, r3
 1733 05f8 14301BE5 		ldr	r3, [fp, #-20]
 1734 05fc 033082E0 		add	r3, r2, r3
 1735 0600 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1736 0604 000053E3 		cmp	r3, #0
 1737 0608 4200001A 		bne	.L30
 330:../reversi8_2019.c ****                 {
 331:../reversi8_2019.c ****                     found = 0;
 1738              		.loc 1 331 0
 1739 060c 0030A0E3 		mov	r3, #0
 1740 0610 1C300BE5 		str	r3, [fp, #-28]
 332:../reversi8_2019.c ****                     k = 0;
 1741              		.loc 1 332 0
 1742 0614 0030A0E3 		mov	r3, #0
 1743 0618 18300BE5 		str	r3, [fp, #-24]
 333:../reversi8_2019.c **** 
 334:../reversi8_2019.c ****                     // en este bucle comprobamos si es un movimiento válido
 335:../reversi8_2019.c ****                     // (es decir si implica voltear en alguna dirección)
 336:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 1744              		.loc 1 336 0
 1745 061c 370000EA 		b	.L31
 1746              	.L33:
 337:../reversi8_2019.c ****                     {
 338:../reversi8_2019.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 1747              		.loc 1 338 0
 1748 0620 54219FE5 		ldr	r2, .L36
 1749 0624 18301BE5 		ldr	r3, [fp, #-24]
 1750 0628 033082E0 		add	r3, r2, r3
 1751 062c 0030D3E5 		ldrb	r3, [r3, #0]
 1752 0630 26304BE5 		strb	r3, [fp, #-38]
 339:../reversi8_2019.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 1753              		.loc 1 339 0
 1754 0634 44219FE5 		ldr	r2, .L36+4
 1755 0638 18301BE5 		ldr	r3, [fp, #-24]
 1756 063c 033082E0 		add	r3, r2, r3
 1757 0640 0030D3E5 		ldrb	r3, [r3, #0]
 1758 0644 27304BE5 		strb	r3, [fp, #-39]
 340:../reversi8_2019.c **** 
 341:../reversi8_2019.c ****                         // nos dice qué hay que voltear en cada dirección
 342:../reversi8_2019.c ****                         longitud = 0;
 1759              		.loc 1 342 0
 1760 0648 0030A0E3 		mov	r3, #0
 1761 064c 30300BE5 		str	r3, [fp, #-48]
 343:../reversi8_2019.c ****                         patron = patron_volteo_arm_arm(tablero, &longitud, i, j, SF, SC, FICHA_BLAN
 1762              		.loc 1 343 0
 1763 0650 10301BE5 		ldr	r3, [fp, #-16]
 1764 0654 FF2003E2 		and	r2, r3, #255
 1765 0658 14301BE5 		ldr	r3, [fp, #-20]
 1766 065c FF3003E2 		and	r3, r3, #255
 1767 0660 30104BE2 		sub	r1, fp, #48
 1768 0664 26005BE5 		ldrb	r0, [fp, #-38]	@ zero_extendqisi2
 1769 0668 00008DE5 		str	r0, [sp, #0]
 1770 066c 27005BE5 		ldrb	r0, [fp, #-39]	@ zero_extendqisi2
 1771 0670 04008DE5 		str	r0, [sp, #4]
 1772 0674 0100A0E3 		mov	r0, #1
 1773 0678 08008DE5 		str	r0, [sp, #8]
 1774 067c 3C001BE5 		ldr	r0, [fp, #-60]
 1775 0680 FEFFFFEB 		bl	patron_volteo_arm_arm
 1776 0684 2C000BE5 		str	r0, [fp, #-44]
 344:../reversi8_2019.c ****                         if (patron == PATRON_ENCONTRADO)
 1777              		.loc 1 344 0
 1778 0688 2C301BE5 		ldr	r3, [fp, #-44]
 1779 068c 010053E3 		cmp	r3, #1
 1780 0690 1700001A 		bne	.L32
 345:../reversi8_2019.c ****                         {
 346:../reversi8_2019.c ****                             found = 1;
 1781              		.loc 1 346 0
 1782 0694 0130A0E3 		mov	r3, #1
 1783 0698 1C300BE5 		str	r3, [fp, #-28]
 347:../reversi8_2019.c ****                             if (tabla_valor[i][j] > mejor)
 1784              		.loc 1 347 0
 1785 069c E0209FE5 		ldr	r2, .L36+8
 1786 06a0 10301BE5 		ldr	r3, [fp, #-16]
 1787 06a4 8311A0E1 		mov	r1, r3, asl #3
 1788 06a8 14301BE5 		ldr	r3, [fp, #-20]
 1789 06ac 033081E0 		add	r3, r1, r3
 1790 06b0 033082E0 		add	r3, r2, r3
 1791 06b4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1792 06b8 25205BE5 		ldrb	r2, [fp, #-37]	@ zero_extendqisi2
 1793 06bc 030052E1 		cmp	r2, r3
 1794 06c0 0B00002A 		bcs	.L32
 348:../reversi8_2019.c ****                             {
 349:../reversi8_2019.c ****                                 mf = i;
 1795              		.loc 1 349 0
 1796 06c4 10301BE5 		ldr	r3, [fp, #-16]
 1797 06c8 20300BE5 		str	r3, [fp, #-32]
 350:../reversi8_2019.c ****                                 mc = j;
 1798              		.loc 1 350 0
 1799 06cc 14301BE5 		ldr	r3, [fp, #-20]
 1800 06d0 24300BE5 		str	r3, [fp, #-36]
 351:../reversi8_2019.c ****                                 mejor = tabla_valor[i][j];
 1801              		.loc 1 351 0
 1802 06d4 A8209FE5 		ldr	r2, .L36+8
 1803 06d8 10301BE5 		ldr	r3, [fp, #-16]
 1804 06dc 8311A0E1 		mov	r1, r3, asl #3
 1805 06e0 14301BE5 		ldr	r3, [fp, #-20]
 1806 06e4 033081E0 		add	r3, r1, r3
 1807 06e8 033082E0 		add	r3, r2, r3
 1808 06ec 0030D3E5 		ldrb	r3, [r3, #0]
 1809 06f0 25304BE5 		strb	r3, [fp, #-37]
 1810              	.L32:
 352:../reversi8_2019.c ****                             }
 353:../reversi8_2019.c ****                         }
 354:../reversi8_2019.c ****                         k++;
 1811              		.loc 1 354 0
 1812 06f4 18301BE5 		ldr	r3, [fp, #-24]
 1813 06f8 013083E2 		add	r3, r3, #1
 1814 06fc 18300BE5 		str	r3, [fp, #-24]
 1815              	.L31:
 336:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 1816              		.loc 1 336 0 discriminator 1
 1817 0700 1C301BE5 		ldr	r3, [fp, #-28]
 1818 0704 000053E3 		cmp	r3, #0
 1819 0708 0200001A 		bne	.L30
 336:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 1820              		.loc 1 336 0 is_stmt 0 discriminator 2
 1821 070c 18301BE5 		ldr	r3, [fp, #-24]
 1822 0710 070053E3 		cmp	r3, #7
 1823 0714 C1FFFFDA 		ble	.L33
 1824              	.L30:
 325:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1825              		.loc 1 325 0 is_stmt 1
 1826 0718 14301BE5 		ldr	r3, [fp, #-20]
 1827 071c 013083E2 		add	r3, r3, #1
 1828 0720 14300BE5 		str	r3, [fp, #-20]
 1829              	.L29:
 325:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1830              		.loc 1 325 0 is_stmt 0 discriminator 1
 1831 0724 14301BE5 		ldr	r3, [fp, #-20]
 1832 0728 070053E3 		cmp	r3, #7
 1833 072c A4FFFFDA 		ble	.L34
 323:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1834              		.loc 1 323 0 is_stmt 1
 1835 0730 10301BE5 		ldr	r3, [fp, #-16]
 1836 0734 013083E2 		add	r3, r3, #1
 1837 0738 10300BE5 		str	r3, [fp, #-16]
 1838              	.L28:
 323:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1839              		.loc 1 323 0 is_stmt 0 discriminator 1
 1840 073c 10301BE5 		ldr	r3, [fp, #-16]
 1841 0740 070053E3 		cmp	r3, #7
 1842 0744 9BFFFFDA 		ble	.L35
 355:../reversi8_2019.c ****                         // si no hemos encontrado nada probamos con la siguiente dirección
 356:../reversi8_2019.c ****                     }
 357:../reversi8_2019.c ****                 }
 358:../reversi8_2019.c ****             }
 359:../reversi8_2019.c ****         }
 360:../reversi8_2019.c ****     }
 361:../reversi8_2019.c ****     *f = (char) mf;
 1843              		.loc 1 361 0 is_stmt 1
 1844 0748 20301BE5 		ldr	r3, [fp, #-32]
 1845 074c FF2003E2 		and	r2, r3, #255
 1846 0750 40301BE5 		ldr	r3, [fp, #-64]
 1847 0754 0020C3E5 		strb	r2, [r3, #0]
 362:../reversi8_2019.c ****     *c = (char) mc;
 1848              		.loc 1 362 0
 1849 0758 24301BE5 		ldr	r3, [fp, #-36]
 1850 075c FF2003E2 		and	r2, r3, #255
 1851 0760 44301BE5 		ldr	r3, [fp, #-68]
 1852 0764 0020C3E5 		strb	r2, [r3, #0]
 363:../reversi8_2019.c ****     // si no se ha encontrado una posición válida devuelve -1
 364:../reversi8_2019.c ****     return mf;
 1853              		.loc 1 364 0
 1854 0768 20301BE5 		ldr	r3, [fp, #-32]
 365:../reversi8_2019.c **** }
 1855              		.loc 1 365 0
 1856 076c 0300A0E1 		mov	r0, r3
 1857 0770 0CD04BE2 		sub	sp, fp, #12
 1858 0774 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1859 0778 1EFF2FE1 		bx	lr
 1860              	.L37:
 1861              		.align	2
 1862              	.L36:
 1863 077c 00000000 		.word	vSF
 1864 0780 00000000 		.word	vSC
 1865 0784 00000000 		.word	tabla_valor
 1866              		.cfi_endproc
 1867              	.LFE6:
 1869              		.align	2
 1870              		.global	contar
 1872              	contar:
 1873              	.LFB7:
 366:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 367:../reversi8_2019.c **** // Cuenta el número de fichas de cada color.
 368:../reversi8_2019.c **** // Los guarda en la dirección b (blancas) y n (negras)
 369:../reversi8_2019.c **** void contar(char tablero[][DIM], int *b, int *n)
 370:../reversi8_2019.c **** {
 1874              		.loc 1 370 0
 1875              		.cfi_startproc
 1876              		@ Function supports interworking.
 1877              		@ args = 0, pretend = 0, frame = 24
 1878              		@ frame_needed = 1, uses_anonymous_args = 0
 1879 0788 0DC0A0E1 		mov	ip, sp
 1880              	.LCFI14:
 1881              		.cfi_def_cfa_register 12
 1882 078c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1883 0790 04B04CE2 		sub	fp, ip, #4
 1884              		.cfi_offset 14, -8
 1885              		.cfi_offset 13, -12
 1886              		.cfi_offset 11, -16
 1887              	.LCFI15:
 1888              		.cfi_def_cfa 11, 4
 1889 0794 18D04DE2 		sub	sp, sp, #24
 1890 0798 18000BE5 		str	r0, [fp, #-24]
 1891 079c 1C100BE5 		str	r1, [fp, #-28]
 1892 07a0 20200BE5 		str	r2, [fp, #-32]
 371:../reversi8_2019.c ****     int i,j;
 372:../reversi8_2019.c **** 
 373:../reversi8_2019.c ****     *b = 0;
 1893              		.loc 1 373 0
 1894 07a4 1C301BE5 		ldr	r3, [fp, #-28]
 1895 07a8 0020A0E3 		mov	r2, #0
 1896 07ac 002083E5 		str	r2, [r3, #0]
 374:../reversi8_2019.c ****     *n = 0;
 1897              		.loc 1 374 0
 1898 07b0 20301BE5 		ldr	r3, [fp, #-32]
 1899 07b4 0020A0E3 		mov	r2, #0
 1900 07b8 002083E5 		str	r2, [r3, #0]
 375:../reversi8_2019.c **** 
 376:../reversi8_2019.c ****     // recorremos todo el tablero contando las fichas de cada color
 377:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1901              		.loc 1 377 0
 1902 07bc 0030A0E3 		mov	r3, #0
 1903 07c0 10300BE5 		str	r3, [fp, #-16]
 1904 07c4 280000EA 		b	.L39
 1905              	.L44:
 378:../reversi8_2019.c ****     {
 379:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1906              		.loc 1 379 0
 1907 07c8 0030A0E3 		mov	r3, #0
 1908 07cc 14300BE5 		str	r3, [fp, #-20]
 1909 07d0 1F0000EA 		b	.L40
 1910              	.L43:
 380:../reversi8_2019.c ****         {
 381:../reversi8_2019.c ****             if (tablero[i][j] == FICHA_BLANCA)
 1911              		.loc 1 381 0
 1912 07d4 10301BE5 		ldr	r3, [fp, #-16]
 1913 07d8 8331A0E1 		mov	r3, r3, asl #3
 1914 07dc 18201BE5 		ldr	r2, [fp, #-24]
 1915 07e0 032082E0 		add	r2, r2, r3
 1916 07e4 14301BE5 		ldr	r3, [fp, #-20]
 1917 07e8 033082E0 		add	r3, r2, r3
 1918 07ec 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1919 07f0 010053E3 		cmp	r3, #1
 1920 07f4 0500001A 		bne	.L41
 382:../reversi8_2019.c ****             {
 383:../reversi8_2019.c ****                 (*b)++;
 1921              		.loc 1 383 0
 1922 07f8 1C301BE5 		ldr	r3, [fp, #-28]
 1923 07fc 003093E5 		ldr	r3, [r3, #0]
 1924 0800 012083E2 		add	r2, r3, #1
 1925 0804 1C301BE5 		ldr	r3, [fp, #-28]
 1926 0808 002083E5 		str	r2, [r3, #0]
 1927 080c 0D0000EA 		b	.L42
 1928              	.L41:
 384:../reversi8_2019.c ****             }
 385:../reversi8_2019.c ****             else if (tablero[i][j] == FICHA_NEGRA)
 1929              		.loc 1 385 0
 1930 0810 10301BE5 		ldr	r3, [fp, #-16]
 1931 0814 8331A0E1 		mov	r3, r3, asl #3
 1932 0818 18201BE5 		ldr	r2, [fp, #-24]
 1933 081c 032082E0 		add	r2, r2, r3
 1934 0820 14301BE5 		ldr	r3, [fp, #-20]
 1935 0824 033082E0 		add	r3, r2, r3
 1936 0828 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1937 082c 020053E3 		cmp	r3, #2
 1938 0830 0400001A 		bne	.L42
 386:../reversi8_2019.c ****             {
 387:../reversi8_2019.c ****                 (*n)++;
 1939              		.loc 1 387 0
 1940 0834 20301BE5 		ldr	r3, [fp, #-32]
 1941 0838 003093E5 		ldr	r3, [r3, #0]
 1942 083c 012083E2 		add	r2, r3, #1
 1943 0840 20301BE5 		ldr	r3, [fp, #-32]
 1944 0844 002083E5 		str	r2, [r3, #0]
 1945              	.L42:
 379:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1946              		.loc 1 379 0
 1947 0848 14301BE5 		ldr	r3, [fp, #-20]
 1948 084c 013083E2 		add	r3, r3, #1
 1949 0850 14300BE5 		str	r3, [fp, #-20]
 1950              	.L40:
 379:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1951              		.loc 1 379 0 is_stmt 0 discriminator 1
 1952 0854 14301BE5 		ldr	r3, [fp, #-20]
 1953 0858 070053E3 		cmp	r3, #7
 1954 085c DCFFFFDA 		ble	.L43
 377:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1955              		.loc 1 377 0 is_stmt 1
 1956 0860 10301BE5 		ldr	r3, [fp, #-16]
 1957 0864 013083E2 		add	r3, r3, #1
 1958 0868 10300BE5 		str	r3, [fp, #-16]
 1959              	.L39:
 377:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1960              		.loc 1 377 0 is_stmt 0 discriminator 1
 1961 086c 10301BE5 		ldr	r3, [fp, #-16]
 1962 0870 070053E3 		cmp	r3, #7
 1963 0874 D3FFFFDA 		ble	.L44
 388:../reversi8_2019.c ****             }
 389:../reversi8_2019.c ****         }
 390:../reversi8_2019.c ****     }
 391:../reversi8_2019.c **** }
 1964              		.loc 1 391 0 is_stmt 1
 1965 0878 0CD04BE2 		sub	sp, fp, #12
 1966 087c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1967 0880 1EFF2FE1 		bx	lr
 1968              		.cfi_endproc
 1969              	.LFE7:
 1971              		.align	2
 1972              		.global	actualizar_candidatas
 1974              	actualizar_candidatas:
 1975              	.LFB8:
 392:../reversi8_2019.c **** 
 393:../reversi8_2019.c **** void actualizar_candidatas(char candidatas[][DIM], char f, char c)
 394:../reversi8_2019.c **** {
 1976              		.loc 1 394 0
 1977              		.cfi_startproc
 1978              		@ Function supports interworking.
 1979              		@ args = 0, pretend = 0, frame = 8
 1980              		@ frame_needed = 1, uses_anonymous_args = 0
 1981 0884 0DC0A0E1 		mov	ip, sp
 1982              	.LCFI16:
 1983              		.cfi_def_cfa_register 12
 1984 0888 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1985 088c 04B04CE2 		sub	fp, ip, #4
 1986              		.cfi_offset 14, -8
 1987              		.cfi_offset 13, -12
 1988              		.cfi_offset 11, -16
 1989              	.LCFI17:
 1990              		.cfi_def_cfa 11, 4
 1991 0890 08D04DE2 		sub	sp, sp, #8
 1992 0894 10000BE5 		str	r0, [fp, #-16]
 1993 0898 0230A0E1 		mov	r3, r2
 1994 089c 0120A0E1 		mov	r2, r1
 1995 08a0 11204BE5 		strb	r2, [fp, #-17]
 1996 08a4 12304BE5 		strb	r3, [fp, #-18]
 395:../reversi8_2019.c ****     // donde ya se ha colocado no se puede volver a colocar
 396:../reversi8_2019.c ****     // En las posiciones alrededor sí
 397:../reversi8_2019.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 1997              		.loc 1 397 0
 1998 08a8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1999 08ac 8331A0E1 		mov	r3, r3, asl #3
 2000 08b0 10201BE5 		ldr	r2, [fp, #-16]
 2001 08b4 032082E0 		add	r2, r2, r3
 2002 08b8 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2003 08bc 0210A0E3 		mov	r1, #2
 2004 08c0 0310C2E7 		strb	r1, [r2, r3]
 398:../reversi8_2019.c ****     if (f > 0)
 2005              		.loc 1 398 0
 2006 08c4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2007 08c8 000053E3 		cmp	r3, #0
 2008 08cc 3C00000A 		beq	.L46
 399:../reversi8_2019.c ****     {
 400:../reversi8_2019.c ****         if (candidatas[f-1][c] != CASILLA_OCUPADA)
 2009              		.loc 1 400 0
 2010 08d0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2011 08d4 013043E2 		sub	r3, r3, #1
 2012 08d8 8331A0E1 		mov	r3, r3, asl #3
 2013 08dc 10201BE5 		ldr	r2, [fp, #-16]
 2014 08e0 032082E0 		add	r2, r2, r3
 2015 08e4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2016 08e8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2017 08ec 020053E3 		cmp	r3, #2
 2018 08f0 0700000A 		beq	.L47
 401:../reversi8_2019.c ****             candidatas[f-1][c] = SI;
 2019              		.loc 1 401 0
 2020 08f4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2021 08f8 013043E2 		sub	r3, r3, #1
 2022 08fc 8331A0E1 		mov	r3, r3, asl #3
 2023 0900 10201BE5 		ldr	r2, [fp, #-16]
 2024 0904 032082E0 		add	r2, r2, r3
 2025 0908 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2026 090c 0110A0E3 		mov	r1, #1
 2027 0910 0310C2E7 		strb	r1, [r2, r3]
 2028              	.L47:
 402:../reversi8_2019.c **** 
 403:../reversi8_2019.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2029              		.loc 1 403 0
 2030 0914 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2031 0918 000053E3 		cmp	r3, #0
 2032 091c 1200000A 		beq	.L48
 2033              		.loc 1 403 0 is_stmt 0 discriminator 1
 2034 0920 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2035 0924 013043E2 		sub	r3, r3, #1
 2036 0928 8331A0E1 		mov	r3, r3, asl #3
 2037 092c 10201BE5 		ldr	r2, [fp, #-16]
 2038 0930 032082E0 		add	r2, r2, r3
 2039 0934 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2040 0938 013043E2 		sub	r3, r3, #1
 2041 093c 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2042 0940 020053E3 		cmp	r3, #2
 2043 0944 0800000A 		beq	.L48
 404:../reversi8_2019.c ****             candidatas[f-1][c-1] = SI;
 2044              		.loc 1 404 0 is_stmt 1
 2045 0948 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2046 094c 013043E2 		sub	r3, r3, #1
 2047 0950 8331A0E1 		mov	r3, r3, asl #3
 2048 0954 10201BE5 		ldr	r2, [fp, #-16]
 2049 0958 032082E0 		add	r2, r2, r3
 2050 095c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2051 0960 013043E2 		sub	r3, r3, #1
 2052 0964 0110A0E3 		mov	r1, #1
 2053 0968 0310C2E7 		strb	r1, [r2, r3]
 2054              	.L48:
 405:../reversi8_2019.c **** 
 406:../reversi8_2019.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2055              		.loc 1 406 0
 2056 096c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2057 0970 060053E3 		cmp	r3, #6
 2058 0974 1200008A 		bhi	.L46
 2059              		.loc 1 406 0 is_stmt 0 discriminator 1
 2060 0978 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2061 097c 013043E2 		sub	r3, r3, #1
 2062 0980 8331A0E1 		mov	r3, r3, asl #3
 2063 0984 10201BE5 		ldr	r2, [fp, #-16]
 2064 0988 032082E0 		add	r2, r2, r3
 2065 098c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2066 0990 013083E2 		add	r3, r3, #1
 2067 0994 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2068 0998 020053E3 		cmp	r3, #2
 2069 099c 0800000A 		beq	.L46
 407:../reversi8_2019.c ****             candidatas[f-1][c+1] = SI;
 2070              		.loc 1 407 0 is_stmt 1
 2071 09a0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2072 09a4 013043E2 		sub	r3, r3, #1
 2073 09a8 8331A0E1 		mov	r3, r3, asl #3
 2074 09ac 10201BE5 		ldr	r2, [fp, #-16]
 2075 09b0 032082E0 		add	r2, r2, r3
 2076 09b4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2077 09b8 013083E2 		add	r3, r3, #1
 2078 09bc 0110A0E3 		mov	r1, #1
 2079 09c0 0310C2E7 		strb	r1, [r2, r3]
 2080              	.L46:
 408:../reversi8_2019.c ****     }
 409:../reversi8_2019.c ****     if (f < 7)
 2081              		.loc 1 409 0
 2082 09c4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2083 09c8 060053E3 		cmp	r3, #6
 2084 09cc 3C00008A 		bhi	.L49
 410:../reversi8_2019.c ****     {
 411:../reversi8_2019.c ****         if (candidatas[f+1][c] != CASILLA_OCUPADA)
 2085              		.loc 1 411 0
 2086 09d0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2087 09d4 013083E2 		add	r3, r3, #1
 2088 09d8 8331A0E1 		mov	r3, r3, asl #3
 2089 09dc 10201BE5 		ldr	r2, [fp, #-16]
 2090 09e0 032082E0 		add	r2, r2, r3
 2091 09e4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2092 09e8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2093 09ec 020053E3 		cmp	r3, #2
 2094 09f0 0700000A 		beq	.L50
 412:../reversi8_2019.c ****             candidatas[f+1][c] = SI;
 2095              		.loc 1 412 0
 2096 09f4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2097 09f8 013083E2 		add	r3, r3, #1
 2098 09fc 8331A0E1 		mov	r3, r3, asl #3
 2099 0a00 10201BE5 		ldr	r2, [fp, #-16]
 2100 0a04 032082E0 		add	r2, r2, r3
 2101 0a08 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2102 0a0c 0110A0E3 		mov	r1, #1
 2103 0a10 0310C2E7 		strb	r1, [r2, r3]
 2104              	.L50:
 413:../reversi8_2019.c **** 
 414:../reversi8_2019.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2105              		.loc 1 414 0
 2106 0a14 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2107 0a18 000053E3 		cmp	r3, #0
 2108 0a1c 1200000A 		beq	.L51
 2109              		.loc 1 414 0 is_stmt 0 discriminator 1
 2110 0a20 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2111 0a24 013083E2 		add	r3, r3, #1
 2112 0a28 8331A0E1 		mov	r3, r3, asl #3
 2113 0a2c 10201BE5 		ldr	r2, [fp, #-16]
 2114 0a30 032082E0 		add	r2, r2, r3
 2115 0a34 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2116 0a38 013043E2 		sub	r3, r3, #1
 2117 0a3c 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2118 0a40 020053E3 		cmp	r3, #2
 2119 0a44 0800000A 		beq	.L51
 415:../reversi8_2019.c ****             candidatas[f+1][c-1] = SI;
 2120              		.loc 1 415 0 is_stmt 1
 2121 0a48 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2122 0a4c 013083E2 		add	r3, r3, #1
 2123 0a50 8331A0E1 		mov	r3, r3, asl #3
 2124 0a54 10201BE5 		ldr	r2, [fp, #-16]
 2125 0a58 032082E0 		add	r2, r2, r3
 2126 0a5c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2127 0a60 013043E2 		sub	r3, r3, #1
 2128 0a64 0110A0E3 		mov	r1, #1
 2129 0a68 0310C2E7 		strb	r1, [r2, r3]
 2130              	.L51:
 416:../reversi8_2019.c **** 
 417:../reversi8_2019.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2131              		.loc 1 417 0
 2132 0a6c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2133 0a70 060053E3 		cmp	r3, #6
 2134 0a74 1200008A 		bhi	.L49
 2135              		.loc 1 417 0 is_stmt 0 discriminator 1
 2136 0a78 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2137 0a7c 013083E2 		add	r3, r3, #1
 2138 0a80 8331A0E1 		mov	r3, r3, asl #3
 2139 0a84 10201BE5 		ldr	r2, [fp, #-16]
 2140 0a88 032082E0 		add	r2, r2, r3
 2141 0a8c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2142 0a90 013083E2 		add	r3, r3, #1
 2143 0a94 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2144 0a98 020053E3 		cmp	r3, #2
 2145 0a9c 0800000A 		beq	.L49
 418:../reversi8_2019.c ****             candidatas[f+1][c+1] = SI;
 2146              		.loc 1 418 0 is_stmt 1
 2147 0aa0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2148 0aa4 013083E2 		add	r3, r3, #1
 2149 0aa8 8331A0E1 		mov	r3, r3, asl #3
 2150 0aac 10201BE5 		ldr	r2, [fp, #-16]
 2151 0ab0 032082E0 		add	r2, r2, r3
 2152 0ab4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2153 0ab8 013083E2 		add	r3, r3, #1
 2154 0abc 0110A0E3 		mov	r1, #1
 2155 0ac0 0310C2E7 		strb	r1, [r2, r3]
 2156              	.L49:
 419:../reversi8_2019.c ****     }
 420:../reversi8_2019.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2157              		.loc 1 420 0
 2158 0ac4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2159 0ac8 000053E3 		cmp	r3, #0
 2160 0acc 1000000A 		beq	.L52
 2161              		.loc 1 420 0 is_stmt 0 discriminator 1
 2162 0ad0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2163 0ad4 8331A0E1 		mov	r3, r3, asl #3
 2164 0ad8 10201BE5 		ldr	r2, [fp, #-16]
 2165 0adc 032082E0 		add	r2, r2, r3
 2166 0ae0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2167 0ae4 013043E2 		sub	r3, r3, #1
 2168 0ae8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2169 0aec 020053E3 		cmp	r3, #2
 2170 0af0 0700000A 		beq	.L52
 421:../reversi8_2019.c ****         candidatas[f][c-1] = SI;
 2171              		.loc 1 421 0 is_stmt 1
 2172 0af4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2173 0af8 8331A0E1 		mov	r3, r3, asl #3
 2174 0afc 10201BE5 		ldr	r2, [fp, #-16]
 2175 0b00 032082E0 		add	r2, r2, r3
 2176 0b04 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2177 0b08 013043E2 		sub	r3, r3, #1
 2178 0b0c 0110A0E3 		mov	r1, #1
 2179 0b10 0310C2E7 		strb	r1, [r2, r3]
 2180              	.L52:
 422:../reversi8_2019.c **** 
 423:../reversi8_2019.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2181              		.loc 1 423 0
 2182 0b14 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2183 0b18 060053E3 		cmp	r3, #6
 2184 0b1c 1000008A 		bhi	.L45
 2185              		.loc 1 423 0 is_stmt 0 discriminator 1
 2186 0b20 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2187 0b24 8331A0E1 		mov	r3, r3, asl #3
 2188 0b28 10201BE5 		ldr	r2, [fp, #-16]
 2189 0b2c 032082E0 		add	r2, r2, r3
 2190 0b30 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2191 0b34 013083E2 		add	r3, r3, #1
 2192 0b38 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2193 0b3c 020053E3 		cmp	r3, #2
 2194 0b40 0700000A 		beq	.L45
 424:../reversi8_2019.c ****         candidatas[f][c+1] = SI;
 2195              		.loc 1 424 0 is_stmt 1
 2196 0b44 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2197 0b48 8331A0E1 		mov	r3, r3, asl #3
 2198 0b4c 10201BE5 		ldr	r2, [fp, #-16]
 2199 0b50 032082E0 		add	r2, r2, r3
 2200 0b54 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2201 0b58 013083E2 		add	r3, r3, #1
 2202 0b5c 0110A0E3 		mov	r1, #1
 2203 0b60 0310C2E7 		strb	r1, [r2, r3]
 2204              	.L45:
 425:../reversi8_2019.c **** }
 2205              		.loc 1 425 0
 2206 0b64 0CD04BE2 		sub	sp, fp, #12
 2207 0b68 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2208 0b6c 1EFF2FE1 		bx	lr
 2209              		.cfi_endproc
 2210              	.LFE8:
 2212              		.align	2
 2213              		.global	reversi8_inicializar
 2215              	reversi8_inicializar:
 2216              	.LFB9:
 426:../reversi8_2019.c **** 
 427:../reversi8_2019.c **** 
 428:../reversi8_2019.c **** 
 429:../reversi8_2019.c **** 
 430:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 431:../reversi8_2019.c **** // Proceso principal del juego
 432:../reversi8_2019.c **** // Utiliza el tablero,
 433:../reversi8_2019.c **** // y las direcciones en las que indica el jugador la fila y la columna
 434:../reversi8_2019.c **** // y la señal de ready que indica que se han actualizado fila y columna
 435:../reversi8_2019.c **** // tablero, fila, columna y ready son variables globales aunque deberían ser locales de reversi8,
 436:../reversi8_2019.c **** // la razón es que al meterlas en la pila no las pone juntas, y así jugar es más complicado.
 437:../reversi8_2019.c **** // en esta versión el humano lleva negras y la máquina blancas
 438:../reversi8_2019.c **** // no se comprueba que el humano mueva correctamente.
 439:../reversi8_2019.c **** // Sólo que la máquina realice un movimiento correcto.
 440:../reversi8_2019.c **** 
 441:../reversi8_2019.c **** void reversi8_inicializar()
 442:../reversi8_2019.c **** {
 2217              		.loc 1 442 0
 2218              		.cfi_startproc
 2219              		@ Function supports interworking.
 2220              		@ args = 0, pretend = 0, frame = 0
 2221              		@ frame_needed = 1, uses_anonymous_args = 0
 2222 0b70 0DC0A0E1 		mov	ip, sp
 2223              	.LCFI18:
 2224              		.cfi_def_cfa_register 12
 2225 0b74 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2226 0b78 04B04CE2 		sub	fp, ip, #4
 2227              		.cfi_offset 14, -8
 2228              		.cfi_offset 13, -12
 2229              		.cfi_offset 11, -16
 2230              	.LCFI19:
 2231              		.cfi_def_cfa 11, 4
 443:../reversi8_2019.c **** 	init_table(tablero, candidatas);
 2232              		.loc 1 443 0
 2233 0b7c 10009FE5 		ldr	r0, .L55
 2234 0b80 10109FE5 		ldr	r1, .L55+4
 2235 0b84 FEFFFFEB 		bl	init_table
 444:../reversi8_2019.c **** }
 2236              		.loc 1 444 0
 2237 0b88 0CD04BE2 		sub	sp, fp, #12
 2238 0b8c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2239 0b90 1EFF2FE1 		bx	lr
 2240              	.L56:
 2241              		.align	2
 2242              	.L55:
 2243 0b94 08000000 		.word	tablero
 2244 0b98 48000000 		.word	candidatas
 2245              		.cfi_endproc
 2246              	.LFE9:
 2248              		.align	2
 2249              		.global	reversi8
 2251              	reversi8:
 2252              	.LFB10:
 445:../reversi8_2019.c **** 
 446:../reversi8_2019.c **** void reversi8()
 447:../reversi8_2019.c **** {
 2253              		.loc 1 447 0
 2254              		.cfi_startproc
 2255              		@ Function supports interworking.
 2256              		@ args = 0, pretend = 0, frame = 0
 2257              		@ frame_needed = 1, uses_anonymous_args = 0
 2258 0b9c 0DC0A0E1 		mov	ip, sp
 2259              	.LCFI20:
 2260              		.cfi_def_cfa_register 12
 2261 0ba0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2262 0ba4 04B04CE2 		sub	fp, ip, #4
 2263              		.cfi_offset 14, -8
 2264              		.cfi_offset 13, -12
 2265              		.cfi_offset 11, -16
 2266              	.LCFI21:
 2267              		.cfi_def_cfa 11, 4
 448:../reversi8_2019.c **** 	 ////////////////////////////////////////////////////////////////////
 449:../reversi8_2019.c **** 	 // Tablero candidatas: se usa para no explorar todas las posiciones del tablero
 450:../reversi8_2019.c **** 	// sólo se exploran las que están alrededor de las fichas colocadas
 451:../reversi8_2019.c **** 	 ////////////////////////////////////////////////////////////////////
 452:../reversi8_2019.c ****     if(fin == 0)
 2268              		.loc 1 452 0
 2269 0ba8 CC319FE5 		ldr	r3, .L61
 2270 0bac 003093E5 		ldr	r3, [r3, #0]
 2271 0bb0 000053E3 		cmp	r3, #0
 2272 0bb4 6900001A 		bne	.L58
 453:../reversi8_2019.c ****     {
 454:../reversi8_2019.c ****         move = 0;
 2273              		.loc 1 454 0
 2274 0bb8 C0319FE5 		ldr	r3, .L61+4
 2275 0bbc 0020A0E3 		mov	r2, #0
 2276 0bc0 002083E5 		str	r2, [r3, #0]
 455:../reversi8_2019.c ****         if(ready)
 2277              		.loc 1 455 0
 2278 0bc4 B8319FE5 		ldr	r3, .L61+8
 2279 0bc8 0030D3E5 		ldrb	r3, [r3, #0]
 2280 0bcc FF3003E2 		and	r3, r3, #255
 2281 0bd0 000053E3 		cmp	r3, #0
 2282 0bd4 6100000A 		beq	.L58
 456:../reversi8_2019.c ****         {
 457:../reversi8_2019.c ****         	ready = 0;
 2283              		.loc 1 457 0
 2284 0bd8 A4319FE5 		ldr	r3, .L61+8
 2285 0bdc 0020A0E3 		mov	r2, #0
 2286 0be0 0020C3E5 		strb	r2, [r3, #0]
 458:../reversi8_2019.c ****         	// si la fila o columna son 8 asumimos que el jugador no puede mover
 459:../reversi8_2019.c ****         	if (((fila) != DIM) && ((columna) != DIM))
 2287              		.loc 1 459 0
 2288 0be4 9C319FE5 		ldr	r3, .L61+12
 2289 0be8 0030D3E5 		ldrb	r3, [r3, #0]
 2290 0bec FF3003E2 		and	r3, r3, #255
 2291 0bf0 080053E3 		cmp	r3, #8
 2292 0bf4 2900000A 		beq	.L59
 2293              		.loc 1 459 0 is_stmt 0 discriminator 1
 2294 0bf8 8C319FE5 		ldr	r3, .L61+16
 2295 0bfc 0030D3E5 		ldrb	r3, [r3, #0]
 2296 0c00 FF3003E2 		and	r3, r3, #255
 2297 0c04 080053E3 		cmp	r3, #8
 2298 0c08 2400000A 		beq	.L59
 460:../reversi8_2019.c ****         	{
 461:../reversi8_2019.c ****         		tablero[fila][columna] = FICHA_NEGRA;
 2299              		.loc 1 461 0 is_stmt 1
 2300 0c0c 74319FE5 		ldr	r3, .L61+12
 2301 0c10 0030D3E5 		ldrb	r3, [r3, #0]
 2302 0c14 FF3003E2 		and	r3, r3, #255
 2303 0c18 0310A0E1 		mov	r1, r3
 2304 0c1c 68319FE5 		ldr	r3, .L61+16
 2305 0c20 0030D3E5 		ldrb	r3, [r3, #0]
 2306 0c24 FF3003E2 		and	r3, r3, #255
 2307 0c28 60219FE5 		ldr	r2, .L61+20
 2308 0c2c 8111A0E1 		mov	r1, r1, asl #3
 2309 0c30 033081E0 		add	r3, r1, r3
 2310 0c34 033082E0 		add	r3, r2, r3
 2311 0c38 0220A0E3 		mov	r2, #2
 2312 0c3c 0020C3E5 		strb	r2, [r3, #0]
 462:../reversi8_2019.c ****         		actualizar_tablero(tablero, fila, columna, FICHA_NEGRA);
 2313              		.loc 1 462 0
 2314 0c40 40319FE5 		ldr	r3, .L61+12
 2315 0c44 0030D3E5 		ldrb	r3, [r3, #0]
 2316 0c48 FF2003E2 		and	r2, r3, #255
 2317 0c4c 38319FE5 		ldr	r3, .L61+16
 2318 0c50 0030D3E5 		ldrb	r3, [r3, #0]
 2319 0c54 FF3003E2 		and	r3, r3, #255
 2320 0c58 30019FE5 		ldr	r0, .L61+20
 2321 0c5c 0210A0E1 		mov	r1, r2
 2322 0c60 0320A0E1 		mov	r2, r3
 2323 0c64 0230A0E3 		mov	r3, #2
 2324 0c68 FEFFFFEB 		bl	actualizar_tablero
 463:../reversi8_2019.c ****         		actualizar_candidatas(candidatas, fila, columna);
 2325              		.loc 1 463 0
 2326 0c6c 14319FE5 		ldr	r3, .L61+12
 2327 0c70 0030D3E5 		ldrb	r3, [r3, #0]
 2328 0c74 FF2003E2 		and	r2, r3, #255
 2329 0c78 0C319FE5 		ldr	r3, .L61+16
 2330 0c7c 0030D3E5 		ldrb	r3, [r3, #0]
 2331 0c80 FF3003E2 		and	r3, r3, #255
 2332 0c84 08019FE5 		ldr	r0, .L61+24
 2333 0c88 0210A0E1 		mov	r1, r2
 2334 0c8c 0320A0E1 		mov	r2, r3
 2335 0c90 FEFFFFEB 		bl	actualizar_candidatas
 464:../reversi8_2019.c ****         		move = 1;
 2336              		.loc 1 464 0
 2337 0c94 E4309FE5 		ldr	r3, .L61+4
 2338 0c98 0120A0E3 		mov	r2, #1
 2339 0c9c 002083E5 		str	r2, [r3, #0]
 2340              	.L59:
 465:../reversi8_2019.c ****         	}
 466:../reversi8_2019.c ****         	// escribe el movimiento en las variables globales fila columna
 467:../reversi8_2019.c ****         	done = elegir_mov(candidatas, tablero, &f, &c);
 2341              		.loc 1 467 0
 2342 0ca0 EC009FE5 		ldr	r0, .L61+24
 2343 0ca4 E4109FE5 		ldr	r1, .L61+20
 2344 0ca8 E8209FE5 		ldr	r2, .L61+28
 2345 0cac E8309FE5 		ldr	r3, .L61+32
 2346 0cb0 FEFFFFEB 		bl	elegir_mov
 2347 0cb4 0020A0E1 		mov	r2, r0
 2348 0cb8 E0309FE5 		ldr	r3, .L61+36
 2349 0cbc 002083E5 		str	r2, [r3, #0]
 468:../reversi8_2019.c ****         	if (done == -1)
 2350              		.loc 1 468 0
 2351 0cc0 D8309FE5 		ldr	r3, .L61+36
 2352 0cc4 003093E5 		ldr	r3, [r3, #0]
 2353 0cc8 010073E3 		cmn	r3, #1
 2354 0ccc 0700001A 		bne	.L60
 469:../reversi8_2019.c ****         	{
 470:../reversi8_2019.c ****         		if (move == 0)
 2355              		.loc 1 470 0
 2356 0cd0 A8309FE5 		ldr	r3, .L61+4
 2357 0cd4 003093E5 		ldr	r3, [r3, #0]
 2358 0cd8 000053E3 		cmp	r3, #0
 2359 0cdc 1F00001A 		bne	.L58
 471:../reversi8_2019.c ****         		fin = 1;
 2360              		.loc 1 471 0
 2361 0ce0 94309FE5 		ldr	r3, .L61
 2362 0ce4 0120A0E3 		mov	r2, #1
 2363 0ce8 002083E5 		str	r2, [r3, #0]
 2364 0cec 1B0000EA 		b	.L58
 2365              	.L60:
 472:../reversi8_2019.c ****         	}
 473:../reversi8_2019.c ****         	else
 474:../reversi8_2019.c ****         	{
 475:../reversi8_2019.c ****         		tablero[f][c] = FICHA_BLANCA;
 2366              		.loc 1 475 0
 2367 0cf0 A0309FE5 		ldr	r3, .L61+28
 2368 0cf4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2369 0cf8 0310A0E1 		mov	r1, r3
 2370 0cfc 98309FE5 		ldr	r3, .L61+32
 2371 0d00 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2372 0d04 84209FE5 		ldr	r2, .L61+20
 2373 0d08 8111A0E1 		mov	r1, r1, asl #3
 2374 0d0c 033081E0 		add	r3, r1, r3
 2375 0d10 033082E0 		add	r3, r2, r3
 2376 0d14 0120A0E3 		mov	r2, #1
 2377 0d18 0020C3E5 		strb	r2, [r3, #0]
 476:../reversi8_2019.c ****         		actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 2378              		.loc 1 476 0
 2379 0d1c 74309FE5 		ldr	r3, .L61+28
 2380 0d20 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2381 0d24 70309FE5 		ldr	r3, .L61+32
 2382 0d28 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2383 0d2c 5C009FE5 		ldr	r0, .L61+20
 2384 0d30 0210A0E1 		mov	r1, r2
 2385 0d34 0320A0E1 		mov	r2, r3
 2386 0d38 0130A0E3 		mov	r3, #1
 2387 0d3c FEFFFFEB 		bl	actualizar_tablero
 477:../reversi8_2019.c ****         		actualizar_candidatas(candidatas, f, c);
 2388              		.loc 1 477 0
 2389 0d40 50309FE5 		ldr	r3, .L61+28
 2390 0d44 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2391 0d48 4C309FE5 		ldr	r3, .L61+32
 2392 0d4c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2393 0d50 3C009FE5 		ldr	r0, .L61+24
 2394 0d54 0210A0E1 		mov	r1, r2
 2395 0d58 0320A0E1 		mov	r2, r3
 2396 0d5c FEFFFFEB 		bl	actualizar_candidatas
 2397              	.L58:
 478:../reversi8_2019.c ****         	}
 479:../reversi8_2019.c ****         }
 480:../reversi8_2019.c ****     }
 481:../reversi8_2019.c ****     contar(tablero, &blancas, &negras);
 2398              		.loc 1 481 0
 2399 0d60 28009FE5 		ldr	r0, .L61+20
 2400 0d64 38109FE5 		ldr	r1, .L61+40
 2401 0d68 38209FE5 		ldr	r2, .L61+44
 2402 0d6c FEFFFFEB 		bl	contar
 482:../reversi8_2019.c **** }
 2403              		.loc 1 482 0
 2404 0d70 0CD04BE2 		sub	sp, fp, #12
 2405 0d74 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2406 0d78 1EFF2FE1 		bx	lr
 2407              	.L62:
 2408              		.align	2
 2409              	.L61:
 2410 0d7c 00000000 		.word	fin
 2411 0d80 00000000 		.word	move
 2412 0d84 92000000 		.word	ready
 2413 0d88 90000000 		.word	fila
 2414 0d8c 91000000 		.word	columna
 2415 0d90 08000000 		.word	tablero
 2416 0d94 48000000 		.word	candidatas
 2417 0d98 00000000 		.word	f
 2418 0d9c 00000000 		.word	c
 2419 0da0 00000000 		.word	done
 2420 0da4 00000000 		.word	blancas
 2421 0da8 00000000 		.word	negras
 2422              		.cfi_endproc
 2423              	.LFE10:
 2425              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 reversi8_2019.c
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:981    .bss:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:982    .bss:00000000 timer2_num_int
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:985    .rodata:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:988    .rodata:00000000 tabla_valor
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1057   .rodata:00000040 vSF
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1070   .rodata:00000048 vSC
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1081   .bss:00000008 tablero
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1084   .bss:00000048 candidatas
                            *COM*:00000004 done
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1091   .bss:00000088 move
                            *COM*:00000004 blancas
                            *COM*:00000004 negras
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1099   .bss:0000008c fin
                            *COM*:00000001 f
                            *COM*:00000001 c
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1103   .bss:00000090 fila
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1105   .bss:00000091 columna
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1107   .bss:00000092 ready
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1110   .text:00000000 $a
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1113   .text:00000000 reversi_procesar
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:2251   .text:00000b9c reversi8
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1156   .text:00000054 $d
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1162   .text:00000060 $a
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1165   .text:00000060 init_table
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1332   .text:0000022c ficha_valida
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1407   .text:000002e0 patron_volteo
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1516   .text:000003f4 voltear
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1581   .text:00000484 actualizar_tablero
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1672   .text:00000574 $d
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1677   .text:0000057c $a
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1680   .text:0000057c elegir_mov
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1863   .text:0000077c $d
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1869   .text:00000788 $a
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1872   .text:00000788 contar
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:1974   .text:00000884 actualizar_candidatas
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:2215   .text:00000b70 reversi8_inicializar
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:2243   .text:00000b94 $d
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:2248   .text:00000b9c $a
C:\Users\guest\AppData\Local\Temp\ccKq7RIN.s:2410   .text:00000d7c $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
patron_volteo_arm_arm
