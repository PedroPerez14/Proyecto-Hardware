   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"reversi_main.c"
  21              	.Ltext0:
  22              		.file 1 "../reversi_main.c"
 2203              		.align	2
 2204              	timer2_num_int:
 2205 0000 00000000 		.space	4
 2206              	estado:
 2207 0004 00       		.space	1
 2208 0005 000000   		.align	2
 2209              	cuenta_int_latido:
 2210 0008 00000000 		.space	4
 2211              	estado_led1:
 2212 000c 00       		.space	1
 2213              		.text
 2214              		.align	2
 2215              		.global	reversi_inicializar
 2217              	reversi_inicializar:
 2218              	.LFB0:
   1:../reversi_main.c **** /*********************************************************************************************
   2:../reversi_main.c **** * Fichero:		reversi_main.c
   3:../reversi_main.c **** * Autor:		Fernando Peña Bes (NIA: 756012)
   4:../reversi_main.c **** * 				Pedro José Pérez García (NIA: 756642)
   5:../reversi_main.c **** * Descrip:		Bucle principal del reversi que gestiona los diferentes
   6:../reversi_main.c **** * 				eventos que entran en la pila de depuración.
   7:../reversi_main.c **** * 				También inicializa los periféricos necesarios para el juego.
   8:../reversi_main.c **** *********************************************************************************************/
   9:../reversi_main.c **** 
  10:../reversi_main.c **** /*--- ficheros de cabecera ---*/
  11:../reversi_main.c **** #include "timer2.h"
  12:../reversi_main.c **** #include "44b.h"
  13:../reversi_main.c **** #include "44blib.h"
  14:../reversi_main.c **** #include "8led.h"
  15:../reversi_main.c **** #include "button.h"
  16:../reversi_main.c **** #include "led.h"
  17:../reversi_main.c **** #include "timer.h"
  18:../reversi_main.c **** #include "44blib.h"
  19:../reversi_main.c **** #include "44b.h"
  20:../reversi_main.c **** #include "reversi8_2019.h"
  21:../reversi_main.c **** #include "pruebas_timer2.h"
  22:../reversi_main.c **** #include "rutinas_excepciones.h"
  23:../reversi_main.c **** #include "cola_depuracion.h"
  24:../reversi_main.c **** #include "reversi_main.h"
  25:../reversi_main.c **** #include "codigos_eventos.h"
  26:../reversi_main.c **** #include <stdint.h>
  27:../reversi_main.c **** //#include "codigos_eventos.h"	//Hay que ponerse de acuerdo y hacerlo
  28:../reversi_main.c **** 
  29:../reversi_main.c **** /*--- variables ---*/
  30:../reversi_main.c **** static int cuenta_int_latido;
  31:../reversi_main.c **** static char estado_led1;
  32:../reversi_main.c **** 
  33:../reversi_main.c **** /*--- Código de funciones ---*/
  34:../reversi_main.c **** 
  35:../reversi_main.c **** void reversi_inicializar(void)
  36:../reversi_main.c **** {
 2219              		.loc 1 36 0
 2220              		.cfi_startproc
 2221              		@ Function supports interworking.
 2222              		@ args = 0, pretend = 0, frame = 0
 2223              		@ frame_needed = 1, uses_anonymous_args = 0
 2224 0000 0DC0A0E1 		mov	ip, sp
 2225              	.LCFI0:
 2226              		.cfi_def_cfa_register 12
 2227 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2228 0008 04B04CE2 		sub	fp, ip, #4
 2229              		.cfi_offset 14, -8
 2230              		.cfi_offset 13, -12
 2231              		.cfi_offset 11, -16
 2232              	.LCFI1:
 2233              		.cfi_def_cfa 11, 4
  37:../reversi_main.c **** 	//Inicializar las variables que hagan falta para proesar bien los eventos
  38:../reversi_main.c **** 	timer_init();
 2234              		.loc 1 38 0
 2235 000c FEFFFFEB 		bl	timer_init
  39:../reversi_main.c **** 	estado_led1 = 0;		//Para decidir si hay que esperar 7 u 8 eventos de tipo tick_latido (en la teorí
 2236              		.loc 1 39 0
 2237 0010 20309FE5 		ldr	r3, .L2
 2238 0014 0020A0E3 		mov	r2, #0
 2239 0018 0020C3E5 		strb	r2, [r3, #0]
  40:../reversi_main.c **** 							//también codifica el estado del led1 si estado_led1 == 0, codifica apagado y 1, encendido
  41:../reversi_main.c **** 	cuenta_int_latido = 0;	//Cada 7 u 8 hay que cambiar el led izquierdo, variable de la cuenta
 2240              		.loc 1 41 0
 2241 001c 18309FE5 		ldr	r3, .L2+4
 2242 0020 0020A0E3 		mov	r2, #0
 2243 0024 002083E5 		str	r2, [r3, #0]
  42:../reversi_main.c **** 	led1_off();				//El led empieza apagado
 2244              		.loc 1 42 0
 2245 0028 FEFFFFEB 		bl	led1_off
  43:../reversi_main.c **** }
 2246              		.loc 1 43 0
 2247 002c 0CD04BE2 		sub	sp, fp, #12
 2248 0030 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2249 0034 1EFF2FE1 		bx	lr
 2250              	.L3:
 2251              		.align	2
 2252              	.L2:
 2253 0038 0C000000 		.word	estado_led1
 2254 003c 08000000 		.word	cuenta_int_latido
 2255              		.cfi_endproc
 2256              	.LFE0:
 2258              		.align	2
 2259              		.global	dormir_procesador
 2261              	dormir_procesador:
 2262              	.LFB1:
  44:../reversi_main.c **** 
  45:../reversi_main.c **** void dormir_procesador(void)
  46:../reversi_main.c **** {
 2263              		.loc 1 46 0
 2264              		.cfi_startproc
 2265              		@ Function supports interworking.
 2266              		@ args = 0, pretend = 0, frame = 0
 2267              		@ frame_needed = 1, uses_anonymous_args = 0
 2268 0040 0DC0A0E1 		mov	ip, sp
 2269              	.LCFI2:
 2270              		.cfi_def_cfa_register 12
 2271 0044 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2272 0048 04B04CE2 		sub	fp, ip, #4
 2273              		.cfi_offset 14, -8
 2274              		.cfi_offset 13, -12
 2275              		.cfi_offset 11, -16
 2276              	.LCFI3:
 2277              		.cfi_def_cfa 11, 4
  47:../reversi_main.c **** 	;
  48:../reversi_main.c **** }
 2278              		.loc 1 48 0
 2279 004c 0CD04BE2 		sub	sp, fp, #12
 2280 0050 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2281 0054 1EFF2FE1 		bx	lr
 2282              		.cfi_endproc
 2283              	.LFE1:
 2285              		.align	2
 2286              		.global	Latido_ev_new_tick
 2288              	Latido_ev_new_tick:
 2289              	.LFB2:
  49:../reversi_main.c **** 
  50:../reversi_main.c **** void Latido_ev_new_tick(void)
  51:../reversi_main.c **** {
 2290              		.loc 1 51 0
 2291              		.cfi_startproc
 2292              		@ Function supports interworking.
 2293              		@ args = 0, pretend = 0, frame = 0
 2294              		@ frame_needed = 1, uses_anonymous_args = 0
 2295 0058 0DC0A0E1 		mov	ip, sp
 2296              	.LCFI4:
 2297              		.cfi_def_cfa_register 12
 2298 005c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2299 0060 04B04CE2 		sub	fp, ip, #4
 2300              		.cfi_offset 14, -8
 2301              		.cfi_offset 13, -12
 2302              		.cfi_offset 11, -16
 2303              	.LCFI5:
 2304              		.cfi_def_cfa 11, 4
  52:../reversi_main.c **** 	cuenta_int_latido += 1;
 2305              		.loc 1 52 0
 2306 0064 84309FE5 		ldr	r3, .L8
 2307 0068 003093E5 		ldr	r3, [r3, #0]
 2308 006c 012083E2 		add	r2, r3, #1
 2309 0070 78309FE5 		ldr	r3, .L8
 2310 0074 002083E5 		str	r2, [r3, #0]
  53:../reversi_main.c **** 	if(estado_led1 == 0)
 2311              		.loc 1 53 0
 2312 0078 74309FE5 		ldr	r3, .L8+4
 2313 007c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2314 0080 000053E3 		cmp	r3, #0
 2315 0084 0B00001A 		bne	.L6
  54:../reversi_main.c **** 	{
  55:../reversi_main.c **** 		if(cuenta_int_latido == 7)
 2316              		.loc 1 55 0
 2317 0088 60309FE5 		ldr	r3, .L8
 2318 008c 003093E5 		ldr	r3, [r3, #0]
 2319 0090 070053E3 		cmp	r3, #7
 2320 0094 1200001A 		bne	.L5
  56:../reversi_main.c **** 		{
  57:../reversi_main.c **** 			estado_led1 = 1;
 2321              		.loc 1 57 0
 2322 0098 54309FE5 		ldr	r3, .L8+4
 2323 009c 0120A0E3 		mov	r2, #1
 2324 00a0 0020C3E5 		strb	r2, [r3, #0]
  58:../reversi_main.c **** 			led1_on();
 2325              		.loc 1 58 0
 2326 00a4 FEFFFFEB 		bl	led1_on
  59:../reversi_main.c **** 			cuenta_int_latido = 0;
 2327              		.loc 1 59 0
 2328 00a8 40309FE5 		ldr	r3, .L8
 2329 00ac 0020A0E3 		mov	r2, #0
 2330 00b0 002083E5 		str	r2, [r3, #0]
 2331 00b4 0A0000EA 		b	.L5
 2332              	.L6:
  60:../reversi_main.c **** 		}
  61:../reversi_main.c **** 	}
  62:../reversi_main.c **** 	else
  63:../reversi_main.c **** 	{
  64:../reversi_main.c **** 		if(cuenta_int_latido == 8)
 2333              		.loc 1 64 0
 2334 00b8 30309FE5 		ldr	r3, .L8
 2335 00bc 003093E5 		ldr	r3, [r3, #0]
 2336 00c0 080053E3 		cmp	r3, #8
 2337 00c4 0600001A 		bne	.L5
  65:../reversi_main.c **** 		{
  66:../reversi_main.c **** 			estado_led1 = 0;
 2338              		.loc 1 66 0
 2339 00c8 24309FE5 		ldr	r3, .L8+4
 2340 00cc 0020A0E3 		mov	r2, #0
 2341 00d0 0020C3E5 		strb	r2, [r3, #0]
  67:../reversi_main.c **** 			led1_off();
 2342              		.loc 1 67 0
 2343 00d4 FEFFFFEB 		bl	led1_off
  68:../reversi_main.c **** 			cuenta_int_latido = 0;
 2344              		.loc 1 68 0
 2345 00d8 10309FE5 		ldr	r3, .L8
 2346 00dc 0020A0E3 		mov	r2, #0
 2347 00e0 002083E5 		str	r2, [r3, #0]
 2348              	.L5:
  69:../reversi_main.c **** 		}
  70:../reversi_main.c **** 	}
  71:../reversi_main.c **** }
 2349              		.loc 1 71 0
 2350 00e4 0CD04BE2 		sub	sp, fp, #12
 2351 00e8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2352 00ec 1EFF2FE1 		bx	lr
 2353              	.L9:
 2354              		.align	2
 2355              	.L8:
 2356 00f0 08000000 		.word	cuenta_int_latido
 2357 00f4 0C000000 		.word	estado_led1
 2358              		.cfi_endproc
 2359              	.LFE2:
 2361              		.align	2
 2362              		.global	reversi_main
 2364              	reversi_main:
 2365              	.LFB3:
  72:../reversi_main.c **** 
  73:../reversi_main.c **** void reversi_main()
  74:../reversi_main.c **** {
 2366              		.loc 1 74 0
 2367              		.cfi_startproc
 2368              		@ Function supports interworking.
 2369              		@ args = 0, pretend = 0, frame = 8
 2370              		@ frame_needed = 1, uses_anonymous_args = 0
 2371 00f8 0DC0A0E1 		mov	ip, sp
 2372              	.LCFI6:
 2373              		.cfi_def_cfa_register 12
 2374 00fc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2375 0100 04B04CE2 		sub	fp, ip, #4
 2376              		.cfi_offset 14, -8
 2377              		.cfi_offset 13, -12
 2378              		.cfi_offset 11, -16
 2379              	.LCFI7:
 2380              		.cfi_def_cfa 11, 4
 2381 0104 08D04DE2 		sub	sp, sp, #8
  75:../reversi_main.c **** 	static volatile int es_Vacia;
  76:../reversi_main.c **** 	reversi_inicializar();
 2382              		.loc 1 76 0
 2383 0108 FEFFFFEB 		bl	reversi_inicializar
 2384              	.L16:
  77:../reversi_main.c **** 	while(1)
  78:../reversi_main.c **** 	{
  79:../reversi_main.c **** 		es_Vacia = esVacia();
 2385              		.loc 1 79 0
 2386 010c FEFFFFEB 		bl	esVacia
 2387 0110 0020A0E1 		mov	r2, r0
 2388 0114 70309FE5 		ldr	r3, .L18
 2389 0118 002083E5 		str	r2, [r3, #0]
  80:../reversi_main.c **** 		while( es_Vacia == -1)
 2390              		.loc 1 80 0
 2391 011c 140000EA 		b	.L11
 2392              	.L15:
 2393              	.LBB2:
  81:../reversi_main.c **** 		{
  82:../reversi_main.c **** 			//procesar
  83:../reversi_main.c **** 			uint32_t evento = pop_debug();
 2394              		.loc 1 83 0
 2395 0120 FEFFFFEB 		bl	pop_debug
 2396 0124 10000BE5 		str	r0, [fp, #-16]
  84:../reversi_main.c **** 			uint32_t info = evento & 0x00FFFFFF;	//Será necesario para procesar las pulsaciones de los boton
 2397              		.loc 1 84 0
 2398 0128 10301BE5 		ldr	r3, [fp, #-16]
 2399 012c FF34C3E3 		bic	r3, r3, #-16777216
 2400 0130 14300BE5 		str	r3, [fp, #-20]
  85:../reversi_main.c **** 			evento &= 0xFF000000;
 2401              		.loc 1 85 0
 2402 0134 10301BE5 		ldr	r3, [fp, #-16]
 2403 0138 FF3403E2 		and	r3, r3, #-16777216
 2404 013c 10300BE5 		str	r3, [fp, #-16]
  86:../reversi_main.c **** 			evento = evento >> 24;
 2405              		.loc 1 86 0
 2406 0140 10301BE5 		ldr	r3, [fp, #-16]
 2407 0144 233CA0E1 		mov	r3, r3, lsr #24
 2408 0148 10300BE5 		str	r3, [fp, #-16]
  87:../reversi_main.c **** 			switch(evento)
 2409              		.loc 1 87 0
 2410 014c 10301BE5 		ldr	r3, [fp, #-16]
 2411 0150 FF0053E3 		cmp	r3, #255
 2412 0154 0100001A 		bne	.L17
 2413              	.L13:
  88:../reversi_main.c **** 			{
  89:../reversi_main.c **** 			case tick_timer0 :
  90:../reversi_main.c **** 				Latido_ev_new_tick();
 2414              		.loc 1 90 0
 2415 0158 FEFFFFEB 		bl	Latido_ev_new_tick
  91:../reversi_main.c **** 				//button_ev_tick0();
  92:../reversi_main.c **** 				break;
 2416              		.loc 1 92 0
 2417 015c 000000EA 		b	.L14
 2418              	.L17:
  93:../reversi_main.c **** 			default :
  94:../reversi_main.c **** 				break;
 2419              		.loc 1 94 0
 2420 0160 0000A0E1 		mov	r0, r0	@ nop
 2421              	.L14:
  95:../reversi_main.c **** 			}
  96:../reversi_main.c **** 			es_Vacia = esVacia();
 2422              		.loc 1 96 0
 2423 0164 FEFFFFEB 		bl	esVacia
 2424 0168 0020A0E1 		mov	r2, r0
 2425 016c 18309FE5 		ldr	r3, .L18
 2426 0170 002083E5 		str	r2, [r3, #0]
 2427              	.L11:
 2428              	.LBE2:
  80:../reversi_main.c **** 		while( es_Vacia == -1)
 2429              		.loc 1 80 0 discriminator 1
 2430 0174 10309FE5 		ldr	r3, .L18
 2431 0178 003093E5 		ldr	r3, [r3, #0]
 2432 017c 010073E3 		cmn	r3, #1
 2433 0180 E6FFFF0A 		beq	.L15
  97:../reversi_main.c **** 		}
  98:../reversi_main.c **** 		dormir_procesador();
 2434              		.loc 1 98 0
 2435 0184 FEFFFFEB 		bl	dormir_procesador
  99:../reversi_main.c **** 	}
 2436              		.loc 1 99 0
 2437 0188 DFFFFFEA 		b	.L16
 2438              	.L19:
 2439              		.align	2
 2440              	.L18:
 2441 018c 10000000 		.word	es_Vacia.4066
 2442              		.cfi_endproc
 2443              	.LFE3:
 2445              		.bss
 2446 000d 000000   		.align	2
 2447              	es_Vacia.4066:
 2448 0010 00000000 		.space	4
 2449              		.text
 2450              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 reversi_main.c
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2203   .bss:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2204   .bss:00000000 timer2_num_int
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2206   .bss:00000004 estado
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2209   .bss:00000008 cuenta_int_latido
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2211   .bss:0000000c estado_led1
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2214   .text:00000000 $a
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2217   .text:00000000 reversi_inicializar
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2253   .text:00000038 $d
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2258   .text:00000040 $a
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2261   .text:00000040 dormir_procesador
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2288   .text:00000058 Latido_ev_new_tick
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2356   .text:000000f0 $d
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2361   .text:000000f8 $a
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2364   .text:000000f8 reversi_main
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2441   .text:0000018c $d
C:\Users\guest\AppData\Local\Temp\ccAPifGB.s:2447   .bss:00000010 es_Vacia.4066
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timer_init
led1_off
led1_on
esVacia
pop_debug
