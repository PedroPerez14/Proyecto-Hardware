   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"reversi_main.c"
  21              	.Ltext0:
  22              		.file 1 "../reversi_main.c"
 2207              		.align	2
 2208              	timer2_num_int:
 2209 0000 00000000 		.space	4
 2210              		.align	2
 2211              	cuenta_int_latido:
 2212 0004 00000000 		.space	4
 2213              	estado_led1:
 2214 0008 00       		.space	1
 2215 0009 000000   		.text
 2216              		.align	2
 2217              		.global	reversi_inicializar
 2219              	reversi_inicializar:
 2220              	.LFB0:
   1:../reversi_main.c **** /*********************************************************************************************
   2:../reversi_main.c **** * Fichero:		reversi_main.c
   3:../reversi_main.c **** * Autor:		Fernando Peña Bes (NIA: 756012)
   4:../reversi_main.c **** * 				Pedro José Pérez García (NIA: 756642)
   5:../reversi_main.c **** * Descrip:		Bucle principal del reversi que gestiona los diferentes
   6:../reversi_main.c **** * 				eventos que entran en la pila de depuración.
   7:../reversi_main.c **** * 				También inicializa los periféricos necesarios para el juego.
   8:../reversi_main.c **** *********************************************************************************************/
   9:../reversi_main.c **** 
  10:../reversi_main.c **** /*--- ficheros de cabecera ---*/
  11:../reversi_main.c **** #include "timer2.h"
  12:../reversi_main.c **** #include "44b.h"
  13:../reversi_main.c **** #include "44blib.h"
  14:../reversi_main.c **** #include "8led.h"
  15:../reversi_main.c **** #include "button.h"
  16:../reversi_main.c **** #include "led.h"
  17:../reversi_main.c **** #include "timer.h"
  18:../reversi_main.c **** #include "44blib.h"
  19:../reversi_main.c **** #include "44b.h"
  20:../reversi_main.c **** #include "reversi8_2019.h"
  21:../reversi_main.c **** #include "pruebas_timer2.h"
  22:../reversi_main.c **** #include "rutinas_excepciones.h"
  23:../reversi_main.c **** #include "cola_depuracion.h"
  24:../reversi_main.c **** #include "reversi_main.h"
  25:../reversi_main.c **** #include "codigos_eventos.h"
  26:../reversi_main.c **** #include <stdint.h>
  27:../reversi_main.c **** #include "codigos_eventos.h"	//Hay que ponerse de acuerdo y hacerlo
  28:../reversi_main.c **** 
  29:../reversi_main.c **** /*--- variables ---*/
  30:../reversi_main.c **** static int cuenta_int_latido;
  31:../reversi_main.c **** static char estado_led1;
  32:../reversi_main.c **** 
  33:../reversi_main.c **** /*--- Código de funciones ---*/
  34:../reversi_main.c **** 
  35:../reversi_main.c **** void reversi_inicializar(void)
  36:../reversi_main.c **** {
 2221              		.loc 1 36 0
 2222              		.cfi_startproc
 2223              		@ Function supports interworking.
 2224              		@ args = 0, pretend = 0, frame = 0
 2225              		@ frame_needed = 1, uses_anonymous_args = 0
 2226 0000 0DC0A0E1 		mov	ip, sp
 2227              	.LCFI0:
 2228              		.cfi_def_cfa_register 12
 2229 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2230 0008 04B04CE2 		sub	fp, ip, #4
 2231              		.cfi_offset 14, -8
 2232              		.cfi_offset 13, -12
 2233              		.cfi_offset 11, -16
 2234              	.LCFI1:
 2235              		.cfi_def_cfa 11, 4
  37:../reversi_main.c **** 	//Inicializar las variables que hagan falta para proesar bien los eventos
  38:../reversi_main.c **** 	timer_init();
 2236              		.loc 1 38 0
 2237 000c FEFFFFEB 		bl	timer_init
  39:../reversi_main.c **** 	estado_led1 = 0;		//Para decidir si hay que esperar 7 u 8 eventos de tipo tick_latido (en la teorí
 2238              		.loc 1 39 0
 2239 0010 20309FE5 		ldr	r3, .L2
 2240 0014 0020A0E3 		mov	r2, #0
 2241 0018 0020C3E5 		strb	r2, [r3, #0]
  40:../reversi_main.c **** 							//también codifica el estado del led1 si estado_led1 == 0, codifica apagado y 1, encendido
  41:../reversi_main.c **** 	cuenta_int_latido = 0;	//Cada 7 u 8 hay que cambiar el led izquierdo, variable de la cuenta
 2242              		.loc 1 41 0
 2243 001c 18309FE5 		ldr	r3, .L2+4
 2244 0020 0020A0E3 		mov	r2, #0
 2245 0024 002083E5 		str	r2, [r3, #0]
  42:../reversi_main.c **** 	led1_off();				//El led empieza apagado
 2246              		.loc 1 42 0
 2247 0028 FEFFFFEB 		bl	led1_off
  43:../reversi_main.c **** }
 2248              		.loc 1 43 0
 2249 002c 0CD04BE2 		sub	sp, fp, #12
 2250 0030 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2251 0034 1EFF2FE1 		bx	lr
 2252              	.L3:
 2253              		.align	2
 2254              	.L2:
 2255 0038 08000000 		.word	estado_led1
 2256 003c 04000000 		.word	cuenta_int_latido
 2257              		.cfi_endproc
 2258              	.LFE0:
 2260              		.align	2
 2261              		.global	dormir_procesador
 2263              	dormir_procesador:
 2264              	.LFB1:
  44:../reversi_main.c **** 
  45:../reversi_main.c **** void dormir_procesador(void)
  46:../reversi_main.c **** {
 2265              		.loc 1 46 0
 2266              		.cfi_startproc
 2267              		@ Function supports interworking.
 2268              		@ args = 0, pretend = 0, frame = 0
 2269              		@ frame_needed = 1, uses_anonymous_args = 0
 2270 0040 0DC0A0E1 		mov	ip, sp
 2271              	.LCFI2:
 2272              		.cfi_def_cfa_register 12
 2273 0044 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2274 0048 04B04CE2 		sub	fp, ip, #4
 2275              		.cfi_offset 14, -8
 2276              		.cfi_offset 13, -12
 2277              		.cfi_offset 11, -16
 2278              	.LCFI3:
 2279              		.cfi_def_cfa 11, 4
  47:../reversi_main.c **** 	;
  48:../reversi_main.c **** }
 2280              		.loc 1 48 0
 2281 004c 0CD04BE2 		sub	sp, fp, #12
 2282 0050 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2283 0054 1EFF2FE1 		bx	lr
 2284              		.cfi_endproc
 2285              	.LFE1:
 2287              		.align	2
 2288              		.global	Latido_ev_new_tick
 2290              	Latido_ev_new_tick:
 2291              	.LFB2:
  49:../reversi_main.c **** 
  50:../reversi_main.c **** void Latido_ev_new_tick(void)
  51:../reversi_main.c **** {
 2292              		.loc 1 51 0
 2293              		.cfi_startproc
 2294              		@ Function supports interworking.
 2295              		@ args = 0, pretend = 0, frame = 0
 2296              		@ frame_needed = 1, uses_anonymous_args = 0
 2297 0058 0DC0A0E1 		mov	ip, sp
 2298              	.LCFI4:
 2299              		.cfi_def_cfa_register 12
 2300 005c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2301 0060 04B04CE2 		sub	fp, ip, #4
 2302              		.cfi_offset 14, -8
 2303              		.cfi_offset 13, -12
 2304              		.cfi_offset 11, -16
 2305              	.LCFI5:
 2306              		.cfi_def_cfa 11, 4
  52:../reversi_main.c **** 	cuenta_int_latido += 1;
 2307              		.loc 1 52 0
 2308 0064 84309FE5 		ldr	r3, .L8
 2309 0068 003093E5 		ldr	r3, [r3, #0]
 2310 006c 012083E2 		add	r2, r3, #1
 2311 0070 78309FE5 		ldr	r3, .L8
 2312 0074 002083E5 		str	r2, [r3, #0]
  53:../reversi_main.c **** 	if(estado_led1 == 0)
 2313              		.loc 1 53 0
 2314 0078 74309FE5 		ldr	r3, .L8+4
 2315 007c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2316 0080 000053E3 		cmp	r3, #0
 2317 0084 0B00001A 		bne	.L6
  54:../reversi_main.c **** 	{
  55:../reversi_main.c **** 		if(cuenta_int_latido == 7)
 2318              		.loc 1 55 0
 2319 0088 60309FE5 		ldr	r3, .L8
 2320 008c 003093E5 		ldr	r3, [r3, #0]
 2321 0090 070053E3 		cmp	r3, #7
 2322 0094 1200001A 		bne	.L5
  56:../reversi_main.c **** 		{
  57:../reversi_main.c **** 			estado_led1 = 1;
 2323              		.loc 1 57 0
 2324 0098 54309FE5 		ldr	r3, .L8+4
 2325 009c 0120A0E3 		mov	r2, #1
 2326 00a0 0020C3E5 		strb	r2, [r3, #0]
  58:../reversi_main.c **** 			led1_on();
 2327              		.loc 1 58 0
 2328 00a4 FEFFFFEB 		bl	led1_on
  59:../reversi_main.c **** 			cuenta_int_latido = 0;
 2329              		.loc 1 59 0
 2330 00a8 40309FE5 		ldr	r3, .L8
 2331 00ac 0020A0E3 		mov	r2, #0
 2332 00b0 002083E5 		str	r2, [r3, #0]
 2333 00b4 0A0000EA 		b	.L5
 2334              	.L6:
  60:../reversi_main.c **** 		}
  61:../reversi_main.c **** 	}
  62:../reversi_main.c **** 	else
  63:../reversi_main.c **** 	{
  64:../reversi_main.c **** 		if(cuenta_int_latido == 8)
 2335              		.loc 1 64 0
 2336 00b8 30309FE5 		ldr	r3, .L8
 2337 00bc 003093E5 		ldr	r3, [r3, #0]
 2338 00c0 080053E3 		cmp	r3, #8
 2339 00c4 0600001A 		bne	.L5
  65:../reversi_main.c **** 		{
  66:../reversi_main.c **** 			estado_led1 = 0;
 2340              		.loc 1 66 0
 2341 00c8 24309FE5 		ldr	r3, .L8+4
 2342 00cc 0020A0E3 		mov	r2, #0
 2343 00d0 0020C3E5 		strb	r2, [r3, #0]
  67:../reversi_main.c **** 			led1_off();
 2344              		.loc 1 67 0
 2345 00d4 FEFFFFEB 		bl	led1_off
  68:../reversi_main.c **** 			cuenta_int_latido = 0;
 2346              		.loc 1 68 0
 2347 00d8 10309FE5 		ldr	r3, .L8
 2348 00dc 0020A0E3 		mov	r2, #0
 2349 00e0 002083E5 		str	r2, [r3, #0]
 2350              	.L5:
  69:../reversi_main.c **** 		}
  70:../reversi_main.c **** 	}
  71:../reversi_main.c **** }
 2351              		.loc 1 71 0
 2352 00e4 0CD04BE2 		sub	sp, fp, #12
 2353 00e8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2354 00ec 1EFF2FE1 		bx	lr
 2355              	.L9:
 2356              		.align	2
 2357              	.L8:
 2358 00f0 04000000 		.word	cuenta_int_latido
 2359 00f4 08000000 		.word	estado_led1
 2360              		.cfi_endproc
 2361              	.LFE2:
 2363              		.align	2
 2364              		.global	reversi_main
 2366              	reversi_main:
 2367              	.LFB3:
  72:../reversi_main.c **** 
  73:../reversi_main.c **** void reversi_main()
  74:../reversi_main.c **** {
 2368              		.loc 1 74 0
 2369              		.cfi_startproc
 2370              		@ Function supports interworking.
 2371              		@ args = 0, pretend = 0, frame = 8
 2372              		@ frame_needed = 1, uses_anonymous_args = 0
 2373 00f8 0DC0A0E1 		mov	ip, sp
 2374              	.LCFI6:
 2375              		.cfi_def_cfa_register 12
 2376 00fc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2377 0100 04B04CE2 		sub	fp, ip, #4
 2378              		.cfi_offset 14, -8
 2379              		.cfi_offset 13, -12
 2380              		.cfi_offset 11, -16
 2381              	.LCFI7:
 2382              		.cfi_def_cfa 11, 4
 2383 0104 08D04DE2 		sub	sp, sp, #8
  75:../reversi_main.c **** 	reversi_inicializar();
 2384              		.loc 1 75 0
 2385 0108 FEFFFFEB 		bl	reversi_inicializar
  76:../reversi_main.c **** 	while(1)
  77:../reversi_main.c **** 	{
  78:../reversi_main.c **** 		while(!esVacia())
 2386              		.loc 1 78 0
 2387 010c 160000EA 		b	.L11
 2388              	.L17:
 2389              	.LBB2:
  79:../reversi_main.c **** 		{
  80:../reversi_main.c **** 			//procesar
  81:../reversi_main.c **** 			uint8_t evento;
  82:../reversi_main.c **** 			uint32_t info;
  83:../reversi_main.c **** 			pop_debug(&evento, &info);
 2390              		.loc 1 83 0
 2391 0110 0D204BE2 		sub	r2, fp, #13
 2392 0114 14304BE2 		sub	r3, fp, #20
 2393 0118 0200A0E1 		mov	r0, r2
 2394 011c 0310A0E1 		mov	r1, r3
 2395 0120 FEFFFFEB 		bl	pop_debug
  84:../reversi_main.c **** 			switch(evento)
 2396              		.loc 1 84 0
 2397 0124 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 2398 0128 BB0053E3 		cmp	r3, #187
 2399 012c 0400000A 		beq	.L13
 2400 0130 FF0053E3 		cmp	r3, #255
 2401 0134 0B00001A 		bne	.L19
 2402              	.L14:
  85:../reversi_main.c **** 			{
  86:../reversi_main.c **** 			case ev_tick_timer0 :
  87:../reversi_main.c **** 				Latido_ev_new_tick();
 2403              		.loc 1 87 0
 2404 0138 FEFFFFEB 		bl	Latido_ev_new_tick
  88:../reversi_main.c **** 				button_ev_tick0();
 2405              		.loc 1 88 0
 2406 013c FEFFFFEB 		bl	button_ev_tick0
  89:../reversi_main.c **** 				break;
 2407              		.loc 1 89 0
 2408 0140 090000EA 		b	.L11
 2409              	.L13:
  90:../reversi_main.c **** 			case ev_button_int :
  91:../reversi_main.c **** 				if(info == button_izq)
 2410              		.loc 1 91 0
 2411 0144 14301BE5 		ldr	r3, [fp, #-20]
 2412 0148 0F0053E3 		cmp	r3, #15
 2413 014c 0200001A 		bne	.L15
  92:../reversi_main.c **** 				{
  93:../reversi_main.c **** 					button_ev_pulsacion(button_iz);
 2414              		.loc 1 93 0
 2415 0150 0100A0E3 		mov	r0, #1
 2416 0154 FEFFFFEB 		bl	button_ev_pulsacion
  94:../reversi_main.c **** 				}
  95:../reversi_main.c **** 				else
  96:../reversi_main.c **** 				{
  97:../reversi_main.c **** 					button_ev_pulsacion(button_der);
  98:../reversi_main.c **** 				}
  99:../reversi_main.c **** 				break;
 2417              		.loc 1 99 0
 2418 0158 030000EA 		b	.L11
 2419              	.L15:
  97:../reversi_main.c **** 					button_ev_pulsacion(button_der);
 2420              		.loc 1 97 0
 2421 015c 0E00A0E3 		mov	r0, #14
 2422 0160 FEFFFFEB 		bl	button_ev_pulsacion
 2423              		.loc 1 99 0
 2424 0164 000000EA 		b	.L11
 2425              	.L19:
 100:../reversi_main.c **** 			default :
 101:../reversi_main.c **** 				break;
 2426              		.loc 1 101 0
 2427 0168 0000A0E1 		mov	r0, r0	@ nop
 2428              	.L11:
 2429              	.LBE2:
  78:../reversi_main.c **** 		while(!esVacia())
 2430              		.loc 1 78 0 discriminator 1
 2431 016c FEFFFFEB 		bl	esVacia
 2432 0170 0030A0E1 		mov	r3, r0
 2433 0174 000053E3 		cmp	r3, #0
 2434 0178 E4FFFF0A 		beq	.L17
 102:../reversi_main.c **** 			}
 103:../reversi_main.c **** 		}
 104:../reversi_main.c **** 		dormir_procesador();
 2435              		.loc 1 104 0
 2436 017c FEFFFFEB 		bl	dormir_procesador
 105:../reversi_main.c **** 	}
 2437              		.loc 1 105 0
 2438 0180 0000A0E1 		mov	r0, r0	@ nop
  78:../reversi_main.c **** 		while(!esVacia())
 2439              		.loc 1 78 0
 2440 0184 F8FFFFEA 		b	.L11
 2441              		.cfi_endproc
 2442              	.LFE3:
 2444              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 reversi_main.c
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2207   .bss:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2208   .bss:00000000 timer2_num_int
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2211   .bss:00000004 cuenta_int_latido
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2213   .bss:00000008 estado_led1
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2216   .text:00000000 $a
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2219   .text:00000000 reversi_inicializar
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2255   .text:00000038 $d
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2260   .text:00000040 $a
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2263   .text:00000040 dormir_procesador
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2290   .text:00000058 Latido_ev_new_tick
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2358   .text:000000f0 $d
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2363   .text:000000f8 $a
C:\Users\guest\AppData\Local\Temp\ccLfZsMW.s:2366   .text:000000f8 reversi_main
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timer_init
led1_off
led1_on
pop_debug
button_ev_tick0
button_ev_pulsacion
esVacia
