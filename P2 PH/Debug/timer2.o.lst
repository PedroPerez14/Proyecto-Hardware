   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"timer2.c"
  21              	.Ltext0:
  22              		.file 1 "../timer2.c"
 1879              		.align	2
 1880              	timer2_num_int:
 1881 0000 00000000 		.space	4
 1882              		.text
 1883              		.align	2
 1884              		.global	timer2_ISR
 1886              	timer2_ISR:
 1887              	.LFB0:
   1:../timer2.c   **** /*********************************************************************************************
   2:../timer2.c   **** * Fichero:		timer2.c
   3:../timer2.c   **** * Autor:		Fernando Peña Bes (NIA: 756012)
   4:../timer2.c   **** * 				Pedro José Pérez García (NIA: 756642)
   5:../timer2.c   **** * Descrip:		Funciones de control del timer2 del s3c44b0x
   6:../timer2.c   **** *********************************************************************************************/
   7:../timer2.c   **** 
   8:../timer2.c   **** /*--- ficheros de cabecera ---*/
   9:../timer2.c   **** #include "timer2.h"
  10:../timer2.c   **** #include "44b.h"
  11:../timer2.c   **** #include "44blib.h"
  12:../timer2.c   **** 
  13:../timer2.c   **** /* declaraciï¿½n de funciï¿½n que es rutina de servicio de interrupciï¿½n
  14:../timer2.c   ****  * https://gcc.gnu.org/onlinedocs/gcc/ARM-Function-Attributes.html */
  15:../timer2.c   **** void timer2_ISR(void) __attribute__((interrupt("IRQ")));
  16:../timer2.c   **** 
  17:../timer2.c   **** /*--- codigo de las funciones ---*/
  18:../timer2.c   **** void timer2_ISR(void)
  19:../timer2.c   **** {
 1888              		.loc 1 19 0
 1889              		.cfi_startproc
 1890              		@ Interrupt Service Routine.
 1891              		@ args = 0, pretend = 0, frame = 0
 1892              		@ frame_needed = 1, uses_anonymous_args = 0
 1893 0000 04C02DE5 		str	ip, [sp, #-4]!
 1894 0004 0DC0A0E1 		mov	ip, sp
 1895              	.LCFI0:
 1896              		.cfi_def_cfa_register 12
 1897 0008 0CD82DE9 		stmfd	sp!, {r2, r3, fp, ip, lr, pc}
 1898 000c 04B04CE2 		sub	fp, ip, #4
 1899              		.cfi_offset 14, -8
 1900              		.cfi_offset 13, -12
 1901              		.cfi_offset 11, -16
 1902              		.cfi_offset 3, -20
 1903              		.cfi_offset 2, -24
 1904              	.LCFI1:
 1905              		.cfi_def_cfa 11, 4
  20:../timer2.c   **** 	timer2_num_int += 1;
 1906              		.loc 1 20 0
 1907 0010 30309FE5 		ldr	r3, .L2
 1908 0014 003093E5 		ldr	r3, [r3, #0]
 1909 0018 012083E2 		add	r2, r3, #1
 1910 001c 24309FE5 		ldr	r3, .L2
 1911 0020 002083E5 		str	r2, [r3, #0]
  21:../timer2.c   **** 	/* borrar bit en I_ISPC para desactivar la solicitud de interrupciï¿½n*/
  22:../timer2.c   **** 	rI_ISPC |= BIT_TIMER2; // BIT_TIMER0 estï¿½ definido en 44b.h y pone un uno en el bit 13 que corre
 1912              		.loc 1 22 0
 1913 0024 20309FE5 		ldr	r3, .L2+4
 1914 0028 1C209FE5 		ldr	r2, .L2+4
 1915 002c 002092E5 		ldr	r2, [r2, #0]
 1916 0030 022B82E3 		orr	r2, r2, #2048
 1917 0034 002083E5 		str	r2, [r3, #0]
  23:../timer2.c   **** }
 1918              		.loc 1 23 0
 1919 0038 14D04BE2 		sub	sp, fp, #20
 1920 003c 0C689DE8 		ldmfd	sp, {r2, r3, fp, sp, lr}
 1921 0040 04C09DE4 		ldmfd	sp!, {ip}
 1922 0044 04F05EE2 		subs	pc, lr, #4
 1923              	.L3:
 1924              		.align	2
 1925              	.L2:
 1926 0048 00000000 		.word	timer2_num_int
 1927 004c 2400E001 		.word	31457316
 1928              		.cfi_endproc
 1929              	.LFE0:
 1931              		.align	2
 1932              		.global	timer2_inicializar
 1934              	timer2_inicializar:
 1935              	.LFB1:
  24:../timer2.c   **** 
  25:../timer2.c   **** void timer2_inicializar(void)
  26:../timer2.c   **** {
 1936              		.loc 1 26 0
 1937              		.cfi_startproc
 1938              		@ Function supports interworking.
 1939              		@ args = 0, pretend = 0, frame = 0
 1940              		@ frame_needed = 1, uses_anonymous_args = 0
 1941 0050 0DC0A0E1 		mov	ip, sp
 1942              	.LCFI2:
 1943              		.cfi_def_cfa_register 12
 1944 0054 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1945 0058 04B04CE2 		sub	fp, ip, #4
 1946              		.cfi_offset 14, -8
 1947              		.cfi_offset 13, -12
 1948              		.cfi_offset 11, -16
 1949              	.LCFI3:
 1950              		.cfi_def_cfa 11, 4
  27:../timer2.c   **** 	/* Configuraion controlador de interrupciones */
  28:../timer2.c   **** 	rINTMOD &= ~(BIT_TIMER2); //Configura la lï¿½nea del timer2 como IRQ
 1951              		.loc 1 28 0
 1952 005c 74309FE5 		ldr	r3, .L5
 1953 0060 70209FE5 		ldr	r2, .L5
 1954 0064 002092E5 		ldr	r2, [r2, #0]
 1955 0068 022BC2E3 		bic	r2, r2, #2048
 1956 006c 002083E5 		str	r2, [r3, #0]
  29:../timer2.c   **** 	rINTCON &= 0x1; // Habilita int. vectorizadas y la linea IRQ, dejando FIQ como estuviera
 1957              		.loc 1 29 0
 1958 0070 1E36A0E3 		mov	r3, #31457280
 1959 0074 1E26A0E3 		mov	r2, #31457280
 1960 0078 002092E5 		ldr	r2, [r2, #0]
 1961 007c 012002E2 		and	r2, r2, #1
 1962 0080 002083E5 		str	r2, [r3, #0]
  30:../timer2.c   **** 	rINTMSK &= ~(BIT_TIMER2); // habilitamos en vector de mascaras de interrupcion el Timer0 (bits 26 
 1963              		.loc 1 30 0
 1964 0084 50309FE5 		ldr	r3, .L5+4
 1965 0088 4C209FE5 		ldr	r2, .L5+4
 1966 008c 002092E5 		ldr	r2, [r2, #0]
 1967 0090 022BC2E3 		bic	r2, r2, #2048
 1968 0094 002083E5 		str	r2, [r3, #0]
  31:../timer2.c   **** 
  32:../timer2.c   **** 	/* Establece la rutina de servicio para TIMER0 */
  33:../timer2.c   **** 	pISR_TIMER2 = (unsigned) timer2_ISR;
 1969              		.loc 1 33 0
 1970 0098 40309FE5 		ldr	r3, .L5+8
 1971 009c 40209FE5 		ldr	r2, .L5+12
 1972 00a0 002083E5 		str	r2, [r3, #0]
  34:../timer2.c   **** 
  35:../timer2.c   **** 	/* Configura el Timer2 */
  36:../timer2.c   **** 	rTCFG0 &= 0xFFFF00FF; // ajusta el preescalado a 0
 1973              		.loc 1 36 0
 1974 00a4 3C309FE5 		ldr	r3, .L5+16
 1975 00a8 38209FE5 		ldr	r2, .L5+16
 1976 00ac 002092E5 		ldr	r2, [r2, #0]
 1977 00b0 FF2CC2E3 		bic	r2, r2, #65280
 1978 00b4 002083E5 		str	r2, [r3, #0]
  37:../timer2.c   **** 	rTCFG1 &= 0xFFFFF0FF; // selecciona la entrada del mux que proporciona el reloj. La 00 corresponde
 1979              		.loc 1 37 0
 1980 00b8 2C309FE5 		ldr	r3, .L5+20
 1981 00bc 28209FE5 		ldr	r2, .L5+20
 1982 00c0 002092E5 		ldr	r2, [r2, #0]
 1983 00c4 0F2CC2E3 		bic	r2, r2, #3840
 1984 00c8 002083E5 		str	r2, [r3, #0]
  38:../timer2.c   **** }
 1985              		.loc 1 38 0
 1986 00cc 0CD04BE2 		sub	sp, fp, #12
 1987 00d0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1988 00d4 1EFF2FE1 		bx	lr
 1989              	.L6:
 1990              		.align	2
 1991              	.L5:
 1992 00d8 0800E001 		.word	31457288
 1993 00dc 0C00E001 		.word	31457292
 1994 00e0 4CFF7F0C 		.word	209715020
 1995 00e4 00000000 		.word	timer2_ISR
 1996 00e8 0000D501 		.word	30736384
 1997 00ec 0400D501 		.word	30736388
 1998              		.cfi_endproc
 1999              	.LFE1:
 2001              		.align	2
 2002              		.global	timer2_empezar
 2004              	timer2_empezar:
 2005              	.LFB2:
  39:../timer2.c   **** 
  40:../timer2.c   **** void timer2_empezar(void)
  41:../timer2.c   **** {
 2006              		.loc 1 41 0
 2007              		.cfi_startproc
 2008              		@ Function supports interworking.
 2009              		@ args = 0, pretend = 0, frame = 0
 2010              		@ frame_needed = 1, uses_anonymous_args = 0
 2011 00f0 0DC0A0E1 		mov	ip, sp
 2012              	.LCFI4:
 2013              		.cfi_def_cfa_register 12
 2014 00f4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2015 00f8 04B04CE2 		sub	fp, ip, #4
 2016              		.cfi_offset 14, -8
 2017              		.cfi_offset 13, -12
 2018              		.cfi_offset 11, -16
 2019              	.LCFI5:
 2020              		.cfi_def_cfa 11, 4
  42:../timer2.c   **** 	timer2_num_int = 0;	//Reinicia la variable que usamos para contar interrupciones.
 2021              		.loc 1 42 0
 2022 00fc 78309FE5 		ldr	r3, .L8
 2023 0100 0020A0E3 		mov	r2, #0
 2024 0104 002083E5 		str	r2, [r3, #0]
  43:../timer2.c   **** 
  44:../timer2.c   **** 	rTCNTB2 = MAX_COUNT;// valor inicial de cuenta (la cuenta es descendente)
 2025              		.loc 1 44 0
 2026 0108 70309FE5 		ldr	r3, .L8+4
 2027 010c 70209FE5 		ldr	r2, .L8+8
 2028 0110 002083E5 		str	r2, [r3, #0]
  45:../timer2.c   **** 	rTCMPB2 = COMP_VALUE;// valor de comparaciï¿½n
 2029              		.loc 1 45 0
 2030 0114 6C309FE5 		ldr	r3, .L8+12
 2031 0118 0020A0E3 		mov	r2, #0
 2032 011c 002083E5 		str	r2, [r3, #0]
  46:../timer2.c   **** 	
  47:../timer2.c   **** 	/* establecer update=manual (bit 13) */
  48:../timer2.c   **** 	rTCON &= 0xFFFF0FFF;
 2033              		.loc 1 48 0
 2034 0120 64309FE5 		ldr	r3, .L8+16
 2035 0124 60209FE5 		ldr	r2, .L8+16
 2036 0128 002092E5 		ldr	r2, [r2, #0]
 2037 012c 0F2AC2E3 		bic	r2, r2, #61440
 2038 0130 002083E5 		str	r2, [r3, #0]
  49:../timer2.c   **** 	rTCON |= 0x00002000;
 2039              		.loc 1 49 0
 2040 0134 50309FE5 		ldr	r3, .L8+16
 2041 0138 4C209FE5 		ldr	r2, .L8+16
 2042 013c 002092E5 		ldr	r2, [r2, #0]
 2043 0140 022A82E3 		orr	r2, r2, #8192
 2044 0144 002083E5 		str	r2, [r3, #0]
  50:../timer2.c   **** 	/*Empezar la cuenta*/
  51:../timer2.c   **** 	rTCON &= 0xFFFF0FFF;
 2045              		.loc 1 51 0
 2046 0148 3C309FE5 		ldr	r3, .L8+16
 2047 014c 38209FE5 		ldr	r2, .L8+16
 2048 0150 002092E5 		ldr	r2, [r2, #0]
 2049 0154 0F2AC2E3 		bic	r2, r2, #61440
 2050 0158 002083E5 		str	r2, [r3, #0]
  52:../timer2.c   **** 	rTCON |= 0x00009000;
 2051              		.loc 1 52 0
 2052 015c 28309FE5 		ldr	r3, .L8+16
 2053 0160 24209FE5 		ldr	r2, .L8+16
 2054 0164 002092E5 		ldr	r2, [r2, #0]
 2055 0168 092A82E3 		orr	r2, r2, #36864
 2056 016c 002083E5 		str	r2, [r3, #0]
  53:../timer2.c   **** }
 2057              		.loc 1 53 0
 2058 0170 0CD04BE2 		sub	sp, fp, #12
 2059 0174 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2060 0178 1EFF2FE1 		bx	lr
 2061              	.L9:
 2062              		.align	2
 2063              	.L8:
 2064 017c 00000000 		.word	timer2_num_int
 2065 0180 2400D501 		.word	30736420
 2066 0184 FFFF0000 		.word	65535
 2067 0188 2800D501 		.word	30736424
 2068 018c 0800D501 		.word	30736392
 2069              		.cfi_endproc
 2070              	.LFE2:
 2072              		.align	2
 2073              		.global	timer2_leer
 2075              	timer2_leer:
 2076              	.LFB3:
  54:../timer2.c   **** 
  55:../timer2.c   **** unsigned int timer2_leer(void)
  56:../timer2.c   **** {
 2077              		.loc 1 56 0
 2078              		.cfi_startproc
 2079              		@ Function supports interworking.
 2080              		@ args = 0, pretend = 0, frame = 0
 2081              		@ frame_needed = 1, uses_anonymous_args = 0
 2082 0190 0DC0A0E1 		mov	ip, sp
 2083              	.LCFI6:
 2084              		.cfi_def_cfa_register 12
 2085 0194 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2086 0198 04B04CE2 		sub	fp, ip, #4
 2087              		.cfi_offset 14, -8
 2088              		.cfi_offset 13, -12
 2089              		.cfi_offset 11, -16
 2090              	.LCFI7:
 2091              		.cfi_def_cfa 11, 4
  57:../timer2.c   **** 	return timer2_num_int * PERIOD_INT + (rTCNTB2 - rTCNTO2) / CYCLES_EACH_MICROSEC;
 2092              		.loc 1 57 0
 2093 019c 30309FE5 		ldr	r3, .L11
 2094 01a0 003093E5 		ldr	r3, [r3, #0]
 2095 01a4 8325A0E1 		mov	r2, r3, asl #11
 2096 01a8 28309FE5 		ldr	r3, .L11+4
 2097 01ac 001093E5 		ldr	r1, [r3, #0]
 2098 01b0 24309FE5 		ldr	r3, .L11+8
 2099 01b4 003093E5 		ldr	r3, [r3, #0]
 2100 01b8 013063E0 		rsb	r3, r3, r1
 2101 01bc A332A0E1 		mov	r3, r3, lsr #5
 2102 01c0 033082E0 		add	r3, r2, r3
  58:../timer2.c   **** 	//Si queremos optimizar, como la multiplicaciï¿½n es por 2048, se pueden mover los bits 16 lugares
  59:../timer2.c   **** }
 2103              		.loc 1 59 0
 2104 01c4 0300A0E1 		mov	r0, r3
 2105 01c8 0CD04BE2 		sub	sp, fp, #12
 2106 01cc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2107 01d0 1EFF2FE1 		bx	lr
 2108              	.L12:
 2109              		.align	2
 2110              	.L11:
 2111 01d4 00000000 		.word	timer2_num_int
 2112 01d8 2400D501 		.word	30736420
 2113 01dc 2C00D501 		.word	30736428
 2114              		.cfi_endproc
 2115              	.LFE3:
 2117              		.align	2
 2118              		.global	timer2_parar
 2120              	timer2_parar:
 2121              	.LFB4:
  60:../timer2.c   **** 
  61:../timer2.c   **** unsigned int timer2_parar(void)
  62:../timer2.c   **** {
 2122              		.loc 1 62 0
 2123              		.cfi_startproc
 2124              		@ Function supports interworking.
 2125              		@ args = 0, pretend = 0, frame = 0
 2126              		@ frame_needed = 1, uses_anonymous_args = 0
 2127 01e0 0DC0A0E1 		mov	ip, sp
 2128              	.LCFI8:
 2129              		.cfi_def_cfa_register 12
 2130 01e4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2131 01e8 04B04CE2 		sub	fp, ip, #4
 2132              		.cfi_offset 14, -8
 2133              		.cfi_offset 13, -12
 2134              		.cfi_offset 11, -16
 2135              	.LCFI9:
 2136              		.cfi_def_cfa 11, 4
  63:../timer2.c   **** 	rTCON &= 0xFFFF0FFF;	//Detener la cuenta
 2137              		.loc 1 63 0
 2138 01ec 24309FE5 		ldr	r3, .L14
 2139 01f0 20209FE5 		ldr	r2, .L14
 2140 01f4 002092E5 		ldr	r2, [r2, #0]
 2141 01f8 0F2AC2E3 		bic	r2, r2, #61440
 2142 01fc 002083E5 		str	r2, [r3, #0]
  64:../timer2.c   **** 	return timer2_leer();
 2143              		.loc 1 64 0
 2144 0200 FEFFFFEB 		bl	timer2_leer
 2145 0204 0030A0E1 		mov	r3, r0
  65:../timer2.c   **** }
 2146              		.loc 1 65 0
 2147 0208 0300A0E1 		mov	r0, r3
 2148 020c 0CD04BE2 		sub	sp, fp, #12
 2149 0210 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2150 0214 1EFF2FE1 		bx	lr
 2151              	.L15:
 2152              		.align	2
 2153              	.L14:
 2154 0218 0800D501 		.word	30736392
 2155              		.cfi_endproc
 2156              	.LFE4:
 2158              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 timer2.c
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:1879   .bss:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:1880   .bss:00000000 timer2_num_int
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:1883   .text:00000000 $a
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:1886   .text:00000000 timer2_ISR
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:1926   .text:00000048 $d
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:1931   .text:00000050 $a
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:1934   .text:00000050 timer2_inicializar
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:1992   .text:000000d8 $d
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:2001   .text:000000f0 $a
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:2004   .text:000000f0 timer2_empezar
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:2064   .text:0000017c $d
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:2072   .text:00000190 $a
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:2075   .text:00000190 timer2_leer
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:2111   .text:000001d4 $d
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:2117   .text:000001e0 $a
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:2120   .text:000001e0 timer2_parar
C:\Users\guest\AppData\Local\Temp\ccgBMZ4I.s:2154   .text:00000218 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
