   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"reversi8_2019.c"
  21              	.Ltext0:
  22              		.file 1 "../reversi8_2019.c"
 968              	NO:
 969 0000 00       		.space	1
 970              		.global	SI
 973              	SI:
 974 0001 01       		.byte	1
 975              		.global	CASILLA_OCUPADA
 978              	CASILLA_OCUPADA:
 979 0002 02       		.byte	2
 980 0003 00000000 		.align	3
 980      00
 983              	tabla_valor:
 984 0008 08       		.byte	8
 985 0009 02       		.byte	2
 986 000a 07       		.byte	7
 987 000b 03       		.byte	3
 988 000c 03       		.byte	3
 989 000d 07       		.byte	7
 990 000e 02       		.byte	2
 991 000f 08       		.byte	8
 992 0010 02       		.byte	2
 993 0011 01       		.byte	1
 994 0012 04       		.byte	4
 995 0013 04       		.byte	4
 996 0014 04       		.byte	4
 997 0015 04       		.byte	4
 998 0016 01       		.byte	1
 999 0017 02       		.byte	2
 1000 0018 07       		.byte	7
 1001 0019 04       		.byte	4
 1002 001a 06       		.byte	6
 1003 001b 05       		.byte	5
 1004 001c 05       		.byte	5
 1005 001d 06       		.byte	6
 1006 001e 04       		.byte	4
 1007 001f 07       		.byte	7
 1008 0020 03       		.byte	3
 1009 0021 04       		.byte	4
 1010 0022 05       		.byte	5
 1011 0023 00       		.byte	0
 1012 0024 00       		.byte	0
 1013 0025 05       		.byte	5
 1014 0026 04       		.byte	4
 1015 0027 03       		.byte	3
 1016 0028 03       		.byte	3
 1017 0029 04       		.byte	4
 1018 002a 05       		.byte	5
 1019 002b 00       		.byte	0
 1020 002c 00       		.byte	0
 1021 002d 05       		.byte	5
 1022 002e 04       		.byte	4
 1023 002f 03       		.byte	3
 1024 0030 07       		.byte	7
 1025 0031 04       		.byte	4
 1026 0032 06       		.byte	6
 1027 0033 05       		.byte	5
 1028 0034 05       		.byte	5
 1029 0035 06       		.byte	6
 1030 0036 04       		.byte	4
 1031 0037 07       		.byte	7
 1032 0038 02       		.byte	2
 1033 0039 01       		.byte	1
 1034 003a 04       		.byte	4
 1035 003b 04       		.byte	4
 1036 003c 04       		.byte	4
 1037 003d 04       		.byte	4
 1038 003e 01       		.byte	1
 1039 003f 02       		.byte	2
 1040 0040 08       		.byte	8
 1041 0041 02       		.byte	2
 1042 0042 07       		.byte	7
 1043 0043 03       		.byte	3
 1044 0044 03       		.byte	3
 1045 0045 07       		.byte	7
 1046 0046 02       		.byte	2
 1047 0047 08       		.byte	8
 1048              		.global	vSF
 1049              		.align	2
 1052              	vSF:
 1053 0048 FF       		.byte	-1
 1054 0049 FF       		.byte	-1
 1055 004a 00       		.byte	0
 1056 004b 01       		.byte	1
 1057 004c 01       		.byte	1
 1058 004d 01       		.byte	1
 1059 004e 00       		.byte	0
 1060 004f FF       		.byte	-1
 1061              		.global	vSC
 1062              		.align	2
 1065              	vSC:
 1066 0050 00       		.byte	0
 1067 0051 01       		.byte	1
 1068 0052 01       		.byte	1
 1069 0053 01       		.byte	1
 1070 0054 00       		.byte	0
 1071 0055 FF       		.byte	-1
 1072 0056 FF       		.byte	-1
 1073 0057 FF       		.byte	-1
 1074              		.bss
 1075              		.align	3
 1076              	tablero:
 1077 0000 00000000 		.space	64
 1077      00000000 
 1077      00000000 
 1077      00000000 
 1077      00000000 
 1078              	fila:
 1079 0040 00       		.space	1
 1080              	columna:
 1081 0041 00       		.space	1
 1082              	ready:
 1083 0042 00       		.space	1
 1084 0043 00000000 		.text
 1084      00
 1085              		.align	2
 1086              		.global	init_table
 1088              	init_table:
 1089              	.LFB0:
   1:../reversi8_2019.c **** // Tamaño del tablero
   2:../reversi8_2019.c **** enum { DIM=8 };
   3:../reversi8_2019.c **** 
   4:../reversi8_2019.c **** // Valores que puede devolver la función patron_volteo())
   5:../reversi8_2019.c **** enum {
   6:../reversi8_2019.c **** 	NO_HAY_PATRON = 0,
   7:../reversi8_2019.c ****   PATRON_ENCONTRADO = 1
   8:../reversi8_2019.c **** };
   9:../reversi8_2019.c **** 
  10:../reversi8_2019.c **** // Estados de las casillas del tablero
  11:../reversi8_2019.c **** // deberia ser enum, lo dejamos como const para usar char...
  12:../reversi8_2019.c **** //const char CASILLA_VACIA = 0;
  13:../reversi8_2019.c **** //const char FICHA_BLANCA  = 1;
  14:../reversi8_2019.c **** //const char FICHA_NEGRA   = 2;
  15:../reversi8_2019.c **** 
  16:../reversi8_2019.c **** enum {
  17:../reversi8_2019.c **** 	CASILLA_VACIA = 0,
  18:../reversi8_2019.c **** 	FICHA_BLANCA = 1,
  19:../reversi8_2019.c **** 	FICHA_NEGRA = 2
  20:../reversi8_2019.c **** };
  21:../reversi8_2019.c **** 
  22:../reversi8_2019.c **** // candidatas: indica las posiciones a explorar
  23:../reversi8_2019.c **** // Se usa para no explorar todo el tablero innecesariamente
  24:../reversi8_2019.c **** // Sus posibles valores son NO, SI, CASILLA_OCUPADA
  25:../reversi8_2019.c **** const char  NO              = 0;
  26:../reversi8_2019.c **** const char  SI              = 1;
  27:../reversi8_2019.c **** const char  CASILLA_OCUPADA = 2;
  28:../reversi8_2019.c **** 
  29:../reversi8_2019.c **** /////////////////////////////////////////////////////////////////////////////
  30:../reversi8_2019.c **** // TABLAS AUXILIARES
  31:../reversi8_2019.c **** // declaramos las siguientes tablas como globales para que sean más fáciles visualizarlas en el sim
  32:../reversi8_2019.c **** // __attribute__ ((aligned (8))): specifies a minimum alignment for the variable or structure field
  33:../reversi8_2019.c **** 
  34:../reversi8_2019.c **** static const char __attribute__ ((aligned (8))) tabla_valor[DIM][DIM] =
  35:../reversi8_2019.c **** {
  36:../reversi8_2019.c ****     {8,2,7,3,3,7,2,8},
  37:../reversi8_2019.c ****     {2,1,4,4,4,4,1,2},
  38:../reversi8_2019.c ****     {7,4,6,5,5,6,4,7},
  39:../reversi8_2019.c ****     {3,4,5,0,0,5,4,3},
  40:../reversi8_2019.c ****     {3,4,5,0,0,5,4,3},
  41:../reversi8_2019.c ****     {7,4,6,5,5,6,4,7},
  42:../reversi8_2019.c ****     {2,1,4,4,4,4,1,2},
  43:../reversi8_2019.c ****     {8,2,7,3,3,7,2,8}
  44:../reversi8_2019.c **** };
  45:../reversi8_2019.c **** 
  46:../reversi8_2019.c **** 
  47:../reversi8_2019.c **** // Tabla de direcciones. Contiene los desplazamientos de las 8 direcciones posibles
  48:../reversi8_2019.c **** const char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
  49:../reversi8_2019.c **** const char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
  50:../reversi8_2019.c **** 
  51:../reversi8_2019.c **** //////////////////////////////////////////////////////////////////////////////////////
  52:../reversi8_2019.c **** // Variables globales que no deberían serlo
  53:../reversi8_2019.c **** // tablero, fila, columna y ready son varibles que se deberían definir como locales dentro de rever
  54:../reversi8_2019.c **** // Sin embargo, las hemos definido como globales para que sea más fácil visualizar el tablero y las
  55:../reversi8_2019.c **** //////////////////////////////////////////////////////////////////////////////////////
  56:../reversi8_2019.c **** 
  57:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////
  58:../reversi8_2019.c **** // Tablero sin inicializar
  59:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////
  60:../reversi8_2019.c **** static char __attribute__ ((aligned (8))) tablero[DIM][DIM] = {
  61:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  62:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  63:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  64:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  65:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  66:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  67:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  68:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  69:../reversi8_2019.c **** 	    };
  70:../reversi8_2019.c **** 
  71:../reversi8_2019.c ****   ////////////////////////////////////////////////////////////////////
  72:../reversi8_2019.c ****      // VARIABLES PARA INTERACCIONAR CON LA ENTRADA SALIDA
  73:../reversi8_2019.c ****      // Pregunta: ¿hay que hacer algo con ellas para que esto funcione bien?
  74:../reversi8_2019.c ****      // (por ejemplo añadir alguna palabra clave para garantizar que la sincronización a través de 
  75:../reversi8_2019.c **** static char fila=0,
  76:../reversi8_2019.c **** 	    columna=0,
  77:../reversi8_2019.c **** 	    ready = 0;
  78:../reversi8_2019.c **** 
  79:../reversi8_2019.c **** 
  80:../reversi8_2019.c **** // extern int patron_volteo_arm(char tablero[][8], int *longitud,char f, char c, char SF, char SC, 
  81:../reversi8_2019.c **** 
  82:../reversi8_2019.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
  83:../reversi8_2019.c **** // 0 indica CASILLA_VACIA, 1 indica FICHA_BLANCA y 2 indica FICHA_NEGRA
  84:../reversi8_2019.c **** // pone el tablero a cero y luego coloca las fichas centrales.
  85:../reversi8_2019.c **** void init_table(char tablero[][DIM], char candidatas[][DIM])
  86:../reversi8_2019.c **** {
 1090              		.loc 1 86 0
 1091              		.cfi_startproc
 1092              		@ Function supports interworking.
 1093              		@ args = 0, pretend = 0, frame = 16
 1094              		@ frame_needed = 1, uses_anonymous_args = 0
 1095 0000 0DC0A0E1 		mov	ip, sp
 1096              	.LCFI0:
 1097              		.cfi_def_cfa_register 12
 1098 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1099 0008 04B04CE2 		sub	fp, ip, #4
 1100              		.cfi_offset 14, -8
 1101              		.cfi_offset 13, -12
 1102              		.cfi_offset 11, -16
 1103              	.LCFI1:
 1104              		.cfi_def_cfa 11, 4
 1105 000c 10D04DE2 		sub	sp, sp, #16
 1106 0010 18000BE5 		str	r0, [fp, #-24]
 1107 0014 1C100BE5 		str	r1, [fp, #-28]
  87:../reversi8_2019.c ****     int i, j;
  88:../reversi8_2019.c **** 
  89:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1108              		.loc 1 89 0
 1109 0018 0030A0E3 		mov	r3, #0
 1110 001c 10300BE5 		str	r3, [fp, #-16]
 1111 0020 130000EA 		b	.L2
 1112              	.L5:
  90:../reversi8_2019.c ****     {
  91:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1113              		.loc 1 91 0
 1114 0024 0030A0E3 		mov	r3, #0
 1115 0028 14300BE5 		str	r3, [fp, #-20]
 1116 002c 0A0000EA 		b	.L3
 1117              	.L4:
  92:../reversi8_2019.c ****             tablero[i][j] = CASILLA_VACIA;
 1118              		.loc 1 92 0 discriminator 2
 1119 0030 10301BE5 		ldr	r3, [fp, #-16]
 1120 0034 8331A0E1 		mov	r3, r3, asl #3
 1121 0038 18201BE5 		ldr	r2, [fp, #-24]
 1122 003c 032082E0 		add	r2, r2, r3
 1123 0040 14301BE5 		ldr	r3, [fp, #-20]
 1124 0044 033082E0 		add	r3, r2, r3
 1125 0048 0020A0E3 		mov	r2, #0
 1126 004c 0020C3E5 		strb	r2, [r3, #0]
  91:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1127              		.loc 1 91 0 discriminator 2
 1128 0050 14301BE5 		ldr	r3, [fp, #-20]
 1129 0054 013083E2 		add	r3, r3, #1
 1130 0058 14300BE5 		str	r3, [fp, #-20]
 1131              	.L3:
  91:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1132              		.loc 1 91 0 is_stmt 0 discriminator 1
 1133 005c 14301BE5 		ldr	r3, [fp, #-20]
 1134 0060 070053E3 		cmp	r3, #7
 1135 0064 F1FFFFDA 		ble	.L4
  89:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1136              		.loc 1 89 0 is_stmt 1
 1137 0068 10301BE5 		ldr	r3, [fp, #-16]
 1138 006c 013083E2 		add	r3, r3, #1
 1139 0070 10300BE5 		str	r3, [fp, #-16]
 1140              	.L2:
  89:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1141              		.loc 1 89 0 is_stmt 0 discriminator 1
 1142 0074 10301BE5 		ldr	r3, [fp, #-16]
 1143 0078 070053E3 		cmp	r3, #7
 1144 007c E8FFFFDA 		ble	.L5
  93:../reversi8_2019.c ****     }
  94:../reversi8_2019.c **** #if 0
  95:../reversi8_2019.c ****     for (i = 3; i < 5; ++i) {
  96:../reversi8_2019.c **** 	for(j = 3; j < 5; ++j) {
  97:../reversi8_2019.c **** 	    tablero[i][j] = i == j ? FICHA_BLANCA : FICHA_NEGRA;
  98:../reversi8_2019.c **** 	}
  99:../reversi8_2019.c ****     }
 100:../reversi8_2019.c **** 
 101:../reversi8_2019.c ****     for (i = 2; i < 6; ++i) {
 102:../reversi8_2019.c **** 	for (j = 2; j < 6; ++j) {
 103:../reversi8_2019.c **** 	    if((i>=3) && (i < 5) && (j>=3) && (j<5)) {
 104:../reversi8_2019.c **** 		candidatas[i][j] = CASILLA_OCUPADA;
 105:../reversi8_2019.c **** 	    } else {
 106:../reversi8_2019.c **** 		candidatas[i][j] = SI; //CASILLA_LIBRE;
 107:../reversi8_2019.c **** 	    }
 108:../reversi8_2019.c **** 	}
 109:../reversi8_2019.c ****     }
 110:../reversi8_2019.c **** #endif
 111:../reversi8_2019.c ****     // arriba hay versión alternativa
 112:../reversi8_2019.c ****     tablero[3][3] = FICHA_BLANCA;
 1145              		.loc 1 112 0 is_stmt 1
 1146 0080 18301BE5 		ldr	r3, [fp, #-24]
 1147 0084 183083E2 		add	r3, r3, #24
 1148 0088 0120A0E3 		mov	r2, #1
 1149 008c 0320C3E5 		strb	r2, [r3, #3]
 113:../reversi8_2019.c ****     tablero[4][4] = FICHA_BLANCA;
 1150              		.loc 1 113 0
 1151 0090 18301BE5 		ldr	r3, [fp, #-24]
 1152 0094 203083E2 		add	r3, r3, #32
 1153 0098 0120A0E3 		mov	r2, #1
 1154 009c 0420C3E5 		strb	r2, [r3, #4]
 114:../reversi8_2019.c ****     tablero[3][4] = FICHA_NEGRA;
 1155              		.loc 1 114 0
 1156 00a0 18301BE5 		ldr	r3, [fp, #-24]
 1157 00a4 183083E2 		add	r3, r3, #24
 1158 00a8 0220A0E3 		mov	r2, #2
 1159 00ac 0420C3E5 		strb	r2, [r3, #4]
 115:../reversi8_2019.c ****     tablero[4][3] = FICHA_NEGRA;
 1160              		.loc 1 115 0
 1161 00b0 18301BE5 		ldr	r3, [fp, #-24]
 1162 00b4 203083E2 		add	r3, r3, #32
 1163 00b8 0220A0E3 		mov	r2, #2
 1164 00bc 0320C3E5 		strb	r2, [r3, #3]
 116:../reversi8_2019.c **** 
 117:../reversi8_2019.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 1165              		.loc 1 117 0
 1166 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 1167 00c4 183083E2 		add	r3, r3, #24
 1168 00c8 3C219FE5 		ldr	r2, .L6
 1169 00cc 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1170 00d0 0320C3E5 		strb	r2, [r3, #3]
 118:../reversi8_2019.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 1171              		.loc 1 118 0
 1172 00d4 1C301BE5 		ldr	r3, [fp, #-28]
 1173 00d8 203083E2 		add	r3, r3, #32
 1174 00dc 28219FE5 		ldr	r2, .L6
 1175 00e0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1176 00e4 0420C3E5 		strb	r2, [r3, #4]
 119:../reversi8_2019.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 1177              		.loc 1 119 0
 1178 00e8 1C301BE5 		ldr	r3, [fp, #-28]
 1179 00ec 183083E2 		add	r3, r3, #24
 1180 00f0 14219FE5 		ldr	r2, .L6
 1181 00f4 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1182 00f8 0420C3E5 		strb	r2, [r3, #4]
 120:../reversi8_2019.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 1183              		.loc 1 120 0
 1184 00fc 1C301BE5 		ldr	r3, [fp, #-28]
 1185 0100 203083E2 		add	r3, r3, #32
 1186 0104 00219FE5 		ldr	r2, .L6
 1187 0108 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1188 010c 0320C3E5 		strb	r2, [r3, #3]
 121:../reversi8_2019.c **** 
 122:../reversi8_2019.c ****     // casillas a explorar:
 123:../reversi8_2019.c ****     candidatas[2][2] = SI;
 1189              		.loc 1 123 0
 1190 0110 1C301BE5 		ldr	r3, [fp, #-28]
 1191 0114 103083E2 		add	r3, r3, #16
 1192 0118 F0209FE5 		ldr	r2, .L6+4
 1193 011c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1194 0120 0220C3E5 		strb	r2, [r3, #2]
 124:../reversi8_2019.c ****     candidatas[2][3] = SI;
 1195              		.loc 1 124 0
 1196 0124 1C301BE5 		ldr	r3, [fp, #-28]
 1197 0128 103083E2 		add	r3, r3, #16
 1198 012c DC209FE5 		ldr	r2, .L6+4
 1199 0130 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1200 0134 0320C3E5 		strb	r2, [r3, #3]
 125:../reversi8_2019.c ****     candidatas[2][4] = SI;
 1201              		.loc 1 125 0
 1202 0138 1C301BE5 		ldr	r3, [fp, #-28]
 1203 013c 103083E2 		add	r3, r3, #16
 1204 0140 C8209FE5 		ldr	r2, .L6+4
 1205 0144 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1206 0148 0420C3E5 		strb	r2, [r3, #4]
 126:../reversi8_2019.c ****     candidatas[2][5] = SI;
 1207              		.loc 1 126 0
 1208 014c 1C301BE5 		ldr	r3, [fp, #-28]
 1209 0150 103083E2 		add	r3, r3, #16
 1210 0154 B4209FE5 		ldr	r2, .L6+4
 1211 0158 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1212 015c 0520C3E5 		strb	r2, [r3, #5]
 127:../reversi8_2019.c ****     candidatas[3][2] = SI;
 1213              		.loc 1 127 0
 1214 0160 1C301BE5 		ldr	r3, [fp, #-28]
 1215 0164 183083E2 		add	r3, r3, #24
 1216 0168 A0209FE5 		ldr	r2, .L6+4
 1217 016c 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1218 0170 0220C3E5 		strb	r2, [r3, #2]
 128:../reversi8_2019.c ****     candidatas[3][5] = SI;
 1219              		.loc 1 128 0
 1220 0174 1C301BE5 		ldr	r3, [fp, #-28]
 1221 0178 183083E2 		add	r3, r3, #24
 1222 017c 8C209FE5 		ldr	r2, .L6+4
 1223 0180 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1224 0184 0520C3E5 		strb	r2, [r3, #5]
 129:../reversi8_2019.c ****     candidatas[4][2] = SI;
 1225              		.loc 1 129 0
 1226 0188 1C301BE5 		ldr	r3, [fp, #-28]
 1227 018c 203083E2 		add	r3, r3, #32
 1228 0190 78209FE5 		ldr	r2, .L6+4
 1229 0194 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1230 0198 0220C3E5 		strb	r2, [r3, #2]
 130:../reversi8_2019.c ****     candidatas[4][5] = SI;
 1231              		.loc 1 130 0
 1232 019c 1C301BE5 		ldr	r3, [fp, #-28]
 1233 01a0 203083E2 		add	r3, r3, #32
 1234 01a4 64209FE5 		ldr	r2, .L6+4
 1235 01a8 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1236 01ac 0520C3E5 		strb	r2, [r3, #5]
 131:../reversi8_2019.c ****     candidatas[5][2] = SI;
 1237              		.loc 1 131 0
 1238 01b0 1C301BE5 		ldr	r3, [fp, #-28]
 1239 01b4 283083E2 		add	r3, r3, #40
 1240 01b8 50209FE5 		ldr	r2, .L6+4
 1241 01bc 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1242 01c0 0220C3E5 		strb	r2, [r3, #2]
 132:../reversi8_2019.c ****     candidatas[5][3] = SI;
 1243              		.loc 1 132 0
 1244 01c4 1C301BE5 		ldr	r3, [fp, #-28]
 1245 01c8 283083E2 		add	r3, r3, #40
 1246 01cc 3C209FE5 		ldr	r2, .L6+4
 1247 01d0 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1248 01d4 0320C3E5 		strb	r2, [r3, #3]
 133:../reversi8_2019.c ****     candidatas[5][4] = SI;
 1249              		.loc 1 133 0
 1250 01d8 1C301BE5 		ldr	r3, [fp, #-28]
 1251 01dc 283083E2 		add	r3, r3, #40
 1252 01e0 28209FE5 		ldr	r2, .L6+4
 1253 01e4 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1254 01e8 0420C3E5 		strb	r2, [r3, #4]
 134:../reversi8_2019.c ****     candidatas[5][5] = SI;
 1255              		.loc 1 134 0
 1256 01ec 1C301BE5 		ldr	r3, [fp, #-28]
 1257 01f0 283083E2 		add	r3, r3, #40
 1258 01f4 14209FE5 		ldr	r2, .L6+4
 1259 01f8 0020D2E5 		ldrb	r2, [r2, #0]	@ zero_extendqisi2
 1260 01fc 0520C3E5 		strb	r2, [r3, #5]
 135:../reversi8_2019.c **** }
 1261              		.loc 1 135 0
 1262 0200 0CD04BE2 		sub	sp, fp, #12
 1263 0204 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1264 0208 1EFF2FE1 		bx	lr
 1265              	.L7:
 1266              		.align	2
 1267              	.L6:
 1268 020c 00000000 		.word	CASILLA_OCUPADA
 1269 0210 00000000 		.word	SI
 1270              		.cfi_endproc
 1271              	.LFE0:
 1273              		.align	2
 1274              		.global	esperar_mov
 1276              	esperar_mov:
 1277              	.LFB1:
 136:../reversi8_2019.c **** 
 137:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 138:../reversi8_2019.c **** // Espera a que ready valga 1.
 139:../reversi8_2019.c **** // CUIDADO: si el compilador coloca esta variable en un registro, no funcionará.
 140:../reversi8_2019.c **** // Hay que definirla como "volatile" para forzar a que antes de cada uso la cargue de memoria
 141:../reversi8_2019.c **** 
 142:../reversi8_2019.c **** void esperar_mov(char *ready)
 143:../reversi8_2019.c **** {
 1278              		.loc 1 143 0
 1279              		.cfi_startproc
 1280              		@ Function supports interworking.
 1281              		@ args = 0, pretend = 0, frame = 8
 1282              		@ frame_needed = 1, uses_anonymous_args = 0
 1283 0214 0DC0A0E1 		mov	ip, sp
 1284              	.LCFI2:
 1285              		.cfi_def_cfa_register 12
 1286 0218 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1287 021c 04B04CE2 		sub	fp, ip, #4
 1288              		.cfi_offset 14, -8
 1289              		.cfi_offset 13, -12
 1290              		.cfi_offset 11, -16
 1291              	.LCFI3:
 1292              		.cfi_def_cfa 11, 4
 1293 0220 08D04DE2 		sub	sp, sp, #8
 1294 0224 10000BE5 		str	r0, [fp, #-16]
 144:../reversi8_2019.c ****     while (*ready == 0) {};  // bucle de espera de respuestas hasta que el se modifique el valor de
 1295              		.loc 1 144 0
 1296 0228 0000A0E1 		mov	r0, r0	@ nop
 1297              	.L9:
 1298              		.loc 1 144 0 is_stmt 0 discriminator 1
 1299 022c 10301BE5 		ldr	r3, [fp, #-16]
 1300 0230 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1301 0234 000053E3 		cmp	r3, #0
 1302 0238 FBFFFF0A 		beq	.L9
 145:../reversi8_2019.c **** 
 146:../reversi8_2019.c ****     *ready = 0;  //una vez que pasemos el bucle volvemos a fijar ready a 0;
 1303              		.loc 1 146 0 is_stmt 1
 1304 023c 10301BE5 		ldr	r3, [fp, #-16]
 1305 0240 0020A0E3 		mov	r2, #0
 1306 0244 0020C3E5 		strb	r2, [r3, #0]
 147:../reversi8_2019.c **** }
 1307              		.loc 1 147 0
 1308 0248 0CD04BE2 		sub	sp, fp, #12
 1309 024c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1310 0250 1EFF2FE1 		bx	lr
 1311              		.cfi_endproc
 1312              	.LFE1:
 1314              		.align	2
 1315              		.global	ficha_valida
 1317              	ficha_valida:
 1318              	.LFB2:
 148:../reversi8_2019.c **** 
 149:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 150:../reversi8_2019.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 151:../reversi8_2019.c **** // IMPORTANTE: AL SUSTITUIR FICHA_VALIDA() Y PATRON_VOLTEO()
 152:../reversi8_2019.c **** // POR RUTINAS EN ENSAMBLADOR HAY QUE RESPETAR LA MODULARIDAD.
 153:../reversi8_2019.c **** // DEBEN SEGUIR SIENDO LLAMADAS A FUNCIONES Y DEBEN CUMPLIR CON EL ATPCS
 154:../reversi8_2019.c **** // (VER TRANSPARENCIAS Y MATERIAL DE PRACTICAS):
 155:../reversi8_2019.c **** //  - DEBEN PASAR LOS PARAMETROS POR LOS REGISTROS CORRESPONDIENTES
 156:../reversi8_2019.c **** //  - GUARDAR EN PILA SOLO LOS REGISTROS QUE TOCAN
 157:../reversi8_2019.c **** //  - CREAR UN MARCO DE PILA TAL Y COMO MUESTRAN LAS TRANSPARENCIAS
 158:../reversi8_2019.c **** //    DE LA ASIGNATURA (CON EL PC, FP, LR,....)
 159:../reversi8_2019.c **** //  - EN EL CASO DE LAS VARIABLES LOCALES, SOLO HAY QUE APILARLAS
 160:../reversi8_2019.c **** //    SI NO SE PUEDEN COLOCAR EN UN REGISTRO.
 161:../reversi8_2019.c **** //    SI SE COLOCAN EN UN REGISTRO NO HACE FALTA
 162:../reversi8_2019.c **** //    NI GUARDARLAS EN PILA NI RESERVAR UN ESPACIO EN LA PILA PARA ELLAS
 163:../reversi8_2019.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 164:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 165:../reversi8_2019.c **** // Devuelve el contenido de la posición indicadas por la fila y columna actual.
 166:../reversi8_2019.c **** // Además informa si la posición es válida y contiene alguna ficha.
 167:../reversi8_2019.c **** // Esto lo hace por referencia (en *posicion_valida)
 168:../reversi8_2019.c **** // Si devuelve un 0 no es válida o está vacia.
 169:../reversi8_2019.c **** char ficha_valida(char tablero[][DIM], char f, char c, int *posicion_valida)
 170:../reversi8_2019.c **** {
 1319              		.loc 1 170 0
 1320              		.cfi_startproc
 1321              		@ Function supports interworking.
 1322              		@ args = 0, pretend = 0, frame = 24
 1323              		@ frame_needed = 1, uses_anonymous_args = 0
 1324 0254 0DC0A0E1 		mov	ip, sp
 1325              	.LCFI4:
 1326              		.cfi_def_cfa_register 12
 1327 0258 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1328 025c 04B04CE2 		sub	fp, ip, #4
 1329              		.cfi_offset 14, -8
 1330              		.cfi_offset 13, -12
 1331              		.cfi_offset 11, -16
 1332              	.LCFI5:
 1333              		.cfi_def_cfa 11, 4
 1334 0260 18D04DE2 		sub	sp, sp, #24
 1335 0264 18000BE5 		str	r0, [fp, #-24]
 1336 0268 20300BE5 		str	r3, [fp, #-32]
 1337 026c 0130A0E1 		mov	r3, r1
 1338 0270 19304BE5 		strb	r3, [fp, #-25]
 1339 0274 0230A0E1 		mov	r3, r2
 1340 0278 1A304BE5 		strb	r3, [fp, #-26]
 171:../reversi8_2019.c ****     char ficha;
 172:../reversi8_2019.c **** 
 173:../reversi8_2019.c ****     // ficha = tablero[f][c];
 174:../reversi8_2019.c ****     // no puede accederse a tablero[f][c]
 175:../reversi8_2019.c ****     // ya que algún índice puede ser negativo
 176:../reversi8_2019.c **** 
 177:../reversi8_2019.c ****     if ((f < DIM) && (f >= 0) && (c < DIM) && (c >= 0) && (tablero[f][c] != CASILLA_VACIA))
 1341              		.loc 1 177 0
 1342 027c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1343 0280 070053E3 		cmp	r3, #7
 1344 0284 1500008A 		bhi	.L11
 1345              		.loc 1 177 0 is_stmt 0 discriminator 1
 1346 0288 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1347 028c 070053E3 		cmp	r3, #7
 1348 0290 1200008A 		bhi	.L11
 1349 0294 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1350 0298 8331A0E1 		mov	r3, r3, asl #3
 1351 029c 18201BE5 		ldr	r2, [fp, #-24]
 1352 02a0 032082E0 		add	r2, r2, r3
 1353 02a4 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1354 02a8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1355 02ac 000053E3 		cmp	r3, #0
 1356 02b0 0A00000A 		beq	.L11
 178:../reversi8_2019.c ****     {
 179:../reversi8_2019.c ****         *posicion_valida = 1;
 1357              		.loc 1 179 0 is_stmt 1
 1358 02b4 20301BE5 		ldr	r3, [fp, #-32]
 1359 02b8 0120A0E3 		mov	r2, #1
 1360 02bc 002083E5 		str	r2, [r3, #0]
 180:../reversi8_2019.c ****         ficha = tablero[f][c];
 1361              		.loc 1 180 0
 1362 02c0 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1363 02c4 8331A0E1 		mov	r3, r3, asl #3
 1364 02c8 18201BE5 		ldr	r2, [fp, #-24]
 1365 02cc 032082E0 		add	r2, r2, r3
 1366 02d0 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1367 02d4 0330D2E7 		ldrb	r3, [r2, r3]
 1368 02d8 0D304BE5 		strb	r3, [fp, #-13]
 1369 02dc 040000EA 		b	.L12
 1370              	.L11:
 181:../reversi8_2019.c ****     }
 182:../reversi8_2019.c ****     else
 183:../reversi8_2019.c ****     {
 184:../reversi8_2019.c ****         *posicion_valida = 0;
 1371              		.loc 1 184 0
 1372 02e0 20301BE5 		ldr	r3, [fp, #-32]
 1373 02e4 0020A0E3 		mov	r2, #0
 1374 02e8 002083E5 		str	r2, [r3, #0]
 185:../reversi8_2019.c ****         ficha = CASILLA_VACIA;
 1375              		.loc 1 185 0
 1376 02ec 0030A0E3 		mov	r3, #0
 1377 02f0 0D304BE5 		strb	r3, [fp, #-13]
 1378              	.L12:
 186:../reversi8_2019.c ****     }
 187:../reversi8_2019.c ****     return ficha;
 1379              		.loc 1 187 0
 1380 02f4 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 188:../reversi8_2019.c **** }
 1381              		.loc 1 188 0
 1382 02f8 0300A0E1 		mov	r0, r3
 1383 02fc 0CD04BE2 		sub	sp, fp, #12
 1384 0300 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1385 0304 1EFF2FE1 		bx	lr
 1386              		.cfi_endproc
 1387              	.LFE2:
 1389              		.align	2
 1390              		.global	patron_volteo
 1392              	patron_volteo:
 1393              	.LFB3:
 189:../reversi8_2019.c **** 
 190:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 191:../reversi8_2019.c **** // La función patrón volteo comprueba si hay que actualizar una determinada direccion,
 192:../reversi8_2019.c **** // busca el patrón de volteo (n fichas del rival seguidas de una ficha del jugador actual)
 193:../reversi8_2019.c **** // en una dirección determinada
 194:../reversi8_2019.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 195:../reversi8_2019.c **** // color indica el color de la pieza que se acaba de colocar
 196:../reversi8_2019.c **** // la función devuelve PATRON_ENCONTRADO (1) si encuentra patrón y NO_HAY_PATRON (0) en caso contra
 197:../reversi8_2019.c **** // FA y CA son la fila y columna a analizar
 198:../reversi8_2019.c **** // longitud es un parámetro por referencia. Sirve para saber la longitud del patrón que se está ana
 199:../reversi8_2019.c **** //          Se usa para saber cuantas fichas habría que voltear
 200:../reversi8_2019.c **** int patron_volteo(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char colo
 201:../reversi8_2019.c **** {
 1394              		.loc 1 201 0
 1395              		.cfi_startproc
 1396              		@ Function supports interworking.
 1397              		@ args = 12, pretend = 0, frame = 24
 1398              		@ frame_needed = 1, uses_anonymous_args = 0
 1399 0308 0DC0A0E1 		mov	ip, sp
 1400              	.LCFI6:
 1401              		.cfi_def_cfa_register 12
 1402 030c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1403 0310 04B04CE2 		sub	fp, ip, #4
 1404              		.cfi_offset 14, -8
 1405              		.cfi_offset 13, -12
 1406              		.cfi_offset 11, -16
 1407              	.LCFI7:
 1408              		.cfi_def_cfa 11, 4
 1409 0314 18D04DE2 		sub	sp, sp, #24
 1410 0318 18000BE5 		str	r0, [fp, #-24]
 1411 031c 1C100BE5 		str	r1, [fp, #-28]
 1412 0320 1D204BE5 		strb	r2, [fp, #-29]
 1413 0324 1E304BE5 		strb	r3, [fp, #-30]
 202:../reversi8_2019.c **** 	int posicion_valida; // indica si la posición es valida y contiene una ficha de algún jugador
 203:../reversi8_2019.c **** 	char casilla;   // casilla es la casilla que se lee del tablero
 204:../reversi8_2019.c **** 
 205:../reversi8_2019.c **** 	FA = FA + SF;
 1414              		.loc 1 205 0
 1415 0328 1D205BE5 		ldrb	r2, [fp, #-29]
 1416 032c 0430DBE5 		ldrb	r3, [fp, #4]
 1417 0330 033082E0 		add	r3, r2, r3
 1418 0334 1D304BE5 		strb	r3, [fp, #-29]
 206:../reversi8_2019.c **** 	CA = CA + SC;
 1419              		.loc 1 206 0
 1420 0338 1E205BE5 		ldrb	r2, [fp, #-30]
 1421 033c 0830DBE5 		ldrb	r3, [fp, #8]
 1422 0340 033082E0 		add	r3, r2, r3
 1423 0344 1E304BE5 		strb	r3, [fp, #-30]
 207:../reversi8_2019.c **** 	casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 1424              		.loc 1 207 0
 1425 0348 1D105BE5 		ldrb	r1, [fp, #-29]	@ zero_extendqisi2
 1426 034c 1E205BE5 		ldrb	r2, [fp, #-30]	@ zero_extendqisi2
 1427 0350 14304BE2 		sub	r3, fp, #20
 1428 0354 18001BE5 		ldr	r0, [fp, #-24]
 1429 0358 FEFFFFEB 		bl	ficha_valida
 1430 035c 0030A0E1 		mov	r3, r0
 1431 0360 0D304BE5 		strb	r3, [fp, #-13]
 208:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1432              		.loc 1 208 0
 1433 0364 130000EA 		b	.L14
 1434              	.L16:
 209:../reversi8_2019.c **** 	// mientras la casilla está en el tablero, no está vací­a,
 210:../reversi8_2019.c **** 	// y es del color rival seguimos buscando el patron de volteo
 211:../reversi8_2019.c **** 	{
 212:../reversi8_2019.c **** 		FA = FA + SF;
 1435              		.loc 1 212 0
 1436 0368 1D205BE5 		ldrb	r2, [fp, #-29]
 1437 036c 0430DBE5 		ldrb	r3, [fp, #4]
 1438 0370 033082E0 		add	r3, r2, r3
 1439 0374 1D304BE5 		strb	r3, [fp, #-29]
 213:../reversi8_2019.c **** 		CA = CA + SC;
 1440              		.loc 1 213 0
 1441 0378 1E205BE5 		ldrb	r2, [fp, #-30]
 1442 037c 0830DBE5 		ldrb	r3, [fp, #8]
 1443 0380 033082E0 		add	r3, r2, r3
 1444 0384 1E304BE5 		strb	r3, [fp, #-30]
 214:../reversi8_2019.c **** 		*longitud = *longitud + 1;
 1445              		.loc 1 214 0
 1446 0388 1C301BE5 		ldr	r3, [fp, #-28]
 1447 038c 003093E5 		ldr	r3, [r3, #0]
 1448 0390 012083E2 		add	r2, r3, #1
 1449 0394 1C301BE5 		ldr	r3, [fp, #-28]
 1450 0398 002083E5 		str	r2, [r3, #0]
 215:../reversi8_2019.c **** 		casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 1451              		.loc 1 215 0
 1452 039c 1D105BE5 		ldrb	r1, [fp, #-29]	@ zero_extendqisi2
 1453 03a0 1E205BE5 		ldrb	r2, [fp, #-30]	@ zero_extendqisi2
 1454 03a4 14304BE2 		sub	r3, fp, #20
 1455 03a8 18001BE5 		ldr	r0, [fp, #-24]
 1456 03ac FEFFFFEB 		bl	ficha_valida
 1457 03b0 0030A0E1 		mov	r3, r0
 1458 03b4 0D304BE5 		strb	r3, [fp, #-13]
 1459              	.L14:
 208:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1460              		.loc 1 208 0 discriminator 1
 1461 03b8 14301BE5 		ldr	r3, [fp, #-20]
 1462 03bc 010053E3 		cmp	r3, #1
 1463 03c0 0300001A 		bne	.L15
 208:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1464              		.loc 1 208 0 is_stmt 0 discriminator 2
 1465 03c4 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1466 03c8 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1467 03cc 030052E1 		cmp	r2, r3
 1468 03d0 E4FFFF1A 		bne	.L16
 1469              	.L15:
 216:../reversi8_2019.c **** 	}
 217:../reversi8_2019.c ****     // si la ultima posición era válida y la ficha es del jugador actual,
 218:../reversi8_2019.c ****     // entonces hemos encontrado el patrón
 219:../reversi8_2019.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0))
 1470              		.loc 1 219 0 is_stmt 1
 1471 03d4 14301BE5 		ldr	r3, [fp, #-20]
 1472 03d8 010053E3 		cmp	r3, #1
 1473 03dc 0900001A 		bne	.L17
 1474              		.loc 1 219 0 is_stmt 0 discriminator 1
 1475 03e0 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1476 03e4 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1477 03e8 030052E1 		cmp	r2, r3
 1478 03ec 0500001A 		bne	.L17
 1479 03f0 1C301BE5 		ldr	r3, [fp, #-28]
 1480 03f4 003093E5 		ldr	r3, [r3, #0]
 1481 03f8 000053E3 		cmp	r3, #0
 1482 03fc 010000DA 		ble	.L17
 220:../reversi8_2019.c **** 		return PATRON_ENCONTRADO; // si hay que voltear una ficha o más hemos encontrado el patrón
 1483              		.loc 1 220 0 is_stmt 1
 1484 0400 0130A0E3 		mov	r3, #1
 1485 0404 000000EA 		b	.L18
 1486              	.L17:
 221:../reversi8_2019.c **** 	else
 222:../reversi8_2019.c **** 		return NO_HAY_PATRON; // si no hay que voltear no hay patrón
 1487              		.loc 1 222 0
 1488 0408 0030A0E3 		mov	r3, #0
 1489              	.L18:
 223:../reversi8_2019.c **** }
 1490              		.loc 1 223 0
 1491 040c 0300A0E1 		mov	r0, r3
 1492 0410 0CD04BE2 		sub	sp, fp, #12
 1493 0414 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1494 0418 1EFF2FE1 		bx	lr
 1495              		.cfi_endproc
 1496              	.LFE3:
 1498              		.align	2
 1499              		.global	voltear
 1501              	voltear:
 1502              	.LFB4:
 224:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 225:../reversi8_2019.c **** // voltea n fichas en la dirección que toque
 226:../reversi8_2019.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 227:../reversi8_2019.c **** // color indica el color de la pieza que se acaba de colocar
 228:../reversi8_2019.c **** // FA y CA son la fila y columna a analizar
 229:../reversi8_2019.c **** void voltear(char tablero[][DIM], char FA, char CA, char SF, char SC, int n, char color)
 230:../reversi8_2019.c **** {
 1503              		.loc 1 230 0
 1504              		.cfi_startproc
 1505              		@ Function supports interworking.
 1506              		@ args = 12, pretend = 0, frame = 16
 1507              		@ frame_needed = 1, uses_anonymous_args = 0
 1508 041c 0DC0A0E1 		mov	ip, sp
 1509              	.LCFI8:
 1510              		.cfi_def_cfa_register 12
 1511 0420 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1512 0424 04B04CE2 		sub	fp, ip, #4
 1513              		.cfi_offset 14, -8
 1514              		.cfi_offset 13, -12
 1515              		.cfi_offset 11, -16
 1516              	.LCFI9:
 1517              		.cfi_def_cfa 11, 4
 1518 0428 10D04DE2 		sub	sp, sp, #16
 1519 042c 18000BE5 		str	r0, [fp, #-24]
 1520 0430 19104BE5 		strb	r1, [fp, #-25]
 1521 0434 1A204BE5 		strb	r2, [fp, #-26]
 1522 0438 1B304BE5 		strb	r3, [fp, #-27]
 231:../reversi8_2019.c ****     int i;
 232:../reversi8_2019.c **** 
 233:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1523              		.loc 1 233 0
 1524 043c 0030A0E3 		mov	r3, #0
 1525 0440 10300BE5 		str	r3, [fp, #-16]
 1526 0444 110000EA 		b	.L20
 1527              	.L21:
 234:../reversi8_2019.c ****     {
 235:../reversi8_2019.c ****         FA = FA + SF;
 1528              		.loc 1 235 0 discriminator 2
 1529 0448 19205BE5 		ldrb	r2, [fp, #-25]
 1530 044c 1B305BE5 		ldrb	r3, [fp, #-27]
 1531 0450 033082E0 		add	r3, r2, r3
 1532 0454 19304BE5 		strb	r3, [fp, #-25]
 236:../reversi8_2019.c ****         CA = CA + SC;
 1533              		.loc 1 236 0 discriminator 2
 1534 0458 1A205BE5 		ldrb	r2, [fp, #-26]
 1535 045c 0430DBE5 		ldrb	r3, [fp, #4]
 1536 0460 033082E0 		add	r3, r2, r3
 1537 0464 1A304BE5 		strb	r3, [fp, #-26]
 237:../reversi8_2019.c ****         tablero[FA][CA] = color;
 1538              		.loc 1 237 0 discriminator 2
 1539 0468 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1540 046c 8331A0E1 		mov	r3, r3, asl #3
 1541 0470 18201BE5 		ldr	r2, [fp, #-24]
 1542 0474 032082E0 		add	r2, r2, r3
 1543 0478 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1544 047c 0C10DBE5 		ldrb	r1, [fp, #12]
 1545 0480 0310C2E7 		strb	r1, [r2, r3]
 233:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1546              		.loc 1 233 0 discriminator 2
 1547 0484 10301BE5 		ldr	r3, [fp, #-16]
 1548 0488 013083E2 		add	r3, r3, #1
 1549 048c 10300BE5 		str	r3, [fp, #-16]
 1550              	.L20:
 233:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1551              		.loc 1 233 0 is_stmt 0 discriminator 1
 1552 0490 10201BE5 		ldr	r2, [fp, #-16]
 1553 0494 08309BE5 		ldr	r3, [fp, #8]
 1554 0498 030052E1 		cmp	r2, r3
 1555 049c E9FFFFBA 		blt	.L21
 238:../reversi8_2019.c ****     }
 239:../reversi8_2019.c **** }
 1556              		.loc 1 239 0 is_stmt 1
 1557 04a0 0CD04BE2 		sub	sp, fp, #12
 1558 04a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1559 04a8 1EFF2FE1 		bx	lr
 1560              		.cfi_endproc
 1561              	.LFE4:
 1563              		.align	2
 1564              		.global	actualizar_tablero
 1566              	actualizar_tablero:
 1567              	.LFB5:
 240:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 241:../reversi8_2019.c **** // comprueba si hay que actualizar alguna ficha
 242:../reversi8_2019.c **** // no comprueba que el movimiento realizado sea válido
 243:../reversi8_2019.c **** // f y c son la fila y columna a analizar
 244:../reversi8_2019.c **** // char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
 245:../reversi8_2019.c **** // char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
 246:../reversi8_2019.c **** int actualizar_tablero(char tablero[][DIM], char f, char c, char color)
 247:../reversi8_2019.c **** {
 1568              		.loc 1 247 0
 1569              		.cfi_startproc
 1570              		@ Function supports interworking.
 1571              		@ args = 0, pretend = 0, frame = 24
 1572              		@ frame_needed = 1, uses_anonymous_args = 0
 1573 04ac 0DC0A0E1 		mov	ip, sp
 1574              	.LCFI10:
 1575              		.cfi_def_cfa_register 12
 1576 04b0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1577 04b4 04B04CE2 		sub	fp, ip, #4
 1578              		.cfi_offset 14, -8
 1579              		.cfi_offset 13, -12
 1580              		.cfi_offset 11, -16
 1581              	.LCFI11:
 1582              		.cfi_def_cfa 11, 4
 1583 04b8 28D04DE2 		sub	sp, sp, #40
 1584 04bc 20000BE5 		str	r0, [fp, #-32]
 1585 04c0 21104BE5 		strb	r1, [fp, #-33]
 1586 04c4 22204BE5 		strb	r2, [fp, #-34]
 1587 04c8 23304BE5 		strb	r3, [fp, #-35]
 248:../reversi8_2019.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 249:../reversi8_2019.c ****     int i, flip, patron;
 250:../reversi8_2019.c **** 
 251:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1588              		.loc 1 251 0
 1589 04cc 0030A0E3 		mov	r3, #0
 1590 04d0 10300BE5 		str	r3, [fp, #-16]
 1591 04d4 280000EA 		b	.L23
 1592              	.L25:
 252:../reversi8_2019.c ****     {
 253:../reversi8_2019.c ****         SF = vSF[i];
 1593              		.loc 1 253 0
 1594 04d8 BC209FE5 		ldr	r2, .L26
 1595 04dc 10301BE5 		ldr	r3, [fp, #-16]
 1596 04e0 033082E0 		add	r3, r2, r3
 1597 04e4 0030D3E5 		ldrb	r3, [r3, #0]
 1598 04e8 11304BE5 		strb	r3, [fp, #-17]
 254:../reversi8_2019.c ****         SC = vSC[i];
 1599              		.loc 1 254 0
 1600 04ec AC209FE5 		ldr	r2, .L26+4
 1601 04f0 10301BE5 		ldr	r3, [fp, #-16]
 1602 04f4 033082E0 		add	r3, r2, r3
 1603 04f8 0030D3E5 		ldrb	r3, [r3, #0]
 1604 04fc 12304BE5 		strb	r3, [fp, #-18]
 255:../reversi8_2019.c ****         // flip: numero de fichas a voltear
 256:../reversi8_2019.c ****         flip = 0;
 1605              		.loc 1 256 0
 1606 0500 0030A0E3 		mov	r3, #0
 1607 0504 1C300BE5 		str	r3, [fp, #-28]
 257:../reversi8_2019.c ****         patron = patron_volteo(tablero, &flip, f, c, SF, SC, color);
 1608              		.loc 1 257 0
 1609 0508 1C104BE2 		sub	r1, fp, #28
 1610 050c 21205BE5 		ldrb	r2, [fp, #-33]	@ zero_extendqisi2
 1611 0510 22305BE5 		ldrb	r3, [fp, #-34]	@ zero_extendqisi2
 1612 0514 11005BE5 		ldrb	r0, [fp, #-17]	@ zero_extendqisi2
 1613 0518 00008DE5 		str	r0, [sp, #0]
 1614 051c 12005BE5 		ldrb	r0, [fp, #-18]	@ zero_extendqisi2
 1615 0520 04008DE5 		str	r0, [sp, #4]
 1616 0524 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 1617 0528 08008DE5 		str	r0, [sp, #8]
 1618 052c 20001BE5 		ldr	r0, [fp, #-32]
 1619 0530 FEFFFFEB 		bl	patron_volteo
 1620 0534 18000BE5 		str	r0, [fp, #-24]
 258:../reversi8_2019.c ****         //printf("Flip: %d \n", flip);
 259:../reversi8_2019.c ****         if (patron == PATRON_ENCONTRADO )
 1621              		.loc 1 259 0
 1622 0538 18301BE5 		ldr	r3, [fp, #-24]
 1623 053c 010053E3 		cmp	r3, #1
 1624 0540 0A00001A 		bne	.L24
 260:../reversi8_2019.c ****         {
 261:../reversi8_2019.c ****             voltear(tablero, f, c, SF, SC, flip, color);
 1625              		.loc 1 261 0
 1626 0544 1C001BE5 		ldr	r0, [fp, #-28]
 1627 0548 21105BE5 		ldrb	r1, [fp, #-33]	@ zero_extendqisi2
 1628 054c 22205BE5 		ldrb	r2, [fp, #-34]	@ zero_extendqisi2
 1629 0550 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1630 0554 12C05BE5 		ldrb	ip, [fp, #-18]	@ zero_extendqisi2
 1631 0558 00C08DE5 		str	ip, [sp, #0]
 1632 055c 04008DE5 		str	r0, [sp, #4]
 1633 0560 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 1634 0564 08008DE5 		str	r0, [sp, #8]
 1635 0568 20001BE5 		ldr	r0, [fp, #-32]
 1636 056c FEFFFFEB 		bl	voltear
 1637              	.L24:
 251:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1638              		.loc 1 251 0
 1639 0570 10301BE5 		ldr	r3, [fp, #-16]
 1640 0574 013083E2 		add	r3, r3, #1
 1641 0578 10300BE5 		str	r3, [fp, #-16]
 1642              	.L23:
 251:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1643              		.loc 1 251 0 is_stmt 0 discriminator 1
 1644 057c 10301BE5 		ldr	r3, [fp, #-16]
 1645 0580 070053E3 		cmp	r3, #7
 1646 0584 D3FFFFDA 		ble	.L25
 262:../reversi8_2019.c ****         }
 263:../reversi8_2019.c ****     }
 264:../reversi8_2019.c ****     return 0;
 1647              		.loc 1 264 0 is_stmt 1
 1648 0588 0030A0E3 		mov	r3, #0
 265:../reversi8_2019.c **** }
 1649              		.loc 1 265 0
 1650 058c 0300A0E1 		mov	r0, r3
 1651 0590 0CD04BE2 		sub	sp, fp, #12
 1652 0594 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1653 0598 1EFF2FE1 		bx	lr
 1654              	.L27:
 1655              		.align	2
 1656              	.L26:
 1657 059c 00000000 		.word	vSF
 1658 05a0 00000000 		.word	vSC
 1659              		.cfi_endproc
 1660              	.LFE5:
 1662              		.align	2
 1663              		.global	elegir_mov
 1665              	elegir_mov:
 1666              	.LFB6:
 266:../reversi8_2019.c **** 
 267:../reversi8_2019.c **** /////////////////////////////////////////////////////////////////////////////////
 268:../reversi8_2019.c **** // Recorre todo el tablero comprobando en cada posición si se puede mover
 269:../reversi8_2019.c **** // En caso afirmativo, consulta la puntuación de la posición y si es la mejor
 270:../reversi8_2019.c **** // que se ha encontrado la guarda
 271:../reversi8_2019.c **** // Al acabar escribe el movimiento seleccionado en f y c
 272:../reversi8_2019.c **** 
 273:../reversi8_2019.c **** // Candidatas
 274:../reversi8_2019.c **** // NO    0
 275:../reversi8_2019.c **** // SI    1
 276:../reversi8_2019.c **** // CASILLA_OCUPADA 2
 277:../reversi8_2019.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 278:../reversi8_2019.c **** {
 1667              		.loc 1 278 0
 1668              		.cfi_startproc
 1669              		@ Function supports interworking.
 1670              		@ args = 0, pretend = 0, frame = 56
 1671              		@ frame_needed = 1, uses_anonymous_args = 0
 1672 05a4 0DC0A0E1 		mov	ip, sp
 1673              	.LCFI12:
 1674              		.cfi_def_cfa_register 12
 1675 05a8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1676 05ac 04B04CE2 		sub	fp, ip, #4
 1677              		.cfi_offset 14, -8
 1678              		.cfi_offset 13, -12
 1679              		.cfi_offset 11, -16
 1680              	.LCFI13:
 1681              		.cfi_def_cfa 11, 4
 1682 05b0 48D04DE2 		sub	sp, sp, #72
 1683 05b4 38000BE5 		str	r0, [fp, #-56]
 1684 05b8 3C100BE5 		str	r1, [fp, #-60]
 1685 05bc 40200BE5 		str	r2, [fp, #-64]
 1686 05c0 44300BE5 		str	r3, [fp, #-68]
 279:../reversi8_2019.c ****     int i, j, k, found;
 280:../reversi8_2019.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 1687              		.loc 1 280 0
 1688 05c4 0030E0E3 		mvn	r3, #0
 1689 05c8 20300BE5 		str	r3, [fp, #-32]
 281:../reversi8_2019.c ****     int mc;      // almacena la columna del mejor movimiento encontrado
 282:../reversi8_2019.c ****     char mejor = 0; // almacena el mejor valor encontrado
 1690              		.loc 1 282 0
 1691 05cc 0030A0E3 		mov	r3, #0
 1692 05d0 25304BE5 		strb	r3, [fp, #-37]
 283:../reversi8_2019.c ****     int patron, longitud;
 284:../reversi8_2019.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 285:../reversi8_2019.c **** 
 286:../reversi8_2019.c ****     // Recorremos todo el tablero comprobando dónde podemos mover
 287:../reversi8_2019.c ****     // Comparamos la puntuación de los movimientos encontrados y nos quedamos con el mejor
 288:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1693              		.loc 1 288 0
 1694 05d4 0030A0E3 		mov	r3, #0
 1695 05d8 10300BE5 		str	r3, [fp, #-16]
 1696 05dc 620000EA 		b	.L29
 1697              	.L36:
 289:../reversi8_2019.c ****     {
 290:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1698              		.loc 1 290 0
 1699 05e0 0030A0E3 		mov	r3, #0
 1700 05e4 14300BE5 		str	r3, [fp, #-20]
 1701 05e8 590000EA 		b	.L30
 1702              	.L35:
 291:../reversi8_2019.c ****         {   // indica en qué casillas quizá se pueda mover
 292:../reversi8_2019.c ****             if (candidatas[i][j] == SI)
 1703              		.loc 1 292 0
 1704 05ec 10301BE5 		ldr	r3, [fp, #-16]
 1705 05f0 8331A0E1 		mov	r3, r3, asl #3
 1706 05f4 38201BE5 		ldr	r2, [fp, #-56]
 1707 05f8 032082E0 		add	r2, r2, r3
 1708 05fc 14301BE5 		ldr	r3, [fp, #-20]
 1709 0600 033082E0 		add	r3, r2, r3
 1710 0604 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1711 0608 9C319FE5 		ldr	r3, .L37
 1712 060c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1713 0610 030052E1 		cmp	r2, r3
 1714 0614 4B00001A 		bne	.L31
 293:../reversi8_2019.c ****             {
 294:../reversi8_2019.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 1715              		.loc 1 294 0
 1716 0618 10301BE5 		ldr	r3, [fp, #-16]
 1717 061c 8331A0E1 		mov	r3, r3, asl #3
 1718 0620 3C201BE5 		ldr	r2, [fp, #-60]
 1719 0624 032082E0 		add	r2, r2, r3
 1720 0628 14301BE5 		ldr	r3, [fp, #-20]
 1721 062c 033082E0 		add	r3, r2, r3
 1722 0630 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1723 0634 000053E3 		cmp	r3, #0
 1724 0638 4200001A 		bne	.L31
 295:../reversi8_2019.c ****                 {
 296:../reversi8_2019.c ****                     found = 0;
 1725              		.loc 1 296 0
 1726 063c 0030A0E3 		mov	r3, #0
 1727 0640 1C300BE5 		str	r3, [fp, #-28]
 297:../reversi8_2019.c ****                     k = 0;
 1728              		.loc 1 297 0
 1729 0644 0030A0E3 		mov	r3, #0
 1730 0648 18300BE5 		str	r3, [fp, #-24]
 298:../reversi8_2019.c **** 
 299:../reversi8_2019.c ****                     // en este bucle comprobamos si es un movimiento válido
 300:../reversi8_2019.c ****                     // (es decir si implica voltear en alguna dirección)
 301:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 1731              		.loc 1 301 0
 1732 064c 370000EA 		b	.L32
 1733              	.L34:
 302:../reversi8_2019.c ****                     {
 303:../reversi8_2019.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 1734              		.loc 1 303 0
 1735 0650 58219FE5 		ldr	r2, .L37+4
 1736 0654 18301BE5 		ldr	r3, [fp, #-24]
 1737 0658 033082E0 		add	r3, r2, r3
 1738 065c 0030D3E5 		ldrb	r3, [r3, #0]
 1739 0660 26304BE5 		strb	r3, [fp, #-38]
 304:../reversi8_2019.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 1740              		.loc 1 304 0
 1741 0664 48219FE5 		ldr	r2, .L37+8
 1742 0668 18301BE5 		ldr	r3, [fp, #-24]
 1743 066c 033082E0 		add	r3, r2, r3
 1744 0670 0030D3E5 		ldrb	r3, [r3, #0]
 1745 0674 27304BE5 		strb	r3, [fp, #-39]
 305:../reversi8_2019.c **** 
 306:../reversi8_2019.c ****                         // nos dice qué hay que voltear en cada dirección
 307:../reversi8_2019.c ****                         longitud = 0;
 1746              		.loc 1 307 0
 1747 0678 0030A0E3 		mov	r3, #0
 1748 067c 30300BE5 		str	r3, [fp, #-48]
 308:../reversi8_2019.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA);
 1749              		.loc 1 308 0
 1750 0680 10301BE5 		ldr	r3, [fp, #-16]
 1751 0684 FF2003E2 		and	r2, r3, #255
 1752 0688 14301BE5 		ldr	r3, [fp, #-20]
 1753 068c FF3003E2 		and	r3, r3, #255
 1754 0690 30104BE2 		sub	r1, fp, #48
 1755 0694 26005BE5 		ldrb	r0, [fp, #-38]	@ zero_extendqisi2
 1756 0698 00008DE5 		str	r0, [sp, #0]
 1757 069c 27005BE5 		ldrb	r0, [fp, #-39]	@ zero_extendqisi2
 1758 06a0 04008DE5 		str	r0, [sp, #4]
 1759 06a4 0100A0E3 		mov	r0, #1
 1760 06a8 08008DE5 		str	r0, [sp, #8]
 1761 06ac 3C001BE5 		ldr	r0, [fp, #-60]
 1762 06b0 FEFFFFEB 		bl	patron_volteo
 1763 06b4 2C000BE5 		str	r0, [fp, #-44]
 309:../reversi8_2019.c ****                         //  //printf("%d ", patron);
 310:../reversi8_2019.c ****                         if (patron == PATRON_ENCONTRADO)
 1764              		.loc 1 310 0
 1765 06b8 2C301BE5 		ldr	r3, [fp, #-44]
 1766 06bc 010053E3 		cmp	r3, #1
 1767 06c0 1700001A 		bne	.L33
 311:../reversi8_2019.c ****                         {
 312:../reversi8_2019.c ****                             found = 1;
 1768              		.loc 1 312 0
 1769 06c4 0130A0E3 		mov	r3, #1
 1770 06c8 1C300BE5 		str	r3, [fp, #-28]
 313:../reversi8_2019.c ****                             if (tabla_valor[i][j] > mejor)
 1771              		.loc 1 313 0
 1772 06cc E4209FE5 		ldr	r2, .L37+12
 1773 06d0 10301BE5 		ldr	r3, [fp, #-16]
 1774 06d4 8311A0E1 		mov	r1, r3, asl #3
 1775 06d8 14301BE5 		ldr	r3, [fp, #-20]
 1776 06dc 033081E0 		add	r3, r1, r3
 1777 06e0 033082E0 		add	r3, r2, r3
 1778 06e4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1779 06e8 25205BE5 		ldrb	r2, [fp, #-37]	@ zero_extendqisi2
 1780 06ec 030052E1 		cmp	r2, r3
 1781 06f0 0B00002A 		bcs	.L33
 314:../reversi8_2019.c ****                             {
 315:../reversi8_2019.c ****                                 mf = i;
 1782              		.loc 1 315 0
 1783 06f4 10301BE5 		ldr	r3, [fp, #-16]
 1784 06f8 20300BE5 		str	r3, [fp, #-32]
 316:../reversi8_2019.c ****                                 mc = j;
 1785              		.loc 1 316 0
 1786 06fc 14301BE5 		ldr	r3, [fp, #-20]
 1787 0700 24300BE5 		str	r3, [fp, #-36]
 317:../reversi8_2019.c ****                                 mejor = tabla_valor[i][j];
 1788              		.loc 1 317 0
 1789 0704 AC209FE5 		ldr	r2, .L37+12
 1790 0708 10301BE5 		ldr	r3, [fp, #-16]
 1791 070c 8311A0E1 		mov	r1, r3, asl #3
 1792 0710 14301BE5 		ldr	r3, [fp, #-20]
 1793 0714 033081E0 		add	r3, r1, r3
 1794 0718 033082E0 		add	r3, r2, r3
 1795 071c 0030D3E5 		ldrb	r3, [r3, #0]
 1796 0720 25304BE5 		strb	r3, [fp, #-37]
 1797              	.L33:
 318:../reversi8_2019.c ****                             }
 319:../reversi8_2019.c ****                         }
 320:../reversi8_2019.c ****                         k++;
 1798              		.loc 1 320 0
 1799 0724 18301BE5 		ldr	r3, [fp, #-24]
 1800 0728 013083E2 		add	r3, r3, #1
 1801 072c 18300BE5 		str	r3, [fp, #-24]
 1802              	.L32:
 301:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 1803              		.loc 1 301 0 discriminator 1
 1804 0730 1C301BE5 		ldr	r3, [fp, #-28]
 1805 0734 000053E3 		cmp	r3, #0
 1806 0738 0200001A 		bne	.L31
 301:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 1807              		.loc 1 301 0 is_stmt 0 discriminator 2
 1808 073c 18301BE5 		ldr	r3, [fp, #-24]
 1809 0740 070053E3 		cmp	r3, #7
 1810 0744 C1FFFFDA 		ble	.L34
 1811              	.L31:
 290:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1812              		.loc 1 290 0 is_stmt 1
 1813 0748 14301BE5 		ldr	r3, [fp, #-20]
 1814 074c 013083E2 		add	r3, r3, #1
 1815 0750 14300BE5 		str	r3, [fp, #-20]
 1816              	.L30:
 290:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1817              		.loc 1 290 0 is_stmt 0 discriminator 1
 1818 0754 14301BE5 		ldr	r3, [fp, #-20]
 1819 0758 070053E3 		cmp	r3, #7
 1820 075c A2FFFFDA 		ble	.L35
 288:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1821              		.loc 1 288 0 is_stmt 1
 1822 0760 10301BE5 		ldr	r3, [fp, #-16]
 1823 0764 013083E2 		add	r3, r3, #1
 1824 0768 10300BE5 		str	r3, [fp, #-16]
 1825              	.L29:
 288:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1826              		.loc 1 288 0 is_stmt 0 discriminator 1
 1827 076c 10301BE5 		ldr	r3, [fp, #-16]
 1828 0770 070053E3 		cmp	r3, #7
 1829 0774 99FFFFDA 		ble	.L36
 321:../reversi8_2019.c ****                         // si no hemos encontrado nada probamos con la siguiente dirección
 322:../reversi8_2019.c ****                     }
 323:../reversi8_2019.c ****                 }
 324:../reversi8_2019.c ****             }
 325:../reversi8_2019.c ****         }
 326:../reversi8_2019.c ****     }
 327:../reversi8_2019.c ****     *f = (char) mf;
 1830              		.loc 1 327 0 is_stmt 1
 1831 0778 20301BE5 		ldr	r3, [fp, #-32]
 1832 077c FF2003E2 		and	r2, r3, #255
 1833 0780 40301BE5 		ldr	r3, [fp, #-64]
 1834 0784 0020C3E5 		strb	r2, [r3, #0]
 328:../reversi8_2019.c ****     *c = (char) mc;
 1835              		.loc 1 328 0
 1836 0788 24301BE5 		ldr	r3, [fp, #-36]
 1837 078c FF2003E2 		and	r2, r3, #255
 1838 0790 44301BE5 		ldr	r3, [fp, #-68]
 1839 0794 0020C3E5 		strb	r2, [r3, #0]
 329:../reversi8_2019.c ****     // si no se ha encontrado una posición válida devuelve -1
 330:../reversi8_2019.c ****     return mf;
 1840              		.loc 1 330 0
 1841 0798 20301BE5 		ldr	r3, [fp, #-32]
 331:../reversi8_2019.c **** }
 1842              		.loc 1 331 0
 1843 079c 0300A0E1 		mov	r0, r3
 1844 07a0 0CD04BE2 		sub	sp, fp, #12
 1845 07a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1846 07a8 1EFF2FE1 		bx	lr
 1847              	.L38:
 1848              		.align	2
 1849              	.L37:
 1850 07ac 00000000 		.word	SI
 1851 07b0 00000000 		.word	vSF
 1852 07b4 00000000 		.word	vSC
 1853 07b8 08000000 		.word	tabla_valor
 1854              		.cfi_endproc
 1855              	.LFE6:
 1857              		.align	2
 1858              		.global	contar
 1860              	contar:
 1861              	.LFB7:
 332:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 333:../reversi8_2019.c **** // Cuenta el número de fichas de cada color.
 334:../reversi8_2019.c **** // Los guarda en la dirección b (blancas) y n (negras)
 335:../reversi8_2019.c **** void contar(char tablero[][DIM], int *b, int *n)
 336:../reversi8_2019.c **** {
 1862              		.loc 1 336 0
 1863              		.cfi_startproc
 1864              		@ Function supports interworking.
 1865              		@ args = 0, pretend = 0, frame = 24
 1866              		@ frame_needed = 1, uses_anonymous_args = 0
 1867 07bc 0DC0A0E1 		mov	ip, sp
 1868              	.LCFI14:
 1869              		.cfi_def_cfa_register 12
 1870 07c0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1871 07c4 04B04CE2 		sub	fp, ip, #4
 1872              		.cfi_offset 14, -8
 1873              		.cfi_offset 13, -12
 1874              		.cfi_offset 11, -16
 1875              	.LCFI15:
 1876              		.cfi_def_cfa 11, 4
 1877 07c8 18D04DE2 		sub	sp, sp, #24
 1878 07cc 18000BE5 		str	r0, [fp, #-24]
 1879 07d0 1C100BE5 		str	r1, [fp, #-28]
 1880 07d4 20200BE5 		str	r2, [fp, #-32]
 337:../reversi8_2019.c ****     int i,j;
 338:../reversi8_2019.c **** 
 339:../reversi8_2019.c ****     *b = 0;
 1881              		.loc 1 339 0
 1882 07d8 1C301BE5 		ldr	r3, [fp, #-28]
 1883 07dc 0020A0E3 		mov	r2, #0
 1884 07e0 002083E5 		str	r2, [r3, #0]
 340:../reversi8_2019.c ****     *n = 0;
 1885              		.loc 1 340 0
 1886 07e4 20301BE5 		ldr	r3, [fp, #-32]
 1887 07e8 0020A0E3 		mov	r2, #0
 1888 07ec 002083E5 		str	r2, [r3, #0]
 341:../reversi8_2019.c **** 
 342:../reversi8_2019.c ****     // recorremos todo el tablero contando las fichas de cada color
 343:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1889              		.loc 1 343 0
 1890 07f0 0030A0E3 		mov	r3, #0
 1891 07f4 10300BE5 		str	r3, [fp, #-16]
 1892 07f8 280000EA 		b	.L40
 1893              	.L45:
 344:../reversi8_2019.c ****     {
 345:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1894              		.loc 1 345 0
 1895 07fc 0030A0E3 		mov	r3, #0
 1896 0800 14300BE5 		str	r3, [fp, #-20]
 1897 0804 1F0000EA 		b	.L41
 1898              	.L44:
 346:../reversi8_2019.c ****         {
 347:../reversi8_2019.c ****             if (tablero[i][j] == FICHA_BLANCA)
 1899              		.loc 1 347 0
 1900 0808 10301BE5 		ldr	r3, [fp, #-16]
 1901 080c 8331A0E1 		mov	r3, r3, asl #3
 1902 0810 18201BE5 		ldr	r2, [fp, #-24]
 1903 0814 032082E0 		add	r2, r2, r3
 1904 0818 14301BE5 		ldr	r3, [fp, #-20]
 1905 081c 033082E0 		add	r3, r2, r3
 1906 0820 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1907 0824 010053E3 		cmp	r3, #1
 1908 0828 0500001A 		bne	.L42
 348:../reversi8_2019.c ****             {
 349:../reversi8_2019.c ****                 (*b)++;
 1909              		.loc 1 349 0
 1910 082c 1C301BE5 		ldr	r3, [fp, #-28]
 1911 0830 003093E5 		ldr	r3, [r3, #0]
 1912 0834 012083E2 		add	r2, r3, #1
 1913 0838 1C301BE5 		ldr	r3, [fp, #-28]
 1914 083c 002083E5 		str	r2, [r3, #0]
 1915 0840 0D0000EA 		b	.L43
 1916              	.L42:
 350:../reversi8_2019.c ****             }
 351:../reversi8_2019.c ****             else if (tablero[i][j] == FICHA_NEGRA)
 1917              		.loc 1 351 0
 1918 0844 10301BE5 		ldr	r3, [fp, #-16]
 1919 0848 8331A0E1 		mov	r3, r3, asl #3
 1920 084c 18201BE5 		ldr	r2, [fp, #-24]
 1921 0850 032082E0 		add	r2, r2, r3
 1922 0854 14301BE5 		ldr	r3, [fp, #-20]
 1923 0858 033082E0 		add	r3, r2, r3
 1924 085c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1925 0860 020053E3 		cmp	r3, #2
 1926 0864 0400001A 		bne	.L43
 352:../reversi8_2019.c ****             {
 353:../reversi8_2019.c ****                 (*n)++;
 1927              		.loc 1 353 0
 1928 0868 20301BE5 		ldr	r3, [fp, #-32]
 1929 086c 003093E5 		ldr	r3, [r3, #0]
 1930 0870 012083E2 		add	r2, r3, #1
 1931 0874 20301BE5 		ldr	r3, [fp, #-32]
 1932 0878 002083E5 		str	r2, [r3, #0]
 1933              	.L43:
 345:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1934              		.loc 1 345 0
 1935 087c 14301BE5 		ldr	r3, [fp, #-20]
 1936 0880 013083E2 		add	r3, r3, #1
 1937 0884 14300BE5 		str	r3, [fp, #-20]
 1938              	.L41:
 345:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1939              		.loc 1 345 0 is_stmt 0 discriminator 1
 1940 0888 14301BE5 		ldr	r3, [fp, #-20]
 1941 088c 070053E3 		cmp	r3, #7
 1942 0890 DCFFFFDA 		ble	.L44
 343:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1943              		.loc 1 343 0 is_stmt 1
 1944 0894 10301BE5 		ldr	r3, [fp, #-16]
 1945 0898 013083E2 		add	r3, r3, #1
 1946 089c 10300BE5 		str	r3, [fp, #-16]
 1947              	.L40:
 343:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1948              		.loc 1 343 0 is_stmt 0 discriminator 1
 1949 08a0 10301BE5 		ldr	r3, [fp, #-16]
 1950 08a4 070053E3 		cmp	r3, #7
 1951 08a8 D3FFFFDA 		ble	.L45
 354:../reversi8_2019.c ****             }
 355:../reversi8_2019.c ****         }
 356:../reversi8_2019.c ****     }
 357:../reversi8_2019.c **** }
 1952              		.loc 1 357 0 is_stmt 1
 1953 08ac 0CD04BE2 		sub	sp, fp, #12
 1954 08b0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1955 08b4 1EFF2FE1 		bx	lr
 1956              		.cfi_endproc
 1957              	.LFE7:
 1959              		.align	2
 1960              		.global	actualizar_candidatas
 1962              	actualizar_candidatas:
 1963              	.LFB8:
 358:../reversi8_2019.c **** 
 359:../reversi8_2019.c **** void actualizar_candidatas(char candidatas[][DIM], char f, char c)
 360:../reversi8_2019.c **** {
 1964              		.loc 1 360 0
 1965              		.cfi_startproc
 1966              		@ Function supports interworking.
 1967              		@ args = 0, pretend = 0, frame = 8
 1968              		@ frame_needed = 1, uses_anonymous_args = 0
 1969 08b8 0DC0A0E1 		mov	ip, sp
 1970              	.LCFI16:
 1971              		.cfi_def_cfa_register 12
 1972 08bc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1973 08c0 04B04CE2 		sub	fp, ip, #4
 1974              		.cfi_offset 14, -8
 1975              		.cfi_offset 13, -12
 1976              		.cfi_offset 11, -16
 1977              	.LCFI17:
 1978              		.cfi_def_cfa 11, 4
 1979 08c4 08D04DE2 		sub	sp, sp, #8
 1980 08c8 10000BE5 		str	r0, [fp, #-16]
 1981 08cc 0230A0E1 		mov	r3, r2
 1982 08d0 0120A0E1 		mov	r2, r1
 1983 08d4 11204BE5 		strb	r2, [fp, #-17]
 1984 08d8 12304BE5 		strb	r3, [fp, #-18]
 361:../reversi8_2019.c ****     // donde ya se ha colocado no se puede volver a colocar
 362:../reversi8_2019.c ****     // En las posiciones alrededor sí
 363:../reversi8_2019.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 1985              		.loc 1 363 0
 1986 08dc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1987 08e0 8331A0E1 		mov	r3, r3, asl #3
 1988 08e4 10201BE5 		ldr	r2, [fp, #-16]
 1989 08e8 032082E0 		add	r2, r2, r3
 1990 08ec 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 1991 08f0 10139FE5 		ldr	r1, .L55
 1992 08f4 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 1993 08f8 0310C2E7 		strb	r1, [r2, r3]
 364:../reversi8_2019.c ****     if (f > 0)
 1994              		.loc 1 364 0
 1995 08fc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1996 0900 000053E3 		cmp	r3, #0
 1997 0904 4500000A 		beq	.L47
 365:../reversi8_2019.c ****     {
 366:../reversi8_2019.c ****         if (candidatas[f-1][c] != CASILLA_OCUPADA)
 1998              		.loc 1 366 0
 1999 0908 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2000 090c 013043E2 		sub	r3, r3, #1
 2001 0910 8331A0E1 		mov	r3, r3, asl #3
 2002 0914 10201BE5 		ldr	r2, [fp, #-16]
 2003 0918 032082E0 		add	r2, r2, r3
 2004 091c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2005 0920 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2006 0924 DC329FE5 		ldr	r3, .L55
 2007 0928 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2008 092c 030052E1 		cmp	r2, r3
 2009 0930 0800000A 		beq	.L48
 367:../reversi8_2019.c ****             candidatas[f-1][c] = SI;
 2010              		.loc 1 367 0
 2011 0934 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2012 0938 013043E2 		sub	r3, r3, #1
 2013 093c 8331A0E1 		mov	r3, r3, asl #3
 2014 0940 10201BE5 		ldr	r2, [fp, #-16]
 2015 0944 032082E0 		add	r2, r2, r3
 2016 0948 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2017 094c B8129FE5 		ldr	r1, .L55+4
 2018 0950 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2019 0954 0310C2E7 		strb	r1, [r2, r3]
 2020              	.L48:
 368:../reversi8_2019.c **** 
 369:../reversi8_2019.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2021              		.loc 1 369 0
 2022 0958 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2023 095c 000053E3 		cmp	r3, #0
 2024 0960 1500000A 		beq	.L49
 2025              		.loc 1 369 0 is_stmt 0 discriminator 1
 2026 0964 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2027 0968 013043E2 		sub	r3, r3, #1
 2028 096c 8331A0E1 		mov	r3, r3, asl #3
 2029 0970 10201BE5 		ldr	r2, [fp, #-16]
 2030 0974 032082E0 		add	r2, r2, r3
 2031 0978 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2032 097c 013043E2 		sub	r3, r3, #1
 2033 0980 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2034 0984 7C329FE5 		ldr	r3, .L55
 2035 0988 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2036 098c 030052E1 		cmp	r2, r3
 2037 0990 0900000A 		beq	.L49
 370:../reversi8_2019.c ****             candidatas[f-1][c-1] = SI;
 2038              		.loc 1 370 0 is_stmt 1
 2039 0994 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2040 0998 013043E2 		sub	r3, r3, #1
 2041 099c 8331A0E1 		mov	r3, r3, asl #3
 2042 09a0 10201BE5 		ldr	r2, [fp, #-16]
 2043 09a4 032082E0 		add	r2, r2, r3
 2044 09a8 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2045 09ac 013043E2 		sub	r3, r3, #1
 2046 09b0 54129FE5 		ldr	r1, .L55+4
 2047 09b4 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2048 09b8 0310C2E7 		strb	r1, [r2, r3]
 2049              	.L49:
 371:../reversi8_2019.c **** 
 372:../reversi8_2019.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2050              		.loc 1 372 0
 2051 09bc 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2052 09c0 060053E3 		cmp	r3, #6
 2053 09c4 1500008A 		bhi	.L47
 2054              		.loc 1 372 0 is_stmt 0 discriminator 1
 2055 09c8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2056 09cc 013043E2 		sub	r3, r3, #1
 2057 09d0 8331A0E1 		mov	r3, r3, asl #3
 2058 09d4 10201BE5 		ldr	r2, [fp, #-16]
 2059 09d8 032082E0 		add	r2, r2, r3
 2060 09dc 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2061 09e0 013083E2 		add	r3, r3, #1
 2062 09e4 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2063 09e8 18329FE5 		ldr	r3, .L55
 2064 09ec 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2065 09f0 030052E1 		cmp	r2, r3
 2066 09f4 0900000A 		beq	.L47
 373:../reversi8_2019.c ****             candidatas[f-1][c+1] = SI;
 2067              		.loc 1 373 0 is_stmt 1
 2068 09f8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2069 09fc 013043E2 		sub	r3, r3, #1
 2070 0a00 8331A0E1 		mov	r3, r3, asl #3
 2071 0a04 10201BE5 		ldr	r2, [fp, #-16]
 2072 0a08 032082E0 		add	r2, r2, r3
 2073 0a0c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2074 0a10 013083E2 		add	r3, r3, #1
 2075 0a14 F0119FE5 		ldr	r1, .L55+4
 2076 0a18 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2077 0a1c 0310C2E7 		strb	r1, [r2, r3]
 2078              	.L47:
 374:../reversi8_2019.c ****     }
 375:../reversi8_2019.c ****     if (f < 7)
 2079              		.loc 1 375 0
 2080 0a20 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2081 0a24 060053E3 		cmp	r3, #6
 2082 0a28 4500008A 		bhi	.L50
 376:../reversi8_2019.c ****     {
 377:../reversi8_2019.c ****         if (candidatas[f+1][c] != CASILLA_OCUPADA)
 2083              		.loc 1 377 0
 2084 0a2c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2085 0a30 013083E2 		add	r3, r3, #1
 2086 0a34 8331A0E1 		mov	r3, r3, asl #3
 2087 0a38 10201BE5 		ldr	r2, [fp, #-16]
 2088 0a3c 032082E0 		add	r2, r2, r3
 2089 0a40 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2090 0a44 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2091 0a48 B8319FE5 		ldr	r3, .L55
 2092 0a4c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2093 0a50 030052E1 		cmp	r2, r3
 2094 0a54 0800000A 		beq	.L51
 378:../reversi8_2019.c ****             candidatas[f+1][c] = SI;
 2095              		.loc 1 378 0
 2096 0a58 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2097 0a5c 013083E2 		add	r3, r3, #1
 2098 0a60 8331A0E1 		mov	r3, r3, asl #3
 2099 0a64 10201BE5 		ldr	r2, [fp, #-16]
 2100 0a68 032082E0 		add	r2, r2, r3
 2101 0a6c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2102 0a70 94119FE5 		ldr	r1, .L55+4
 2103 0a74 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2104 0a78 0310C2E7 		strb	r1, [r2, r3]
 2105              	.L51:
 379:../reversi8_2019.c **** 
 380:../reversi8_2019.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2106              		.loc 1 380 0
 2107 0a7c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2108 0a80 000053E3 		cmp	r3, #0
 2109 0a84 1500000A 		beq	.L52
 2110              		.loc 1 380 0 is_stmt 0 discriminator 1
 2111 0a88 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2112 0a8c 013083E2 		add	r3, r3, #1
 2113 0a90 8331A0E1 		mov	r3, r3, asl #3
 2114 0a94 10201BE5 		ldr	r2, [fp, #-16]
 2115 0a98 032082E0 		add	r2, r2, r3
 2116 0a9c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2117 0aa0 013043E2 		sub	r3, r3, #1
 2118 0aa4 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2119 0aa8 58319FE5 		ldr	r3, .L55
 2120 0aac 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2121 0ab0 030052E1 		cmp	r2, r3
 2122 0ab4 0900000A 		beq	.L52
 381:../reversi8_2019.c ****             candidatas[f+1][c-1] = SI;
 2123              		.loc 1 381 0 is_stmt 1
 2124 0ab8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2125 0abc 013083E2 		add	r3, r3, #1
 2126 0ac0 8331A0E1 		mov	r3, r3, asl #3
 2127 0ac4 10201BE5 		ldr	r2, [fp, #-16]
 2128 0ac8 032082E0 		add	r2, r2, r3
 2129 0acc 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2130 0ad0 013043E2 		sub	r3, r3, #1
 2131 0ad4 30119FE5 		ldr	r1, .L55+4
 2132 0ad8 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2133 0adc 0310C2E7 		strb	r1, [r2, r3]
 2134              	.L52:
 382:../reversi8_2019.c **** 
 383:../reversi8_2019.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2135              		.loc 1 383 0
 2136 0ae0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2137 0ae4 060053E3 		cmp	r3, #6
 2138 0ae8 1500008A 		bhi	.L50
 2139              		.loc 1 383 0 is_stmt 0 discriminator 1
 2140 0aec 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2141 0af0 013083E2 		add	r3, r3, #1
 2142 0af4 8331A0E1 		mov	r3, r3, asl #3
 2143 0af8 10201BE5 		ldr	r2, [fp, #-16]
 2144 0afc 032082E0 		add	r2, r2, r3
 2145 0b00 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2146 0b04 013083E2 		add	r3, r3, #1
 2147 0b08 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2148 0b0c F4309FE5 		ldr	r3, .L55
 2149 0b10 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2150 0b14 030052E1 		cmp	r2, r3
 2151 0b18 0900000A 		beq	.L50
 384:../reversi8_2019.c ****             candidatas[f+1][c+1] = SI;
 2152              		.loc 1 384 0 is_stmt 1
 2153 0b1c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2154 0b20 013083E2 		add	r3, r3, #1
 2155 0b24 8331A0E1 		mov	r3, r3, asl #3
 2156 0b28 10201BE5 		ldr	r2, [fp, #-16]
 2157 0b2c 032082E0 		add	r2, r2, r3
 2158 0b30 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2159 0b34 013083E2 		add	r3, r3, #1
 2160 0b38 CC109FE5 		ldr	r1, .L55+4
 2161 0b3c 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2162 0b40 0310C2E7 		strb	r1, [r2, r3]
 2163              	.L50:
 385:../reversi8_2019.c ****     }
 386:../reversi8_2019.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2164              		.loc 1 386 0
 2165 0b44 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2166 0b48 000053E3 		cmp	r3, #0
 2167 0b4c 1300000A 		beq	.L53
 2168              		.loc 1 386 0 is_stmt 0 discriminator 1
 2169 0b50 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2170 0b54 8331A0E1 		mov	r3, r3, asl #3
 2171 0b58 10201BE5 		ldr	r2, [fp, #-16]
 2172 0b5c 032082E0 		add	r2, r2, r3
 2173 0b60 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2174 0b64 013043E2 		sub	r3, r3, #1
 2175 0b68 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2176 0b6c 94309FE5 		ldr	r3, .L55
 2177 0b70 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2178 0b74 030052E1 		cmp	r2, r3
 2179 0b78 0800000A 		beq	.L53
 387:../reversi8_2019.c ****         candidatas[f][c-1] = SI;
 2180              		.loc 1 387 0 is_stmt 1
 2181 0b7c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2182 0b80 8331A0E1 		mov	r3, r3, asl #3
 2183 0b84 10201BE5 		ldr	r2, [fp, #-16]
 2184 0b88 032082E0 		add	r2, r2, r3
 2185 0b8c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2186 0b90 013043E2 		sub	r3, r3, #1
 2187 0b94 70109FE5 		ldr	r1, .L55+4
 2188 0b98 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2189 0b9c 0310C2E7 		strb	r1, [r2, r3]
 2190              	.L53:
 388:../reversi8_2019.c **** 
 389:../reversi8_2019.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2191              		.loc 1 389 0
 2192 0ba0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2193 0ba4 060053E3 		cmp	r3, #6
 2194 0ba8 1300008A 		bhi	.L46
 2195              		.loc 1 389 0 is_stmt 0 discriminator 1
 2196 0bac 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2197 0bb0 8331A0E1 		mov	r3, r3, asl #3
 2198 0bb4 10201BE5 		ldr	r2, [fp, #-16]
 2199 0bb8 032082E0 		add	r2, r2, r3
 2200 0bbc 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2201 0bc0 013083E2 		add	r3, r3, #1
 2202 0bc4 0320D2E7 		ldrb	r2, [r2, r3]	@ zero_extendqisi2
 2203 0bc8 38309FE5 		ldr	r3, .L55
 2204 0bcc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2205 0bd0 030052E1 		cmp	r2, r3
 2206 0bd4 0800000A 		beq	.L46
 390:../reversi8_2019.c ****         candidatas[f][c+1] = SI;
 2207              		.loc 1 390 0 is_stmt 1
 2208 0bd8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2209 0bdc 8331A0E1 		mov	r3, r3, asl #3
 2210 0be0 10201BE5 		ldr	r2, [fp, #-16]
 2211 0be4 032082E0 		add	r2, r2, r3
 2212 0be8 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2213 0bec 013083E2 		add	r3, r3, #1
 2214 0bf0 14109FE5 		ldr	r1, .L55+4
 2215 0bf4 0010D1E5 		ldrb	r1, [r1, #0]	@ zero_extendqisi2
 2216 0bf8 0310C2E7 		strb	r1, [r2, r3]
 2217              	.L46:
 391:../reversi8_2019.c **** }
 2218              		.loc 1 391 0
 2219 0bfc 0CD04BE2 		sub	sp, fp, #12
 2220 0c00 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2221 0c04 1EFF2FE1 		bx	lr
 2222              	.L56:
 2223              		.align	2
 2224              	.L55:
 2225 0c08 00000000 		.word	CASILLA_OCUPADA
 2226 0c0c 00000000 		.word	SI
 2227              		.cfi_endproc
 2228              	.LFE8:
 2230              		.align	2
 2231              		.global	reversi8
 2233              	reversi8:
 2234              	.LFB9:
 392:../reversi8_2019.c **** 
 393:../reversi8_2019.c **** 
 394:../reversi8_2019.c **** 
 395:../reversi8_2019.c **** 
 396:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 397:../reversi8_2019.c **** // Proceso principal del juego
 398:../reversi8_2019.c **** // Utiliza el tablero,
 399:../reversi8_2019.c **** // y las direcciones en las que indica el jugador la fila y la columna
 400:../reversi8_2019.c **** // y la señal de ready que indica que se han actualizado fila y columna
 401:../reversi8_2019.c **** // tablero, fila, columna y ready son variables globales aunque deberían ser locales de reversi8,
 402:../reversi8_2019.c **** // la razón es que al meterlas en la pila no las pone juntas, y así jugar es más complicado.
 403:../reversi8_2019.c **** // en esta versión el humano lleva negras y la máquina blancas
 404:../reversi8_2019.c **** // no se comprueba que el humano mueva correctamente.
 405:../reversi8_2019.c **** // Sólo que la máquina realice un movimiento correcto.
 406:../reversi8_2019.c **** void reversi8()
 407:../reversi8_2019.c **** {
 2235              		.loc 1 407 0
 2236              		.cfi_startproc
 2237              		@ Function supports interworking.
 2238              		@ args = 0, pretend = 0, frame = 304
 2239              		@ frame_needed = 1, uses_anonymous_args = 0
 2240 0c10 0DC0A0E1 		mov	ip, sp
 2241              	.LCFI18:
 2242              		.cfi_def_cfa_register 12
 2243 0c14 F0DF2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
 2244 0c18 04B04CE2 		sub	fp, ip, #4
 2245              		.cfi_offset 14, -8
 2246              		.cfi_offset 13, -12
 2247              		.cfi_offset 11, -16
 2248              		.cfi_offset 10, -20
 2249              		.cfi_offset 9, -24
 2250              		.cfi_offset 8, -28
 2251              		.cfi_offset 7, -32
 2252              		.cfi_offset 6, -36
 2253              		.cfi_offset 5, -40
 2254              		.cfi_offset 4, -44
 2255              	.LCFI19:
 2256              		.cfi_def_cfa 11, 4
 2257 0c1c 4DDF4DE2 		sub	sp, sp, #308
 408:../reversi8_2019.c **** 
 409:../reversi8_2019.c **** 	 ////////////////////////////////////////////////////////////////////
 410:../reversi8_2019.c **** 	 // Tablero candidatas: se usa para no explorar todas las posiciones del tablero
 411:../reversi8_2019.c **** 	// sólo se exploran las que están alrededor de las fichas colocadas
 412:../reversi8_2019.c **** 	 ////////////////////////////////////////////////////////////////////
 413:../reversi8_2019.c **** 	char __attribute__ ((aligned (8))) candidatas[DIM][DIM] =
 2258              		.loc 1 413 0
 2259 0c20 34379FE5 		ldr	r3, .L62
 2260 0c24 0010D3E5 		ldrb	r1, [r3, #0]	@ zero_extendqisi2
 2261 0c28 2C379FE5 		ldr	r3, .L62
 2262 0c2c 00C0D3E5 		ldrb	ip, [r3, #0]	@ zero_extendqisi2
 2263 0c30 24379FE5 		ldr	r3, .L62
 2264 0c34 0040D3E5 		ldrb	r4, [r3, #0]	@ zero_extendqisi2
 2265 0c38 1C379FE5 		ldr	r3, .L62
 2266 0c3c 0060D3E5 		ldrb	r6, [r3, #0]	@ zero_extendqisi2
 2267 0c40 14379FE5 		ldr	r3, .L62
 2268 0c44 0080D3E5 		ldrb	r8, [r3, #0]	@ zero_extendqisi2
 2269 0c48 0C379FE5 		ldr	r3, .L62
 2270 0c4c 0090D3E5 		ldrb	r9, [r3, #0]	@ zero_extendqisi2
 2271 0c50 04379FE5 		ldr	r3, .L62
 2272 0c54 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2273 0c58 90300BE5 		str	r3, [fp, #-144]
 2274 0c5c F8369FE5 		ldr	r3, .L62
 2275 0c60 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2276 0c64 94300BE5 		str	r3, [fp, #-148]
 2277 0c68 EC369FE5 		ldr	r3, .L62
 2278 0c6c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2279 0c70 98300BE5 		str	r3, [fp, #-152]
 2280 0c74 E0369FE5 		ldr	r3, .L62
 2281 0c78 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2282 0c7c 9C300BE5 		str	r3, [fp, #-156]
 2283 0c80 D4369FE5 		ldr	r3, .L62
 2284 0c84 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2285 0c88 A0300BE5 		str	r3, [fp, #-160]
 2286 0c8c C8369FE5 		ldr	r3, .L62
 2287 0c90 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2288 0c94 A4300BE5 		str	r3, [fp, #-164]
 2289 0c98 BC369FE5 		ldr	r3, .L62
 2290 0c9c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2291 0ca0 A8300BE5 		str	r3, [fp, #-168]
 2292 0ca4 B0369FE5 		ldr	r3, .L62
 2293 0ca8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2294 0cac AC300BE5 		str	r3, [fp, #-172]
 2295 0cb0 A4369FE5 		ldr	r3, .L62
 2296 0cb4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2297 0cb8 B0300BE5 		str	r3, [fp, #-176]
 2298 0cbc 98369FE5 		ldr	r3, .L62
 2299 0cc0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2300 0cc4 B4300BE5 		str	r3, [fp, #-180]
 2301 0cc8 8C369FE5 		ldr	r3, .L62
 2302 0ccc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2303 0cd0 B8300BE5 		str	r3, [fp, #-184]
 2304 0cd4 80369FE5 		ldr	r3, .L62
 2305 0cd8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2306 0cdc BC300BE5 		str	r3, [fp, #-188]
 2307 0ce0 74369FE5 		ldr	r3, .L62
 2308 0ce4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2309 0ce8 C0300BE5 		str	r3, [fp, #-192]
 2310 0cec 68369FE5 		ldr	r3, .L62
 2311 0cf0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2312 0cf4 C4300BE5 		str	r3, [fp, #-196]
 2313 0cf8 5C369FE5 		ldr	r3, .L62
 2314 0cfc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2315 0d00 C8300BE5 		str	r3, [fp, #-200]
 2316 0d04 50369FE5 		ldr	r3, .L62
 2317 0d08 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2318 0d0c CC300BE5 		str	r3, [fp, #-204]
 2319 0d10 44369FE5 		ldr	r3, .L62
 2320 0d14 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2321 0d18 D0300BE5 		str	r3, [fp, #-208]
 2322 0d1c 38369FE5 		ldr	r3, .L62
 2323 0d20 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2324 0d24 D4300BE5 		str	r3, [fp, #-212]
 2325 0d28 2C369FE5 		ldr	r3, .L62
 2326 0d2c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2327 0d30 D8300BE5 		str	r3, [fp, #-216]
 2328 0d34 20369FE5 		ldr	r3, .L62
 2329 0d38 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2330 0d3c DC300BE5 		str	r3, [fp, #-220]
 2331 0d40 14369FE5 		ldr	r3, .L62
 2332 0d44 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2333 0d48 E0300BE5 		str	r3, [fp, #-224]
 2334 0d4c 08369FE5 		ldr	r3, .L62
 2335 0d50 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2336 0d54 E4300BE5 		str	r3, [fp, #-228]
 2337 0d58 FC359FE5 		ldr	r3, .L62
 2338 0d5c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2339 0d60 E8300BE5 		str	r3, [fp, #-232]
 2340 0d64 F0359FE5 		ldr	r3, .L62
 2341 0d68 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2342 0d6c EC300BE5 		str	r3, [fp, #-236]
 2343 0d70 E4359FE5 		ldr	r3, .L62
 2344 0d74 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2345 0d78 F0300BE5 		str	r3, [fp, #-240]
 2346 0d7c D8359FE5 		ldr	r3, .L62
 2347 0d80 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2348 0d84 F4300BE5 		str	r3, [fp, #-244]
 2349 0d88 CC359FE5 		ldr	r3, .L62
 2350 0d8c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2351 0d90 F8300BE5 		str	r3, [fp, #-248]
 2352 0d94 C0359FE5 		ldr	r3, .L62
 2353 0d98 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2354 0d9c FC300BE5 		str	r3, [fp, #-252]
 2355 0da0 B4359FE5 		ldr	r3, .L62
 2356 0da4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2357 0da8 00310BE5 		str	r3, [fp, #-256]
 2358 0dac A8359FE5 		ldr	r3, .L62
 2359 0db0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2360 0db4 04310BE5 		str	r3, [fp, #-260]
 2361 0db8 9C359FE5 		ldr	r3, .L62
 2362 0dbc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2363 0dc0 08310BE5 		str	r3, [fp, #-264]
 2364 0dc4 90359FE5 		ldr	r3, .L62
 2365 0dc8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2366 0dcc 0C310BE5 		str	r3, [fp, #-268]
 2367 0dd0 84359FE5 		ldr	r3, .L62
 2368 0dd4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2369 0dd8 10310BE5 		str	r3, [fp, #-272]
 2370 0ddc 78359FE5 		ldr	r3, .L62
 2371 0de0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2372 0de4 14310BE5 		str	r3, [fp, #-276]
 2373 0de8 6C359FE5 		ldr	r3, .L62
 2374 0dec 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2375 0df0 18310BE5 		str	r3, [fp, #-280]
 2376 0df4 60359FE5 		ldr	r3, .L62
 2377 0df8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2378 0dfc 1C310BE5 		str	r3, [fp, #-284]
 2379 0e00 54359FE5 		ldr	r3, .L62
 2380 0e04 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2381 0e08 20310BE5 		str	r3, [fp, #-288]
 2382 0e0c 48359FE5 		ldr	r3, .L62
 2383 0e10 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2384 0e14 24310BE5 		str	r3, [fp, #-292]
 2385 0e18 3C359FE5 		ldr	r3, .L62
 2386 0e1c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2387 0e20 28310BE5 		str	r3, [fp, #-296]
 2388 0e24 30359FE5 		ldr	r3, .L62
 2389 0e28 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2390 0e2c 2C310BE5 		str	r3, [fp, #-300]
 2391 0e30 24359FE5 		ldr	r3, .L62
 2392 0e34 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2393 0e38 30310BE5 		str	r3, [fp, #-304]
 2394 0e3c 18359FE5 		ldr	r3, .L62
 2395 0e40 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2396 0e44 34310BE5 		str	r3, [fp, #-308]
 2397 0e48 0C359FE5 		ldr	r3, .L62
 2398 0e4c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2399 0e50 38310BE5 		str	r3, [fp, #-312]
 2400 0e54 00359FE5 		ldr	r3, .L62
 2401 0e58 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2402 0e5c 3C310BE5 		str	r3, [fp, #-316]
 2403 0e60 F4349FE5 		ldr	r3, .L62
 2404 0e64 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2405 0e68 40310BE5 		str	r3, [fp, #-320]
 2406 0e6c E8349FE5 		ldr	r3, .L62
 2407 0e70 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2408 0e74 44310BE5 		str	r3, [fp, #-324]
 2409 0e78 DC349FE5 		ldr	r3, .L62
 2410 0e7c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2411 0e80 48310BE5 		str	r3, [fp, #-328]
 2412 0e84 D0349FE5 		ldr	r3, .L62
 2413 0e88 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2414 0e8c 4C310BE5 		str	r3, [fp, #-332]
 2415 0e90 C4349FE5 		ldr	r3, .L62
 2416 0e94 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2417 0e98 50310BE5 		str	r3, [fp, #-336]
 2418 0e9c B8349FE5 		ldr	r3, .L62
 2419 0ea0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2420 0ea4 54310BE5 		str	r3, [fp, #-340]
 2421 0ea8 AC349FE5 		ldr	r3, .L62
 2422 0eac 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2423 0eb0 58310BE5 		str	r3, [fp, #-344]
 2424 0eb4 A0349FE5 		ldr	r3, .L62
 2425 0eb8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2426 0ebc 5C310BE5 		str	r3, [fp, #-348]
 2427 0ec0 94349FE5 		ldr	r3, .L62
 2428 0ec4 00A0D3E5 		ldrb	sl, [r3, #0]	@ zero_extendqisi2
 2429 0ec8 8C349FE5 		ldr	r3, .L62
 2430 0ecc 0070D3E5 		ldrb	r7, [r3, #0]	@ zero_extendqisi2
 2431 0ed0 84349FE5 		ldr	r3, .L62
 2432 0ed4 0050D3E5 		ldrb	r5, [r3, #0]	@ zero_extendqisi2
 2433 0ed8 7C349FE5 		ldr	r3, .L62
 2434 0edc 00E0D3E5 		ldrb	lr, [r3, #0]	@ zero_extendqisi2
 2435 0ee0 74349FE5 		ldr	r3, .L62
 2436 0ee4 0000D3E5 		ldrb	r0, [r3, #0]	@ zero_extendqisi2
 2437 0ee8 6C349FE5 		ldr	r3, .L62
 2438 0eec 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2439 0ef0 0130A0E1 		mov	r3, r1
 2440 0ef4 7C304BE5 		strb	r3, [fp, #-124]
 2441 0ef8 0C30A0E1 		mov	r3, ip
 2442 0efc 7B304BE5 		strb	r3, [fp, #-123]
 2443 0f00 0430A0E1 		mov	r3, r4
 2444 0f04 7A304BE5 		strb	r3, [fp, #-122]
 2445 0f08 0630A0E1 		mov	r3, r6
 2446 0f0c 79304BE5 		strb	r3, [fp, #-121]
 2447 0f10 0830A0E1 		mov	r3, r8
 2448 0f14 78304BE5 		strb	r3, [fp, #-120]
 2449 0f18 0930A0E1 		mov	r3, r9
 2450 0f1c 77304BE5 		strb	r3, [fp, #-119]
 2451 0f20 90101BE5 		ldr	r1, [fp, #-144]
 2452 0f24 0130A0E1 		mov	r3, r1
 2453 0f28 76304BE5 		strb	r3, [fp, #-118]
 2454 0f2c 94101BE5 		ldr	r1, [fp, #-148]
 2455 0f30 0130A0E1 		mov	r3, r1
 2456 0f34 75304BE5 		strb	r3, [fp, #-117]
 2457 0f38 98101BE5 		ldr	r1, [fp, #-152]
 2458 0f3c 0130A0E1 		mov	r3, r1
 2459 0f40 74304BE5 		strb	r3, [fp, #-116]
 2460 0f44 9C101BE5 		ldr	r1, [fp, #-156]
 2461 0f48 0130A0E1 		mov	r3, r1
 2462 0f4c 73304BE5 		strb	r3, [fp, #-115]
 2463 0f50 A0101BE5 		ldr	r1, [fp, #-160]
 2464 0f54 0130A0E1 		mov	r3, r1
 2465 0f58 72304BE5 		strb	r3, [fp, #-114]
 2466 0f5c A4101BE5 		ldr	r1, [fp, #-164]
 2467 0f60 0130A0E1 		mov	r3, r1
 2468 0f64 71304BE5 		strb	r3, [fp, #-113]
 2469 0f68 A8101BE5 		ldr	r1, [fp, #-168]
 2470 0f6c 0130A0E1 		mov	r3, r1
 2471 0f70 70304BE5 		strb	r3, [fp, #-112]
 2472 0f74 AC101BE5 		ldr	r1, [fp, #-172]
 2473 0f78 0130A0E1 		mov	r3, r1
 2474 0f7c 6F304BE5 		strb	r3, [fp, #-111]
 2475 0f80 B0101BE5 		ldr	r1, [fp, #-176]
 2476 0f84 0130A0E1 		mov	r3, r1
 2477 0f88 6E304BE5 		strb	r3, [fp, #-110]
 2478 0f8c B4101BE5 		ldr	r1, [fp, #-180]
 2479 0f90 0130A0E1 		mov	r3, r1
 2480 0f94 6D304BE5 		strb	r3, [fp, #-109]
 2481 0f98 B8101BE5 		ldr	r1, [fp, #-184]
 2482 0f9c 0130A0E1 		mov	r3, r1
 2483 0fa0 6C304BE5 		strb	r3, [fp, #-108]
 2484 0fa4 BC101BE5 		ldr	r1, [fp, #-188]
 2485 0fa8 0130A0E1 		mov	r3, r1
 2486 0fac 6B304BE5 		strb	r3, [fp, #-107]
 2487 0fb0 C0101BE5 		ldr	r1, [fp, #-192]
 2488 0fb4 0130A0E1 		mov	r3, r1
 2489 0fb8 6A304BE5 		strb	r3, [fp, #-106]
 2490 0fbc C4101BE5 		ldr	r1, [fp, #-196]
 2491 0fc0 0130A0E1 		mov	r3, r1
 2492 0fc4 69304BE5 		strb	r3, [fp, #-105]
 2493 0fc8 C8101BE5 		ldr	r1, [fp, #-200]
 2494 0fcc 0130A0E1 		mov	r3, r1
 2495 0fd0 68304BE5 		strb	r3, [fp, #-104]
 2496 0fd4 CC101BE5 		ldr	r1, [fp, #-204]
 2497 0fd8 0130A0E1 		mov	r3, r1
 2498 0fdc 67304BE5 		strb	r3, [fp, #-103]
 2499 0fe0 D0101BE5 		ldr	r1, [fp, #-208]
 2500 0fe4 0130A0E1 		mov	r3, r1
 2501 0fe8 66304BE5 		strb	r3, [fp, #-102]
 2502 0fec D4101BE5 		ldr	r1, [fp, #-212]
 2503 0ff0 0130A0E1 		mov	r3, r1
 2504 0ff4 65304BE5 		strb	r3, [fp, #-101]
 2505 0ff8 D8101BE5 		ldr	r1, [fp, #-216]
 2506 0ffc 0130A0E1 		mov	r3, r1
 2507 1000 64304BE5 		strb	r3, [fp, #-100]
 2508 1004 DC101BE5 		ldr	r1, [fp, #-220]
 2509 1008 0130A0E1 		mov	r3, r1
 2510 100c 63304BE5 		strb	r3, [fp, #-99]
 2511 1010 E0101BE5 		ldr	r1, [fp, #-224]
 2512 1014 0130A0E1 		mov	r3, r1
 2513 1018 62304BE5 		strb	r3, [fp, #-98]
 2514 101c E4101BE5 		ldr	r1, [fp, #-228]
 2515 1020 0130A0E1 		mov	r3, r1
 2516 1024 61304BE5 		strb	r3, [fp, #-97]
 2517 1028 E8101BE5 		ldr	r1, [fp, #-232]
 2518 102c 0130A0E1 		mov	r3, r1
 2519 1030 60304BE5 		strb	r3, [fp, #-96]
 2520 1034 EC101BE5 		ldr	r1, [fp, #-236]
 2521 1038 0130A0E1 		mov	r3, r1
 2522 103c 5F304BE5 		strb	r3, [fp, #-95]
 2523 1040 F0101BE5 		ldr	r1, [fp, #-240]
 2524 1044 0130A0E1 		mov	r3, r1
 2525 1048 5E304BE5 		strb	r3, [fp, #-94]
 2526 104c F4101BE5 		ldr	r1, [fp, #-244]
 2527 1050 0130A0E1 		mov	r3, r1
 2528 1054 5D304BE5 		strb	r3, [fp, #-93]
 2529 1058 F8101BE5 		ldr	r1, [fp, #-248]
 2530 105c 0130A0E1 		mov	r3, r1
 2531 1060 5C304BE5 		strb	r3, [fp, #-92]
 2532 1064 FC101BE5 		ldr	r1, [fp, #-252]
 2533 1068 0130A0E1 		mov	r3, r1
 2534 106c 5B304BE5 		strb	r3, [fp, #-91]
 2535 1070 00111BE5 		ldr	r1, [fp, #-256]
 2536 1074 0130A0E1 		mov	r3, r1
 2537 1078 5A304BE5 		strb	r3, [fp, #-90]
 2538 107c 04111BE5 		ldr	r1, [fp, #-260]
 2539 1080 0130A0E1 		mov	r3, r1
 2540 1084 59304BE5 		strb	r3, [fp, #-89]
 2541 1088 08111BE5 		ldr	r1, [fp, #-264]
 2542 108c 0130A0E1 		mov	r3, r1
 2543 1090 58304BE5 		strb	r3, [fp, #-88]
 2544 1094 0C111BE5 		ldr	r1, [fp, #-268]
 2545 1098 0130A0E1 		mov	r3, r1
 2546 109c 57304BE5 		strb	r3, [fp, #-87]
 2547 10a0 10111BE5 		ldr	r1, [fp, #-272]
 2548 10a4 0130A0E1 		mov	r3, r1
 2549 10a8 56304BE5 		strb	r3, [fp, #-86]
 2550 10ac 14111BE5 		ldr	r1, [fp, #-276]
 2551 10b0 0130A0E1 		mov	r3, r1
 2552 10b4 55304BE5 		strb	r3, [fp, #-85]
 2553 10b8 18111BE5 		ldr	r1, [fp, #-280]
 2554 10bc 0130A0E1 		mov	r3, r1
 2555 10c0 54304BE5 		strb	r3, [fp, #-84]
 2556 10c4 1C111BE5 		ldr	r1, [fp, #-284]
 2557 10c8 0130A0E1 		mov	r3, r1
 2558 10cc 53304BE5 		strb	r3, [fp, #-83]
 2559 10d0 20111BE5 		ldr	r1, [fp, #-288]
 2560 10d4 0130A0E1 		mov	r3, r1
 2561 10d8 52304BE5 		strb	r3, [fp, #-82]
 2562 10dc 24111BE5 		ldr	r1, [fp, #-292]
 2563 10e0 0130A0E1 		mov	r3, r1
 2564 10e4 51304BE5 		strb	r3, [fp, #-81]
 2565 10e8 28111BE5 		ldr	r1, [fp, #-296]
 2566 10ec 0130A0E1 		mov	r3, r1
 2567 10f0 50304BE5 		strb	r3, [fp, #-80]
 2568 10f4 2C111BE5 		ldr	r1, [fp, #-300]
 2569 10f8 0130A0E1 		mov	r3, r1
 2570 10fc 4F304BE5 		strb	r3, [fp, #-79]
 2571 1100 30111BE5 		ldr	r1, [fp, #-304]
 2572 1104 0130A0E1 		mov	r3, r1
 2573 1108 4E304BE5 		strb	r3, [fp, #-78]
 2574 110c 34111BE5 		ldr	r1, [fp, #-308]
 2575 1110 0130A0E1 		mov	r3, r1
 2576 1114 4D304BE5 		strb	r3, [fp, #-77]
 2577 1118 38111BE5 		ldr	r1, [fp, #-312]
 2578 111c 0130A0E1 		mov	r3, r1
 2579 1120 4C304BE5 		strb	r3, [fp, #-76]
 2580 1124 3C111BE5 		ldr	r1, [fp, #-316]
 2581 1128 0130A0E1 		mov	r3, r1
 2582 112c 4B304BE5 		strb	r3, [fp, #-75]
 2583 1130 40111BE5 		ldr	r1, [fp, #-320]
 2584 1134 0130A0E1 		mov	r3, r1
 2585 1138 4A304BE5 		strb	r3, [fp, #-74]
 2586 113c 44111BE5 		ldr	r1, [fp, #-324]
 2587 1140 0130A0E1 		mov	r3, r1
 2588 1144 49304BE5 		strb	r3, [fp, #-73]
 2589 1148 48111BE5 		ldr	r1, [fp, #-328]
 2590 114c 0130A0E1 		mov	r3, r1
 2591 1150 48304BE5 		strb	r3, [fp, #-72]
 2592 1154 4C111BE5 		ldr	r1, [fp, #-332]
 2593 1158 0130A0E1 		mov	r3, r1
 2594 115c 47304BE5 		strb	r3, [fp, #-71]
 2595 1160 50111BE5 		ldr	r1, [fp, #-336]
 2596 1164 0130A0E1 		mov	r3, r1
 2597 1168 46304BE5 		strb	r3, [fp, #-70]
 2598 116c 54111BE5 		ldr	r1, [fp, #-340]
 2599 1170 0130A0E1 		mov	r3, r1
 2600 1174 45304BE5 		strb	r3, [fp, #-69]
 2601 1178 58111BE5 		ldr	r1, [fp, #-344]
 2602 117c 0130A0E1 		mov	r3, r1
 2603 1180 44304BE5 		strb	r3, [fp, #-68]
 2604 1184 5C111BE5 		ldr	r1, [fp, #-348]
 2605 1188 0130A0E1 		mov	r3, r1
 2606 118c 43304BE5 		strb	r3, [fp, #-67]
 2607 1190 0A30A0E1 		mov	r3, sl
 2608 1194 42304BE5 		strb	r3, [fp, #-66]
 2609 1198 0730A0E1 		mov	r3, r7
 2610 119c 41304BE5 		strb	r3, [fp, #-65]
 2611 11a0 0530A0E1 		mov	r3, r5
 2612 11a4 40304BE5 		strb	r3, [fp, #-64]
 2613 11a8 0E30A0E1 		mov	r3, lr
 2614 11ac 3F304BE5 		strb	r3, [fp, #-63]
 2615 11b0 0030A0E1 		mov	r3, r0
 2616 11b4 3E304BE5 		strb	r3, [fp, #-62]
 2617 11b8 0230A0E1 		mov	r3, r2
 2618 11bc 3D304BE5 		strb	r3, [fp, #-61]
 414:../reversi8_2019.c ****     {
 415:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 416:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 417:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 418:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 419:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 420:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 421:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
 422:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO}
 423:../reversi8_2019.c ****     };
 424:../reversi8_2019.c **** 
 425:../reversi8_2019.c **** 
 426:../reversi8_2019.c ****     int done;     // la máquina ha conseguido mover o no
 427:../reversi8_2019.c ****     int move = 0; // el humano ha conseguido mover o no
 2619              		.loc 1 427 0
 2620 11c0 0030A0E3 		mov	r3, #0
 2621 11c4 30300BE5 		str	r3, [fp, #-48]
 428:../reversi8_2019.c ****     int blancas, negras; // número de fichas de cada color
 429:../reversi8_2019.c ****     int fin = 0;  // fin vale 1 si el humano no ha podido mover
 2622              		.loc 1 429 0
 2623 11c8 0030A0E3 		mov	r3, #0
 2624 11cc 34300BE5 		str	r3, [fp, #-52]
 430:../reversi8_2019.c ****                   // (ha introducido un valor de movimiento con algún 8)
 431:../reversi8_2019.c ****                   // y luego la máquina tampoco puede
 432:../reversi8_2019.c ****     char f, c;    // fila y columna elegidas por la máquina para su movimiento
 433:../reversi8_2019.c **** 
 434:../reversi8_2019.c ****     init_table(tablero, candidatas);
 2625              		.loc 1 434 0
 2626 11d0 7C304BE2 		sub	r3, fp, #124
 2627 11d4 84019FE5 		ldr	r0, .L62+4
 2628 11d8 0310A0E1 		mov	r1, r3
 2629 11dc FEFFFFEB 		bl	init_table
 435:../reversi8_2019.c **** 
 436:../reversi8_2019.c ****     while (fin == 0)
 2630              		.loc 1 436 0
 2631 11e0 510000EA 		b	.L58
 2632              	.L61:
 437:../reversi8_2019.c ****     {
 438:../reversi8_2019.c ****         move = 0;
 2633              		.loc 1 438 0
 2634 11e4 0030A0E3 		mov	r3, #0
 2635 11e8 30300BE5 		str	r3, [fp, #-48]
 439:../reversi8_2019.c ****         esperar_mov(&ready);
 2636              		.loc 1 439 0
 2637 11ec 70019FE5 		ldr	r0, .L62+8
 2638 11f0 FEFFFFEB 		bl	esperar_mov
 440:../reversi8_2019.c ****         // si la fila o columna son 8 asumimos que el jugador no puede mover
 441:../reversi8_2019.c ****         if (((fila) != DIM) && ((columna) != DIM))
 2639              		.loc 1 441 0
 2640 11f4 6C319FE5 		ldr	r3, .L62+12
 2641 11f8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2642 11fc 080053E3 		cmp	r3, #8
 2643 1200 2200000A 		beq	.L59
 2644              		.loc 1 441 0 is_stmt 0 discriminator 1
 2645 1204 60319FE5 		ldr	r3, .L62+16
 2646 1208 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2647 120c 080053E3 		cmp	r3, #8
 2648 1210 1E00000A 		beq	.L59
 442:../reversi8_2019.c ****         {
 443:../reversi8_2019.c ****             tablero[fila][columna] = FICHA_NEGRA;
 2649              		.loc 1 443 0 is_stmt 1
 2650 1214 4C319FE5 		ldr	r3, .L62+12
 2651 1218 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2652 121c 0310A0E1 		mov	r1, r3
 2653 1220 44319FE5 		ldr	r3, .L62+16
 2654 1224 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2655 1228 30219FE5 		ldr	r2, .L62+4
 2656 122c 8111A0E1 		mov	r1, r1, asl #3
 2657 1230 033081E0 		add	r3, r1, r3
 2658 1234 033082E0 		add	r3, r2, r3
 2659 1238 0220A0E3 		mov	r2, #2
 2660 123c 0020C3E5 		strb	r2, [r3, #0]
 444:../reversi8_2019.c ****             actualizar_tablero(tablero, fila, columna, FICHA_NEGRA);
 2661              		.loc 1 444 0
 2662 1240 20319FE5 		ldr	r3, .L62+12
 2663 1244 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2664 1248 1C319FE5 		ldr	r3, .L62+16
 2665 124c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2666 1250 08019FE5 		ldr	r0, .L62+4
 2667 1254 0210A0E1 		mov	r1, r2
 2668 1258 0320A0E1 		mov	r2, r3
 2669 125c 0230A0E3 		mov	r3, #2
 2670 1260 FEFFFFEB 		bl	actualizar_tablero
 445:../reversi8_2019.c ****             actualizar_candidatas(candidatas, fila, columna);
 2671              		.loc 1 445 0
 2672 1264 FC309FE5 		ldr	r3, .L62+12
 2673 1268 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2674 126c F8309FE5 		ldr	r3, .L62+16
 2675 1270 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2676 1274 7C104BE2 		sub	r1, fp, #124
 2677 1278 0100A0E1 		mov	r0, r1
 2678 127c 0210A0E1 		mov	r1, r2
 2679 1280 0320A0E1 		mov	r2, r3
 2680 1284 FEFFFFEB 		bl	actualizar_candidatas
 446:../reversi8_2019.c ****             move = 1;
 2681              		.loc 1 446 0
 2682 1288 0130A0E3 		mov	r3, #1
 2683 128c 30300BE5 		str	r3, [fp, #-48]
 2684              	.L59:
 447:../reversi8_2019.c ****         }
 448:../reversi8_2019.c **** 
 449:../reversi8_2019.c ****         // escribe el movimiento en las variables globales fila columna
 450:../reversi8_2019.c ****         done = elegir_mov(candidatas, tablero, &f, &c);
 2685              		.loc 1 450 0
 2686 1290 7C104BE2 		sub	r1, fp, #124
 2687 1294 85204BE2 		sub	r2, fp, #133
 2688 1298 86304BE2 		sub	r3, fp, #134
 2689 129c 0100A0E1 		mov	r0, r1
 2690 12a0 B8109FE5 		ldr	r1, .L62+4
 2691 12a4 FEFFFFEB 		bl	elegir_mov
 2692 12a8 38000BE5 		str	r0, [fp, #-56]
 451:../reversi8_2019.c ****         if (done == -1)
 2693              		.loc 1 451 0
 2694 12ac 38301BE5 		ldr	r3, [fp, #-56]
 2695 12b0 010073E3 		cmn	r3, #1
 2696 12b4 0500001A 		bne	.L60
 452:../reversi8_2019.c ****         {
 453:../reversi8_2019.c ****             if (move == 0)
 2697              		.loc 1 453 0
 2698 12b8 30301BE5 		ldr	r3, [fp, #-48]
 2699 12bc 000053E3 		cmp	r3, #0
 2700 12c0 1900001A 		bne	.L58
 454:../reversi8_2019.c ****                 fin = 1;
 2701              		.loc 1 454 0
 2702 12c4 0130A0E3 		mov	r3, #1
 2703 12c8 34300BE5 		str	r3, [fp, #-52]
 2704 12cc 160000EA 		b	.L58
 2705              	.L60:
 455:../reversi8_2019.c ****         }
 456:../reversi8_2019.c ****         else
 457:../reversi8_2019.c ****         {
 458:../reversi8_2019.c ****             tablero[f][c] = FICHA_BLANCA;
 2706              		.loc 1 458 0
 2707 12d0 85305BE5 		ldrb	r3, [fp, #-133]	@ zero_extendqisi2
 2708 12d4 0310A0E1 		mov	r1, r3
 2709 12d8 86305BE5 		ldrb	r3, [fp, #-134]	@ zero_extendqisi2
 2710 12dc 7C209FE5 		ldr	r2, .L62+4
 2711 12e0 8111A0E1 		mov	r1, r1, asl #3
 2712 12e4 033081E0 		add	r3, r1, r3
 2713 12e8 033082E0 		add	r3, r2, r3
 2714 12ec 0120A0E3 		mov	r2, #1
 2715 12f0 0020C3E5 		strb	r2, [r3, #0]
 459:../reversi8_2019.c ****             actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 2716              		.loc 1 459 0
 2717 12f4 85205BE5 		ldrb	r2, [fp, #-133]	@ zero_extendqisi2
 2718 12f8 86305BE5 		ldrb	r3, [fp, #-134]	@ zero_extendqisi2
 2719 12fc 5C009FE5 		ldr	r0, .L62+4
 2720 1300 0210A0E1 		mov	r1, r2
 2721 1304 0320A0E1 		mov	r2, r3
 2722 1308 0130A0E3 		mov	r3, #1
 2723 130c FEFFFFEB 		bl	actualizar_tablero
 460:../reversi8_2019.c ****             actualizar_candidatas(candidatas, f, c);
 2724              		.loc 1 460 0
 2725 1310 85205BE5 		ldrb	r2, [fp, #-133]	@ zero_extendqisi2
 2726 1314 86305BE5 		ldrb	r3, [fp, #-134]	@ zero_extendqisi2
 2727 1318 7C104BE2 		sub	r1, fp, #124
 2728 131c 0100A0E1 		mov	r0, r1
 2729 1320 0210A0E1 		mov	r1, r2
 2730 1324 0320A0E1 		mov	r2, r3
 2731 1328 FEFFFFEB 		bl	actualizar_candidatas
 2732              	.L58:
 436:../reversi8_2019.c ****     while (fin == 0)
 2733              		.loc 1 436 0 discriminator 1
 2734 132c 34301BE5 		ldr	r3, [fp, #-52]
 2735 1330 000053E3 		cmp	r3, #0
 2736 1334 AAFFFF0A 		beq	.L61
 461:../reversi8_2019.c ****         }
 462:../reversi8_2019.c ****     }
 463:../reversi8_2019.c ****     contar(tablero, &blancas, &negras);
 2737              		.loc 1 463 0
 2738 1338 80204BE2 		sub	r2, fp, #128
 2739 133c 84304BE2 		sub	r3, fp, #132
 2740 1340 18009FE5 		ldr	r0, .L62+4
 2741 1344 0210A0E1 		mov	r1, r2
 2742 1348 0320A0E1 		mov	r2, r3
 2743 134c FEFFFFEB 		bl	contar
 464:../reversi8_2019.c **** }
 2744              		.loc 1 464 0
 2745 1350 28D04BE2 		sub	sp, fp, #40
 2746 1354 F06F9DE8 		ldmfd	sp, {r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 2747 1358 1EFF2FE1 		bx	lr
 2748              	.L63:
 2749              		.align	2
 2750              	.L62:
 2751 135c 00000000 		.word	NO
 2752 1360 00000000 		.word	tablero
 2753 1364 42000000 		.word	ready
 2754 1368 40000000 		.word	fila
 2755 136c 41000000 		.word	columna
 2756              		.cfi_endproc
 2757              	.LFE9:
 2759              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 reversi8_2019.c
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:968    .rodata:00000000 NO
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:969    .rodata:00000000 $d
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:973    .rodata:00000001 SI
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:978    .rodata:00000002 CASILLA_OCUPADA
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:983    .rodata:00000008 tabla_valor
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1052   .rodata:00000048 vSF
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1065   .rodata:00000050 vSC
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1075   .bss:00000000 $d
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1076   .bss:00000000 tablero
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1078   .bss:00000040 fila
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1080   .bss:00000041 columna
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1082   .bss:00000042 ready
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1085   .text:00000000 $a
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1088   .text:00000000 init_table
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1268   .text:0000020c $d
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1273   .text:00000214 $a
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1276   .text:00000214 esperar_mov
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1317   .text:00000254 ficha_valida
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1392   .text:00000308 patron_volteo
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1501   .text:0000041c voltear
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1566   .text:000004ac actualizar_tablero
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1657   .text:0000059c $d
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1662   .text:000005a4 $a
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1665   .text:000005a4 elegir_mov
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1850   .text:000007ac $d
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1857   .text:000007bc $a
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1860   .text:000007bc contar
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:1962   .text:000008b8 actualizar_candidatas
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:2225   .text:00000c08 $d
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:2230   .text:00000c10 $a
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:2233   .text:00000c10 reversi8
C:\Users\pjper\AppData\Local\Temp\ccaTACqE.s:2751   .text:0000135c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
