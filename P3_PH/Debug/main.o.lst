   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  21              	.Ltext0:
  22              		.file 1 "../main.c"
 2454              		.align	2
 2455              		.global	pasar_a_user
 2457              	pasar_a_user:
 2458              	.LFB0:
   1:../main.c     **** /*********************************************************************************************
   2:../main.c     **** * Fichero:	main.c
   3:../main.c     **** * Autor:	Profesores de la asignatura
   4:../main.c     **** *			Fernando Peña Bes (NIA: 756012)
   5:../main.c     **** *			Pedro José Pérez García (NIA: 756642)
   6:../main.c     **** * Descrip:	punto de entrada de C
   7:../main.c     **** * Version:  <P4-ARM.timer-leds>
   8:../main.c     **** *********************************************************************************************/
   9:../main.c     **** 
  10:../main.c     **** /*--- ficheros de cabecera ---*/
  11:../main.c     **** #include "8led.h"
  12:../main.c     **** #include "button.h"
  13:../main.c     **** #include "led.h"
  14:../main.c     **** #include "timer.h"
  15:../main.c     **** #include "44blib.h"
  16:../main.c     **** #include "44b.h"
  17:../main.c     **** #include "reversi8_2019.h"
  18:../main.c     **** #include "pruebas_timer2.h"
  19:../main.c     **** #include "rutinas_excepciones.h"
  20:../main.c     **** #include "cola_depuracion.h"
  21:../main.c     **** #include "reversi_main.h"
  22:../main.c     **** #include "tp.h"
  23:../main.c     **** #include "lcd.h"
  24:../main.c     **** #include "elementos_pantalla.h"
  25:../main.c     **** #include <stdint.h>
  26:../main.c     **** 
  27:../main.c     **** inline void pasar_a_user()
  28:../main.c     **** {
 2459              		.loc 1 28 0
 2460              		.cfi_startproc
 2461              		@ Function supports interworking.
 2462              		@ args = 0, pretend = 0, frame = 8
 2463              		@ frame_needed = 1, uses_anonymous_args = 0
 2464 0000 0DC0A0E1 		mov	ip, sp
 2465              	.LCFI0:
 2466              		.cfi_def_cfa_register 12
 2467 0004 10D82DE9 		stmfd	sp!, {r4, fp, ip, lr, pc}
 2468 0008 04B04CE2 		sub	fp, ip, #4
 2469              		.cfi_offset 14, -8
 2470              		.cfi_offset 13, -12
 2471              		.cfi_offset 11, -16
 2472              		.cfi_offset 4, -20
 2473              	.LCFI1:
 2474              		.cfi_def_cfa 11, 4
 2475 000c 0CD04DE2 		sub	sp, sp, #12
  29:../main.c     **** 	uint32_t _cpsr;
  30:../main.c     **** 	asm volatile (" mrs %0, cpsr\n" : "=r" (_cpsr));
 2476              		.loc 1 30 0
 2477              	@ 30 "../main.c" 1
 2478 0010 00400FE1 		 mrs r4, cpsr
 2479              	
 2480              	@ 0 "" 2
 2481 0014 18400BE5 		str	r4, [fp, #-24]
  31:../main.c     **** 	_cpsr &= 0xFFFFFFE0;
 2482              		.loc 1 31 0
 2483 0018 18301BE5 		ldr	r3, [fp, #-24]
 2484 001c 1F30C3E3 		bic	r3, r3, #31
 2485 0020 18300BE5 		str	r3, [fp, #-24]
  32:../main.c     **** 	_cpsr |= 0x00000010;
 2486              		.loc 1 32 0
 2487 0024 18301BE5 		ldr	r3, [fp, #-24]
 2488 0028 103083E3 		orr	r3, r3, #16
 2489 002c 18300BE5 		str	r3, [fp, #-24]
  33:../main.c     **** 	asm volatile (" msr cpsr,%0\n" :: "r" (_cpsr));
 2490              		.loc 1 33 0
 2491 0030 18301BE5 		ldr	r3, [fp, #-24]
 2492              	@ 33 "../main.c" 1
 2493 0034 03F029E1 		 msr cpsr,r3
 2494              	
 2495              	@ 0 "" 2
  34:../main.c     **** }
 2496              		.loc 1 34 0
 2497 0038 10D04BE2 		sub	sp, fp, #16
 2498 003c 10689DE8 		ldmfd	sp, {r4, fp, sp, lr}
 2499 0040 1EFF2FE1 		bx	lr
 2500              		.cfi_endproc
 2501              	.LFE0:
 2503              		.align	2
 2504              		.global	Main
 2506              	Main:
 2507              	.LFB1:
  35:../main.c     **** 
  36:../main.c     **** /*--- codigo de funciones ---*/
  37:../main.c     **** //extern void Lcd_Test();
  38:../main.c     **** void Main(void)
  39:../main.c     **** {
 2508              		.loc 1 39 0
 2509              		.cfi_startproc
 2510              		@ Function supports interworking.
 2511              		@ args = 0, pretend = 0, frame = 0
 2512              		@ frame_needed = 1, uses_anonymous_args = 0
 2513 0044 0DC0A0E1 		mov	ip, sp
 2514              	.LCFI2:
 2515              		.cfi_def_cfa_register 12
 2516 0048 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2517 004c 04B04CE2 		sub	fp, ip, #4
 2518              		.cfi_offset 14, -8
 2519              		.cfi_offset 13, -12
 2520              		.cfi_offset 11, -16
 2521              	.LCFI3:
 2522              		.cfi_def_cfa 11, 4
  40:../main.c     **** 	/* Inicializa controladores */
  41:../main.c     **** 	sys_init();         				// Inicializacion de la placa, interrupciones y puertos
 2523              		.loc 1 41 0
 2524 0050 FEFFFFEB 		bl	sys_init
  42:../main.c     **** 	timer_init();	    				// Inicializacion del temporizador
 2525              		.loc 1 42 0
 2526 0054 FEFFFFEB 		bl	timer_init
  43:../main.c     **** 	button_iniciar();					// inicializamos los pulsadores. Cada vez que se pulse se verá reflejado en 
 2527              		.loc 1 43 0
 2528 0058 FEFFFFEB 		bl	button_iniciar
  44:../main.c     **** 	D8Led_init();      					// inicializamos el 8led
 2529              		.loc 1 44 0
 2530 005c FEFFFFEB 		bl	D8Led_init
  45:../main.c     **** 	cola_depuracion_inicializar(32);	// Debe darse un tamaño suficiente para almacenar todos los event
 2531              		.loc 1 45 0
 2532 0060 2000A0E3 		mov	r0, #32
 2533 0064 FEFFFFEB 		bl	cola_depuracion_inicializar
  46:../main.c     **** 	Gestion_excepciones_init();			// Inicializa la gestión de excepciones SWI, UNDEF y DABORT
 2534              		.loc 1 46 0
 2535 0068 FEFFFFEB 		bl	Gestion_excepciones_init
  47:../main.c     **** 	Lcd_Init();
 2536              		.loc 1 47 0
 2537 006c FEFFFFEB 		bl	Lcd_Init
  48:../main.c     **** 	Lcd_Clr();
 2538              		.loc 1 48 0
 2539 0070 FEFFFFEB 		bl	Lcd_Clr
  49:../main.c     **** 	Lcd_Active_Clr();
 2540              		.loc 1 49 0
 2541 0074 FEFFFFEB 		bl	Lcd_Active_Clr
  50:../main.c     **** 	TS_init();
 2542              		.loc 1 50 0
 2543 0078 FEFFFFEB 		bl	TS_init
  51:../main.c     **** 
  52:../main.c     **** 	Delay(250);
 2544              		.loc 1 52 0
 2545 007c FA00A0E3 		mov	r0, #250
 2546 0080 FEFFFFEB 		bl	Delay
  53:../main.c     **** 	/// Pruebas de excepciones ///
  54:../main.c     **** 	//asm volatile ("SWI 0x55");			//lanzar SWI
  55:../main.c     **** 	//asm volatile ("mov r3, #3");
  56:../main.c     **** 	//asm volatile ("ldr r2,[r3]");			//Forzar DABORT
  57:../main.c     **** 	//asm volatile (".word 0xe7f000f0\n");	//Forzar UNDEF
  58:../main.c     **** 
  59:../main.c     **** 	pasar_a_user();
 2547              		.loc 1 59 0
 2548 0084 FEFFFFEB 		bl	pasar_a_user
  60:../main.c     **** 	//pintar_prueba();
  61:../main.c     **** 	reversi_main();
 2549              		.loc 1 61 0
 2550 0088 FEFFFFEB 		bl	reversi_main
  62:../main.c     **** 
  63:../main.c     **** 
  64:../main.c     **** 	//// pruebas automáticas de timer2 ////
  65:../main.c     **** 	//pruebas_timer2();
  66:../main.c     **** 
  67:../main.c     **** 	//// pruebas automáticas de patron_volteo ////
  68:../main.c     **** 	//patron_volteo_prueba_resultado_igual();
  69:../main.c     **** 	//patron_volteo_prueba_resultado_correcto();
  70:../main.c     **** 
  71:../main.c     **** 
  72:../main.c     **** 	/* Valor inicial de los leds */
  73:../main.c     **** 	//leds_off();
  74:../main.c     **** 	//led1_on();
  75:../main.c     **** }
 2551              		.loc 1 75 0
 2552 008c 0CD04BE2 		sub	sp, fp, #12
 2553 0090 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2554 0094 1EFF2FE1 		bx	lr
 2555              		.cfi_endproc
 2556              	.LFE1:
 2558              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
                            *COM*:00000004 CheckTSP
                            *COM*:00000004 oneTouch
                            *COM*:00000004 Vx
                            *COM*:00000004 Vy
                            *COM*:00000004 Xmax
                            *COM*:00000004 Ymax
                            *COM*:00000004 Xmin
                            *COM*:00000004 Ymin
C:\Users\pjper\AppData\Local\Temp\cc7Y5DU7.s:2454   .text:00000000 $a
C:\Users\pjper\AppData\Local\Temp\cc7Y5DU7.s:2457   .text:00000000 pasar_a_user
C:\Users\pjper\AppData\Local\Temp\cc7Y5DU7.s:2506   .text:00000044 Main
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
sys_init
timer_init
button_iniciar
D8Led_init
cola_depuracion_inicializar
Gestion_excepciones_init
Lcd_Init
Lcd_Clr
Lcd_Active_Clr
TS_init
Delay
reversi_main
