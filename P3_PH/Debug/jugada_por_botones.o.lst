   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.file	"jugada_por_botones.c"
  21              	.Ltext0:
  22              		.file 1 "../jugada_por_botones.c"
 2189              		.align	2
 2190              		.global	contar_fichas_final
 2192              	contar_fichas_final:
 2193              	.LFB14:
   1:../jugada_por_botones.c **** /*********************************************************************************************
   2:../jugada_por_botones.c **** * Fichero:		jugada_por_botones.c
   3:../jugada_por_botones.c **** * Autor:		Pedro José Pérez García (756642) y Fernando Peña Bes (756012)
   4:../jugada_por_botones.c **** * Descrip:		Máquina de estados que gestiona la lógica del juego reversi.
   5:../jugada_por_botones.c **** * 				Las rutinas llamadas desde reversi_main invocan la función del autómata,
   6:../jugada_por_botones.c **** *				que comprueba si debe realizar alguna acción o no.
   7:../jugada_por_botones.c **** * Version:		
   8:../jugada_por_botones.c **** *********************************************************************************************/
   9:../jugada_por_botones.c **** 
  10:../jugada_por_botones.c **** /*--- ficheros de cabecera ---*/
  11:../jugada_por_botones.c **** #include "led.h"
  12:../jugada_por_botones.c **** #include "44b.h"
  13:../jugada_por_botones.c **** #include "44blib.h"
  14:../jugada_por_botones.c **** #include "botones_antirebotes.h"
  15:../jugada_por_botones.c **** #include "button.h"
  16:../jugada_por_botones.c **** #include "codigos_eventos.h"
  17:../jugada_por_botones.c **** #include "reversi8_2019.h"
  18:../jugada_por_botones.c **** #include "jugada_por_botones.h"
  19:../jugada_por_botones.c **** #include "elementos_pantalla.h"
  20:../jugada_por_botones.c **** #include "definiciones_juego.h"
  21:../jugada_por_botones.c **** #include "lcd.h"					//Se incluye por haciendo_DMA, como nos ha dicho Darío
  22:../jugada_por_botones.c **** /*--- variables del módulo ---*/
  23:../jugada_por_botones.c **** 
  24:../jugada_por_botones.c **** static enum estados{Reglas, Jugando, Fin} jugada_botones;
  25:../jugada_por_botones.c **** static int ev_bot_izq = 0;			//Indica cuándo hay que actualizar la posición de la ficha gris, por n
  26:../jugada_por_botones.c **** static int ev_bot_der = 0;			//Flag que señaliza cuándo han pulsado el botón derecho, y cuántas vec
  27:../jugada_por_botones.c **** static int ev_tp = 0;				//Indica que hay que atender un toque del touchpad de alguien
  28:../jugada_por_botones.c **** static char mi_fila = 0;			//La fila donde queremos poner ficha
  29:../jugada_por_botones.c **** static char mi_columna = 0;			//La columna donde queremos poner ficha
  30:../jugada_por_botones.c **** volatile int haciendo_DMA = 0;		//Si estamos haciendo un DMA al LCD
  31:../jugada_por_botones.c **** static int ev_timer = 0;			//Interrupción del timer que indica que hay que refrescar tiempos en pan
  32:../jugada_por_botones.c **** static enum final_partida final;	//Determina si la partida ha terminado, y cómo lo ha hecho: Por em
  33:../jugada_por_botones.c **** /* PROFILING */
  34:../jugada_por_botones.c **** static int tiempo_calc = 0;
  35:../jugada_por_botones.c **** volatile static int tiempo_total = 0;
  36:../jugada_por_botones.c **** static int tiempo_pv = 0;
  37:../jugada_por_botones.c **** static int veces_pv = 0;
  38:../jugada_por_botones.c **** /* TABLEROS PARA ACTUALIZAR SOLO LAS FICHAS NECESARIAS */
  39:../jugada_por_botones.c **** static char tablero_actual[num_filas][num_columnas];		//Aquí se guardarán las fichas después de que
  40:../jugada_por_botones.c **** static char tablero_anterior[num_filas][num_columnas];		//Aquí se guardarán las fichas antes de que
  41:../jugada_por_botones.c **** 															//Se hará la diferencia, y solo se pintarán aquellas que cambien.
  42:../jugada_por_botones.c **** 															//También, después de esto, anterior = actual, para el próximo turno.
  43:../jugada_por_botones.c **** 
  44:../jugada_por_botones.c **** 
  45:../jugada_por_botones.c **** void inicializar_jugada_botones()
  46:../jugada_por_botones.c **** {
  47:../jugada_por_botones.c **** 	reversi8_inicializar();
  48:../jugada_por_botones.c **** 	haciendo_DMA = 1;
  49:../jugada_por_botones.c **** 	mi_fila = 0;
  50:../jugada_por_botones.c **** 	mi_columna = 0;
  51:../jugada_por_botones.c **** 	ev_bot_izq = 0;
  52:../jugada_por_botones.c **** 	ev_bot_der = 0;
  53:../jugada_por_botones.c **** 	ev_tp = 0;
  54:../jugada_por_botones.c **** 	ev_timer = 0;
  55:../jugada_por_botones.c **** 	final = no_fin;
  56:../jugada_por_botones.c **** 	tiempo_calc = 0;
  57:../jugada_por_botones.c **** 	tiempo_total = 0;
  58:../jugada_por_botones.c **** 	tiempo_pv = 0;
  59:../jugada_por_botones.c **** 	veces_pv = 0;
  60:../jugada_por_botones.c **** 	obtener_tablero(tablero_actual);
  61:../jugada_por_botones.c **** 	obtener_tablero(tablero_anterior);
  62:../jugada_por_botones.c **** 	jugada_botones = Reglas;
  63:../jugada_por_botones.c **** 	pintar_reglas();
  64:../jugada_por_botones.c **** }
  65:../jugada_por_botones.c **** 
  66:../jugada_por_botones.c **** //Hace los cálculos necesarios para mover la ficha gris a la derecha en pantalla
  67:../jugada_por_botones.c **** void calcular_mov_gris_der()
  68:../jugada_por_botones.c **** {
  69:../jugada_por_botones.c **** 	if((contar_blancas() + contar_negras()) == num_filas * num_columnas)	//Si no hay que terminar la p
  70:../jugada_por_botones.c **** 	{
  71:../jugada_por_botones.c **** 		contar_fichas_final();
  72:../jugada_por_botones.c **** 	}
  73:../jugada_por_botones.c **** 	else
  74:../jugada_por_botones.c **** 	{
  75:../jugada_por_botones.c **** 		volatile int aux = mi_fila;
  76:../jugada_por_botones.c **** 		volatile int aux2 = mi_columna;
  77:../jugada_por_botones.c **** 		mi_fila = ((mi_fila + 1) % 8);
  78:../jugada_por_botones.c **** 		while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_co
  79:../jugada_por_botones.c **** 		{
  80:../jugada_por_botones.c **** 			mi_fila = ((mi_fila + 1) % 8);			//8 porque hay 8 columnas en el tablero, [0-7], 0x7 = num_colum
  81:../jugada_por_botones.c **** 		}
  82:../jugada_por_botones.c **** 		if(mi_fila == aux)							//Si la ficha gris se queda atrapada
  83:../jugada_por_botones.c **** 		{
  84:../jugada_por_botones.c **** 			volatile int i;
  85:../jugada_por_botones.c **** 			volatile int j;
  86:../jugada_por_botones.c **** 			for(i = 0; i < num_filas; i++)			//se recorre el tablero buscando otra posición libre y
  87:../jugada_por_botones.c **** 			{										// se mueve a esa casilla libre para ver si se puede 'liberar'
  88:../jugada_por_botones.c **** 				for(j = 0; j < num_columnas; j++)
  89:../jugada_por_botones.c **** 				{
  90:../jugada_por_botones.c **** 					if(tablero_actual[i][j] == CASILLA_VACIA)
  91:../jugada_por_botones.c **** 					{
  92:../jugada_por_botones.c **** 						mi_fila = i;
  93:../jugada_por_botones.c **** 						mi_columna = j;
  94:../jugada_por_botones.c **** 					}
  95:../jugada_por_botones.c **** 				}
  96:../jugada_por_botones.c **** 			}
  97:../jugada_por_botones.c **** 		}
  98:../jugada_por_botones.c **** 		while(haciendo_DMA != 0)
  99:../jugada_por_botones.c **** 		{
 100:../jugada_por_botones.c **** 		}
 101:../jugada_por_botones.c **** 		haciendo_DMA = 1;
 102:../jugada_por_botones.c **** 		//DMA act ficha gris
 103:../jugada_por_botones.c **** 		mover_gris(mi_fila, mi_columna, aux, aux2);		//Mover en la pantalla
 104:../jugada_por_botones.c **** 	}
 105:../jugada_por_botones.c **** }
 106:../jugada_por_botones.c **** 
 107:../jugada_por_botones.c **** void calcular_mov_gris_izq()
 108:../jugada_por_botones.c **** {
 109:../jugada_por_botones.c **** 	if((contar_blancas() + contar_negras()) == num_filas * num_columnas)	//Si no hay que terminar la p
 110:../jugada_por_botones.c **** 	{
 111:../jugada_por_botones.c **** 		contar_fichas_final();
 112:../jugada_por_botones.c **** 	}
 113:../jugada_por_botones.c **** 	else
 114:../jugada_por_botones.c **** 	{
 115:../jugada_por_botones.c **** 		volatile int aux = mi_columna;
 116:../jugada_por_botones.c **** 		volatile int aux2 = mi_fila;
 117:../jugada_por_botones.c **** 		mi_columna = ((mi_columna + 1) % 8);
 118:../jugada_por_botones.c **** 		while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_co
 119:../jugada_por_botones.c **** 		{
 120:../jugada_por_botones.c **** 			mi_columna = ((mi_columna + 1) % 8);		//8 porque hay 8 columnas en el tablero, [0-7], 0x7 = num_
 121:../jugada_por_botones.c **** 		}
 122:../jugada_por_botones.c **** 		if(mi_columna == aux)							//Si la ficha gris se queda atrapada
 123:../jugada_por_botones.c **** 		{
 124:../jugada_por_botones.c **** 			volatile int i;
 125:../jugada_por_botones.c **** 			volatile int j;
 126:../jugada_por_botones.c **** 			for(i = 0; i < num_filas; i++)			//se recorre el tablero buscando otra posición libre y
 127:../jugada_por_botones.c **** 			{										// se mueve a esa casilla libre para ver si se puede 'liberar'
 128:../jugada_por_botones.c **** 				for(j = 0; j < num_columnas; j++)
 129:../jugada_por_botones.c **** 				{
 130:../jugada_por_botones.c **** 					if(tablero_actual[i][j] == CASILLA_VACIA)
 131:../jugada_por_botones.c **** 					{
 132:../jugada_por_botones.c **** 						mi_fila = i;
 133:../jugada_por_botones.c **** 						mi_columna = j;
 134:../jugada_por_botones.c **** 					}
 135:../jugada_por_botones.c **** 				}
 136:../jugada_por_botones.c **** 			}
 137:../jugada_por_botones.c **** 		}
 138:../jugada_por_botones.c **** 
 139:../jugada_por_botones.c **** 		while(haciendo_DMA != 0)
 140:../jugada_por_botones.c **** 		{
 141:../jugada_por_botones.c **** 		}
 142:../jugada_por_botones.c **** 		haciendo_DMA = 1;
 143:../jugada_por_botones.c **** 		mover_gris(mi_fila, mi_columna, aux2, aux);	//Mover en la pantalla
 144:../jugada_por_botones.c **** 	}
 145:../jugada_por_botones.c **** }
 146:../jugada_por_botones.c **** 
 147:../jugada_por_botones.c **** //Función encargada de gestionar la confirmación de movimientos del usuario
 148:../jugada_por_botones.c **** void procesar_jugada()
 149:../jugada_por_botones.c **** {
 150:../jugada_por_botones.c **** 	unsigned int delta1 = timer2_leer();
 151:../jugada_por_botones.c **** 	reversi_procesar(mi_fila, mi_columna);		//Calcula la jugada de la IA y calcula tiempos de procesam
 152:../jugada_por_botones.c **** 	unsigned int delta2 = timer2_leer();
 153:../jugada_por_botones.c **** 	tiempo_calc += (delta2-delta1);
 154:../jugada_por_botones.c **** 	if(obtener_jugada_valida() == 1)
 155:../jugada_por_botones.c **** 	{
 156:../jugada_por_botones.c **** 		borrar_ficha(mi_fila, mi_columna);
 157:../jugada_por_botones.c **** 		actualizar_movimientos_pantalla();		//Pone la ficha que hemos jugado, la ficha de la cpu, y volte
 158:../jugada_por_botones.c **** 		reiniciar_posicion_gris();				//Devuelve la ficha gris a 0,0, y si está ocupada, a la primera cas
 159:../jugada_por_botones.c **** 		//obtener datos de profiling
 160:../jugada_por_botones.c **** 		tiempo_pv += reversi_t_pv();
 161:../jugada_por_botones.c **** 		veces_pv += reversi_veces_pv();
 162:../jugada_por_botones.c **** 		pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 163:../jugada_por_botones.c **** 		haciendo_DMA = 1;
 164:../jugada_por_botones.c **** 		iniciar_DMA();
 165:../jugada_por_botones.c **** 	}
 166:../jugada_por_botones.c **** 	else
 167:../jugada_por_botones.c **** 	{
 168:../jugada_por_botones.c **** 		tiempo_pv += reversi_t_pv();
 169:../jugada_por_botones.c **** 		veces_pv += reversi_veces_pv();
 170:../jugada_por_botones.c **** 		pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 171:../jugada_por_botones.c **** 		haciendo_DMA = 1;
 172:../jugada_por_botones.c **** 		iniciar_DMA();
 173:../jugada_por_botones.c **** 	}
 174:../jugada_por_botones.c **** 	final = obtener_fin();
 175:../jugada_por_botones.c **** }
 176:../jugada_por_botones.c **** 
 177:../jugada_por_botones.c **** void pintar_fin()
 178:../jugada_por_botones.c **** {
 179:../jugada_por_botones.c **** 	if(final == jugador_gana)
 180:../jugada_por_botones.c **** 	{
 181:../jugada_por_botones.c **** 		pintar_fin_victoria(contar_blancas(), contar_negras());
 182:../jugada_por_botones.c **** 	}
 183:../jugada_por_botones.c **** 	else if(final == cpu_gana)
 184:../jugada_por_botones.c **** 	{
 185:../jugada_por_botones.c **** 		pintar_fin_derrota(contar_blancas(), contar_negras());
 186:../jugada_por_botones.c **** 	}
 187:../jugada_por_botones.c **** 	else	//En caso de empate
 188:../jugada_por_botones.c **** 	{
 189:../jugada_por_botones.c **** 		pintar_fin_empate(contar_blancas(), contar_negras());
 190:../jugada_por_botones.c **** 	}
 191:../jugada_por_botones.c **** }
 192:../jugada_por_botones.c **** 
 193:../jugada_por_botones.c **** //El autómata de estados como tal
 194:../jugada_por_botones.c **** void jugada_por_botones()
 195:../jugada_por_botones.c **** {
 196:../jugada_por_botones.c **** 	switch(jugada_botones)
 197:../jugada_por_botones.c **** 	{
 198:../jugada_por_botones.c **** 	case Reglas:
 199:../jugada_por_botones.c **** 		if(ev_bot_der > 0)
 200:../jugada_por_botones.c **** 		{
 201:../jugada_por_botones.c **** 			ev_bot_der = 0;
 202:../jugada_por_botones.c **** 		}
 203:../jugada_por_botones.c **** 		if(ev_bot_izq > 0)
 204:../jugada_por_botones.c **** 		{
 205:../jugada_por_botones.c **** 			ev_bot_izq = 0;
 206:../jugada_por_botones.c **** 		}
 207:../jugada_por_botones.c **** 		if(ev_tp == 1)
 208:../jugada_por_botones.c **** 		{
 209:../jugada_por_botones.c **** 			ev_tp = 0;
 210:../jugada_por_botones.c **** 			if(haciendo_DMA == 0)
 211:../jugada_por_botones.c **** 			{
 212:../jugada_por_botones.c **** 				haciendo_DMA = 1;
 213:../jugada_por_botones.c **** 				jugada_botones = Jugando;
 214:../jugada_por_botones.c **** 				pintar_jugando();
 215:../jugada_por_botones.c **** 			}
 216:../jugada_por_botones.c **** 		}
 217:../jugada_por_botones.c **** 		break;
 218:../jugada_por_botones.c **** 	case Jugando:
 219:../jugada_por_botones.c **** 		if(haciendo_DMA == 0 && final != no_fin)
 220:../jugada_por_botones.c **** 		{
 221:../jugada_por_botones.c **** 			haciendo_DMA = 1;
 222:../jugada_por_botones.c **** 			pintar_fin();
 223:../jugada_por_botones.c **** 			jugada_botones = Fin;
 224:../jugada_por_botones.c **** 		}
 225:../jugada_por_botones.c **** 		if(haciendo_DMA == 0 && ev_timer > 0)
 226:../jugada_por_botones.c **** 		{
 227:../jugada_por_botones.c **** 			ev_timer--;
 228:../jugada_por_botones.c **** 			//Actualizar tiempo total
 229:../jugada_por_botones.c **** 			tiempo_total++;
 230:../jugada_por_botones.c **** 			//DMA act pantalla con nuevos tiempos
 231:../jugada_por_botones.c **** 			pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 232:../jugada_por_botones.c **** 			haciendo_DMA = 1;
 233:../jugada_por_botones.c **** 			iniciar_DMA();
 234:../jugada_por_botones.c **** 		}
 235:../jugada_por_botones.c **** 		if(ev_bot_der == 1)		//Incrementar fila
 236:../jugada_por_botones.c **** 		{
 237:../jugada_por_botones.c **** 			ev_bot_der = 0;
 238:../jugada_por_botones.c **** 			calcular_mov_gris_der();
 239:../jugada_por_botones.c **** 		}
 240:../jugada_por_botones.c **** 		if(ev_bot_izq == 1)		//Incrementar columna
 241:../jugada_por_botones.c **** 		{
 242:../jugada_por_botones.c **** 			ev_bot_izq = 0;
 243:../jugada_por_botones.c **** 			calcular_mov_gris_izq();
 244:../jugada_por_botones.c **** 		}
 245:../jugada_por_botones.c **** 		if(ev_tp == 1)
 246:../jugada_por_botones.c **** 		{
 247:../jugada_por_botones.c **** 			ev_tp = 0;
 248:../jugada_por_botones.c **** 			if(haciendo_DMA == 0)
 249:../jugada_por_botones.c **** 			{
 250:../jugada_por_botones.c **** 				procesar_jugada();
 251:../jugada_por_botones.c **** 			}
 252:../jugada_por_botones.c **** 		}
 253:../jugada_por_botones.c **** 		break;
 254:../jugada_por_botones.c **** 	default:	//case Fin
 255:../jugada_por_botones.c **** 		if(haciendo_DMA == 0 && ev_tp == 1)
 256:../jugada_por_botones.c **** 		//Reiniciar partida, restaurando el estado inicial del autómata
 257:../jugada_por_botones.c **** 		{
 258:../jugada_por_botones.c **** 			Lcd_Clr();
 259:../jugada_por_botones.c **** 			inicializar_jugada_botones();
 260:../jugada_por_botones.c **** 		}
 261:../jugada_por_botones.c **** 		break;
 262:../jugada_por_botones.c **** 	}
 263:../jugada_por_botones.c **** }
 264:../jugada_por_botones.c **** 
 265:../jugada_por_botones.c **** //Se llama cuando se pulsa en tsp, confirmando la jugada
 266:../jugada_por_botones.c **** void jugada_ev_tsp()
 267:../jugada_por_botones.c **** {
 268:../jugada_por_botones.c **** 	ev_tp = 1;
 269:../jugada_por_botones.c **** 	jugada_por_botones();
 270:../jugada_por_botones.c **** }
 271:../jugada_por_botones.c **** 
 272:../jugada_por_botones.c **** //Se llama cuando el botón derecho es pulsado, para tratar el evento
 273:../jugada_por_botones.c **** void jugada_ev_der()
 274:../jugada_por_botones.c **** {
 275:../jugada_por_botones.c **** 	ev_bot_der = 1;
 276:../jugada_por_botones.c **** 	jugada_por_botones();
 277:../jugada_por_botones.c **** }
 278:../jugada_por_botones.c **** 
 279:../jugada_por_botones.c **** //Se llama por autoincremento o por pulsación nueva
 280:../jugada_por_botones.c **** void jugada_ev_izq()
 281:../jugada_por_botones.c **** {
 282:../jugada_por_botones.c **** 	ev_bot_izq = 1;
 283:../jugada_por_botones.c **** 	jugada_por_botones();
 284:../jugada_por_botones.c **** }
 285:../jugada_por_botones.c **** //Se llama cuando haya que incrementar la cuenta de tiempo de juego en segundos
 286:../jugada_por_botones.c **** void jugada_ev_timer()
 287:../jugada_por_botones.c **** {
 288:../jugada_por_botones.c **** 	ev_timer++;
 289:../jugada_por_botones.c **** 	jugada_por_botones();
 290:../jugada_por_botones.c **** }
 291:../jugada_por_botones.c **** 
 292:../jugada_por_botones.c **** //Se llama para avisar al autómata de que la transferencia por DMA ha terminado
 293:../jugada_por_botones.c **** void termina_DMA()
 294:../jugada_por_botones.c **** {
 295:../jugada_por_botones.c **** 	haciendo_DMA = 0;
 296:../jugada_por_botones.c **** 	jugada_por_botones();
 297:../jugada_por_botones.c **** }
 298:../jugada_por_botones.c **** 
 299:../jugada_por_botones.c **** 
 300:../jugada_por_botones.c **** //Se llama tras hacer un movimiento
 301:../jugada_por_botones.c **** //	Devuelve la ficha gris a 0,0 o a la siguiente posición libre del tablero,
 302:../jugada_por_botones.c **** //	para hacer la siguiente jugada.
 303:../jugada_por_botones.c **** void reiniciar_posicion_gris()
 304:../jugada_por_botones.c **** {
 305:../jugada_por_botones.c **** 	mi_fila = 0;
 306:../jugada_por_botones.c **** 	mi_columna = 0;
 307:../jugada_por_botones.c **** 	int i,j;
 308:../jugada_por_botones.c **** 	int fin_bucle = 0;
 309:../jugada_por_botones.c **** 	for(i = 0; i < num_filas && fin_bucle == 0; i++)
 310:../jugada_por_botones.c **** 	{
 311:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas && fin_bucle == 0; j++)
 312:../jugada_por_botones.c **** 		{
 313:../jugada_por_botones.c **** 			if(tablero_actual[i][j] == CASILLA_VACIA)
 314:../jugada_por_botones.c **** 			{
 315:../jugada_por_botones.c **** 				mi_fila = i;
 316:../jugada_por_botones.c **** 				mi_columna = j;
 317:../jugada_por_botones.c **** 				fin_bucle = 1;
 318:../jugada_por_botones.c **** 			}
 319:../jugada_por_botones.c **** 		}
 320:../jugada_por_botones.c **** 	}
 321:../jugada_por_botones.c **** 	pintar_ficha(mi_fila, mi_columna, FICHA_GRIS);
 322:../jugada_por_botones.c **** }	
 323:../jugada_por_botones.c **** 
 324:../jugada_por_botones.c **** void actualizar_movimientos_pantalla()
 325:../jugada_por_botones.c **** {
 326:../jugada_por_botones.c **** 	obtener_tablero(tablero_actual);
 327:../jugada_por_botones.c **** 	int i,j;
 328:../jugada_por_botones.c **** 	for(i = 0; i < num_filas; i++)
 329:../jugada_por_botones.c **** 	{
 330:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas; j++)
 331:../jugada_por_botones.c **** 		{
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 333:../jugada_por_botones.c **** 			{	//Si algo ha cambiado al mover lo actualizamos
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 336:../jugada_por_botones.c **** 				//Y de paso actualizamos esto para la siguiente vez
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 338:../jugada_por_botones.c **** 			}
 339:../jugada_por_botones.c **** 		}
 340:../jugada_por_botones.c **** 	}
 341:../jugada_por_botones.c **** }
 342:../jugada_por_botones.c **** 
 343:../jugada_por_botones.c **** void jugada_ev_tecla0(void)		//Pasar turno de jugador
 344:../jugada_por_botones.c **** {
 345:../jugada_por_botones.c **** 	if(jugada_botones == Jugando)
 346:../jugada_por_botones.c **** 	{
 347:../jugada_por_botones.c **** 		unsigned int delta1 = timer2_leer();
 348:../jugada_por_botones.c **** 		mover_IA();
 349:../jugada_por_botones.c **** 		unsigned int delta2 = timer2_leer();
 350:../jugada_por_botones.c **** 		tiempo_calc += (delta2-delta1);
 351:../jugada_por_botones.c **** 		borrar_ficha(mi_fila, mi_columna);
 352:../jugada_por_botones.c **** 		actualizar_movimientos_pantalla();
 353:../jugada_por_botones.c **** 		//Pone la ficha de la cpu, y voltea lo que haga falta
 354:../jugada_por_botones.c **** 		reiniciar_posicion_gris();
 355:../jugada_por_botones.c **** 		//Devuelve la ficha gris a 0,0, y si está ocupada, a la primera casilla libre
 356:../jugada_por_botones.c **** 		tiempo_pv += reversi_t_pv();	//obtener datos de profiling
 357:../jugada_por_botones.c **** 		veces_pv += reversi_veces_pv();
 358:../jugada_por_botones.c **** 		pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 359:../jugada_por_botones.c **** 		haciendo_DMA = 1;
 360:../jugada_por_botones.c **** 		iniciar_DMA();
 361:../jugada_por_botones.c **** 		final = obtener_fin();
 362:../jugada_por_botones.c **** 	}
 363:../jugada_por_botones.c **** }
 364:../jugada_por_botones.c **** 
 365:../jugada_por_botones.c **** void contar_fichas_final()		//Para saber qué final poner, en caso de que el tablero esté lleno o se
 366:../jugada_por_botones.c **** {
 2194              		.loc 1 366 0
 2195              		.cfi_startproc
 2196              		@ Function supports interworking.
 2197              		@ args = 0, pretend = 0, frame = 0
 2198              		@ frame_needed = 1, uses_anonymous_args = 0
 2199 0000 0DC0A0E1 		mov	ip, sp
 2200              	.LCFI0:
 2201              		.cfi_def_cfa_register 12
 2202 0004 18D82DE9 		stmfd	sp!, {r3, r4, fp, ip, lr, pc}
 2203 0008 04B04CE2 		sub	fp, ip, #4
 2204              		.cfi_offset 14, -8
 2205              		.cfi_offset 13, -12
 2206              		.cfi_offset 11, -16
 2207              		.cfi_offset 4, -20
 2208              		.cfi_offset 3, -24
 2209              	.LCFI1:
 2210              		.cfi_def_cfa 11, 4
 367:../jugada_por_botones.c **** 	int blancas = contar_blancas();
 2211              		.loc 1 367 0
 2212 000c FEFFFFEB 		bl	contar_blancas
 2213 0010 0040A0E1 		mov	r4, r0
 2214              	.LVL0:
 368:../jugada_por_botones.c **** 	int negras = contar_negras();
 2215              		.loc 1 368 0
 2216 0014 FEFFFFEB 		bl	contar_negras
 2217              	.LVL1:
 369:../jugada_por_botones.c **** 	if(blancas > negras)
 2218              		.loc 1 369 0
 2219 0018 000054E1 		cmp	r4, r0
 2220 001c 060000CA 		bgt	.L6
 370:../jugada_por_botones.c **** 	{
 371:../jugada_por_botones.c **** 		final = cpu_gana;
 372:../jugada_por_botones.c **** 	}
 373:../jugada_por_botones.c **** 	else if(blancas < negras)
 374:../jugada_por_botones.c **** 	{
 375:../jugada_por_botones.c **** 		final = jugador_gana;
 376:../jugada_por_botones.c **** 	}
 377:../jugada_por_botones.c **** 	else	//En caso de empate
 378:../jugada_por_botones.c **** 	{
 379:../jugada_por_botones.c **** 		final = empate;
 2221              		.loc 1 379 0
 2222 0020 24109FE5 		ldr	r1, .L7
 375:../jugada_por_botones.c **** 		final = jugador_gana;
 2223              		.loc 1 375 0
 2224 0024 0100A0B3 		movlt	r0, #1
 2225              	.LVL2:
 2226              		.loc 1 379 0
 2227 0028 0300A0A3 		movge	r0, #3
 2228 002c 0000C1E5 		strb	r0, [r1, #0]
 2229              	.L1:
 380:../jugada_por_botones.c **** 	}
 381:../jugada_por_botones.c **** }
 2230              		.loc 1 381 0
 2231 0030 14D04BE2 		sub	sp, fp, #20
 2232 0034 18689DE8 		ldmfd	sp, {r3, r4, fp, sp, lr}
 2233 0038 1EFF2FE1 		bx	lr
 2234              	.LVL3:
 2235              	.L6:
 371:../jugada_por_botones.c **** 		final = cpu_gana;
 2236              		.loc 1 371 0
 2237 003c 08309FE5 		ldr	r3, .L7
 2238 0040 0220A0E3 		mov	r2, #2
 2239 0044 0020C3E5 		strb	r2, [r3, #0]
 2240 0048 F8FFFFEA 		b	.L1
 2241              	.L8:
 2242              		.align	2
 2243              	.L7:
 2244 004c 00000000 		.word	.LANCHOR0
 2245              		.cfi_endproc
 2246              	.LFE14:
 2248              		.align	2
 2249              		.global	actualizar_movimientos_pantalla
 2251              	actualizar_movimientos_pantalla:
 2252              	.LFB12:
 325:../jugada_por_botones.c **** {
 2253              		.loc 1 325 0
 2254              		.cfi_startproc
 2255              		@ Function supports interworking.
 2256              		@ args = 0, pretend = 0, frame = 0
 2257              		@ frame_needed = 1, uses_anonymous_args = 0
 2258 0050 0DC0A0E1 		mov	ip, sp
 2259              	.LCFI2:
 2260              		.cfi_def_cfa_register 12
 2261 0054 78D82DE9 		stmfd	sp!, {r3, r4, r5, r6, fp, ip, lr, pc}
 326:../jugada_por_botones.c **** 	obtener_tablero(tablero_actual);
 2262              		.loc 1 326 0
 2263 0058 D0019FE5 		ldr	r0, .L20
 325:../jugada_por_botones.c **** {
 2264              		.loc 1 325 0
 2265 005c 04B04CE2 		sub	fp, ip, #4
 2266              		.cfi_offset 14, -8
 2267              		.cfi_offset 13, -12
 2268              		.cfi_offset 11, -16
 2269              		.cfi_offset 6, -20
 2270              		.cfi_offset 5, -24
 2271              		.cfi_offset 4, -28
 2272              		.cfi_offset 3, -32
 2273              	.LCFI3:
 2274              		.cfi_def_cfa 11, 4
 326:../jugada_por_botones.c **** 	obtener_tablero(tablero_actual);
 2275              		.loc 1 326 0
 2276 0060 FEFFFFEB 		bl	obtener_tablero
 2277              	.LVL4:
 2278 0064 C4419FE5 		ldr	r4, .L20
 328:../jugada_por_botones.c **** 	for(i = 0; i < num_filas; i++)
 2279              		.loc 1 328 0
 2280 0068 0060A0E3 		mov	r6, #0
 326:../jugada_por_botones.c **** 	obtener_tablero(tablero_actual);
 2281              		.loc 1 326 0
 2282 006c 405084E2 		add	r5, r4, #64
 2283              	.LVL5:
 2284              	.L18:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 2285              		.loc 1 332 0 discriminator 1
 2286 0070 0020D4E5 		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 2287 0074 0030D5E5 		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 2288 0078 030052E1 		cmp	r2, r3
 2289 007c 0800000A 		beq	.L10
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 2290              		.loc 1 334 0
 2291 0080 0010A0E3 		mov	r1, #0
 2292 0084 0600A0E1 		mov	r0, r6
 2293 0088 FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 2294              		.loc 1 335 0
 2295 008c 0600A0E1 		mov	r0, r6
 2296 0090 0010A0E3 		mov	r1, #0
 2297 0094 0020D4E5 		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 2298 0098 FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 2299              		.loc 1 337 0
 2300 009c 0000D4E5 		ldrb	r0, [r4, #0]	@ zero_extendqisi2
 2301 00a0 0000C5E5 		strb	r0, [r5, #0]
 2302              	.L10:
 2303              	.LVL6:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 2304              		.loc 1 332 0
 2305 00a4 0110D4E5 		ldrb	r1, [r4, #1]	@ zero_extendqisi2
 2306 00a8 01C0D5E5 		ldrb	ip, [r5, #1]	@ zero_extendqisi2
 2307 00ac 0C0051E1 		cmp	r1, ip
 2308 00b0 0800000A 		beq	.L11
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 2309              		.loc 1 334 0
 2310 00b4 0110A0E3 		mov	r1, #1
 2311 00b8 0600A0E1 		mov	r0, r6
 2312 00bc FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 2313              		.loc 1 335 0
 2314 00c0 0120D4E5 		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 2315 00c4 0600A0E1 		mov	r0, r6
 2316 00c8 0110A0E3 		mov	r1, #1
 2317 00cc FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 2318              		.loc 1 337 0
 2319 00d0 0120D4E5 		ldrb	r2, [r4, #1]	@ zero_extendqisi2
 2320 00d4 0120C5E5 		strb	r2, [r5, #1]
 2321              	.L11:
 2322              	.LVL7:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 2323              		.loc 1 332 0
 2324 00d8 02E0D4E5 		ldrb	lr, [r4, #2]	@ zero_extendqisi2
 2325 00dc 0230D5E5 		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 2326 00e0 03005EE1 		cmp	lr, r3
 2327 00e4 0800000A 		beq	.L12
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 2328              		.loc 1 334 0
 2329 00e8 0210A0E3 		mov	r1, #2
 2330 00ec 0600A0E1 		mov	r0, r6
 2331 00f0 FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 2332              		.loc 1 335 0
 2333 00f4 0600A0E1 		mov	r0, r6
 2334 00f8 0210A0E3 		mov	r1, #2
 2335 00fc 0220D4E5 		ldrb	r2, [r4, #2]	@ zero_extendqisi2
 2336 0100 FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 2337              		.loc 1 337 0
 2338 0104 0200D4E5 		ldrb	r0, [r4, #2]	@ zero_extendqisi2
 2339 0108 0200C5E5 		strb	r0, [r5, #2]
 2340              	.L12:
 2341              	.LVL8:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 2342              		.loc 1 332 0
 2343 010c 0310D4E5 		ldrb	r1, [r4, #3]	@ zero_extendqisi2
 2344 0110 03C0D5E5 		ldrb	ip, [r5, #3]	@ zero_extendqisi2
 2345 0114 0C0051E1 		cmp	r1, ip
 2346 0118 0800000A 		beq	.L13
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 2347              		.loc 1 334 0
 2348 011c 0310A0E3 		mov	r1, #3
 2349 0120 0600A0E1 		mov	r0, r6
 2350 0124 FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 2351              		.loc 1 335 0
 2352 0128 0320D4E5 		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 2353 012c 0600A0E1 		mov	r0, r6
 2354 0130 0310A0E3 		mov	r1, #3
 2355 0134 FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 2356              		.loc 1 337 0
 2357 0138 0320D4E5 		ldrb	r2, [r4, #3]	@ zero_extendqisi2
 2358 013c 0320C5E5 		strb	r2, [r5, #3]
 2359              	.L13:
 2360              	.LVL9:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 2361              		.loc 1 332 0
 2362 0140 04E0D4E5 		ldrb	lr, [r4, #4]	@ zero_extendqisi2
 2363 0144 0430D5E5 		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 2364 0148 03005EE1 		cmp	lr, r3
 2365 014c 0800000A 		beq	.L14
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 2366              		.loc 1 334 0
 2367 0150 0410A0E3 		mov	r1, #4
 2368 0154 0600A0E1 		mov	r0, r6
 2369 0158 FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 2370              		.loc 1 335 0
 2371 015c 0600A0E1 		mov	r0, r6
 2372 0160 0410A0E3 		mov	r1, #4
 2373 0164 0420D4E5 		ldrb	r2, [r4, #4]	@ zero_extendqisi2
 2374 0168 FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 2375              		.loc 1 337 0
 2376 016c 0400D4E5 		ldrb	r0, [r4, #4]	@ zero_extendqisi2
 2377 0170 0400C5E5 		strb	r0, [r5, #4]
 2378              	.L14:
 2379              	.LVL10:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 2380              		.loc 1 332 0
 2381 0174 0510D4E5 		ldrb	r1, [r4, #5]	@ zero_extendqisi2
 2382 0178 05C0D5E5 		ldrb	ip, [r5, #5]	@ zero_extendqisi2
 2383 017c 0C0051E1 		cmp	r1, ip
 2384 0180 0800000A 		beq	.L15
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 2385              		.loc 1 334 0
 2386 0184 0510A0E3 		mov	r1, #5
 2387 0188 0600A0E1 		mov	r0, r6
 2388 018c FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 2389              		.loc 1 335 0
 2390 0190 0520D4E5 		ldrb	r2, [r4, #5]	@ zero_extendqisi2
 2391 0194 0600A0E1 		mov	r0, r6
 2392 0198 0510A0E3 		mov	r1, #5
 2393 019c FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 2394              		.loc 1 337 0
 2395 01a0 0520D4E5 		ldrb	r2, [r4, #5]	@ zero_extendqisi2
 2396 01a4 0520C5E5 		strb	r2, [r5, #5]
 2397              	.L15:
 2398              	.LVL11:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 2399              		.loc 1 332 0
 2400 01a8 06E0D4E5 		ldrb	lr, [r4, #6]	@ zero_extendqisi2
 2401 01ac 0630D5E5 		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 2402 01b0 03005EE1 		cmp	lr, r3
 2403 01b4 0800000A 		beq	.L16
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 2404              		.loc 1 334 0
 2405 01b8 0610A0E3 		mov	r1, #6
 2406 01bc 0600A0E1 		mov	r0, r6
 2407 01c0 FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 2408              		.loc 1 335 0
 2409 01c4 0600A0E1 		mov	r0, r6
 2410 01c8 0610A0E3 		mov	r1, #6
 2411 01cc 0620D4E5 		ldrb	r2, [r4, #6]	@ zero_extendqisi2
 2412 01d0 FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 2413              		.loc 1 337 0
 2414 01d4 0600D4E5 		ldrb	r0, [r4, #6]	@ zero_extendqisi2
 2415 01d8 0600C5E5 		strb	r0, [r5, #6]
 2416              	.L16:
 2417              	.LVL12:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 2418              		.loc 1 332 0
 2419 01dc 0710D4E5 		ldrb	r1, [r4, #7]	@ zero_extendqisi2
 2420 01e0 07C0D5E5 		ldrb	ip, [r5, #7]	@ zero_extendqisi2
 2421 01e4 0C0051E1 		cmp	r1, ip
 2422 01e8 0800000A 		beq	.L17
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 2423              		.loc 1 334 0
 2424 01ec 0710A0E3 		mov	r1, #7
 2425 01f0 0600A0E1 		mov	r0, r6
 2426 01f4 FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 2427              		.loc 1 335 0
 2428 01f8 0720D4E5 		ldrb	r2, [r4, #7]	@ zero_extendqisi2
 2429 01fc 0600A0E1 		mov	r0, r6
 2430 0200 0710A0E3 		mov	r1, #7
 2431 0204 FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 2432              		.loc 1 337 0
 2433 0208 0720D4E5 		ldrb	r2, [r4, #7]	@ zero_extendqisi2
 2434 020c 0720C5E5 		strb	r2, [r5, #7]
 2435              	.L17:
 2436              	.LVL13:
 328:../jugada_por_botones.c **** 	for(i = 0; i < num_filas; i++)
 2437              		.loc 1 328 0
 2438 0210 016086E2 		add	r6, r6, #1
 2439              	.LVL14:
 2440 0214 080056E3 		cmp	r6, #8
 2441 0218 084084E2 		add	r4, r4, #8
 2442 021c 085085E2 		add	r5, r5, #8
 2443 0220 92FFFF1A 		bne	.L18
 341:../jugada_por_botones.c **** }
 2444              		.loc 1 341 0
 2445 0224 1CD04BE2 		sub	sp, fp, #28
 2446 0228 78689DE8 		ldmfd	sp, {r3, r4, r5, r6, fp, sp, lr}
 2447 022c 1EFF2FE1 		bx	lr
 2448              	.L21:
 2449              		.align	2
 2450              	.L20:
 2451 0230 04000000 		.word	.LANCHOR0+4
 2452              		.cfi_endproc
 2453              	.LFE12:
 2455              		.align	2
 2456              		.global	reiniciar_posicion_gris
 2458              	reiniciar_posicion_gris:
 2459              	.LFB11:
 304:../jugada_por_botones.c **** {
 2460              		.loc 1 304 0
 2461              		.cfi_startproc
 2462              		@ Function supports interworking.
 2463              		@ args = 0, pretend = 0, frame = 0
 2464              		@ frame_needed = 1, uses_anonymous_args = 0
 2465 0234 0DC0A0E1 		mov	ip, sp
 2466              	.LCFI4:
 2467              		.cfi_def_cfa_register 12
 2468 0238 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 305:../jugada_por_botones.c **** 	mi_fila = 0;
 2469              		.loc 1 305 0
 2470 023c F4E09FE5 		ldr	lr, .L39
 2471              		.cfi_offset 14, -8
 2472              		.cfi_offset 13, -12
 2473              		.cfi_offset 11, -16
 2474 0240 0020A0E3 		mov	r2, #0
 2475 0244 8420CEE5 		strb	r2, [lr, #132]
 306:../jugada_por_botones.c **** 	mi_columna = 0;
 2476              		.loc 1 306 0
 2477 0248 8520CEE5 		strb	r2, [lr, #133]
 2478              	.LVL15:
 304:../jugada_por_botones.c **** {
 2479              		.loc 1 304 0
 2480 024c 04B04CE2 		sub	fp, ip, #4
 2481              	.LCFI5:
 2482              		.cfi_def_cfa 11, 4
 306:../jugada_por_botones.c **** 	mi_columna = 0;
 2483              		.loc 1 306 0
 2484 0250 0230A0E1 		mov	r3, r2
 2485 0254 04108EE2 		add	r1, lr, #4
 2486              	.LVL16:
 2487              	.L23:
 313:../jugada_por_botones.c **** 			if(tablero_actual[i][j] == CASILLA_VACIA)
 2488              		.loc 1 313 0 discriminator 1
 2489 0258 00C0D1E5 		ldrb	ip, [r1, #0]	@ zero_extendqisi2
 2490 025c 00005CE3 		cmp	ip, #0
 2491 0260 0C00000A 		beq	.L25
 2492              	.LVL17:
 313:../jugada_por_botones.c **** 			if(tablero_actual[i][j] == CASILLA_VACIA)
 2493              		.loc 1 313 0 is_stmt 0
 2494 0264 0100D1E5 		ldrb	r0, [r1, #1]	@ zero_extendqisi2
 2495 0268 000050E3 		cmp	r0, #0
 2496 026c 1400000A 		beq	.L29
 2497              	.LVL18:
 2498 0270 0200D1E5 		ldrb	r0, [r1, #2]	@ zero_extendqisi2
 2499 0274 000050E3 		cmp	r0, #0
 2500 0278 1300000A 		beq	.L30
 2501              	.LVL19:
 2502 027c 0300D1E5 		ldrb	r0, [r1, #3]	@ zero_extendqisi2
 2503 0280 000050E3 		cmp	r0, #0
 2504 0284 1200000A 		beq	.L31
 2505              	.LVL20:
 2506 0288 0400D1E5 		ldrb	r0, [r1, #4]	@ zero_extendqisi2
 2507 028c 000050E3 		cmp	r0, #0
 2508 0290 1100001A 		bne	.L37
 311:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas && fin_bucle == 0; j++)
 2509              		.loc 1 311 0 is_stmt 1
 2510 0294 04C0A0E3 		mov	ip, #4
 2511              	.LVL21:
 2512              	.L25:
 306:../jugada_por_botones.c **** 	mi_columna = 0;
 2513              		.loc 1 306 0
 2514 0298 FF3002E2 		and	r3, r2, #255
 316:../jugada_por_botones.c **** 				mi_columna = j;
 2515              		.loc 1 316 0
 2516 029c FFC00CE2 		and	ip, ip, #255
 2517              	.LVL22:
 2518              	.L24:
 321:../jugada_por_botones.c **** 	pintar_ficha(mi_fila, mi_columna, FICHA_GRIS);
 2519              		.loc 1 321 0
 2520 02a0 0300A0E1 		mov	r0, r3
 2521 02a4 0C10A0E1 		mov	r1, ip
 2522 02a8 0320A0E3 		mov	r2, #3
 313:../jugada_por_botones.c **** 			if(tablero_actual[i][j] == CASILLA_VACIA)
 2523              		.loc 1 313 0
 2524 02ac 8430CEE5 		strb	r3, [lr, #132]
 2525 02b0 85C0CEE5 		strb	ip, [lr, #133]
 321:../jugada_por_botones.c **** 	pintar_ficha(mi_fila, mi_columna, FICHA_GRIS);
 2526              		.loc 1 321 0
 2527 02b4 FEFFFFEB 		bl	pintar_ficha
 322:../jugada_por_botones.c **** }	
 2528              		.loc 1 322 0
 2529 02b8 0CD04BE2 		sub	sp, fp, #12
 2530 02bc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2531 02c0 1EFF2FE1 		bx	lr
 2532              	.LVL23:
 2533              	.L29:
 311:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas && fin_bucle == 0; j++)
 2534              		.loc 1 311 0
 2535 02c4 01C0A0E3 		mov	ip, #1
 2536 02c8 F2FFFFEA 		b	.L25
 2537              	.LVL24:
 2538              	.L30:
 2539 02cc 02C0A0E3 		mov	ip, #2
 2540 02d0 F0FFFFEA 		b	.L25
 2541              	.LVL25:
 2542              	.L31:
 2543 02d4 03C0A0E3 		mov	ip, #3
 2544 02d8 EEFFFFEA 		b	.L25
 2545              	.LVL26:
 2546              	.L37:
 313:../jugada_por_botones.c **** 			if(tablero_actual[i][j] == CASILLA_VACIA)
 2547              		.loc 1 313 0
 2548 02dc 0500D1E5 		ldrb	r0, [r1, #5]	@ zero_extendqisi2
 2549 02e0 000050E3 		cmp	r0, #0
 2550 02e4 0700000A 		beq	.L33
 2551              	.LVL27:
 2552 02e8 0600D1E5 		ldrb	r0, [r1, #6]	@ zero_extendqisi2
 2553 02ec 000050E3 		cmp	r0, #0
 2554 02f0 0600000A 		beq	.L34
 2555              	.LVL28:
 2556 02f4 0700D1E5 		ldrb	r0, [r1, #7]	@ zero_extendqisi2
 2557 02f8 000050E3 		cmp	r0, #0
 2558 02fc 0500001A 		bne	.L38
 2559 0300 07C0A0E3 		mov	ip, #7
 2560 0304 E3FFFFEA 		b	.L25
 2561              	.LVL29:
 2562              	.L33:
 311:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas && fin_bucle == 0; j++)
 2563              		.loc 1 311 0
 2564 0308 05C0A0E3 		mov	ip, #5
 2565 030c E1FFFFEA 		b	.L25
 2566              	.LVL30:
 2567              	.L34:
 2568 0310 06C0A0E3 		mov	ip, #6
 2569 0314 DFFFFFEA 		b	.L25
 2570              	.LVL31:
 2571              	.L38:
 303:../jugada_por_botones.c **** void reiniciar_posicion_gris()
 2572              		.loc 1 303 0
 2573 0318 012082E2 		add	r2, r2, #1
 2574              	.LVL32:
 309:../jugada_por_botones.c **** 	for(i = 0; i < num_filas && fin_bucle == 0; i++)
 2575              		.loc 1 309 0
 2576 031c 070052E3 		cmp	r2, #7
 2577 0320 00C0A0C3 		movgt	ip, #0
 2578 0324 01C0A0D3 		movle	ip, #1
 2579 0328 00005CE3 		cmp	ip, #0
 2580 032c 081081E2 		add	r1, r1, #8
 2581 0330 C8FFFF1A 		bne	.L23
 2582 0334 D9FFFFEA 		b	.L24
 2583              	.L40:
 2584              		.align	2
 2585              	.L39:
 2586 0338 00000000 		.word	.LANCHOR0
 2587              		.cfi_endproc
 2588              	.LFE11:
 2590              		.align	2
 2591              		.global	inicializar_jugada_botones
 2593              	inicializar_jugada_botones:
 2594              	.LFB0:
  46:../jugada_por_botones.c **** {
 2595              		.loc 1 46 0
 2596              		.cfi_startproc
 2597              		@ Function supports interworking.
 2598              		@ args = 0, pretend = 0, frame = 0
 2599              		@ frame_needed = 1, uses_anonymous_args = 0
 2600 033c 0DC0A0E1 		mov	ip, sp
 2601              	.LCFI6:
 2602              		.cfi_def_cfa_register 12
 2603 0340 30D82DE9 		stmfd	sp!, {r4, r5, fp, ip, lr, pc}
  48:../jugada_por_botones.c **** 	haciendo_DMA = 1;
 2604              		.loc 1 48 0
 2605 0344 60409FE5 		ldr	r4, .L42
 2606              		.cfi_offset 14, -8
 2607              		.cfi_offset 13, -12
 2608              		.cfi_offset 11, -16
 2609              		.cfi_offset 5, -20
 2610              		.cfi_offset 4, -24
  46:../jugada_por_botones.c **** {
 2611              		.loc 1 46 0
 2612 0348 04B04CE2 		sub	fp, ip, #4
 2613              	.LCFI7:
 2614              		.cfi_def_cfa 11, 4
  47:../jugada_por_botones.c **** 	reversi8_inicializar();
 2615              		.loc 1 47 0
 2616 034c FEFFFFEB 		bl	reversi8_inicializar
  49:../jugada_por_botones.c **** 	mi_fila = 0;
 2617              		.loc 1 49 0
 2618 0350 0050A0E3 		mov	r5, #0
  48:../jugada_por_botones.c **** 	haciendo_DMA = 1;
 2619              		.loc 1 48 0
 2620 0354 0130A0E3 		mov	r3, #1
  60:../jugada_por_botones.c **** 	obtener_tablero(tablero_actual);
 2621              		.loc 1 60 0
 2622 0358 040084E2 		add	r0, r4, #4
  48:../jugada_por_botones.c **** 	haciendo_DMA = 1;
 2623              		.loc 1 48 0
 2624 035c 883084E5 		str	r3, [r4, #136]
  49:../jugada_por_botones.c **** 	mi_fila = 0;
 2625              		.loc 1 49 0
 2626 0360 8450C4E5 		strb	r5, [r4, #132]
  50:../jugada_por_botones.c **** 	mi_columna = 0;
 2627              		.loc 1 50 0
 2628 0364 8550C4E5 		strb	r5, [r4, #133]
  51:../jugada_por_botones.c **** 	ev_bot_izq = 0;
 2629              		.loc 1 51 0
 2630 0368 8C5084E5 		str	r5, [r4, #140]
  52:../jugada_por_botones.c **** 	ev_bot_der = 0;
 2631              		.loc 1 52 0
 2632 036c 905084E5 		str	r5, [r4, #144]
  53:../jugada_por_botones.c **** 	ev_tp = 0;
 2633              		.loc 1 53 0
 2634 0370 945084E5 		str	r5, [r4, #148]
  54:../jugada_por_botones.c **** 	ev_timer = 0;
 2635              		.loc 1 54 0
 2636 0374 985084E5 		str	r5, [r4, #152]
  55:../jugada_por_botones.c **** 	final = no_fin;
 2637              		.loc 1 55 0
 2638 0378 0050C4E5 		strb	r5, [r4, #0]
  56:../jugada_por_botones.c **** 	tiempo_calc = 0;
 2639              		.loc 1 56 0
 2640 037c 9C5084E5 		str	r5, [r4, #156]
  57:../jugada_por_botones.c **** 	tiempo_total = 0;
 2641              		.loc 1 57 0
 2642 0380 A05084E5 		str	r5, [r4, #160]
  58:../jugada_por_botones.c **** 	tiempo_pv = 0;
 2643              		.loc 1 58 0
 2644 0384 A45084E5 		str	r5, [r4, #164]
  59:../jugada_por_botones.c **** 	veces_pv = 0;
 2645              		.loc 1 59 0
 2646 0388 A85084E5 		str	r5, [r4, #168]
  60:../jugada_por_botones.c **** 	obtener_tablero(tablero_actual);
 2647              		.loc 1 60 0
 2648 038c FEFFFFEB 		bl	obtener_tablero
  61:../jugada_por_botones.c **** 	obtener_tablero(tablero_anterior);
 2649              		.loc 1 61 0
 2650 0390 440084E2 		add	r0, r4, #68
 2651 0394 FEFFFFEB 		bl	obtener_tablero
  62:../jugada_por_botones.c **** 	jugada_botones = Reglas;
 2652              		.loc 1 62 0
 2653 0398 AC50C4E5 		strb	r5, [r4, #172]
  63:../jugada_por_botones.c **** 	pintar_reglas();
 2654              		.loc 1 63 0
 2655 039c FEFFFFEB 		bl	pintar_reglas
  64:../jugada_por_botones.c **** }
 2656              		.loc 1 64 0
 2657 03a0 14D04BE2 		sub	sp, fp, #20
 2658 03a4 30689DE8 		ldmfd	sp, {r4, r5, fp, sp, lr}
 2659 03a8 1EFF2FE1 		bx	lr
 2660              	.L43:
 2661              		.align	2
 2662              	.L42:
 2663 03ac 00000000 		.word	.LANCHOR0
 2664              		.cfi_endproc
 2665              	.LFE0:
 2667              		.align	2
 2668              		.global	calcular_mov_gris_der
 2670              	calcular_mov_gris_der:
 2671              	.LFB1:
  68:../jugada_por_botones.c **** {
 2672              		.loc 1 68 0
 2673              		.cfi_startproc
 2674              		@ Function supports interworking.
 2675              		@ args = 0, pretend = 0, frame = 16
 2676              		@ frame_needed = 1, uses_anonymous_args = 0
 2677 03b0 0DC0A0E1 		mov	ip, sp
 2678              	.LCFI8:
 2679              		.cfi_def_cfa_register 12
 2680 03b4 30D82DE9 		stmfd	sp!, {r4, r5, fp, ip, lr, pc}
 2681 03b8 04B04CE2 		sub	fp, ip, #4
 2682              		.cfi_offset 14, -8
 2683              		.cfi_offset 13, -12
 2684              		.cfi_offset 11, -16
 2685              		.cfi_offset 5, -20
 2686              		.cfi_offset 4, -24
 2687              	.LCFI9:
 2688              		.cfi_def_cfa 11, 4
 2689 03bc 10D04DE2 		sub	sp, sp, #16
  69:../jugada_por_botones.c **** 	if((contar_blancas() + contar_negras()) == num_filas * num_columnas)	//Si no hay que terminar la p
 2690              		.loc 1 69 0
 2691 03c0 FEFFFFEB 		bl	contar_blancas
 2692 03c4 0040A0E1 		mov	r4, r0
 2693 03c8 FEFFFFEB 		bl	contar_negras
 2694 03cc 040080E0 		add	r0, r0, r4
 2695 03d0 400050E3 		cmp	r0, #64
 2696 03d4 5200000A 		beq	.L63
 2697              	.LBB2:
  75:../jugada_por_botones.c **** 		volatile int aux = mi_fila;
 2698              		.loc 1 75 0
 2699 03d8 4C419FE5 		ldr	r4, .L67
 2700 03dc 8430D4E5 		ldrb	r3, [r4, #132]	@ zero_extendqisi2
 2701              	.LVL33:
  76:../jugada_por_botones.c **** 		volatile int aux2 = mi_columna;
 2702              		.loc 1 76 0
 2703 03e0 8510D4E5 		ldrb	r1, [r4, #133]	@ zero_extendqisi2
  77:../jugada_por_botones.c **** 		mi_fila = ((mi_fila + 1) % 8);
 2704              		.loc 1 77 0
 2705 03e4 012083E2 		add	r2, r3, #1
 2706              	.LVL34:
 2707 03e8 070002E2 		and	r0, r2, #7
  75:../jugada_por_botones.c **** 		volatile int aux = mi_fila;
 2708              		.loc 1 75 0
 2709 03ec 18300BE5 		str	r3, [fp, #-24]
  77:../jugada_por_botones.c **** 		mi_fila = ((mi_fila + 1) % 8);
 2710              		.loc 1 77 0
 2711 03f0 8400C4E5 		strb	r0, [r4, #132]
  76:../jugada_por_botones.c **** 		volatile int aux2 = mi_columna;
 2712              		.loc 1 76 0
 2713 03f4 1C100BE5 		str	r1, [fp, #-28]
 2714              	.LVL35:
  78:../jugada_por_botones.c **** 		while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_co
 2715              		.loc 1 78 0
 2716 03f8 0450A0E1 		mov	r5, r4
 2717 03fc 0C0000EA 		b	.L47
 2718              	.LVL36:
 2719              	.L65:
  78:../jugada_por_botones.c **** 		while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_co
 2720              		.loc 1 78 0 is_stmt 0 discriminator 2
 2721 0400 8400D4E5 		ldrb	r0, [r4, #132]	@ zero_extendqisi2
 2722 0404 8510D4E5 		ldrb	r1, [r4, #133]	@ zero_extendqisi2
 2723 0408 FEFFFFEB 		bl	obtener_ficha_en
 2724 040c 020050E3 		cmp	r0, #2
 2725 0410 0C00001A 		bne	.L64
  78:../jugada_por_botones.c **** 		while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_co
 2726              		.loc 1 78 0 discriminator 1
 2727 0414 8400D5E5 		ldrb	r0, [r5, #132]	@ zero_extendqisi2
 2728 0418 18E01BE5 		ldr	lr, [fp, #-24]
 2729 041c 0E0050E1 		cmp	r0, lr
 2730 0420 0A00000A 		beq	.L50
 2731              	.L51:
  80:../jugada_por_botones.c **** 			mi_fila = ((mi_fila + 1) % 8);			//8 porque hay 8 columnas en el tablero, [0-7], 0x7 = num_colum
 2732              		.loc 1 80 0 is_stmt 1
 2733 0424 01C080E2 		add	ip, r0, #1
 2734 0428 07000CE2 		and	r0, ip, #7
 2735 042c 8510D4E5 		ldrb	r1, [r4, #133]	@ zero_extendqisi2
 2736 0430 8400C4E5 		strb	r0, [r4, #132]
 2737              	.L47:
  78:../jugada_por_botones.c **** 		while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_co
 2738              		.loc 1 78 0 discriminator 1
 2739 0434 FEFFFFEB 		bl	obtener_ficha_en
 2740 0438 010050E3 		cmp	r0, #1
 2741 043c EFFFFF1A 		bne	.L65
  78:../jugada_por_botones.c **** 		while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_co
 2742              		.loc 1 78 0 is_stmt 0
 2743 0440 8400D4E5 		ldrb	r0, [r4, #132]	@ zero_extendqisi2
 2744 0444 F6FFFFEA 		b	.L51
 2745              	.L64:
 2746 0448 DC109FE5 		ldr	r1, .L67
 2747 044c 8400D1E5 		ldrb	r0, [r1, #132]	@ zero_extendqisi2
 2748              	.L50:
  82:../jugada_por_botones.c **** 		if(mi_fila == aux)							//Si la ficha gris se queda atrapada
 2749              		.loc 1 82 0 is_stmt 1
 2750 0450 18301BE5 		ldr	r3, [fp, #-24]
 2751 0454 000053E1 		cmp	r3, r0
 2752 0458 0D00000A 		beq	.L66
 2753              	.LVL37:
 2754              	.L58:
  98:../jugada_por_botones.c **** 		while(haciendo_DMA != 0)
 2755              		.loc 1 98 0 discriminator 1
 2756 045c 880094E5 		ldr	r0, [r4, #136]
 2757 0460 000050E3 		cmp	r0, #0
 2758 0464 C0109FE5 		ldr	r1, .L67
 2759 0468 FBFFFF1A 		bne	.L58
 101:../jugada_por_botones.c **** 		haciendo_DMA = 1;
 2760              		.loc 1 101 0
 2761 046c 01C0A0E3 		mov	ip, #1
 2762 0470 88C081E5 		str	ip, [r1, #136]
 103:../jugada_por_botones.c **** 		mover_gris(mi_fila, mi_columna, aux, aux2);		//Mover en la pantalla
 2763              		.loc 1 103 0
 2764 0474 18201BE5 		ldr	r2, [fp, #-24]
 2765 0478 8400D1E5 		ldrb	r0, [r1, #132]	@ zero_extendqisi2
 2766 047c 1C301BE5 		ldr	r3, [fp, #-28]
 2767 0480 8510D1E5 		ldrb	r1, [r1, #133]	@ zero_extendqisi2
 2768 0484 FEFFFFEB 		bl	mover_gris
 2769              	.L44:
 2770              	.LBE2:
 105:../jugada_por_botones.c **** }
 2771              		.loc 1 105 0
 2772 0488 14D04BE2 		sub	sp, fp, #20
 2773 048c 30689DE8 		ldmfd	sp, {r4, r5, fp, sp, lr}
 2774 0490 1EFF2FE1 		bx	lr
 2775              	.LVL38:
 2776              	.L66:
 2777              	.LBB4:
 2778              	.LBB3:
  86:../jugada_por_botones.c **** 			for(i = 0; i < num_filas; i++)			//se recorre el tablero buscando otra posición libre y
 2779              		.loc 1 86 0
 2780 0494 0000A0E3 		mov	r0, #0
 2781 0498 20000BE5 		str	r0, [fp, #-32]
 2782              	.LVL39:
 2783 049c 20201BE5 		ldr	r2, [fp, #-32]
 2784 04a0 070052E3 		cmp	r2, #7
 2785 04a4 ECFFFFCA 		bgt	.L58
 2786 04a8 84C0D4E5 		ldrb	ip, [r4, #132]	@ zero_extendqisi2
 2787 04ac 8510D4E5 		ldrb	r1, [r4, #133]	@ zero_extendqisi2
 2788              	.LVL40:
 2789              	.L56:
  88:../jugada_por_botones.c **** 				for(j = 0; j < num_columnas; j++)
 2790              		.loc 1 88 0
 2791 04b0 24000BE5 		str	r0, [fp, #-36]
 2792 04b4 24E01BE5 		ldr	lr, [fp, #-36]
 2793 04b8 07005EE3 		cmp	lr, #7
 2794 04bc 0F0000CA 		bgt	.L53
 2795              	.L59:
  90:../jugada_por_botones.c **** 					if(tablero_actual[i][j] == CASILLA_VACIA)
 2796              		.loc 1 90 0
 2797 04c0 20E01BE5 		ldr	lr, [fp, #-32]
 2798 04c4 24201BE5 		ldr	r2, [fp, #-36]
 2799 04c8 8E3184E0 		add	r3, r4, lr, asl #3
 2800 04cc 02E083E0 		add	lr, r3, r2
 2801 04d0 0430DEE5 		ldrb	r3, [lr, #4]	@ zero_extendqisi2
 2802 04d4 000053E3 		cmp	r3, #0
  92:../jugada_por_botones.c **** 						mi_fila = i;
 2803              		.loc 1 92 0
 2804 04d8 20201B05 		ldreq	r2, [fp, #-32]
  93:../jugada_por_botones.c **** 						mi_columna = j;
 2805              		.loc 1 93 0
 2806 04dc 24301B05 		ldreq	r3, [fp, #-36]
  88:../jugada_por_botones.c **** 				for(j = 0; j < num_columnas; j++)
 2807              		.loc 1 88 0
 2808 04e0 24E01BE5 		ldr	lr, [fp, #-36]
  92:../jugada_por_botones.c **** 						mi_fila = i;
 2809              		.loc 1 92 0
 2810 04e4 02C0A001 		moveq	ip, r2
  88:../jugada_por_botones.c **** 				for(j = 0; j < num_columnas; j++)
 2811              		.loc 1 88 0
 2812 04e8 01208EE2 		add	r2, lr, #1
 2813              	.LVL41:
 2814 04ec 24200BE5 		str	r2, [fp, #-36]
 2815              	.LVL42:
  93:../jugada_por_botones.c **** 						mi_columna = j;
 2816              		.loc 1 93 0
 2817 04f0 0310A001 		moveq	r1, r3
  88:../jugada_por_botones.c **** 				for(j = 0; j < num_columnas; j++)
 2818              		.loc 1 88 0
 2819 04f4 24301BE5 		ldr	r3, [fp, #-36]
 2820 04f8 070053E3 		cmp	r3, #7
 2821 04fc EFFFFFDA 		ble	.L59
 2822              	.L53:
  86:../jugada_por_botones.c **** 			for(i = 0; i < num_filas; i++)			//se recorre el tablero buscando otra posición libre y
 2823              		.loc 1 86 0
 2824 0500 20E01BE5 		ldr	lr, [fp, #-32]
 2825 0504 01308EE2 		add	r3, lr, #1
 2826              	.LVL43:
 2827 0508 20300BE5 		str	r3, [fp, #-32]
 2828              	.LVL44:
 2829 050c 20201BE5 		ldr	r2, [fp, #-32]
 2830              	.LVL45:
 2831 0510 070052E3 		cmp	r2, #7
 2832 0514 E5FFFFDA 		ble	.L56
 2833 0518 84C0C4E5 		strb	ip, [r4, #132]
 2834 051c 8510C4E5 		strb	r1, [r4, #133]
 2835 0520 CDFFFFEA 		b	.L58
 2836              	.LVL46:
 2837              	.L63:
 2838              	.LBE3:
 2839              	.LBE4:
 2840              	.LBB5:
  71:../jugada_por_botones.c **** 		contar_fichas_final();
 2841              		.loc 1 71 0
 2842 0524 FEFFFFEB 		bl	contar_fichas_final
 2843 0528 D6FFFFEA 		b	.L44
 2844              	.L68:
 2845              		.align	2
 2846              	.L67:
 2847 052c 00000000 		.word	.LANCHOR0
 2848              	.LBE5:
 2849              		.cfi_endproc
 2850              	.LFE1:
 2852              		.align	2
 2853              		.global	calcular_mov_gris_izq
 2855              	calcular_mov_gris_izq:
 2856              	.LFB2:
 108:../jugada_por_botones.c **** {
 2857              		.loc 1 108 0
 2858              		.cfi_startproc
 2859              		@ Function supports interworking.
 2860              		@ args = 0, pretend = 0, frame = 16
 2861              		@ frame_needed = 1, uses_anonymous_args = 0
 2862 0530 0DC0A0E1 		mov	ip, sp
 2863              	.LCFI10:
 2864              		.cfi_def_cfa_register 12
 2865 0534 30D82DE9 		stmfd	sp!, {r4, r5, fp, ip, lr, pc}
 2866 0538 04B04CE2 		sub	fp, ip, #4
 2867              		.cfi_offset 14, -8
 2868              		.cfi_offset 13, -12
 2869              		.cfi_offset 11, -16
 2870              		.cfi_offset 5, -20
 2871              		.cfi_offset 4, -24
 2872              	.LCFI11:
 2873              		.cfi_def_cfa 11, 4
 2874 053c 10D04DE2 		sub	sp, sp, #16
 109:../jugada_por_botones.c **** 	if((contar_blancas() + contar_negras()) == num_filas * num_columnas)	//Si no hay que terminar la p
 2875              		.loc 1 109 0
 2876 0540 FEFFFFEB 		bl	contar_blancas
 2877 0544 0040A0E1 		mov	r4, r0
 2878 0548 FEFFFFEB 		bl	contar_negras
 2879 054c 040080E0 		add	r0, r0, r4
 2880 0550 400050E3 		cmp	r0, #64
 2881 0554 5200000A 		beq	.L88
 2882              	.LBB6:
 115:../jugada_por_botones.c **** 		volatile int aux = mi_columna;
 2883              		.loc 1 115 0
 2884 0558 4C419FE5 		ldr	r4, .L92
 2885 055c 8530D4E5 		ldrb	r3, [r4, #133]	@ zero_extendqisi2
 2886              	.LVL47:
 116:../jugada_por_botones.c **** 		volatile int aux2 = mi_fila;
 2887              		.loc 1 116 0
 2888 0560 8400D4E5 		ldrb	r0, [r4, #132]	@ zero_extendqisi2
 117:../jugada_por_botones.c **** 		mi_columna = ((mi_columna + 1) % 8);
 2889              		.loc 1 117 0
 2890 0564 011083E2 		add	r1, r3, #1
 2891              	.LVL48:
 2892 0568 071001E2 		and	r1, r1, #7
 115:../jugada_por_botones.c **** 		volatile int aux = mi_columna;
 2893              		.loc 1 115 0
 2894 056c 18300BE5 		str	r3, [fp, #-24]
 117:../jugada_por_botones.c **** 		mi_columna = ((mi_columna + 1) % 8);
 2895              		.loc 1 117 0
 2896 0570 8510C4E5 		strb	r1, [r4, #133]
 116:../jugada_por_botones.c **** 		volatile int aux2 = mi_fila;
 2897              		.loc 1 116 0
 2898 0574 1C000BE5 		str	r0, [fp, #-28]
 2899              	.LVL49:
 118:../jugada_por_botones.c **** 		while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_co
 2900              		.loc 1 118 0
 2901 0578 0450A0E1 		mov	r5, r4
 2902 057c 0C0000EA 		b	.L72
 2903              	.LVL50:
 2904              	.L90:
 118:../jugada_por_botones.c **** 		while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_co
 2905              		.loc 1 118 0 is_stmt 0 discriminator 2
 2906 0580 8400D4E5 		ldrb	r0, [r4, #132]	@ zero_extendqisi2
 2907 0584 8510D4E5 		ldrb	r1, [r4, #133]	@ zero_extendqisi2
 2908 0588 FEFFFFEB 		bl	obtener_ficha_en
 2909 058c 020050E3 		cmp	r0, #2
 2910 0590 0C00001A 		bne	.L89
 118:../jugada_por_botones.c **** 		while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_co
 2911              		.loc 1 118 0 discriminator 1
 2912 0594 8510D5E5 		ldrb	r1, [r5, #133]	@ zero_extendqisi2
 2913 0598 18E01BE5 		ldr	lr, [fp, #-24]
 2914 059c 0E0051E1 		cmp	r1, lr
 2915 05a0 0A00000A 		beq	.L75
 2916              	.L76:
 120:../jugada_por_botones.c **** 			mi_columna = ((mi_columna + 1) % 8);		//8 porque hay 8 columnas en el tablero, [0-7], 0x7 = num_
 2917              		.loc 1 120 0 is_stmt 1
 2918 05a4 012081E2 		add	r2, r1, #1
 2919 05a8 071002E2 		and	r1, r2, #7
 2920 05ac 8400D4E5 		ldrb	r0, [r4, #132]	@ zero_extendqisi2
 2921 05b0 8510C4E5 		strb	r1, [r4, #133]
 2922              	.L72:
 118:../jugada_por_botones.c **** 		while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_co
 2923              		.loc 1 118 0 discriminator 1
 2924 05b4 FEFFFFEB 		bl	obtener_ficha_en
 2925 05b8 010050E3 		cmp	r0, #1
 2926 05bc EFFFFF1A 		bne	.L90
 118:../jugada_por_botones.c **** 		while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_co
 2927              		.loc 1 118 0 is_stmt 0
 2928 05c0 8510D4E5 		ldrb	r1, [r4, #133]	@ zero_extendqisi2
 2929 05c4 F6FFFFEA 		b	.L76
 2930              	.L89:
 2931 05c8 DCC09FE5 		ldr	ip, .L92
 2932 05cc 8510DCE5 		ldrb	r1, [ip, #133]	@ zero_extendqisi2
 2933              	.L75:
 122:../jugada_por_botones.c **** 		if(mi_columna == aux)							//Si la ficha gris se queda atrapada
 2934              		.loc 1 122 0 is_stmt 1
 2935 05d0 18001BE5 		ldr	r0, [fp, #-24]
 2936 05d4 010050E1 		cmp	r0, r1
 2937 05d8 0D00000A 		beq	.L91
 2938              	.LVL51:
 2939              	.L83:
 139:../jugada_por_botones.c **** 		while(haciendo_DMA != 0)
 2940              		.loc 1 139 0 discriminator 1
 2941 05dc 881094E5 		ldr	r1, [r4, #136]
 2942 05e0 000051E3 		cmp	r1, #0
 2943 05e4 C0109FE5 		ldr	r1, .L92
 2944 05e8 FBFFFF1A 		bne	.L83
 142:../jugada_por_botones.c **** 		haciendo_DMA = 1;
 2945              		.loc 1 142 0
 2946 05ec 01C0A0E3 		mov	ip, #1
 2947 05f0 88C081E5 		str	ip, [r1, #136]
 143:../jugada_por_botones.c **** 		mover_gris(mi_fila, mi_columna, aux2, aux);	//Mover en la pantalla
 2948              		.loc 1 143 0
 2949 05f4 1C201BE5 		ldr	r2, [fp, #-28]
 2950 05f8 8400D1E5 		ldrb	r0, [r1, #132]	@ zero_extendqisi2
 2951 05fc 18301BE5 		ldr	r3, [fp, #-24]
 2952 0600 8510D1E5 		ldrb	r1, [r1, #133]	@ zero_extendqisi2
 2953 0604 FEFFFFEB 		bl	mover_gris
 2954              	.L69:
 2955              	.LBE6:
 145:../jugada_por_botones.c **** }
 2956              		.loc 1 145 0
 2957 0608 14D04BE2 		sub	sp, fp, #20
 2958 060c 30689DE8 		ldmfd	sp, {r4, r5, fp, sp, lr}
 2959 0610 1EFF2FE1 		bx	lr
 2960              	.LVL52:
 2961              	.L91:
 2962              	.LBB8:
 2963              	.LBB7:
 126:../jugada_por_botones.c **** 			for(i = 0; i < num_filas; i++)			//se recorre el tablero buscando otra posición libre y
 2964              		.loc 1 126 0
 2965 0614 0000A0E3 		mov	r0, #0
 2966 0618 20000BE5 		str	r0, [fp, #-32]
 2967              	.LVL53:
 2968 061c 20301BE5 		ldr	r3, [fp, #-32]
 2969 0620 070053E3 		cmp	r3, #7
 2970 0624 ECFFFFCA 		bgt	.L83
 2971 0628 85C0D4E5 		ldrb	ip, [r4, #133]	@ zero_extendqisi2
 2972 062c 8410D4E5 		ldrb	r1, [r4, #132]	@ zero_extendqisi2
 2973              	.LVL54:
 2974              	.L81:
 128:../jugada_por_botones.c **** 				for(j = 0; j < num_columnas; j++)
 2975              		.loc 1 128 0
 2976 0630 24000BE5 		str	r0, [fp, #-36]
 2977 0634 24201BE5 		ldr	r2, [fp, #-36]
 2978 0638 070052E3 		cmp	r2, #7
 2979 063c 0F0000CA 		bgt	.L78
 2980              	.L84:
 130:../jugada_por_botones.c **** 					if(tablero_actual[i][j] == CASILLA_VACIA)
 2981              		.loc 1 130 0
 2982 0640 20301BE5 		ldr	r3, [fp, #-32]
 2983 0644 24201BE5 		ldr	r2, [fp, #-36]
 2984 0648 83E184E0 		add	lr, r4, r3, asl #3
 2985 064c 02308EE0 		add	r3, lr, r2
 2986 0650 04E0D3E5 		ldrb	lr, [r3, #4]	@ zero_extendqisi2
 2987 0654 00005EE3 		cmp	lr, #0
 132:../jugada_por_botones.c **** 						mi_fila = i;
 2988              		.loc 1 132 0
 2989 0658 20201B05 		ldreq	r2, [fp, #-32]
 133:../jugada_por_botones.c **** 						mi_columna = j;
 2990              		.loc 1 133 0
 2991 065c 24E01B05 		ldreq	lr, [fp, #-36]
 132:../jugada_por_botones.c **** 						mi_fila = i;
 2992              		.loc 1 132 0
 2993 0660 0210A001 		moveq	r1, r2
 128:../jugada_por_botones.c **** 				for(j = 0; j < num_columnas; j++)
 2994              		.loc 1 128 0
 2995 0664 24201BE5 		ldr	r2, [fp, #-36]
 2996 0668 013082E2 		add	r3, r2, #1
 2997              	.LVL55:
 2998 066c 24300BE5 		str	r3, [fp, #-36]
 2999              	.LVL56:
 133:../jugada_por_botones.c **** 						mi_columna = j;
 3000              		.loc 1 133 0
 3001 0670 0EC0A001 		moveq	ip, lr
 128:../jugada_por_botones.c **** 				for(j = 0; j < num_columnas; j++)
 3002              		.loc 1 128 0
 3003 0674 24E01BE5 		ldr	lr, [fp, #-36]
 3004 0678 07005EE3 		cmp	lr, #7
 3005 067c EFFFFFDA 		ble	.L84
 3006              	.L78:
 126:../jugada_por_botones.c **** 			for(i = 0; i < num_filas; i++)			//se recorre el tablero buscando otra posición libre y
 3007              		.loc 1 126 0
 3008 0680 20301BE5 		ldr	r3, [fp, #-32]
 3009              	.LVL57:
 3010 0684 01E083E2 		add	lr, r3, #1
 3011              	.LVL58:
 3012 0688 20E00BE5 		str	lr, [fp, #-32]
 3013              	.LVL59:
 3014 068c 20201BE5 		ldr	r2, [fp, #-32]
 3015 0690 070052E3 		cmp	r2, #7
 3016 0694 E5FFFFDA 		ble	.L81
 3017 0698 85C0C4E5 		strb	ip, [r4, #133]
 3018 069c 8410C4E5 		strb	r1, [r4, #132]
 3019 06a0 CDFFFFEA 		b	.L83
 3020              	.LVL60:
 3021              	.L88:
 3022              	.LBE7:
 3023              	.LBE8:
 3024              	.LBB9:
 111:../jugada_por_botones.c **** 		contar_fichas_final();
 3025              		.loc 1 111 0
 3026 06a4 FEFFFFEB 		bl	contar_fichas_final
 3027 06a8 D6FFFFEA 		b	.L69
 3028              	.L93:
 3029              		.align	2
 3030              	.L92:
 3031 06ac 00000000 		.word	.LANCHOR0
 3032              	.LBE9:
 3033              		.cfi_endproc
 3034              	.LFE2:
 3036              		.align	2
 3037              		.global	procesar_jugada
 3039              	procesar_jugada:
 3040              	.LFB3:
 149:../jugada_por_botones.c **** {
 3041              		.loc 1 149 0
 3042              		.cfi_startproc
 3043              		@ Function supports interworking.
 3044              		@ args = 0, pretend = 0, frame = 0
 3045              		@ frame_needed = 1, uses_anonymous_args = 0
 3046 06b0 0DC0A0E1 		mov	ip, sp
 3047              	.LCFI12:
 3048              		.cfi_def_cfa_register 12
 3049 06b4 30D82DE9 		stmfd	sp!, {r4, r5, fp, ip, lr, pc}
 3050 06b8 04B04CE2 		sub	fp, ip, #4
 3051              		.cfi_offset 14, -8
 3052              		.cfi_offset 13, -12
 3053              		.cfi_offset 11, -16
 3054              		.cfi_offset 5, -20
 3055              		.cfi_offset 4, -24
 3056              	.LCFI13:
 3057              		.cfi_def_cfa 11, 4
 150:../jugada_por_botones.c **** 	unsigned int delta1 = timer2_leer();
 3058              		.loc 1 150 0
 3059 06bc FEFFFFEB 		bl	timer2_leer
 151:../jugada_por_botones.c **** 	reversi_procesar(mi_fila, mi_columna);		//Calcula la jugada de la IA y calcula tiempos de procesam
 3060              		.loc 1 151 0
 3061 06c0 E0409FE5 		ldr	r4, .L98
 150:../jugada_por_botones.c **** 	unsigned int delta1 = timer2_leer();
 3062              		.loc 1 150 0
 3063 06c4 0050A0E1 		mov	r5, r0
 3064              	.LVL61:
 151:../jugada_por_botones.c **** 	reversi_procesar(mi_fila, mi_columna);		//Calcula la jugada de la IA y calcula tiempos de procesam
 3065              		.loc 1 151 0
 3066 06c8 8510D4E5 		ldrb	r1, [r4, #133]	@ zero_extendqisi2
 3067 06cc 8400D4E5 		ldrb	r0, [r4, #132]	@ zero_extendqisi2
 3068              	.LVL62:
 3069 06d0 FEFFFFEB 		bl	reversi_procesar
 152:../jugada_por_botones.c **** 	unsigned int delta2 = timer2_leer();
 3070              		.loc 1 152 0
 3071 06d4 FEFFFFEB 		bl	timer2_leer
 3072              	.LVL63:
 153:../jugada_por_botones.c **** 	tiempo_calc += (delta2-delta1);
 3073              		.loc 1 153 0
 3074 06d8 9C1094E5 		ldr	r1, [r4, #156]
 3075 06dc 013080E0 		add	r3, r0, r1
 3076 06e0 035065E0 		rsb	r5, r5, r3
 3077              	.LVL64:
 3078 06e4 9C5084E5 		str	r5, [r4, #156]
 154:../jugada_por_botones.c **** 	if(obtener_jugada_valida() == 1)
 3079              		.loc 1 154 0
 3080 06e8 FEFFFFEB 		bl	obtener_jugada_valida
 3081              	.LVL65:
 3082 06ec 010050E3 		cmp	r0, #1
 3083 06f0 0050A0E1 		mov	r5, r0
 3084 06f4 1500000A 		beq	.L97
 168:../jugada_por_botones.c **** 		tiempo_pv += reversi_t_pv();
 3085              		.loc 1 168 0
 3086 06f8 FEFFFFEB 		bl	reversi_t_pv
 3087 06fc A41094E5 		ldr	r1, [r4, #164]
 3088 0700 010080E0 		add	r0, r0, r1
 3089 0704 A40084E5 		str	r0, [r4, #164]
 169:../jugada_por_botones.c **** 		veces_pv += reversi_veces_pv();
 3090              		.loc 1 169 0
 3091 0708 FEFFFFEB 		bl	reversi_veces_pv
 3092 070c A83094E5 		ldr	r3, [r4, #168]
 170:../jugada_por_botones.c **** 		pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 3093              		.loc 1 170 0
 3094 0710 A02094E5 		ldr	r2, [r4, #160]
 169:../jugada_por_botones.c **** 		veces_pv += reversi_veces_pv();
 3095              		.loc 1 169 0
 3096 0714 03C080E0 		add	ip, r0, r3
 170:../jugada_por_botones.c **** 		pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 3097              		.loc 1 170 0
 3098 0718 0C30A0E1 		mov	r3, ip
 3099 071c 0200A0E1 		mov	r0, r2
 3100 0720 9C1094E5 		ldr	r1, [r4, #156]
 3101 0724 A42094E5 		ldr	r2, [r4, #164]
 169:../jugada_por_botones.c **** 		veces_pv += reversi_veces_pv();
 3102              		.loc 1 169 0
 3103 0728 A8C084E5 		str	ip, [r4, #168]
 170:../jugada_por_botones.c **** 		pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 3104              		.loc 1 170 0
 3105 072c FEFFFFEB 		bl	pintar_profiling
 171:../jugada_por_botones.c **** 		haciendo_DMA = 1;
 3106              		.loc 1 171 0
 3107 0730 01C0A0E3 		mov	ip, #1
 3108 0734 88C084E5 		str	ip, [r4, #136]
 172:../jugada_por_botones.c **** 		iniciar_DMA();
 3109              		.loc 1 172 0
 3110 0738 FEFFFFEB 		bl	iniciar_DMA
 3111              	.L96:
 174:../jugada_por_botones.c **** 	final = obtener_fin();
 3112              		.loc 1 174 0
 3113 073c FEFFFFEB 		bl	obtener_fin
 3114 0740 0000C4E5 		strb	r0, [r4, #0]
 175:../jugada_por_botones.c **** }
 3115              		.loc 1 175 0
 3116 0744 14D04BE2 		sub	sp, fp, #20
 3117 0748 30689DE8 		ldmfd	sp, {r4, r5, fp, sp, lr}
 3118 074c 1EFF2FE1 		bx	lr
 3119              	.L97:
 3120              	.LBB10:
 156:../jugada_por_botones.c **** 		borrar_ficha(mi_fila, mi_columna);
 3121              		.loc 1 156 0
 3122 0750 8510D4E5 		ldrb	r1, [r4, #133]	@ zero_extendqisi2
 3123 0754 8400D4E5 		ldrb	r0, [r4, #132]	@ zero_extendqisi2
 3124 0758 FEFFFFEB 		bl	borrar_ficha
 157:../jugada_por_botones.c **** 		actualizar_movimientos_pantalla();		//Pone la ficha que hemos jugado, la ficha de la cpu, y volte
 3125              		.loc 1 157 0
 3126 075c FEFFFFEB 		bl	actualizar_movimientos_pantalla
 158:../jugada_por_botones.c **** 		reiniciar_posicion_gris();				//Devuelve la ficha gris a 0,0, y si está ocupada, a la primera cas
 3127              		.loc 1 158 0
 3128 0760 FEFFFFEB 		bl	reiniciar_posicion_gris
 160:../jugada_por_botones.c **** 		tiempo_pv += reversi_t_pv();
 3129              		.loc 1 160 0
 3130 0764 FEFFFFEB 		bl	reversi_t_pv
 3131 0768 A41094E5 		ldr	r1, [r4, #164]
 3132 076c 010080E0 		add	r0, r0, r1
 3133 0770 A40084E5 		str	r0, [r4, #164]
 161:../jugada_por_botones.c **** 		veces_pv += reversi_veces_pv();
 3134              		.loc 1 161 0
 3135 0774 FEFFFFEB 		bl	reversi_veces_pv
 3136 0778 A83094E5 		ldr	r3, [r4, #168]
 162:../jugada_por_botones.c **** 		pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 3137              		.loc 1 162 0
 3138 077c A02094E5 		ldr	r2, [r4, #160]
 161:../jugada_por_botones.c **** 		veces_pv += reversi_veces_pv();
 3139              		.loc 1 161 0
 3140 0780 03C080E0 		add	ip, r0, r3
 162:../jugada_por_botones.c **** 		pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 3141              		.loc 1 162 0
 3142 0784 9C1094E5 		ldr	r1, [r4, #156]
 3143 0788 0200A0E1 		mov	r0, r2
 3144 078c 0C30A0E1 		mov	r3, ip
 3145 0790 A42094E5 		ldr	r2, [r4, #164]
 161:../jugada_por_botones.c **** 		veces_pv += reversi_veces_pv();
 3146              		.loc 1 161 0
 3147 0794 A8C084E5 		str	ip, [r4, #168]
 162:../jugada_por_botones.c **** 		pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 3148              		.loc 1 162 0
 3149 0798 FEFFFFEB 		bl	pintar_profiling
 163:../jugada_por_botones.c **** 		haciendo_DMA = 1;
 3150              		.loc 1 163 0
 3151 079c 885084E5 		str	r5, [r4, #136]
 164:../jugada_por_botones.c **** 		iniciar_DMA();
 3152              		.loc 1 164 0
 3153 07a0 FEFFFFEB 		bl	iniciar_DMA
 3154 07a4 E4FFFFEA 		b	.L96
 3155              	.L99:
 3156              		.align	2
 3157              	.L98:
 3158 07a8 00000000 		.word	.LANCHOR0
 3159              	.LBE10:
 3160              		.cfi_endproc
 3161              	.LFE3:
 3163              		.align	2
 3164              		.global	pintar_fin
 3166              	pintar_fin:
 3167              	.LFB4:
 178:../jugada_por_botones.c **** {
 3168              		.loc 1 178 0
 3169              		.cfi_startproc
 3170              		@ Function supports interworking.
 3171              		@ args = 0, pretend = 0, frame = 0
 3172              		@ frame_needed = 1, uses_anonymous_args = 0
 3173 07ac 0DC0A0E1 		mov	ip, sp
 3174              	.LCFI14:
 3175              		.cfi_def_cfa_register 12
 3176 07b0 18D82DE9 		stmfd	sp!, {r3, r4, fp, ip, lr, pc}
 179:../jugada_por_botones.c **** 	if(final == jugador_gana)
 3177              		.loc 1 179 0
 3178 07b4 70309FE5 		ldr	r3, .L106
 3179              		.cfi_offset 14, -8
 3180              		.cfi_offset 13, -12
 3181              		.cfi_offset 11, -16
 3182              		.cfi_offset 4, -20
 3183              		.cfi_offset 3, -24
 3184 07b8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3185 07bc 010053E3 		cmp	r3, #1
 178:../jugada_por_botones.c **** {
 3186              		.loc 1 178 0
 3187 07c0 04B04CE2 		sub	fp, ip, #4
 3188              	.LCFI15:
 3189              		.cfi_def_cfa 11, 4
 179:../jugada_por_botones.c **** 	if(final == jugador_gana)
 3190              		.loc 1 179 0
 3191 07c4 1100000A 		beq	.L104
 183:../jugada_por_botones.c **** 	else if(final == cpu_gana)
 3192              		.loc 1 183 0
 3193 07c8 020053E3 		cmp	r3, #2
 3194 07cc 0800000A 		beq	.L105
 189:../jugada_por_botones.c **** 		pintar_fin_empate(contar_blancas(), contar_negras());
 3195              		.loc 1 189 0
 3196 07d0 FEFFFFEB 		bl	contar_blancas
 3197 07d4 0040A0E1 		mov	r4, r0
 3198 07d8 FEFFFFEB 		bl	contar_negras
 3199 07dc 0010A0E1 		mov	r1, r0
 3200 07e0 0400A0E1 		mov	r0, r4
 3201 07e4 FEFFFFEB 		bl	pintar_fin_empate
 3202              	.L100:
 191:../jugada_por_botones.c **** }
 3203              		.loc 1 191 0
 3204 07e8 14D04BE2 		sub	sp, fp, #20
 3205 07ec 18689DE8 		ldmfd	sp, {r3, r4, fp, sp, lr}
 3206 07f0 1EFF2FE1 		bx	lr
 3207              	.L105:
 185:../jugada_por_botones.c **** 		pintar_fin_derrota(contar_blancas(), contar_negras());
 3208              		.loc 1 185 0
 3209 07f4 FEFFFFEB 		bl	contar_blancas
 3210 07f8 0040A0E1 		mov	r4, r0
 3211 07fc FEFFFFEB 		bl	contar_negras
 3212 0800 0010A0E1 		mov	r1, r0
 3213 0804 0400A0E1 		mov	r0, r4
 3214 0808 FEFFFFEB 		bl	pintar_fin_derrota
 3215 080c F5FFFFEA 		b	.L100
 3216              	.L104:
 181:../jugada_por_botones.c **** 		pintar_fin_victoria(contar_blancas(), contar_negras());
 3217              		.loc 1 181 0
 3218 0810 FEFFFFEB 		bl	contar_blancas
 3219 0814 0040A0E1 		mov	r4, r0
 3220 0818 FEFFFFEB 		bl	contar_negras
 3221 081c 0010A0E1 		mov	r1, r0
 3222 0820 0400A0E1 		mov	r0, r4
 3223 0824 FEFFFFEB 		bl	pintar_fin_victoria
 3224 0828 EEFFFFEA 		b	.L100
 3225              	.L107:
 3226              		.align	2
 3227              	.L106:
 3228 082c 00000000 		.word	.LANCHOR0
 3229              		.cfi_endproc
 3230              	.LFE4:
 3232              		.align	2
 3233              		.global	jugada_por_botones
 3235              	jugada_por_botones:
 3236              	.LFB5:
 195:../jugada_por_botones.c **** {
 3237              		.loc 1 195 0
 3238              		.cfi_startproc
 3239              		@ Function supports interworking.
 3240              		@ args = 0, pretend = 0, frame = 0
 3241              		@ frame_needed = 1, uses_anonymous_args = 0
 3242 0830 0DC0A0E1 		mov	ip, sp
 3243              	.LCFI16:
 3244              		.cfi_def_cfa_register 12
 3245 0834 F0D82DE9 		stmfd	sp!, {r4, r5, r6, r7, fp, ip, lr, pc}
 196:../jugada_por_botones.c **** 	switch(jugada_botones)
 3246              		.loc 1 196 0
 3247 0838 2C429FE5 		ldr	r4, .L132
 3248              		.cfi_offset 14, -8
 3249              		.cfi_offset 13, -12
 3250              		.cfi_offset 11, -16
 3251              		.cfi_offset 7, -20
 3252              		.cfi_offset 6, -24
 3253              		.cfi_offset 5, -28
 3254              		.cfi_offset 4, -32
 3255 083c AC30D4E5 		ldrb	r3, [r4, #172]	@ zero_extendqisi2
 3256 0840 000053E3 		cmp	r3, #0
 195:../jugada_por_botones.c **** {
 3257              		.loc 1 195 0
 3258 0844 04B04CE2 		sub	fp, ip, #4
 3259              	.LCFI17:
 3260              		.cfi_def_cfa 11, 4
 196:../jugada_por_botones.c **** 	switch(jugada_botones)
 3261              		.loc 1 196 0
 3262 0848 0E00001A 		bne	.L123
 199:../jugada_por_botones.c **** 		if(ev_bot_der > 0)
 3263              		.loc 1 199 0
 3264 084c 902094E5 		ldr	r2, [r4, #144]
 3265 0850 000052E3 		cmp	r2, #0
 201:../jugada_por_botones.c **** 			ev_bot_der = 0;
 3266              		.loc 1 201 0
 3267 0854 903084C5 		strgt	r3, [r4, #144]
 203:../jugada_por_botones.c **** 		if(ev_bot_izq > 0)
 3268              		.loc 1 203 0
 3269 0858 8C3094E5 		ldr	r3, [r4, #140]
 3270 085c 000053E3 		cmp	r3, #0
 205:../jugada_por_botones.c **** 			ev_bot_izq = 0;
 3271              		.loc 1 205 0
 3272 0860 04329FC5 		ldrgt	r3, .L132
 3273 0864 0020A0C3 		movgt	r2, #0
 3274 0868 8C2083C5 		strgt	r2, [r3, #140]
 207:../jugada_por_botones.c **** 		if(ev_tp == 1)
 3275              		.loc 1 207 0
 3276 086c 943094E5 		ldr	r3, [r4, #148]
 3277 0870 010053E3 		cmp	r3, #1
 3278 0874 F0219FE5 		ldr	r2, .L132
 3279 0878 4C00000A 		beq	.L124
 3280              	.L108:
 263:../jugada_por_botones.c **** }
 3281              		.loc 1 263 0
 3282 087c 1CD04BE2 		sub	sp, fp, #28
 3283 0880 F0689DE8 		ldmfd	sp, {r4, r5, r6, r7, fp, sp, lr}
 3284 0884 1EFF2FE1 		bx	lr
 3285              	.L123:
 196:../jugada_por_botones.c **** 	switch(jugada_botones)
 3286              		.loc 1 196 0
 3287 0888 010053E3 		cmp	r3, #1
 3288 088c 1A00000A 		beq	.L125
 255:../jugada_por_botones.c **** 		if(haciendo_DMA == 0 && ev_tp == 1)
 3289              		.loc 1 255 0
 3290 0890 885094E5 		ldr	r5, [r4, #136]
 3291 0894 000055E3 		cmp	r5, #0
 3292 0898 F7FFFF1A 		bne	.L108
 255:../jugada_por_botones.c **** 		if(haciendo_DMA == 0 && ev_tp == 1)
 3293              		.loc 1 255 0 is_stmt 0 discriminator 1
 3294 089c 946094E5 		ldr	r6, [r4, #148]
 3295 08a0 010056E3 		cmp	r6, #1
 3296 08a4 F4FFFF1A 		bne	.L108
 258:../jugada_por_botones.c **** 			Lcd_Clr();
 3297              		.loc 1 258 0 is_stmt 1
 3298 08a8 FEFFFFEB 		bl	Lcd_Clr
 3299              	.LBB15:
 3300              	.LBB16:
  47:../jugada_por_botones.c **** 	reversi8_inicializar();
 3301              		.loc 1 47 0
 3302 08ac FEFFFFEB 		bl	reversi8_inicializar
  60:../jugada_por_botones.c **** 	obtener_tablero(tablero_actual);
 3303              		.loc 1 60 0
 3304 08b0 040084E2 		add	r0, r4, #4
  48:../jugada_por_botones.c **** 	haciendo_DMA = 1;
 3305              		.loc 1 48 0
 3306 08b4 886084E5 		str	r6, [r4, #136]
  49:../jugada_por_botones.c **** 	mi_fila = 0;
 3307              		.loc 1 49 0
 3308 08b8 8450C4E5 		strb	r5, [r4, #132]
  50:../jugada_por_botones.c **** 	mi_columna = 0;
 3309              		.loc 1 50 0
 3310 08bc 8550C4E5 		strb	r5, [r4, #133]
  51:../jugada_por_botones.c **** 	ev_bot_izq = 0;
 3311              		.loc 1 51 0
 3312 08c0 8C5084E5 		str	r5, [r4, #140]
  52:../jugada_por_botones.c **** 	ev_bot_der = 0;
 3313              		.loc 1 52 0
 3314 08c4 905084E5 		str	r5, [r4, #144]
  53:../jugada_por_botones.c **** 	ev_tp = 0;
 3315              		.loc 1 53 0
 3316 08c8 945084E5 		str	r5, [r4, #148]
  54:../jugada_por_botones.c **** 	ev_timer = 0;
 3317              		.loc 1 54 0
 3318 08cc 985084E5 		str	r5, [r4, #152]
  55:../jugada_por_botones.c **** 	final = no_fin;
 3319              		.loc 1 55 0
 3320 08d0 0050C4E5 		strb	r5, [r4, #0]
  56:../jugada_por_botones.c **** 	tiempo_calc = 0;
 3321              		.loc 1 56 0
 3322 08d4 9C5084E5 		str	r5, [r4, #156]
  57:../jugada_por_botones.c **** 	tiempo_total = 0;
 3323              		.loc 1 57 0
 3324 08d8 A05084E5 		str	r5, [r4, #160]
  58:../jugada_por_botones.c **** 	tiempo_pv = 0;
 3325              		.loc 1 58 0
 3326 08dc A45084E5 		str	r5, [r4, #164]
  59:../jugada_por_botones.c **** 	veces_pv = 0;
 3327              		.loc 1 59 0
 3328 08e0 A85084E5 		str	r5, [r4, #168]
  60:../jugada_por_botones.c **** 	obtener_tablero(tablero_actual);
 3329              		.loc 1 60 0
 3330 08e4 FEFFFFEB 		bl	obtener_tablero
  61:../jugada_por_botones.c **** 	obtener_tablero(tablero_anterior);
 3331              		.loc 1 61 0
 3332 08e8 440084E2 		add	r0, r4, #68
 3333 08ec FEFFFFEB 		bl	obtener_tablero
  62:../jugada_por_botones.c **** 	jugada_botones = Reglas;
 3334              		.loc 1 62 0
 3335 08f0 AC50C4E5 		strb	r5, [r4, #172]
  63:../jugada_por_botones.c **** 	pintar_reglas();
 3336              		.loc 1 63 0
 3337 08f4 FEFFFFEB 		bl	pintar_reglas
 3338 08f8 DFFFFFEA 		b	.L108
 3339              	.L125:
 3340              	.LBE16:
 3341              	.LBE15:
 219:../jugada_por_botones.c **** 		if(haciendo_DMA == 0 && final != no_fin)
 3342              		.loc 1 219 0
 3343 08fc 885094E5 		ldr	r5, [r4, #136]
 3344 0900 000055E3 		cmp	r5, #0
 3345 0904 0200001A 		bne	.L115
 219:../jugada_por_botones.c **** 		if(haciendo_DMA == 0 && final != no_fin)
 3346              		.loc 1 219 0 is_stmt 0 discriminator 1
 3347 0908 0020D4E5 		ldrb	r2, [r4, #0]	@ zero_extendqisi2
 3348 090c 000052E3 		cmp	r2, #0
 3349 0910 2F00001A 		bne	.L126
 3350              	.L115:
 225:../jugada_por_botones.c **** 		if(haciendo_DMA == 0 && ev_timer > 0)
 3351              		.loc 1 225 0 is_stmt 1
 3352 0914 882094E5 		ldr	r2, [r4, #136]
 3353 0918 000052E3 		cmp	r2, #0
 3354 091c 48519FE5 		ldr	r5, .L132
 3355 0920 1100000A 		beq	.L127
 3356              	.L119:
 235:../jugada_por_botones.c **** 		if(ev_bot_der == 1)		//Incrementar fila
 3357              		.loc 1 235 0
 3358 0924 90C094E5 		ldr	ip, [r4, #144]
 3359 0928 01005CE3 		cmp	ip, #1
 3360 092c 3600000A 		beq	.L128
 3361              	.L120:
 240:../jugada_por_botones.c **** 		if(ev_bot_izq == 1)		//Incrementar columna
 3362              		.loc 1 240 0
 3363 0930 8C1094E5 		ldr	r1, [r4, #140]
 3364 0934 010051E3 		cmp	r1, #1
 3365 0938 3800000A 		beq	.L129
 3366              	.L121:
 245:../jugada_por_botones.c **** 		if(ev_tp == 1)
 3367              		.loc 1 245 0
 3368 093c 94C094E5 		ldr	ip, [r4, #148]
 3369 0940 01005CE3 		cmp	ip, #1
 3370 0944 20319FE5 		ldr	r3, .L132
 3371 0948 CBFFFF1A 		bne	.L108
 248:../jugada_por_botones.c **** 			if(haciendo_DMA == 0)
 3372              		.loc 1 248 0
 3373 094c 881093E5 		ldr	r1, [r3, #136]
 247:../jugada_por_botones.c **** 			ev_tp = 0;
 3374              		.loc 1 247 0
 3375 0950 0020A0E3 		mov	r2, #0
 248:../jugada_por_botones.c **** 			if(haciendo_DMA == 0)
 3376              		.loc 1 248 0
 3377 0954 000051E3 		cmp	r1, #0
 247:../jugada_por_botones.c **** 			ev_tp = 0;
 3378              		.loc 1 247 0
 3379 0958 942083E5 		str	r2, [r3, #148]
 248:../jugada_por_botones.c **** 			if(haciendo_DMA == 0)
 3380              		.loc 1 248 0
 3381 095c C6FFFF1A 		bne	.L108
 263:../jugada_por_botones.c **** }
 3382              		.loc 1 263 0
 3383 0960 1CD04BE2 		sub	sp, fp, #28
 3384 0964 F0689DE8 		ldmfd	sp, {r4, r5, r6, r7, fp, sp, lr}
 250:../jugada_por_botones.c **** 				procesar_jugada();
 3385              		.loc 1 250 0
 3386 0968 FEFFFFEA 		b	procesar_jugada
 3387              	.L127:
 225:../jugada_por_botones.c **** 		if(haciendo_DMA == 0 && ev_timer > 0)
 3388              		.loc 1 225 0 discriminator 1
 3389 096c 98C095E5 		ldr	ip, [r5, #152]
 3390 0970 00005CE3 		cmp	ip, #0
 3391 0974 EAFFFFDA 		ble	.L119
 229:../jugada_por_botones.c **** 			tiempo_total++;
 3392              		.loc 1 229 0
 3393 0978 A00095E5 		ldr	r0, [r5, #160]
 3394 097c 011080E2 		add	r1, r0, #1
 3395 0980 A01085E5 		str	r1, [r5, #160]
 227:../jugada_por_botones.c **** 			ev_timer--;
 3396              		.loc 1 227 0
 3397 0984 01E04CE2 		sub	lr, ip, #1
 231:../jugada_por_botones.c **** 			pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 3398              		.loc 1 231 0
 3399 0988 A83095E5 		ldr	r3, [r5, #168]
 3400 098c A00095E5 		ldr	r0, [r5, #160]
 3401 0990 9C1095E5 		ldr	r1, [r5, #156]
 3402 0994 A42095E5 		ldr	r2, [r5, #164]
 227:../jugada_por_botones.c **** 			ev_timer--;
 3403              		.loc 1 227 0
 3404 0998 98E085E5 		str	lr, [r5, #152]
 231:../jugada_por_botones.c **** 			pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 3405              		.loc 1 231 0
 3406 099c FEFFFFEB 		bl	pintar_profiling
 232:../jugada_por_botones.c **** 			haciendo_DMA = 1;
 3407              		.loc 1 232 0
 3408 09a0 0130A0E3 		mov	r3, #1
 3409 09a4 883085E5 		str	r3, [r5, #136]
 233:../jugada_por_botones.c **** 			iniciar_DMA();
 3410              		.loc 1 233 0
 3411 09a8 FEFFFFEB 		bl	iniciar_DMA
 3412 09ac DCFFFFEA 		b	.L119
 3413              	.L124:
 210:../jugada_por_botones.c **** 			if(haciendo_DMA == 0)
 3414              		.loc 1 210 0
 3415 09b0 880092E5 		ldr	r0, [r2, #136]
 209:../jugada_por_botones.c **** 			ev_tp = 0;
 3416              		.loc 1 209 0
 3417 09b4 0010A0E3 		mov	r1, #0
 210:../jugada_por_botones.c **** 			if(haciendo_DMA == 0)
 3418              		.loc 1 210 0
 3419 09b8 000050E3 		cmp	r0, #0
 209:../jugada_por_botones.c **** 			ev_tp = 0;
 3420              		.loc 1 209 0
 3421 09bc 941082E5 		str	r1, [r2, #148]
 210:../jugada_por_botones.c **** 			if(haciendo_DMA == 0)
 3422              		.loc 1 210 0
 3423 09c0 ADFFFF1A 		bne	.L108
 212:../jugada_por_botones.c **** 				haciendo_DMA = 1;
 3424              		.loc 1 212 0
 3425 09c4 883082E5 		str	r3, [r2, #136]
 213:../jugada_por_botones.c **** 				jugada_botones = Jugando;
 3426              		.loc 1 213 0
 3427 09c8 AC30C2E5 		strb	r3, [r2, #172]
 214:../jugada_por_botones.c **** 				pintar_jugando();
 3428              		.loc 1 214 0
 3429 09cc FEFFFFEB 		bl	pintar_jugando
 3430 09d0 A9FFFFEA 		b	.L108
 3431              	.L126:
 3432              	.LBB17:
 3433              	.LBB19:
 179:../jugada_por_botones.c **** 	if(final == jugador_gana)
 3434              		.loc 1 179 0
 3435 09d4 010052E3 		cmp	r2, #1
 3436              	.LBE19:
 3437              	.LBE17:
 221:../jugada_por_botones.c **** 			haciendo_DMA = 1;
 3438              		.loc 1 221 0
 3439 09d8 883084E5 		str	r3, [r4, #136]
 3440              	.LBB21:
 3441              	.LBB18:
 179:../jugada_por_botones.c **** 	if(final == jugador_gana)
 3442              		.loc 1 179 0
 3443 09dc 1B00000A 		beq	.L130
 183:../jugada_por_botones.c **** 	else if(final == cpu_gana)
 3444              		.loc 1 183 0
 3445 09e0 020052E3 		cmp	r2, #2
 3446 09e4 1200000A 		beq	.L131
 189:../jugada_por_botones.c **** 		pintar_fin_empate(contar_blancas(), contar_negras());
 3447              		.loc 1 189 0
 3448 09e8 FEFFFFEB 		bl	contar_blancas
 3449 09ec 0050A0E1 		mov	r5, r0
 3450 09f0 FEFFFFEB 		bl	contar_negras
 3451 09f4 0010A0E1 		mov	r1, r0
 3452 09f8 0500A0E1 		mov	r0, r5
 3453 09fc FEFFFFEB 		bl	pintar_fin_empate
 3454              	.L117:
 3455              	.LBE18:
 3456              	.LBE21:
 223:../jugada_por_botones.c **** 			jugada_botones = Fin;
 3457              		.loc 1 223 0
 3458 0a00 02C0A0E3 		mov	ip, #2
 3459 0a04 ACC0C4E5 		strb	ip, [r4, #172]
 3460 0a08 C1FFFFEA 		b	.L115
 3461              	.L128:
 237:../jugada_por_botones.c **** 			ev_bot_der = 0;
 3462              		.loc 1 237 0
 3463 0a0c 58309FE5 		ldr	r3, .L132
 3464 0a10 0020A0E3 		mov	r2, #0
 3465 0a14 902083E5 		str	r2, [r3, #144]
 238:../jugada_por_botones.c **** 			calcular_mov_gris_der();
 3466              		.loc 1 238 0
 3467 0a18 FEFFFFEB 		bl	calcular_mov_gris_der
 3468 0a1c C3FFFFEA 		b	.L120
 3469              	.L129:
 242:../jugada_por_botones.c **** 			ev_bot_izq = 0;
 3470              		.loc 1 242 0
 3471 0a20 44009FE5 		ldr	r0, .L132
 3472 0a24 00E0A0E3 		mov	lr, #0
 3473 0a28 8CE080E5 		str	lr, [r0, #140]
 243:../jugada_por_botones.c **** 			calcular_mov_gris_izq();
 3474              		.loc 1 243 0
 3475 0a2c FEFFFFEB 		bl	calcular_mov_gris_izq
 3476 0a30 C1FFFFEA 		b	.L121
 3477              	.L131:
 3478              	.LBB22:
 3479              	.LBB20:
 185:../jugada_por_botones.c **** 		pintar_fin_derrota(contar_blancas(), contar_negras());
 3480              		.loc 1 185 0
 3481 0a34 FEFFFFEB 		bl	contar_blancas
 3482 0a38 0050A0E1 		mov	r5, r0
 3483 0a3c FEFFFFEB 		bl	contar_negras
 3484 0a40 0010A0E1 		mov	r1, r0
 3485 0a44 0500A0E1 		mov	r0, r5
 3486 0a48 FEFFFFEB 		bl	pintar_fin_derrota
 3487 0a4c EBFFFFEA 		b	.L117
 3488              	.L130:
 181:../jugada_por_botones.c **** 		pintar_fin_victoria(contar_blancas(), contar_negras());
 3489              		.loc 1 181 0
 3490 0a50 FEFFFFEB 		bl	contar_blancas
 3491 0a54 0050A0E1 		mov	r5, r0
 3492 0a58 FEFFFFEB 		bl	contar_negras
 3493 0a5c 0010A0E1 		mov	r1, r0
 3494 0a60 0500A0E1 		mov	r0, r5
 3495 0a64 FEFFFFEB 		bl	pintar_fin_victoria
 3496 0a68 E4FFFFEA 		b	.L117
 3497              	.L133:
 3498              		.align	2
 3499              	.L132:
 3500 0a6c 00000000 		.word	.LANCHOR0
 3501              	.LBE20:
 3502              	.LBE22:
 3503              		.cfi_endproc
 3504              	.LFE5:
 3506              		.align	2
 3507              		.global	jugada_ev_tsp
 3509              	jugada_ev_tsp:
 3510              	.LFB6:
 267:../jugada_por_botones.c **** {
 3511              		.loc 1 267 0
 3512              		.cfi_startproc
 3513              		@ Function supports interworking.
 3514              		@ args = 0, pretend = 0, frame = 0
 3515              		@ frame_needed = 0, uses_anonymous_args = 0
 3516              		@ link register save eliminated.
 268:../jugada_por_botones.c **** 	ev_tp = 1;
 3517              		.loc 1 268 0
 3518 0a70 08309FE5 		ldr	r3, .L135
 3519 0a74 0120A0E3 		mov	r2, #1
 3520 0a78 942083E5 		str	r2, [r3, #148]
 270:../jugada_por_botones.c **** }
 3521              		.loc 1 270 0
 269:../jugada_por_botones.c **** 	jugada_por_botones();
 3522              		.loc 1 269 0
 3523 0a7c FEFFFFEA 		b	jugada_por_botones
 3524              	.L136:
 3525              		.align	2
 3526              	.L135:
 3527 0a80 00000000 		.word	.LANCHOR0
 3528              		.cfi_endproc
 3529              	.LFE6:
 3531              		.align	2
 3532              		.global	jugada_ev_der
 3534              	jugada_ev_der:
 3535              	.LFB7:
 274:../jugada_por_botones.c **** {
 3536              		.loc 1 274 0
 3537              		.cfi_startproc
 3538              		@ Function supports interworking.
 3539              		@ args = 0, pretend = 0, frame = 0
 3540              		@ frame_needed = 0, uses_anonymous_args = 0
 3541              		@ link register save eliminated.
 275:../jugada_por_botones.c **** 	ev_bot_der = 1;
 3542              		.loc 1 275 0
 3543 0a84 08309FE5 		ldr	r3, .L138
 3544 0a88 0120A0E3 		mov	r2, #1
 3545 0a8c 902083E5 		str	r2, [r3, #144]
 277:../jugada_por_botones.c **** }
 3546              		.loc 1 277 0
 276:../jugada_por_botones.c **** 	jugada_por_botones();
 3547              		.loc 1 276 0
 3548 0a90 FEFFFFEA 		b	jugada_por_botones
 3549              	.L139:
 3550              		.align	2
 3551              	.L138:
 3552 0a94 00000000 		.word	.LANCHOR0
 3553              		.cfi_endproc
 3554              	.LFE7:
 3556              		.align	2
 3557              		.global	jugada_ev_izq
 3559              	jugada_ev_izq:
 3560              	.LFB8:
 281:../jugada_por_botones.c **** {
 3561              		.loc 1 281 0
 3562              		.cfi_startproc
 3563              		@ Function supports interworking.
 3564              		@ args = 0, pretend = 0, frame = 0
 3565              		@ frame_needed = 0, uses_anonymous_args = 0
 3566              		@ link register save eliminated.
 282:../jugada_por_botones.c **** 	ev_bot_izq = 1;
 3567              		.loc 1 282 0
 3568 0a98 08309FE5 		ldr	r3, .L141
 3569 0a9c 0120A0E3 		mov	r2, #1
 3570 0aa0 8C2083E5 		str	r2, [r3, #140]
 284:../jugada_por_botones.c **** }
 3571              		.loc 1 284 0
 283:../jugada_por_botones.c **** 	jugada_por_botones();
 3572              		.loc 1 283 0
 3573 0aa4 FEFFFFEA 		b	jugada_por_botones
 3574              	.L142:
 3575              		.align	2
 3576              	.L141:
 3577 0aa8 00000000 		.word	.LANCHOR0
 3578              		.cfi_endproc
 3579              	.LFE8:
 3581              		.align	2
 3582              		.global	jugada_ev_timer
 3584              	jugada_ev_timer:
 3585              	.LFB9:
 287:../jugada_por_botones.c **** {
 3586              		.loc 1 287 0
 3587              		.cfi_startproc
 3588              		@ Function supports interworking.
 3589              		@ args = 0, pretend = 0, frame = 0
 3590              		@ frame_needed = 0, uses_anonymous_args = 0
 3591              		@ link register save eliminated.
 288:../jugada_por_botones.c **** 	ev_timer++;
 3592              		.loc 1 288 0
 3593 0aac 0C309FE5 		ldr	r3, .L144
 3594 0ab0 980093E5 		ldr	r0, [r3, #152]
 3595 0ab4 012080E2 		add	r2, r0, #1
 3596 0ab8 982083E5 		str	r2, [r3, #152]
 290:../jugada_por_botones.c **** }
 3597              		.loc 1 290 0
 289:../jugada_por_botones.c **** 	jugada_por_botones();
 3598              		.loc 1 289 0
 3599 0abc FEFFFFEA 		b	jugada_por_botones
 3600              	.L145:
 3601              		.align	2
 3602              	.L144:
 3603 0ac0 00000000 		.word	.LANCHOR0
 3604              		.cfi_endproc
 3605              	.LFE9:
 3607              		.align	2
 3608              		.global	termina_DMA
 3610              	termina_DMA:
 3611              	.LFB10:
 294:../jugada_por_botones.c **** {
 3612              		.loc 1 294 0
 3613              		.cfi_startproc
 3614              		@ Function supports interworking.
 3615              		@ args = 0, pretend = 0, frame = 0
 3616              		@ frame_needed = 0, uses_anonymous_args = 0
 3617              		@ link register save eliminated.
 295:../jugada_por_botones.c **** 	haciendo_DMA = 0;
 3618              		.loc 1 295 0
 3619 0ac4 08309FE5 		ldr	r3, .L147
 3620 0ac8 0020A0E3 		mov	r2, #0
 3621 0acc 882083E5 		str	r2, [r3, #136]
 297:../jugada_por_botones.c **** }
 3622              		.loc 1 297 0
 296:../jugada_por_botones.c **** 	jugada_por_botones();
 3623              		.loc 1 296 0
 3624 0ad0 FEFFFFEA 		b	jugada_por_botones
 3625              	.L148:
 3626              		.align	2
 3627              	.L147:
 3628 0ad4 00000000 		.word	.LANCHOR0
 3629              		.cfi_endproc
 3630              	.LFE10:
 3632              		.align	2
 3633              		.global	jugada_ev_tecla0
 3635              	jugada_ev_tecla0:
 3636              	.LFB13:
 344:../jugada_por_botones.c **** {
 3637              		.loc 1 344 0
 3638              		.cfi_startproc
 3639              		@ Function supports interworking.
 3640              		@ args = 0, pretend = 0, frame = 0
 3641              		@ frame_needed = 1, uses_anonymous_args = 0
 3642 0ad8 0DC0A0E1 		mov	ip, sp
 3643              	.LCFI18:
 3644              		.cfi_def_cfa_register 12
 3645 0adc F8D92DE9 		stmfd	sp!, {r3, r4, r5, r6, r7, r8, fp, ip, lr, pc}
 345:../jugada_por_botones.c **** 	if(jugada_botones == Jugando)
 3646              		.loc 1 345 0
 3647 0ae0 44439FE5 		ldr	r4, .L176
 3648              		.cfi_offset 14, -8
 3649              		.cfi_offset 13, -12
 3650              		.cfi_offset 11, -16
 3651              		.cfi_offset 8, -20
 3652              		.cfi_offset 7, -24
 3653              		.cfi_offset 6, -28
 3654              		.cfi_offset 5, -32
 3655              		.cfi_offset 4, -36
 3656              		.cfi_offset 3, -40
 3657 0ae4 AC30D4E5 		ldrb	r3, [r4, #172]	@ zero_extendqisi2
 3658 0ae8 010053E3 		cmp	r3, #1
 344:../jugada_por_botones.c **** {
 3659              		.loc 1 344 0
 3660 0aec 04B04CE2 		sub	fp, ip, #4
 3661              	.LCFI19:
 3662              		.cfi_def_cfa 11, 4
 345:../jugada_por_botones.c **** 	if(jugada_botones == Jugando)
 3663              		.loc 1 345 0
 3664 0af0 0200000A 		beq	.L175
 3665              	.L149:
 363:../jugada_por_botones.c **** }
 3666              		.loc 1 363 0
 3667 0af4 24D04BE2 		sub	sp, fp, #36
 3668 0af8 F8699DE8 		ldmfd	sp, {r3, r4, r5, r6, r7, r8, fp, sp, lr}
 3669 0afc 1EFF2FE1 		bx	lr
 3670              	.L175:
 3671              	.LBB28:
 347:../jugada_por_botones.c **** 		unsigned int delta1 = timer2_leer();
 3672              		.loc 1 347 0
 3673 0b00 FEFFFFEB 		bl	timer2_leer
 3674 0b04 0050A0E1 		mov	r5, r0
 3675              	.LVL66:
 348:../jugada_por_botones.c **** 		mover_IA();
 3676              		.loc 1 348 0
 3677 0b08 FEFFFFEB 		bl	mover_IA
 3678              	.LVL67:
 349:../jugada_por_botones.c **** 		unsigned int delta2 = timer2_leer();
 3679              		.loc 1 349 0
 3680 0b0c FEFFFFEB 		bl	timer2_leer
 3681              	.LVL68:
 350:../jugada_por_botones.c **** 		tiempo_calc += (delta2-delta1);
 3682              		.loc 1 350 0
 3683 0b10 9C1094E5 		ldr	r1, [r4, #156]
 3684 0b14 010080E0 		add	r0, r0, r1
 3685              	.LVL69:
 3686 0b18 002065E0 		rsb	r2, r5, r0
 351:../jugada_por_botones.c **** 		borrar_ficha(mi_fila, mi_columna);
 3687              		.loc 1 351 0
 3688 0b1c 8510D4E5 		ldrb	r1, [r4, #133]	@ zero_extendqisi2
 3689 0b20 8400D4E5 		ldrb	r0, [r4, #132]	@ zero_extendqisi2
 350:../jugada_por_botones.c **** 		tiempo_calc += (delta2-delta1);
 3690              		.loc 1 350 0
 3691 0b24 9C2084E5 		str	r2, [r4, #156]
 351:../jugada_por_botones.c **** 		borrar_ficha(mi_fila, mi_columna);
 3692              		.loc 1 351 0
 3693 0b28 FEFFFFEB 		bl	borrar_ficha
 3694              	.LBB29:
 3695              	.LBB30:
 326:../jugada_por_botones.c **** 	obtener_tablero(tablero_actual);
 3696              		.loc 1 326 0
 3697 0b2c 040084E2 		add	r0, r4, #4
 3698 0b30 FEFFFFEB 		bl	obtener_tablero
 3699              	.LVL70:
 3700 0b34 048084E2 		add	r8, r4, #4
 3701 0b38 446084E2 		add	r6, r4, #68
 3702 0b3c 0850A0E1 		mov	r5, r8
 3703              	.LVL71:
 328:../jugada_por_botones.c **** 	for(i = 0; i < num_filas; i++)
 3704              		.loc 1 328 0
 3705 0b40 0070A0E3 		mov	r7, #0
 3706              	.LVL72:
 3707              	.L159:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 3708              		.loc 1 332 0
 3709 0b44 00C0D5E5 		ldrb	ip, [r5, #0]	@ zero_extendqisi2
 3710 0b48 00E0D6E5 		ldrb	lr, [r6, #0]	@ zero_extendqisi2
 3711 0b4c 0E005CE1 		cmp	ip, lr
 3712 0b50 0800000A 		beq	.L151
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 3713              		.loc 1 334 0
 3714 0b54 0010A0E3 		mov	r1, #0
 3715 0b58 0700A0E1 		mov	r0, r7
 3716 0b5c FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 3717              		.loc 1 335 0
 3718 0b60 0700A0E1 		mov	r0, r7
 3719 0b64 0010A0E3 		mov	r1, #0
 3720 0b68 0020D5E5 		ldrb	r2, [r5, #0]	@ zero_extendqisi2
 3721 0b6c FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 3722              		.loc 1 337 0
 3723 0b70 0030D5E5 		ldrb	r3, [r5, #0]	@ zero_extendqisi2
 3724 0b74 0030C6E5 		strb	r3, [r6, #0]
 3725              	.L151:
 3726              	.LVL73:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 3727              		.loc 1 332 0
 3728 0b78 0120D5E5 		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 3729 0b7c 0100D6E5 		ldrb	r0, [r6, #1]	@ zero_extendqisi2
 3730 0b80 000052E1 		cmp	r2, r0
 3731 0b84 0800000A 		beq	.L152
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 3732              		.loc 1 334 0
 3733 0b88 0110A0E3 		mov	r1, #1
 3734 0b8c 0700A0E1 		mov	r0, r7
 3735 0b90 FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 3736              		.loc 1 335 0
 3737 0b94 0110A0E3 		mov	r1, #1
 3738 0b98 0700A0E1 		mov	r0, r7
 3739 0b9c 0120D5E5 		ldrb	r2, [r5, #1]	@ zero_extendqisi2
 3740 0ba0 FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 3741              		.loc 1 337 0
 3742 0ba4 0110D5E5 		ldrb	r1, [r5, #1]	@ zero_extendqisi2
 3743 0ba8 0110C6E5 		strb	r1, [r6, #1]
 3744              	.L152:
 3745              	.LVL74:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 3746              		.loc 1 332 0
 3747 0bac 02C0D5E5 		ldrb	ip, [r5, #2]	@ zero_extendqisi2
 3748 0bb0 02E0D6E5 		ldrb	lr, [r6, #2]	@ zero_extendqisi2
 3749 0bb4 0E005CE1 		cmp	ip, lr
 3750 0bb8 0800000A 		beq	.L153
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 3751              		.loc 1 334 0
 3752 0bbc 0210A0E3 		mov	r1, #2
 3753 0bc0 0700A0E1 		mov	r0, r7
 3754 0bc4 FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 3755              		.loc 1 335 0
 3756 0bc8 0700A0E1 		mov	r0, r7
 3757 0bcc 0210A0E3 		mov	r1, #2
 3758 0bd0 0220D5E5 		ldrb	r2, [r5, #2]	@ zero_extendqisi2
 3759 0bd4 FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 3760              		.loc 1 337 0
 3761 0bd8 0230D5E5 		ldrb	r3, [r5, #2]	@ zero_extendqisi2
 3762 0bdc 0230C6E5 		strb	r3, [r6, #2]
 3763              	.L153:
 3764              	.LVL75:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 3765              		.loc 1 332 0
 3766 0be0 0320D5E5 		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 3767 0be4 0300D6E5 		ldrb	r0, [r6, #3]	@ zero_extendqisi2
 3768 0be8 000052E1 		cmp	r2, r0
 3769 0bec 0800000A 		beq	.L154
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 3770              		.loc 1 334 0
 3771 0bf0 0310A0E3 		mov	r1, #3
 3772 0bf4 0700A0E1 		mov	r0, r7
 3773 0bf8 FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 3774              		.loc 1 335 0
 3775 0bfc 0310A0E3 		mov	r1, #3
 3776 0c00 0700A0E1 		mov	r0, r7
 3777 0c04 0320D5E5 		ldrb	r2, [r5, #3]	@ zero_extendqisi2
 3778 0c08 FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 3779              		.loc 1 337 0
 3780 0c0c 0310D5E5 		ldrb	r1, [r5, #3]	@ zero_extendqisi2
 3781 0c10 0310C6E5 		strb	r1, [r6, #3]
 3782              	.L154:
 3783              	.LVL76:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 3784              		.loc 1 332 0
 3785 0c14 04C0D5E5 		ldrb	ip, [r5, #4]	@ zero_extendqisi2
 3786 0c18 04E0D6E5 		ldrb	lr, [r6, #4]	@ zero_extendqisi2
 3787 0c1c 0E005CE1 		cmp	ip, lr
 3788 0c20 0800000A 		beq	.L155
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 3789              		.loc 1 334 0
 3790 0c24 0410A0E3 		mov	r1, #4
 3791 0c28 0700A0E1 		mov	r0, r7
 3792 0c2c FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 3793              		.loc 1 335 0
 3794 0c30 0700A0E1 		mov	r0, r7
 3795 0c34 0410A0E3 		mov	r1, #4
 3796 0c38 0420D5E5 		ldrb	r2, [r5, #4]	@ zero_extendqisi2
 3797 0c3c FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 3798              		.loc 1 337 0
 3799 0c40 0430D5E5 		ldrb	r3, [r5, #4]	@ zero_extendqisi2
 3800 0c44 0430C6E5 		strb	r3, [r6, #4]
 3801              	.L155:
 3802              	.LVL77:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 3803              		.loc 1 332 0
 3804 0c48 0520D5E5 		ldrb	r2, [r5, #5]	@ zero_extendqisi2
 3805 0c4c 0500D6E5 		ldrb	r0, [r6, #5]	@ zero_extendqisi2
 3806 0c50 000052E1 		cmp	r2, r0
 3807 0c54 0800000A 		beq	.L156
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 3808              		.loc 1 334 0
 3809 0c58 0510A0E3 		mov	r1, #5
 3810 0c5c 0700A0E1 		mov	r0, r7
 3811 0c60 FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 3812              		.loc 1 335 0
 3813 0c64 0510A0E3 		mov	r1, #5
 3814 0c68 0700A0E1 		mov	r0, r7
 3815 0c6c 0520D5E5 		ldrb	r2, [r5, #5]	@ zero_extendqisi2
 3816 0c70 FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 3817              		.loc 1 337 0
 3818 0c74 0510D5E5 		ldrb	r1, [r5, #5]	@ zero_extendqisi2
 3819 0c78 0510C6E5 		strb	r1, [r6, #5]
 3820              	.L156:
 3821              	.LVL78:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 3822              		.loc 1 332 0
 3823 0c7c 06C0D5E5 		ldrb	ip, [r5, #6]	@ zero_extendqisi2
 3824 0c80 06E0D6E5 		ldrb	lr, [r6, #6]	@ zero_extendqisi2
 3825 0c84 0E005CE1 		cmp	ip, lr
 3826 0c88 0800000A 		beq	.L157
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 3827              		.loc 1 334 0
 3828 0c8c 0610A0E3 		mov	r1, #6
 3829 0c90 0700A0E1 		mov	r0, r7
 3830 0c94 FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 3831              		.loc 1 335 0
 3832 0c98 0700A0E1 		mov	r0, r7
 3833 0c9c 0610A0E3 		mov	r1, #6
 3834 0ca0 0620D5E5 		ldrb	r2, [r5, #6]	@ zero_extendqisi2
 3835 0ca4 FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 3836              		.loc 1 337 0
 3837 0ca8 0630D5E5 		ldrb	r3, [r5, #6]	@ zero_extendqisi2
 3838 0cac 0630C6E5 		strb	r3, [r6, #6]
 3839              	.L157:
 3840              	.LVL79:
 332:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 3841              		.loc 1 332 0
 3842 0cb0 0720D5E5 		ldrb	r2, [r5, #7]	@ zero_extendqisi2
 3843 0cb4 0700D6E5 		ldrb	r0, [r6, #7]	@ zero_extendqisi2
 3844 0cb8 000052E1 		cmp	r2, r0
 3845 0cbc 0800000A 		beq	.L158
 334:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 3846              		.loc 1 334 0
 3847 0cc0 0710A0E3 		mov	r1, #7
 3848 0cc4 0700A0E1 		mov	r0, r7
 3849 0cc8 FEFFFFEB 		bl	borrar_ficha
 335:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 3850              		.loc 1 335 0
 3851 0ccc 0710A0E3 		mov	r1, #7
 3852 0cd0 0700A0E1 		mov	r0, r7
 3853 0cd4 0720D5E5 		ldrb	r2, [r5, #7]	@ zero_extendqisi2
 3854 0cd8 FEFFFFEB 		bl	pintar_ficha
 337:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 3855              		.loc 1 337 0
 3856 0cdc 0710D5E5 		ldrb	r1, [r5, #7]	@ zero_extendqisi2
 3857 0ce0 0710C6E5 		strb	r1, [r6, #7]
 3858              	.L158:
 3859              	.LVL80:
 328:../jugada_por_botones.c **** 	for(i = 0; i < num_filas; i++)
 3860              		.loc 1 328 0
 3861 0ce4 017087E2 		add	r7, r7, #1
 3862              	.LVL81:
 3863 0ce8 080057E3 		cmp	r7, #8
 3864 0cec 085085E2 		add	r5, r5, #8
 3865 0cf0 086086E2 		add	r6, r6, #8
 3866 0cf4 92FFFF1A 		bne	.L159
 3867              	.LBE30:
 3868              	.LBE29:
 3869              	.LBB31:
 3870              	.LBB32:
 305:../jugada_por_botones.c **** 	mi_fila = 0;
 3871              		.loc 1 305 0
 3872 0cf8 0020A0E3 		mov	r2, #0
 3873 0cfc 8420C4E5 		strb	r2, [r4, #132]
 306:../jugada_por_botones.c **** 	mi_columna = 0;
 3874              		.loc 1 306 0
 3875 0d00 8520C4E5 		strb	r2, [r4, #133]
 3876 0d04 0230A0E1 		mov	r3, r2
 3877              	.LVL82:
 3878              	.L160:
 313:../jugada_por_botones.c **** 			if(tablero_actual[i][j] == CASILLA_VACIA)
 3879              		.loc 1 313 0
 3880 0d08 00C0D8E5 		ldrb	ip, [r8, #0]	@ zero_extendqisi2
 3881 0d0c 00005CE3 		cmp	ip, #0
 3882 0d10 1D00000A 		beq	.L162
 3883              	.LVL83:
 3884 0d14 01E0D8E5 		ldrb	lr, [r8, #1]	@ zero_extendqisi2
 3885 0d18 00005EE3 		cmp	lr, #0
 3886 0d1c 3600000A 		beq	.L166
 3887              	.LVL84:
 3888 0d20 0200D8E5 		ldrb	r0, [r8, #2]	@ zero_extendqisi2
 3889 0d24 000050E3 		cmp	r0, #0
 3890 0d28 3500000A 		beq	.L167
 3891              	.LVL85:
 3892 0d2c 0310D8E5 		ldrb	r1, [r8, #3]	@ zero_extendqisi2
 3893 0d30 000051E3 		cmp	r1, #0
 3894 0d34 3400000A 		beq	.L168
 3895              	.LVL86:
 3896 0d38 04E0D8E5 		ldrb	lr, [r8, #4]	@ zero_extendqisi2
 3897 0d3c 00005EE3 		cmp	lr, #0
 3898 0d40 3300000A 		beq	.L169
 3899              	.LVL87:
 3900 0d44 0500D8E5 		ldrb	r0, [r8, #5]	@ zero_extendqisi2
 3901 0d48 000050E3 		cmp	r0, #0
 3902 0d4c 3200000A 		beq	.L170
 3903              	.LVL88:
 3904 0d50 0610D8E5 		ldrb	r1, [r8, #6]	@ zero_extendqisi2
 3905 0d54 000051E3 		cmp	r1, #0
 3906 0d58 3100000A 		beq	.L171
 3907              	.LVL89:
 3908 0d5c 07E0D8E5 		ldrb	lr, [r8, #7]	@ zero_extendqisi2
 3909 0d60 00005EE3 		cmp	lr, #0
 3910 0d64 0700000A 		beq	.L172
 3911              	.LVL90:
 343:../jugada_por_botones.c **** void jugada_ev_tecla0(void)		//Pasar turno de jugador
 3912              		.loc 1 343 0
 3913 0d68 012082E2 		add	r2, r2, #1
 3914              	.LVL91:
 309:../jugada_por_botones.c **** 	for(i = 0; i < num_filas && fin_bucle == 0; i++)
 3915              		.loc 1 309 0
 3916 0d6c 070052E3 		cmp	r2, #7
 3917 0d70 00C0A0C3 		movgt	ip, #0
 3918 0d74 01C0A0D3 		movle	ip, #1
 3919 0d78 00005CE3 		cmp	ip, #0
 3920 0d7c 088088E2 		add	r8, r8, #8
 3921 0d80 E0FFFF1A 		bne	.L160
 3922 0d84 020000EA 		b	.L161
 3923              	.LVL92:
 3924              	.L172:
 313:../jugada_por_botones.c **** 			if(tablero_actual[i][j] == CASILLA_VACIA)
 3925              		.loc 1 313 0
 3926 0d88 07C0A0E3 		mov	ip, #7
 3927              	.LVL93:
 3928              	.L162:
 306:../jugada_por_botones.c **** 	mi_columna = 0;
 3929              		.loc 1 306 0
 3930 0d8c FF3002E2 		and	r3, r2, #255
 316:../jugada_por_botones.c **** 				mi_columna = j;
 3931              		.loc 1 316 0
 3932 0d90 FFC00CE2 		and	ip, ip, #255
 3933              	.LVL94:
 3934              	.L161:
 321:../jugada_por_botones.c **** 	pintar_ficha(mi_fila, mi_columna, FICHA_GRIS);
 3935              		.loc 1 321 0
 3936 0d94 0C10A0E1 		mov	r1, ip
 3937 0d98 0320A0E3 		mov	r2, #3
 3938 0d9c 0300A0E1 		mov	r0, r3
 313:../jugada_por_botones.c **** 			if(tablero_actual[i][j] == CASILLA_VACIA)
 3939              		.loc 1 313 0
 3940 0da0 8430C4E5 		strb	r3, [r4, #132]
 3941 0da4 85C0C4E5 		strb	ip, [r4, #133]
 321:../jugada_por_botones.c **** 	pintar_ficha(mi_fila, mi_columna, FICHA_GRIS);
 3942              		.loc 1 321 0
 3943 0da8 FEFFFFEB 		bl	pintar_ficha
 3944              	.LBE32:
 3945              	.LBE31:
 356:../jugada_por_botones.c **** 		tiempo_pv += reversi_t_pv();	//obtener datos de profiling
 3946              		.loc 1 356 0
 3947 0dac FEFFFFEB 		bl	reversi_t_pv
 3948 0db0 A41094E5 		ldr	r1, [r4, #164]
 3949 0db4 010080E0 		add	r0, r0, r1
 3950 0db8 A40084E5 		str	r0, [r4, #164]
 357:../jugada_por_botones.c **** 		veces_pv += reversi_veces_pv();
 3951              		.loc 1 357 0
 3952 0dbc FEFFFFEB 		bl	reversi_veces_pv
 3953 0dc0 A82094E5 		ldr	r2, [r4, #168]
 358:../jugada_por_botones.c **** 		pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 3954              		.loc 1 358 0
 3955 0dc4 A03094E5 		ldr	r3, [r4, #160]
 357:../jugada_por_botones.c **** 		veces_pv += reversi_veces_pv();
 3956              		.loc 1 357 0
 3957 0dc8 02C080E0 		add	ip, r0, r2
 358:../jugada_por_botones.c **** 		pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 3958              		.loc 1 358 0
 3959 0dcc 9C1094E5 		ldr	r1, [r4, #156]
 3960 0dd0 0300A0E1 		mov	r0, r3
 3961 0dd4 A42094E5 		ldr	r2, [r4, #164]
 3962 0dd8 0C30A0E1 		mov	r3, ip
 357:../jugada_por_botones.c **** 		veces_pv += reversi_veces_pv();
 3963              		.loc 1 357 0
 3964 0ddc A8C084E5 		str	ip, [r4, #168]
 358:../jugada_por_botones.c **** 		pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 3965              		.loc 1 358 0
 3966 0de0 FEFFFFEB 		bl	pintar_profiling
 359:../jugada_por_botones.c **** 		haciendo_DMA = 1;
 3967              		.loc 1 359 0
 3968 0de4 01C0A0E3 		mov	ip, #1
 3969 0de8 88C084E5 		str	ip, [r4, #136]
 360:../jugada_por_botones.c **** 		iniciar_DMA();
 3970              		.loc 1 360 0
 3971 0dec FEFFFFEB 		bl	iniciar_DMA
 361:../jugada_por_botones.c **** 		final = obtener_fin();
 3972              		.loc 1 361 0
 3973 0df0 FEFFFFEB 		bl	obtener_fin
 3974 0df4 0000C4E5 		strb	r0, [r4, #0]
 3975 0df8 3DFFFFEA 		b	.L149
 3976              	.LVL95:
 3977              	.L166:
 3978              	.LBB34:
 3979              	.LBB33:
 311:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas && fin_bucle == 0; j++)
 3980              		.loc 1 311 0
 3981 0dfc 01C0A0E3 		mov	ip, #1
 3982 0e00 E1FFFFEA 		b	.L162
 3983              	.LVL96:
 3984              	.L167:
 3985 0e04 02C0A0E3 		mov	ip, #2
 3986 0e08 DFFFFFEA 		b	.L162
 3987              	.LVL97:
 3988              	.L168:
 3989 0e0c 03C0A0E3 		mov	ip, #3
 3990 0e10 DDFFFFEA 		b	.L162
 3991              	.LVL98:
 3992              	.L169:
 3993 0e14 04C0A0E3 		mov	ip, #4
 3994 0e18 DBFFFFEA 		b	.L162
 3995              	.LVL99:
 3996              	.L170:
 3997 0e1c 05C0A0E3 		mov	ip, #5
 3998 0e20 D9FFFFEA 		b	.L162
 3999              	.LVL100:
 4000              	.L171:
 4001 0e24 06C0A0E3 		mov	ip, #6
 4002 0e28 D7FFFFEA 		b	.L162
 4003              	.L177:
 4004              		.align	2
 4005              	.L176:
 4006 0e2c 00000000 		.word	.LANCHOR0
 4007              	.LBE33:
 4008              	.LBE34:
 4009              	.LBE28:
 4010              		.cfi_endproc
 4011              	.LFE13:
 4013              		.align	2
 4014              		.global	jugada_ev_tecla1
 4016              	jugada_ev_tecla1:
 4017              	.LFB15:
 382:../jugada_por_botones.c **** 
 383:../jugada_por_botones.c **** void jugada_ev_tecla1()			//Finalizar la partida de forma prematura
 384:../jugada_por_botones.c **** {
 4018              		.loc 1 384 0
 4019              		.cfi_startproc
 4020              		@ Function supports interworking.
 4021              		@ args = 0, pretend = 0, frame = 0
 4022              		@ frame_needed = 1, uses_anonymous_args = 0
 4023 0e30 0DC0A0E1 		mov	ip, sp
 4024              	.LCFI20:
 4025              		.cfi_def_cfa_register 12
 4026 0e34 30D82DE9 		stmfd	sp!, {r4, r5, fp, ip, lr, pc}
 4027 0e38 04B04CE2 		sub	fp, ip, #4
 4028              		.cfi_offset 14, -8
 4029              		.cfi_offset 13, -12
 4030              		.cfi_offset 11, -16
 4031              		.cfi_offset 5, -20
 4032              		.cfi_offset 4, -24
 4033              	.LCFI21:
 4034              		.cfi_def_cfa 11, 4
 4035              	.LBB37:
 4036              	.LBB38:
 367:../jugada_por_botones.c **** 	int blancas = contar_blancas();
 4037              		.loc 1 367 0
 4038 0e3c FEFFFFEB 		bl	contar_blancas
 4039 0e40 0040A0E1 		mov	r4, r0
 4040              	.LVL101:
 368:../jugada_por_botones.c **** 	int negras = contar_negras();
 4041              		.loc 1 368 0
 4042 0e44 FEFFFFEB 		bl	contar_negras
 4043              	.LVL102:
 369:../jugada_por_botones.c **** 	if(blancas > negras)
 4044              		.loc 1 369 0
 4045 0e48 000054E1 		cmp	r4, r0
 4046 0e4c 060000CA 		bgt	.L182
 379:../jugada_por_botones.c **** 		final = empate;
 4047              		.loc 1 379 0
 4048 0e50 24109FE5 		ldr	r1, .L183
 375:../jugada_por_botones.c **** 		final = jugador_gana;
 4049              		.loc 1 375 0
 4050 0e54 0100A0B3 		movlt	r0, #1
 4051              	.LVL103:
 379:../jugada_por_botones.c **** 		final = empate;
 4052              		.loc 1 379 0
 4053 0e58 0300A0A3 		movge	r0, #3
 4054 0e5c 0000C1E5 		strb	r0, [r1, #0]
 4055              	.L180:
 4056              	.LBE38:
 4057              	.LBE37:
 385:../jugada_por_botones.c **** 	contar_fichas_final();
 386:../jugada_por_botones.c **** 	jugada_por_botones();
 387:../jugada_por_botones.c **** }
 4058              		.loc 1 387 0
 4059 0e60 14D04BE2 		sub	sp, fp, #20
 4060 0e64 30689DE8 		ldmfd	sp, {r4, r5, fp, sp, lr}
 386:../jugada_por_botones.c **** 	jugada_por_botones();
 4061              		.loc 1 386 0
 4062 0e68 FEFFFFEA 		b	jugada_por_botones
 4063              	.LVL104:
 4064              	.L182:
 4065              	.LBB40:
 4066              	.LBB39:
 371:../jugada_por_botones.c **** 		final = cpu_gana;
 4067              		.loc 1 371 0
 4068 0e6c 08309FE5 		ldr	r3, .L183
 4069 0e70 0220A0E3 		mov	r2, #2
 4070 0e74 0020C3E5 		strb	r2, [r3, #0]
 4071 0e78 F8FFFFEA 		b	.L180
 4072              	.L184:
 4073              		.align	2
 4074              	.L183:
 4075 0e7c 00000000 		.word	.LANCHOR0
 4076              	.LBE39:
 4077              	.LBE40:
 4078              		.cfi_endproc
 4079              	.LFE15:
 4081              		.global	haciendo_DMA
 4082              		.bss
 4083              		.align	2
 4084              		.set	.LANCHOR0,. + 0
 4087              	final:
 4088 0000 00       		.space	1
 4089 0001 000000   		.space	3
 4092              	tablero_actual:
 4093 0004 00000000 		.space	64
 4093      00000000 
 4093      00000000 
 4093      00000000 
 4093      00000000 
 4096              	tablero_anterior:
 4097 0044 00000000 		.space	64
 4097      00000000 
 4097      00000000 
 4097      00000000 
 4097      00000000 
 4100              	mi_fila:
 4101 0084 00       		.space	1
 4104              	mi_columna:
 4105 0085 00       		.space	1
 4106 0086 0000     		.space	2
 4109              	haciendo_DMA:
 4110 0088 00000000 		.space	4
 4113              	ev_bot_izq:
 4114 008c 00000000 		.space	4
 4117              	ev_bot_der:
 4118 0090 00000000 		.space	4
 4121              	ev_tp:
 4122 0094 00000000 		.space	4
 4125              	ev_timer:
 4126 0098 00000000 		.space	4
 4129              	tiempo_calc:
 4130 009c 00000000 		.space	4
 4133              	tiempo_total:
 4134 00a0 00000000 		.space	4
 4137              	tiempo_pv:
 4138 00a4 00000000 		.space	4
 4141              	veces_pv:
 4142 00a8 00000000 		.space	4
 4145              	jugada_botones:
 4146 00ac 00       		.space	1
 4147 00ad 000000   		.text
 4148              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 jugada_por_botones.c
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2189   .text:00000000 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2192   .text:00000000 contar_fichas_final
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2244   .text:0000004c $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2248   .text:00000050 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2251   .text:00000050 actualizar_movimientos_pantalla
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2451   .text:00000230 $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2455   .text:00000234 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2458   .text:00000234 reiniciar_posicion_gris
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2586   .text:00000338 $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2590   .text:0000033c $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2593   .text:0000033c inicializar_jugada_botones
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2663   .text:000003ac $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2667   .text:000003b0 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2670   .text:000003b0 calcular_mov_gris_der
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2847   .text:0000052c $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2852   .text:00000530 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:2855   .text:00000530 calcular_mov_gris_izq
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3031   .text:000006ac $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3036   .text:000006b0 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3039   .text:000006b0 procesar_jugada
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3158   .text:000007a8 $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3163   .text:000007ac $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3166   .text:000007ac pintar_fin
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3228   .text:0000082c $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3232   .text:00000830 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3235   .text:00000830 jugada_por_botones
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3500   .text:00000a6c $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3506   .text:00000a70 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3509   .text:00000a70 jugada_ev_tsp
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3527   .text:00000a80 $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3531   .text:00000a84 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3534   .text:00000a84 jugada_ev_der
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3552   .text:00000a94 $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3556   .text:00000a98 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3559   .text:00000a98 jugada_ev_izq
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3577   .text:00000aa8 $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3581   .text:00000aac $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3584   .text:00000aac jugada_ev_timer
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3603   .text:00000ac0 $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3607   .text:00000ac4 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3610   .text:00000ac4 termina_DMA
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3628   .text:00000ad4 $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3632   .text:00000ad8 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:3635   .text:00000ad8 jugada_ev_tecla0
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4006   .text:00000e2c $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4013   .text:00000e30 $a
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4016   .text:00000e30 jugada_ev_tecla1
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4075   .text:00000e7c $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4109   .bss:00000088 haciendo_DMA
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4083   .bss:00000000 $d
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4087   .bss:00000000 final
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4092   .bss:00000004 tablero_actual
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4096   .bss:00000044 tablero_anterior
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4100   .bss:00000084 mi_fila
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4104   .bss:00000085 mi_columna
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4113   .bss:0000008c ev_bot_izq
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4117   .bss:00000090 ev_bot_der
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4121   .bss:00000094 ev_tp
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4125   .bss:00000098 ev_timer
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4129   .bss:0000009c tiempo_calc
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4133   .bss:000000a0 tiempo_total
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4137   .bss:000000a4 tiempo_pv
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4141   .bss:000000a8 veces_pv
C:\Users\pjper\AppData\Local\Temp\ccyDiB7E.s:4145   .bss:000000ac jugada_botones
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
contar_blancas
contar_negras
obtener_tablero
borrar_ficha
pintar_ficha
reversi8_inicializar
pintar_reglas
obtener_ficha_en
mover_gris
timer2_leer
reversi_procesar
obtener_jugada_valida
reversi_t_pv
reversi_veces_pv
pintar_profiling
iniciar_DMA
obtener_fin
pintar_fin_empate
pintar_fin_derrota
pintar_fin_victoria
Lcd_Clr
pintar_jugando
mover_IA
