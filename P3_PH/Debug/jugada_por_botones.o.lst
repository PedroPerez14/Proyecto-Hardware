   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"jugada_por_botones.c"
  21              	.Ltext0:
  22              		.file 1 "../jugada_por_botones.c"
 2174              	jugada_botones:
 2175 0000 00       		.space	1
 2176 0001 000000   		.align	2
 2177              	ev_bot_izq:
 2178 0004 00000000 		.space	4
 2179              		.align	2
 2180              	ev_bot_der:
 2181 0008 00000000 		.space	4
 2182              		.align	2
 2183              	ev_tp:
 2184 000c 00000000 		.space	4
 2185              	mi_fila:
 2186 0010 00       		.space	1
 2187              	mi_columna:
 2188 0011 00       		.space	1
 2189              		.global	haciendo_DMA
 2190 0012 0000     		.align	2
 2193              	haciendo_DMA:
 2194 0014 00000000 		.space	4
 2195              		.align	2
 2196              	ev_timer:
 2197 0018 00000000 		.space	4
 2198              	final:
 2199 001c 00       		.space	1
 2200 001d 000000   		.align	2
 2201              	tiempo_calc:
 2202 0020 00000000 		.space	4
 2203              		.align	2
 2204              	tiempo_total:
 2205 0024 00000000 		.space	4
 2206              		.align	2
 2207              	tiempo_pv:
 2208 0028 00000000 		.space	4
 2209              		.align	2
 2210              	veces_pv:
 2211 002c 00000000 		.space	4
 2212              		.align	2
 2213              	tablero_actual:
 2214 0030 00000000 		.space	64
 2214      00000000 
 2214      00000000 
 2214      00000000 
 2214      00000000 
 2215              		.align	2
 2216              	tablero_anterior:
 2217 0070 00000000 		.space	64
 2217      00000000 
 2217      00000000 
 2217      00000000 
 2217      00000000 
 2218              		.text
 2219              		.align	2
 2220              		.global	inicializar_jugada_botones
 2222              	inicializar_jugada_botones:
 2223              	.LFB0:
   1:../jugada_por_botones.c **** /*********************************************************************************************
   2:../jugada_por_botones.c **** * Fichero:		jugada_por_botones.c
   3:../jugada_por_botones.c **** * Autor:		Pedro José Pérez García (756642) y Fernando Peña Bes (756012)
   4:../jugada_por_botones.c **** * Descrip:		Máquina de estados que gestiona la lógica del juego reversi.
   5:../jugada_por_botones.c **** * 				Las rutinas llamadas desde reversi_main invocan la función del autómata,
   6:../jugada_por_botones.c **** *				que comprueba si debe realizar alguna acción o no.
   7:../jugada_por_botones.c **** * Version:		
   8:../jugada_por_botones.c **** *********************************************************************************************/
   9:../jugada_por_botones.c **** 
  10:../jugada_por_botones.c **** /*--- ficheros de cabecera ---*/
  11:../jugada_por_botones.c **** #include "led.h"
  12:../jugada_por_botones.c **** #include "44b.h"
  13:../jugada_por_botones.c **** #include "44blib.h"
  14:../jugada_por_botones.c **** #include "botones_antirebotes.h"
  15:../jugada_por_botones.c **** #include "8led.h"
  16:../jugada_por_botones.c **** #include "button.h"
  17:../jugada_por_botones.c **** #include "codigos_eventos.h"
  18:../jugada_por_botones.c **** #include "reversi8_2019.h"
  19:../jugada_por_botones.c **** #include "jugada_por_botones.h"
  20:../jugada_por_botones.c **** #include "elementos_pantalla.h"
  21:../jugada_por_botones.c **** #include "definiciones_juego.h"
  22:../jugada_por_botones.c **** #include "lcd.h"					//Se incluye por haciendo_DMA, como nos ha dicho Darío
  23:../jugada_por_botones.c **** /*--- variables del módulo ---*/
  24:../jugada_por_botones.c **** 
  25:../jugada_por_botones.c **** static enum estados{Reglas, Jugando, Fin} jugada_botones;
  26:../jugada_por_botones.c **** static int ev_bot_izq = 0;			//Indica cuándo hay que  actualizar el valor que aparece en el 8led, p
  27:../jugada_por_botones.c **** static int ev_bot_der = 0;			//Flag que señaliza cuándo han pulsado el botón derecho, y cuántas vec
  28:../jugada_por_botones.c **** static int ev_tp = 0;				//Indica que hay que atender un toque del touchpad de alguien
  29:../jugada_por_botones.c **** static char mi_fila = 0;			//La fila donde queremos poner ficha
  30:../jugada_por_botones.c **** static char mi_columna = 0;			//La columna donde queremos poner ficha
  31:../jugada_por_botones.c **** volatile int haciendo_DMA = 0;		//Si estamos haciendo un DMA al LCD
  32:../jugada_por_botones.c **** static int ev_timer = 0;			//Interrupción del timer que indica que hay que refrescar tiempos en pan
  33:../jugada_por_botones.c **** static enum final_partida final;	//Determina si la partida ha terminado, y cómo lo ha hecho: Por em
  34:../jugada_por_botones.c **** /* PROFILING */
  35:../jugada_por_botones.c **** static int tiempo_calc = 0;
  36:../jugada_por_botones.c **** static int tiempo_total = 0;
  37:../jugada_por_botones.c **** static int tiempo_pv = 0;
  38:../jugada_por_botones.c **** static int veces_pv = 0;
  39:../jugada_por_botones.c **** /* TABLEROS PARA ACTUALIZAR SOLO LAS FICHAS NECESARIAS */
  40:../jugada_por_botones.c **** static char tablero_actual[num_filas][num_columnas];		//Aquí se guardarán las fichas después de que
  41:../jugada_por_botones.c **** static char tablero_anterior[num_filas][num_columnas];		//Aquí se guardarán las fichas antes de que
  42:../jugada_por_botones.c **** 															//Se hará la diferencia, y solo se pintarán aquellas que cambien.
  43:../jugada_por_botones.c **** 															//También, después de esto, anterior = actual, para el próximo turno.
  44:../jugada_por_botones.c **** 
  45:../jugada_por_botones.c **** 
  46:../jugada_por_botones.c **** void inicializar_jugada_botones()
  47:../jugada_por_botones.c **** {
 2224              		.loc 1 47 0
 2225              		.cfi_startproc
 2226              		@ Function supports interworking.
 2227              		@ args = 0, pretend = 0, frame = 0
 2228              		@ frame_needed = 1, uses_anonymous_args = 0
 2229 0000 0DC0A0E1 		mov	ip, sp
 2230              	.LCFI0:
 2231              		.cfi_def_cfa_register 12
 2232 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2233 0008 04B04CE2 		sub	fp, ip, #4
 2234              		.cfi_offset 14, -8
 2235              		.cfi_offset 13, -12
 2236              		.cfi_offset 11, -16
 2237              	.LCFI1:
 2238              		.cfi_def_cfa 11, 4
  48:../jugada_por_botones.c **** 	reversi8_inicializar();
 2239              		.loc 1 48 0
 2240 000c FEFFFFEB 		bl	reversi8_inicializar
  49:../jugada_por_botones.c **** 	haciendo_DMA = 1;
 2241              		.loc 1 49 0
 2242 0010 B4309FE5 		ldr	r3, .L2
 2243 0014 0120A0E3 		mov	r2, #1
 2244 0018 002083E5 		str	r2, [r3, #0]
  50:../jugada_por_botones.c **** 	mi_fila = 0;
 2245              		.loc 1 50 0
 2246 001c AC309FE5 		ldr	r3, .L2+4
 2247 0020 0020A0E3 		mov	r2, #0
 2248 0024 0020C3E5 		strb	r2, [r3, #0]
  51:../jugada_por_botones.c **** 	mi_columna = 0;
 2249              		.loc 1 51 0
 2250 0028 A4309FE5 		ldr	r3, .L2+8
 2251 002c 0020A0E3 		mov	r2, #0
 2252 0030 0020C3E5 		strb	r2, [r3, #0]
  52:../jugada_por_botones.c **** 	ev_bot_izq = 0;
 2253              		.loc 1 52 0
 2254 0034 9C309FE5 		ldr	r3, .L2+12
 2255 0038 0020A0E3 		mov	r2, #0
 2256 003c 002083E5 		str	r2, [r3, #0]
  53:../jugada_por_botones.c **** 	ev_bot_der = 0;
 2257              		.loc 1 53 0
 2258 0040 94309FE5 		ldr	r3, .L2+16
 2259 0044 0020A0E3 		mov	r2, #0
 2260 0048 002083E5 		str	r2, [r3, #0]
  54:../jugada_por_botones.c **** 	ev_tp = 0;
 2261              		.loc 1 54 0
 2262 004c 8C309FE5 		ldr	r3, .L2+20
 2263 0050 0020A0E3 		mov	r2, #0
 2264 0054 002083E5 		str	r2, [r3, #0]
  55:../jugada_por_botones.c **** 	ev_timer = 0;
 2265              		.loc 1 55 0
 2266 0058 84309FE5 		ldr	r3, .L2+24
 2267 005c 0020A0E3 		mov	r2, #0
 2268 0060 002083E5 		str	r2, [r3, #0]
  56:../jugada_por_botones.c **** 	final = no_fin;
 2269              		.loc 1 56 0
 2270 0064 7C309FE5 		ldr	r3, .L2+28
 2271 0068 0020A0E3 		mov	r2, #0
 2272 006c 0020C3E5 		strb	r2, [r3, #0]
  57:../jugada_por_botones.c **** 	tiempo_calc = 0;
 2273              		.loc 1 57 0
 2274 0070 74309FE5 		ldr	r3, .L2+32
 2275 0074 0020A0E3 		mov	r2, #0
 2276 0078 002083E5 		str	r2, [r3, #0]
  58:../jugada_por_botones.c **** 	tiempo_total = 0;
 2277              		.loc 1 58 0
 2278 007c 6C309FE5 		ldr	r3, .L2+36
 2279 0080 0020A0E3 		mov	r2, #0
 2280 0084 002083E5 		str	r2, [r3, #0]
  59:../jugada_por_botones.c **** 	tiempo_pv = 0;
 2281              		.loc 1 59 0
 2282 0088 64309FE5 		ldr	r3, .L2+40
 2283 008c 0020A0E3 		mov	r2, #0
 2284 0090 002083E5 		str	r2, [r3, #0]
  60:../jugada_por_botones.c **** 	veces_pv = 0;
 2285              		.loc 1 60 0
 2286 0094 5C309FE5 		ldr	r3, .L2+44
 2287 0098 0020A0E3 		mov	r2, #0
 2288 009c 002083E5 		str	r2, [r3, #0]
  61:../jugada_por_botones.c **** 	obtener_tablero(tablero_actual);
 2289              		.loc 1 61 0
 2290 00a0 54009FE5 		ldr	r0, .L2+48
 2291 00a4 FEFFFFEB 		bl	obtener_tablero
  62:../jugada_por_botones.c **** 	obtener_tablero(tablero_anterior);
 2292              		.loc 1 62 0
 2293 00a8 50009FE5 		ldr	r0, .L2+52
 2294 00ac FEFFFFEB 		bl	obtener_tablero
  63:../jugada_por_botones.c **** 	jugada_botones = Reglas;
 2295              		.loc 1 63 0
 2296 00b0 4C309FE5 		ldr	r3, .L2+56
 2297 00b4 0020A0E3 		mov	r2, #0
 2298 00b8 0020C3E5 		strb	r2, [r3, #0]
  64:../jugada_por_botones.c **** 	pintar_reglas();
 2299              		.loc 1 64 0
 2300 00bc FEFFFFEB 		bl	pintar_reglas
  65:../jugada_por_botones.c **** }
 2301              		.loc 1 65 0
 2302 00c0 0CD04BE2 		sub	sp, fp, #12
 2303 00c4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2304 00c8 1EFF2FE1 		bx	lr
 2305              	.L3:
 2306              		.align	2
 2307              	.L2:
 2308 00cc 00000000 		.word	haciendo_DMA
 2309 00d0 10000000 		.word	mi_fila
 2310 00d4 11000000 		.word	mi_columna
 2311 00d8 04000000 		.word	ev_bot_izq
 2312 00dc 08000000 		.word	ev_bot_der
 2313 00e0 0C000000 		.word	ev_tp
 2314 00e4 18000000 		.word	ev_timer
 2315 00e8 1C000000 		.word	final
 2316 00ec 20000000 		.word	tiempo_calc
 2317 00f0 24000000 		.word	tiempo_total
 2318 00f4 28000000 		.word	tiempo_pv
 2319 00f8 2C000000 		.word	veces_pv
 2320 00fc 30000000 		.word	tablero_actual
 2321 0100 70000000 		.word	tablero_anterior
 2322 0104 00000000 		.word	jugada_botones
 2323              		.cfi_endproc
 2324              	.LFE0:
 2326              		.align	2
 2327              		.global	jugada_por_botones
 2329              	jugada_por_botones:
 2330              	.LFB1:
  66:../jugada_por_botones.c **** 
  67:../jugada_por_botones.c **** void jugada_por_botones()
  68:../jugada_por_botones.c **** {
 2331              		.loc 1 68 0
 2332              		.cfi_startproc
 2333              		@ Function supports interworking.
 2334              		@ args = 0, pretend = 0, frame = 16
 2335              		@ frame_needed = 1, uses_anonymous_args = 0
 2336 0108 0DC0A0E1 		mov	ip, sp
 2337              	.LCFI2:
 2338              		.cfi_def_cfa_register 12
 2339 010c 10D82DE9 		stmfd	sp!, {r4, fp, ip, lr, pc}
 2340 0110 04B04CE2 		sub	fp, ip, #4
 2341              		.cfi_offset 14, -8
 2342              		.cfi_offset 13, -12
 2343              		.cfi_offset 11, -16
 2344              		.cfi_offset 4, -20
 2345              	.LCFI3:
 2346              		.cfi_def_cfa 11, 4
 2347 0114 14D04DE2 		sub	sp, sp, #20
  69:../jugada_por_botones.c **** 	switch(jugada_botones)
 2348              		.loc 1 69 0
 2349 0118 AC359FE5 		ldr	r3, .L34
 2350 011c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2351 0120 000053E3 		cmp	r3, #0
 2352 0124 0200000A 		beq	.L6
 2353 0128 010053E3 		cmp	r3, #1
 2354 012c 2100000A 		beq	.L7
 2355 0130 4C0100EA 		b	.L27
 2356              	.L6:
  70:../jugada_por_botones.c **** 	{
  71:../jugada_por_botones.c **** 	case Reglas:
  72:../jugada_por_botones.c **** 		if(ev_bot_der > 0)
 2357              		.loc 1 72 0
 2358 0134 94359FE5 		ldr	r3, .L34+4
 2359 0138 003093E5 		ldr	r3, [r3, #0]
 2360 013c 000053E3 		cmp	r3, #0
 2361 0140 020000DA 		ble	.L8
  73:../jugada_por_botones.c **** 		{
  74:../jugada_por_botones.c **** 			ev_bot_der = 0;
 2362              		.loc 1 74 0
 2363 0144 84359FE5 		ldr	r3, .L34+4
 2364 0148 0020A0E3 		mov	r2, #0
 2365 014c 002083E5 		str	r2, [r3, #0]
 2366              	.L8:
  75:../jugada_por_botones.c **** 		}
  76:../jugada_por_botones.c **** 		if(ev_bot_izq > 0)
 2367              		.loc 1 76 0
 2368 0150 7C359FE5 		ldr	r3, .L34+8
 2369 0154 003093E5 		ldr	r3, [r3, #0]
 2370 0158 000053E3 		cmp	r3, #0
 2371 015c 020000DA 		ble	.L9
  77:../jugada_por_botones.c **** 		{
  78:../jugada_por_botones.c **** 			ev_bot_izq = 0;
 2372              		.loc 1 78 0
 2373 0160 6C359FE5 		ldr	r3, .L34+8
 2374 0164 0020A0E3 		mov	r2, #0
 2375 0168 002083E5 		str	r2, [r3, #0]
 2376              	.L9:
  79:../jugada_por_botones.c **** 		}
  80:../jugada_por_botones.c **** 		if(ev_tp == 1)
 2377              		.loc 1 80 0
 2378 016c 64359FE5 		ldr	r3, .L34+12
 2379 0170 003093E5 		ldr	r3, [r3, #0]
 2380 0174 010053E3 		cmp	r3, #1
 2381 0178 4501001A 		bne	.L28
  81:../jugada_por_botones.c **** 		{
  82:../jugada_por_botones.c **** 			ev_tp = 0;
 2382              		.loc 1 82 0
 2383 017c 54359FE5 		ldr	r3, .L34+12
 2384 0180 0020A0E3 		mov	r2, #0
 2385 0184 002083E5 		str	r2, [r3, #0]
  83:../jugada_por_botones.c **** 			if(haciendo_DMA == 0)
 2386              		.loc 1 83 0
 2387 0188 4C359FE5 		ldr	r3, .L34+16
 2388 018c 003093E5 		ldr	r3, [r3, #0]
 2389 0190 000053E3 		cmp	r3, #0
 2390 0194 4001001A 		bne	.L29
  84:../jugada_por_botones.c **** 			{
  85:../jugada_por_botones.c **** 				haciendo_DMA = 1;
 2391              		.loc 1 85 0
 2392 0198 3C359FE5 		ldr	r3, .L34+16
 2393 019c 0120A0E3 		mov	r2, #1
 2394 01a0 002083E5 		str	r2, [r3, #0]
  86:../jugada_por_botones.c **** 				jugada_botones = Jugando;
 2395              		.loc 1 86 0
 2396 01a4 20359FE5 		ldr	r3, .L34
 2397 01a8 0120A0E3 		mov	r2, #1
 2398 01ac 0020C3E5 		strb	r2, [r3, #0]
  87:../jugada_por_botones.c **** 				pintar_jugando();
 2399              		.loc 1 87 0
 2400 01b0 FEFFFFEB 		bl	pintar_jugando
  88:../jugada_por_botones.c **** 			}
  89:../jugada_por_botones.c **** 		}
  90:../jugada_por_botones.c **** 		break;
 2401              		.loc 1 90 0
 2402 01b4 410100EA 		b	.L4
 2403              	.L7:
  91:../jugada_por_botones.c **** 	case Jugando:
  92:../jugada_por_botones.c **** 		if(haciendo_DMA == 0 && final != no_fin)
 2404              		.loc 1 92 0
 2405 01b8 1C359FE5 		ldr	r3, .L34+16
 2406 01bc 003093E5 		ldr	r3, [r3, #0]
 2407 01c0 000053E3 		cmp	r3, #0
 2408 01c4 2800001A 		bne	.L12
 2409              		.loc 1 92 0 is_stmt 0 discriminator 1
 2410 01c8 10359FE5 		ldr	r3, .L34+20
 2411 01cc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2412 01d0 000053E3 		cmp	r3, #0
 2413 01d4 2400000A 		beq	.L12
  93:../jugada_por_botones.c **** 		{
  94:../jugada_por_botones.c **** 			haciendo_DMA = 1;
 2414              		.loc 1 94 0 is_stmt 1
 2415 01d8 FC349FE5 		ldr	r3, .L34+16
 2416 01dc 0120A0E3 		mov	r2, #1
 2417 01e0 002083E5 		str	r2, [r3, #0]
  95:../jugada_por_botones.c **** 			if(final == jugador_gana)
 2418              		.loc 1 95 0
 2419 01e4 F4349FE5 		ldr	r3, .L34+20
 2420 01e8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2421 01ec 010053E3 		cmp	r3, #1
 2422 01f0 0700001A 		bne	.L13
  96:../jugada_por_botones.c **** 			{
  97:../jugada_por_botones.c **** 				pintar_fin_victoria(contar_blancas(), contar_negras());
 2423              		.loc 1 97 0
 2424 01f4 FEFFFFEB 		bl	contar_blancas
 2425 01f8 0040A0E1 		mov	r4, r0
 2426 01fc FEFFFFEB 		bl	contar_negras
 2427 0200 0030A0E1 		mov	r3, r0
 2428 0204 0400A0E1 		mov	r0, r4
 2429 0208 0310A0E1 		mov	r1, r3
 2430 020c FEFFFFEB 		bl	pintar_fin_victoria
 2431 0210 120000EA 		b	.L14
 2432              	.L13:
  98:../jugada_por_botones.c **** 			}
  99:../jugada_por_botones.c **** 			else if(final == cpu_gana)
 2433              		.loc 1 99 0
 2434 0214 C4349FE5 		ldr	r3, .L34+20
 2435 0218 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2436 021c 020053E3 		cmp	r3, #2
 2437 0220 0700001A 		bne	.L15
 100:../jugada_por_botones.c **** 			{
 101:../jugada_por_botones.c **** 				pintar_fin_derrota(contar_blancas(), contar_negras());
 2438              		.loc 1 101 0
 2439 0224 FEFFFFEB 		bl	contar_blancas
 2440 0228 0040A0E1 		mov	r4, r0
 2441 022c FEFFFFEB 		bl	contar_negras
 2442 0230 0030A0E1 		mov	r3, r0
 2443 0234 0400A0E1 		mov	r0, r4
 2444 0238 0310A0E1 		mov	r1, r3
 2445 023c FEFFFFEB 		bl	pintar_fin_derrota
 2446 0240 060000EA 		b	.L14
 2447              	.L15:
 102:../jugada_por_botones.c **** 			}
 103:../jugada_por_botones.c **** 			else	//En caso de empate
 104:../jugada_por_botones.c **** 			{
 105:../jugada_por_botones.c **** 				pintar_fin_empate(contar_blancas(), contar_negras());
 2448              		.loc 1 105 0
 2449 0244 FEFFFFEB 		bl	contar_blancas
 2450 0248 0040A0E1 		mov	r4, r0
 2451 024c FEFFFFEB 		bl	contar_negras
 2452 0250 0030A0E1 		mov	r3, r0
 2453 0254 0400A0E1 		mov	r0, r4
 2454 0258 0310A0E1 		mov	r1, r3
 2455 025c FEFFFFEB 		bl	pintar_fin_empate
 2456              	.L14:
 106:../jugada_por_botones.c **** 			}
 107:../jugada_por_botones.c **** 			jugada_botones = Fin;
 2457              		.loc 1 107 0
 2458 0260 64349FE5 		ldr	r3, .L34
 2459 0264 0220A0E3 		mov	r2, #2
 2460 0268 0020C3E5 		strb	r2, [r3, #0]
 2461              	.L12:
 108:../jugada_por_botones.c **** 		}
 109:../jugada_por_botones.c **** 		if(ev_bot_der == 1)		//Incrementar fila
 2462              		.loc 1 109 0
 2463 026c 5C349FE5 		ldr	r3, .L34+4
 2464 0270 003093E5 		ldr	r3, [r3, #0]
 2465 0274 010053E3 		cmp	r3, #1
 2466 0278 3400001A 		bne	.L16
 2467              	.LBB2:
 110:../jugada_por_botones.c **** 		{
 111:../jugada_por_botones.c **** 			ev_bot_der = 0;
 2468              		.loc 1 111 0
 2469 027c 4C349FE5 		ldr	r3, .L34+4
 2470 0280 0020A0E3 		mov	r2, #0
 2471 0284 002083E5 		str	r2, [r3, #0]
 112:../jugada_por_botones.c **** 			int aux = mi_fila;
 2472              		.loc 1 112 0
 2473 0288 54349FE5 		ldr	r3, .L34+24
 2474 028c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2475 0290 18300BE5 		str	r3, [fp, #-24]
 2476              	.L17:
 113:../jugada_por_botones.c **** 			do
 114:../jugada_por_botones.c **** 			{
 115:../jugada_por_botones.c **** 				mi_fila = ((mi_fila + 1) & 0x7);			//8 porque hay 8 columnas en el tablero, [0-7], 0x7 = num_co
 2477              		.loc 1 115 0 discriminator 1
 2478 0294 48349FE5 		ldr	r3, .L34+24
 2479 0298 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2480 029c 013083E2 		add	r3, r3, #1
 2481 02a0 FF3003E2 		and	r3, r3, #255
 2482 02a4 073003E2 		and	r3, r3, #7
 2483 02a8 FF2003E2 		and	r2, r3, #255
 2484 02ac 30349FE5 		ldr	r3, .L34+24
 2485 02b0 0020C3E5 		strb	r2, [r3, #0]
 116:../jugada_por_botones.c **** 			}
 117:../jugada_por_botones.c **** 			while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_c
 2486              		.loc 1 117 0 discriminator 1
 2487 02b4 28349FE5 		ldr	r3, .L34+24
 2488 02b8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2489 02bc 0320A0E1 		mov	r2, r3
 2490 02c0 20349FE5 		ldr	r3, .L34+28
 2491 02c4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2492 02c8 0200A0E1 		mov	r0, r2
 2493 02cc 0310A0E1 		mov	r1, r3
 2494 02d0 FEFFFFEB 		bl	obtener_ficha_en
 2495 02d4 0030A0E1 		mov	r3, r0
 2496 02d8 010053E3 		cmp	r3, #1
 2497 02dc ECFFFF0A 		beq	.L17
 2498              		.loc 1 117 0 is_stmt 0 discriminator 2
 2499 02e0 FC339FE5 		ldr	r3, .L34+24
 2500 02e4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2501 02e8 0320A0E1 		mov	r2, r3
 2502 02ec F4339FE5 		ldr	r3, .L34+28
 2503 02f0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2504 02f4 0200A0E1 		mov	r0, r2
 2505 02f8 0310A0E1 		mov	r1, r3
 2506 02fc FEFFFFEB 		bl	obtener_ficha_en
 2507 0300 0030A0E1 		mov	r3, r0
 2508 0304 020053E3 		cmp	r3, #2
 2509 0308 E1FFFF0A 		beq	.L17
 118:../jugada_por_botones.c **** 
 119:../jugada_por_botones.c **** 			while(haciendo_DMA != 0)
 2510              		.loc 1 119 0 is_stmt 1
 2511 030c 0000A0E1 		mov	r0, r0	@ nop
 2512              	.L18:
 2513              		.loc 1 119 0 is_stmt 0 discriminator 1
 2514 0310 C4339FE5 		ldr	r3, .L34+16
 2515 0314 003093E5 		ldr	r3, [r3, #0]
 2516 0318 000053E3 		cmp	r3, #0
 2517 031c FBFFFF1A 		bne	.L18
 120:../jugada_por_botones.c **** 			{
 121:../jugada_por_botones.c **** 			}
 122:../jugada_por_botones.c **** 			haciendo_DMA = 1;
 2518              		.loc 1 122 0 is_stmt 1
 2519 0320 B4339FE5 		ldr	r3, .L34+16
 2520 0324 0120A0E3 		mov	r2, #1
 2521 0328 002083E5 		str	r2, [r3, #0]
 123:../jugada_por_botones.c **** 			//DMA act ficha gris
 124:../jugada_por_botones.c **** 			mover_gris_abajo(mi_fila, mi_columna, aux);		//Mover en la pantalla
 2522              		.loc 1 124 0
 2523 032c B0339FE5 		ldr	r3, .L34+24
 2524 0330 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2525 0334 0320A0E1 		mov	r2, r3
 2526 0338 A8339FE5 		ldr	r3, .L34+28
 2527 033c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2528 0340 0200A0E1 		mov	r0, r2
 2529 0344 0310A0E1 		mov	r1, r3
 2530 0348 18201BE5 		ldr	r2, [fp, #-24]
 2531 034c FEFFFFEB 		bl	mover_gris_abajo
 2532              	.L16:
 2533              	.LBE2:
 125:../jugada_por_botones.c **** 		}
 126:../jugada_por_botones.c **** 		if(ev_bot_izq == 1)		//Incrementar columna
 2534              		.loc 1 126 0
 2535 0350 7C339FE5 		ldr	r3, .L34+8
 2536 0354 003093E5 		ldr	r3, [r3, #0]
 2537 0358 010053E3 		cmp	r3, #1
 2538 035c 3400001A 		bne	.L19
 2539              	.LBB3:
 127:../jugada_por_botones.c **** 		{
 128:../jugada_por_botones.c **** 			ev_bot_izq = 0;
 2540              		.loc 1 128 0
 2541 0360 6C339FE5 		ldr	r3, .L34+8
 2542 0364 0020A0E3 		mov	r2, #0
 2543 0368 002083E5 		str	r2, [r3, #0]
 129:../jugada_por_botones.c **** 			int aux = mi_columna;
 2544              		.loc 1 129 0
 2545 036c 74339FE5 		ldr	r3, .L34+28
 2546 0370 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2547 0374 1C300BE5 		str	r3, [fp, #-28]
 2548              	.L20:
 130:../jugada_por_botones.c **** 			do
 131:../jugada_por_botones.c **** 			{
 132:../jugada_por_botones.c **** 				mi_columna = ((mi_columna + 1) & 0x7);		//8 porque hay 8 columnas en el tablero, [0-7], 0x7 = n
 2549              		.loc 1 132 0 discriminator 1
 2550 0378 68339FE5 		ldr	r3, .L34+28
 2551 037c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2552 0380 013083E2 		add	r3, r3, #1
 2553 0384 FF3003E2 		and	r3, r3, #255
 2554 0388 073003E2 		and	r3, r3, #7
 2555 038c FF2003E2 		and	r2, r3, #255
 2556 0390 50339FE5 		ldr	r3, .L34+28
 2557 0394 0020C3E5 		strb	r2, [r3, #0]
 133:../jugada_por_botones.c **** 			}
 134:../jugada_por_botones.c **** 			while((obtener_ficha_en(mi_fila, mi_columna) == FICHA_BLANCA) || (obtener_ficha_en(mi_fila, mi_c
 2558              		.loc 1 134 0 discriminator 1
 2559 0398 44339FE5 		ldr	r3, .L34+24
 2560 039c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2561 03a0 0320A0E1 		mov	r2, r3
 2562 03a4 3C339FE5 		ldr	r3, .L34+28
 2563 03a8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2564 03ac 0200A0E1 		mov	r0, r2
 2565 03b0 0310A0E1 		mov	r1, r3
 2566 03b4 FEFFFFEB 		bl	obtener_ficha_en
 2567 03b8 0030A0E1 		mov	r3, r0
 2568 03bc 010053E3 		cmp	r3, #1
 2569 03c0 ECFFFF0A 		beq	.L20
 2570              		.loc 1 134 0 is_stmt 0 discriminator 2
 2571 03c4 18339FE5 		ldr	r3, .L34+24
 2572 03c8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2573 03cc 0320A0E1 		mov	r2, r3
 2574 03d0 10339FE5 		ldr	r3, .L34+28
 2575 03d4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2576 03d8 0200A0E1 		mov	r0, r2
 2577 03dc 0310A0E1 		mov	r1, r3
 2578 03e0 FEFFFFEB 		bl	obtener_ficha_en
 2579 03e4 0030A0E1 		mov	r3, r0
 2580 03e8 020053E3 		cmp	r3, #2
 2581 03ec E1FFFF0A 		beq	.L20
 135:../jugada_por_botones.c **** 
 136:../jugada_por_botones.c **** 			while(haciendo_DMA != 0)		//TODO espera activa que nos ha dicho dario, retrasamos llegar a ella 
 2582              		.loc 1 136 0 is_stmt 1
 2583 03f0 0000A0E1 		mov	r0, r0	@ nop
 2584              	.L21:
 2585              		.loc 1 136 0 is_stmt 0 discriminator 1
 2586 03f4 E0329FE5 		ldr	r3, .L34+16
 2587 03f8 003093E5 		ldr	r3, [r3, #0]
 2588 03fc 000053E3 		cmp	r3, #0
 2589 0400 FBFFFF1A 		bne	.L21
 137:../jugada_por_botones.c **** 			{								//	pero con -O3 creo que esto va a dar dolor de cabeza
 138:../jugada_por_botones.c **** 			}
 139:../jugada_por_botones.c **** 			haciendo_DMA = 1;
 2590              		.loc 1 139 0 is_stmt 1
 2591 0404 D0329FE5 		ldr	r3, .L34+16
 2592 0408 0120A0E3 		mov	r2, #1
 2593 040c 002083E5 		str	r2, [r3, #0]
 140:../jugada_por_botones.c **** 			mover_gris_derecha(mi_fila, mi_columna, aux);	//Mover en la pantalla
 2594              		.loc 1 140 0
 2595 0410 CC329FE5 		ldr	r3, .L34+24
 2596 0414 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2597 0418 0320A0E1 		mov	r2, r3
 2598 041c C4329FE5 		ldr	r3, .L34+28
 2599 0420 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2600 0424 0200A0E1 		mov	r0, r2
 2601 0428 0310A0E1 		mov	r1, r3
 2602 042c 1C201BE5 		ldr	r2, [fp, #-28]
 2603 0430 FEFFFFEB 		bl	mover_gris_derecha
 2604              	.L19:
 2605              	.LBE3:
 141:../jugada_por_botones.c **** 		}
 142:../jugada_por_botones.c **** 		if(haciendo_DMA == 0 && ev_timer > 0)
 2606              		.loc 1 142 0
 2607 0434 A0329FE5 		ldr	r3, .L34+16
 2608 0438 003093E5 		ldr	r3, [r3, #0]
 2609 043c 000053E3 		cmp	r3, #0
 2610 0440 1A00001A 		bne	.L22
 2611              		.loc 1 142 0 is_stmt 0 discriminator 1
 2612 0444 A0329FE5 		ldr	r3, .L34+32
 2613 0448 003093E5 		ldr	r3, [r3, #0]
 2614 044c 000053E3 		cmp	r3, #0
 2615 0450 160000DA 		ble	.L22
 143:../jugada_por_botones.c **** 		{
 144:../jugada_por_botones.c **** 			ev_timer--;
 2616              		.loc 1 144 0 is_stmt 1
 2617 0454 90329FE5 		ldr	r3, .L34+32
 2618 0458 003093E5 		ldr	r3, [r3, #0]
 2619 045c 012043E2 		sub	r2, r3, #1
 2620 0460 84329FE5 		ldr	r3, .L34+32
 2621 0464 002083E5 		str	r2, [r3, #0]
 145:../jugada_por_botones.c **** 			//Actualizar tiempo total
 146:../jugada_por_botones.c **** 			tiempo_total++;
 2622              		.loc 1 146 0
 2623 0468 80329FE5 		ldr	r3, .L34+36
 2624 046c 003093E5 		ldr	r3, [r3, #0]
 2625 0470 012083E2 		add	r2, r3, #1
 2626 0474 74329FE5 		ldr	r3, .L34+36
 2627 0478 002083E5 		str	r2, [r3, #0]
 147:../jugada_por_botones.c **** 			//DMA act pantalla con nuevos tiempos
 148:../jugada_por_botones.c **** 			pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 2628              		.loc 1 148 0
 2629 047c 6C329FE5 		ldr	r3, .L34+36
 2630 0480 000093E5 		ldr	r0, [r3, #0]
 2631 0484 68329FE5 		ldr	r3, .L34+40
 2632 0488 001093E5 		ldr	r1, [r3, #0]
 2633 048c 64329FE5 		ldr	r3, .L34+44
 2634 0490 002093E5 		ldr	r2, [r3, #0]
 2635 0494 60329FE5 		ldr	r3, .L34+48
 2636 0498 003093E5 		ldr	r3, [r3, #0]
 2637 049c FEFFFFEB 		bl	pintar_profiling
 149:../jugada_por_botones.c **** 			haciendo_DMA = 1;
 2638              		.loc 1 149 0
 2639 04a0 34329FE5 		ldr	r3, .L34+16
 2640 04a4 0120A0E3 		mov	r2, #1
 2641 04a8 002083E5 		str	r2, [r3, #0]
 150:../jugada_por_botones.c **** 			iniciar_DMA();
 2642              		.loc 1 150 0
 2643 04ac FEFFFFEB 		bl	iniciar_DMA
 2644              	.L22:
 151:../jugada_por_botones.c **** 		}
 152:../jugada_por_botones.c **** 		if(ev_tp == 1)
 2645              		.loc 1 152 0
 2646 04b0 20329FE5 		ldr	r3, .L34+12
 2647 04b4 003093E5 		ldr	r3, [r3, #0]
 2648 04b8 010053E3 		cmp	r3, #1
 2649 04bc 7800001A 		bne	.L30
 153:../jugada_por_botones.c **** 		{
 154:../jugada_por_botones.c **** 			ev_tp = 0;
 2650              		.loc 1 154 0
 2651 04c0 10329FE5 		ldr	r3, .L34+12
 2652 04c4 0020A0E3 		mov	r2, #0
 2653 04c8 002083E5 		str	r2, [r3, #0]
 155:../jugada_por_botones.c **** 			if(haciendo_DMA == 0)
 2654              		.loc 1 155 0
 2655 04cc 08329FE5 		ldr	r3, .L34+16
 2656 04d0 003093E5 		ldr	r3, [r3, #0]
 2657 04d4 000053E3 		cmp	r3, #0
 2658 04d8 7300001A 		bne	.L31
 2659              	.LBB4:
 156:../jugada_por_botones.c **** 			{
 157:../jugada_por_botones.c **** 				unsigned int delta1 = timer2_leer();
 2660              		.loc 1 157 0
 2661 04dc FEFFFFEB 		bl	timer2_leer
 2662 04e0 20000BE5 		str	r0, [fp, #-32]
 158:../jugada_por_botones.c **** 				reversi_procesar(mi_fila, mi_columna);		//Calcula la jugada de la IA y calcula tiempos de proce
 2663              		.loc 1 158 0
 2664 04e4 F8319FE5 		ldr	r3, .L34+24
 2665 04e8 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2666 04ec F4319FE5 		ldr	r3, .L34+28
 2667 04f0 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2668 04f4 0200A0E1 		mov	r0, r2
 2669 04f8 0310A0E1 		mov	r1, r3
 2670 04fc FEFFFFEB 		bl	reversi_procesar
 159:../jugada_por_botones.c **** 				unsigned int delta2 = timer2_leer();
 2671              		.loc 1 159 0
 2672 0500 FEFFFFEB 		bl	timer2_leer
 2673 0504 24000BE5 		str	r0, [fp, #-36]
 160:../jugada_por_botones.c **** 				tiempo_calc += (delta2-delta1);
 2674              		.loc 1 160 0
 2675 0508 24201BE5 		ldr	r2, [fp, #-36]
 2676 050c 20301BE5 		ldr	r3, [fp, #-32]
 2677 0510 022063E0 		rsb	r2, r3, r2
 2678 0514 D8319FE5 		ldr	r3, .L34+40
 2679 0518 003093E5 		ldr	r3, [r3, #0]
 2680 051c 033082E0 		add	r3, r2, r3
 2681 0520 0320A0E1 		mov	r2, r3
 2682 0524 C8319FE5 		ldr	r3, .L34+40
 2683 0528 002083E5 		str	r2, [r3, #0]
 161:../jugada_por_botones.c **** 				if(obtener_jugada_valida() == 1)
 2684              		.loc 1 161 0
 2685 052c FEFFFFEB 		bl	obtener_jugada_valida
 2686 0530 0030A0E1 		mov	r3, r0
 2687 0534 010053E3 		cmp	r3, #1
 2688 0538 2900001A 		bne	.L24
 2689              	.LBB5:
 162:../jugada_por_botones.c **** 				{
 163:../jugada_por_botones.c **** 					borrar_ficha(mi_fila, mi_columna);
 2690              		.loc 1 163 0
 2691 053c A0319FE5 		ldr	r3, .L34+24
 2692 0540 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2693 0544 0320A0E1 		mov	r2, r3
 2694 0548 98319FE5 		ldr	r3, .L34+28
 2695 054c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2696 0550 0200A0E1 		mov	r0, r2
 2697 0554 0310A0E1 		mov	r1, r3
 2698 0558 FEFFFFEB 		bl	borrar_ficha
 164:../jugada_por_botones.c **** 					actualizar_movimientos_pantalla();		//Pone la ficha que hemos jugado, la ficha de la cpu, y vo
 2699              		.loc 1 164 0
 2700 055c 9C319FE5 		ldr	r3, .L34+52
 2701 0560 0FE0A0E1 		mov	lr, pc
 2702 0564 13FF2FE1 		bx	r3
 165:../jugada_por_botones.c **** 					reiniciar_posicion_gris();				//Devuelve la ficha gris a 0,0, y si está ocupada, a la primera 
 2703              		.loc 1 165 0
 2704 0568 94319FE5 		ldr	r3, .L34+56
 2705 056c 0FE0A0E1 		mov	lr, pc
 2706 0570 13FF2FE1 		bx	r3
 166:../jugada_por_botones.c **** 					//obtener datos de profiling
 167:../jugada_por_botones.c **** 					tiempo_pv += reversi_t_pv();
 2707              		.loc 1 167 0
 2708 0574 FEFFFFEB 		bl	reversi_t_pv
 2709 0578 0020A0E1 		mov	r2, r0
 2710 057c 74319FE5 		ldr	r3, .L34+44
 2711 0580 003093E5 		ldr	r3, [r3, #0]
 2712 0584 032082E0 		add	r2, r2, r3
 2713 0588 68319FE5 		ldr	r3, .L34+44
 2714 058c 002083E5 		str	r2, [r3, #0]
 168:../jugada_por_botones.c **** 					veces_pv += reversi_veces_pv();
 2715              		.loc 1 168 0
 2716 0590 FEFFFFEB 		bl	reversi_veces_pv
 2717 0594 0020A0E1 		mov	r2, r0
 2718 0598 5C319FE5 		ldr	r3, .L34+48
 2719 059c 003093E5 		ldr	r3, [r3, #0]
 2720 05a0 032082E0 		add	r2, r2, r3
 2721 05a4 50319FE5 		ldr	r3, .L34+48
 2722 05a8 002083E5 		str	r2, [r3, #0]
 169:../jugada_por_botones.c **** 					pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 2723              		.loc 1 169 0
 2724 05ac 3C319FE5 		ldr	r3, .L34+36
 2725 05b0 000093E5 		ldr	r0, [r3, #0]
 2726 05b4 38319FE5 		ldr	r3, .L34+40
 2727 05b8 001093E5 		ldr	r1, [r3, #0]
 2728 05bc 34319FE5 		ldr	r3, .L34+44
 2729 05c0 002093E5 		ldr	r2, [r3, #0]
 2730 05c4 30319FE5 		ldr	r3, .L34+48
 2731 05c8 003093E5 		ldr	r3, [r3, #0]
 2732 05cc FEFFFFEB 		bl	pintar_profiling
 170:../jugada_por_botones.c **** 					haciendo_DMA = 1;
 2733              		.loc 1 170 0
 2734 05d0 04319FE5 		ldr	r3, .L34+16
 2735 05d4 0120A0E3 		mov	r2, #1
 2736 05d8 002083E5 		str	r2, [r3, #0]
 171:../jugada_por_botones.c **** 					iniciar_DMA();
 2737              		.loc 1 171 0
 2738 05dc FEFFFFEB 		bl	iniciar_DMA
 2739 05e0 1A0000EA 		b	.L25
 2740              	.L24:
 2741              	.LBE5:
 172:../jugada_por_botones.c **** 				}
 173:../jugada_por_botones.c **** 				else
 174:../jugada_por_botones.c **** 				{
 175:../jugada_por_botones.c **** 					tiempo_pv += reversi_t_pv();
 2742              		.loc 1 175 0
 2743 05e4 FEFFFFEB 		bl	reversi_t_pv
 2744 05e8 0020A0E1 		mov	r2, r0
 2745 05ec 04319FE5 		ldr	r3, .L34+44
 2746 05f0 003093E5 		ldr	r3, [r3, #0]
 2747 05f4 032082E0 		add	r2, r2, r3
 2748 05f8 F8309FE5 		ldr	r3, .L34+44
 2749 05fc 002083E5 		str	r2, [r3, #0]
 176:../jugada_por_botones.c **** 					veces_pv += reversi_veces_pv();
 2750              		.loc 1 176 0
 2751 0600 FEFFFFEB 		bl	reversi_veces_pv
 2752 0604 0020A0E1 		mov	r2, r0
 2753 0608 EC309FE5 		ldr	r3, .L34+48
 2754 060c 003093E5 		ldr	r3, [r3, #0]
 2755 0610 032082E0 		add	r2, r2, r3
 2756 0614 E0309FE5 		ldr	r3, .L34+48
 2757 0618 002083E5 		str	r2, [r3, #0]
 177:../jugada_por_botones.c **** 					pintar_profiling(tiempo_total, tiempo_calc, tiempo_pv, veces_pv);
 2758              		.loc 1 177 0
 2759 061c CC309FE5 		ldr	r3, .L34+36
 2760 0620 000093E5 		ldr	r0, [r3, #0]
 2761 0624 C8309FE5 		ldr	r3, .L34+40
 2762 0628 001093E5 		ldr	r1, [r3, #0]
 2763 062c C4309FE5 		ldr	r3, .L34+44
 2764 0630 002093E5 		ldr	r2, [r3, #0]
 2765 0634 C0309FE5 		ldr	r3, .L34+48
 2766 0638 003093E5 		ldr	r3, [r3, #0]
 2767 063c FEFFFFEB 		bl	pintar_profiling
 178:../jugada_por_botones.c **** 					haciendo_DMA = 1;
 2768              		.loc 1 178 0
 2769 0640 94309FE5 		ldr	r3, .L34+16
 2770 0644 0120A0E3 		mov	r2, #1
 2771 0648 002083E5 		str	r2, [r3, #0]
 179:../jugada_por_botones.c **** 					iniciar_DMA();
 2772              		.loc 1 179 0
 2773 064c FEFFFFEB 		bl	iniciar_DMA
 2774              	.L25:
 180:../jugada_por_botones.c **** 				}
 181:../jugada_por_botones.c **** 				final = obtener_fin();
 2775              		.loc 1 181 0
 2776 0650 FEFFFFEB 		bl	obtener_fin
 2777 0654 0030A0E1 		mov	r3, r0
 2778 0658 0320A0E1 		mov	r2, r3
 2779 065c 7C309FE5 		ldr	r3, .L34+20
 2780 0660 0020C3E5 		strb	r2, [r3, #0]
 2781              	.LBE4:
 182:../jugada_por_botones.c **** 			}
 183:../jugada_por_botones.c **** 		}
 184:../jugada_por_botones.c **** 		break;
 2782              		.loc 1 184 0
 2783 0664 150000EA 		b	.L4
 2784              	.L27:
 185:../jugada_por_botones.c **** 	default:	//case Fin
 186:../jugada_por_botones.c **** 		if(haciendo_DMA == 0 && ev_tp == 1)		//Reiniciar partida, restaurando el estado inicial del autóm
 2785              		.loc 1 186 0
 2786 0668 6C309FE5 		ldr	r3, .L34+16
 2787 066c 003093E5 		ldr	r3, [r3, #0]
 2788 0670 000053E3 		cmp	r3, #0
 2789 0674 0E00001A 		bne	.L32
 2790              		.loc 1 186 0 is_stmt 0 discriminator 1
 2791 0678 58309FE5 		ldr	r3, .L34+12
 2792 067c 003093E5 		ldr	r3, [r3, #0]
 2793 0680 010053E3 		cmp	r3, #1
 2794 0684 0C00001A 		bne	.L33
 187:../jugada_por_botones.c **** 		{
 188:../jugada_por_botones.c **** 			Lcd_Clr();
 2795              		.loc 1 188 0 is_stmt 1
 2796 0688 FEFFFFEB 		bl	Lcd_Clr
 189:../jugada_por_botones.c **** 			inicializar_jugada_botones();
 2797              		.loc 1 189 0
 2798 068c FEFFFFEB 		bl	inicializar_jugada_botones
 190:../jugada_por_botones.c **** 		}
 191:../jugada_por_botones.c **** 		break;
 2799              		.loc 1 191 0
 2800 0690 0A0000EA 		b	.L4
 2801              	.L28:
  90:../jugada_por_botones.c **** 		break;
 2802              		.loc 1 90 0
 2803 0694 0000A0E1 		mov	r0, r0	@ nop
 2804 0698 080000EA 		b	.L4
 2805              	.L29:
 2806 069c 0000A0E1 		mov	r0, r0	@ nop
 2807 06a0 060000EA 		b	.L4
 2808              	.L30:
 184:../jugada_por_botones.c **** 		break;
 2809              		.loc 1 184 0
 2810 06a4 0000A0E1 		mov	r0, r0	@ nop
 2811 06a8 040000EA 		b	.L4
 2812              	.L31:
 2813 06ac 0000A0E1 		mov	r0, r0	@ nop
 2814 06b0 020000EA 		b	.L4
 2815              	.L32:
 2816              		.loc 1 191 0
 2817 06b4 0000A0E1 		mov	r0, r0	@ nop
 2818 06b8 000000EA 		b	.L4
 2819              	.L33:
 2820 06bc 0000A0E1 		mov	r0, r0	@ nop
 2821              	.L4:
 192:../jugada_por_botones.c **** 	}
 193:../jugada_por_botones.c **** }
 2822              		.loc 1 193 0
 2823 06c0 10D04BE2 		sub	sp, fp, #16
 2824 06c4 10689DE8 		ldmfd	sp, {r4, fp, sp, lr}
 2825 06c8 1EFF2FE1 		bx	lr
 2826              	.L35:
 2827              		.align	2
 2828              	.L34:
 2829 06cc 00000000 		.word	jugada_botones
 2830 06d0 08000000 		.word	ev_bot_der
 2831 06d4 04000000 		.word	ev_bot_izq
 2832 06d8 0C000000 		.word	ev_tp
 2833 06dc 00000000 		.word	haciendo_DMA
 2834 06e0 1C000000 		.word	final
 2835 06e4 10000000 		.word	mi_fila
 2836 06e8 11000000 		.word	mi_columna
 2837 06ec 18000000 		.word	ev_timer
 2838 06f0 24000000 		.word	tiempo_total
 2839 06f4 20000000 		.word	tiempo_calc
 2840 06f8 28000000 		.word	tiempo_pv
 2841 06fc 2C000000 		.word	veces_pv
 2842 0700 00000000 		.word	actualizar_movimientos_pantalla
 2843 0704 00000000 		.word	reiniciar_posicion_gris
 2844              		.cfi_endproc
 2845              	.LFE1:
 2847              		.align	2
 2848              		.global	jugada_ev_tsp
 2850              	jugada_ev_tsp:
 2851              	.LFB2:
 194:../jugada_por_botones.c **** 
 195:../jugada_por_botones.c **** //Se llama cuando se pulsa en tsp, confirmando la jugada
 196:../jugada_por_botones.c **** void jugada_ev_tsp()
 197:../jugada_por_botones.c **** {
 2852              		.loc 1 197 0
 2853              		.cfi_startproc
 2854              		@ Function supports interworking.
 2855              		@ args = 0, pretend = 0, frame = 0
 2856              		@ frame_needed = 1, uses_anonymous_args = 0
 2857 0708 0DC0A0E1 		mov	ip, sp
 2858              	.LCFI4:
 2859              		.cfi_def_cfa_register 12
 2860 070c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2861 0710 04B04CE2 		sub	fp, ip, #4
 2862              		.cfi_offset 14, -8
 2863              		.cfi_offset 13, -12
 2864              		.cfi_offset 11, -16
 2865              	.LCFI5:
 2866              		.cfi_def_cfa 11, 4
 198:../jugada_por_botones.c **** 	ev_tp = 1;
 2867              		.loc 1 198 0
 2868 0714 14309FE5 		ldr	r3, .L37
 2869 0718 0120A0E3 		mov	r2, #1
 2870 071c 002083E5 		str	r2, [r3, #0]
 199:../jugada_por_botones.c **** 	jugada_por_botones();
 2871              		.loc 1 199 0
 2872 0720 FEFFFFEB 		bl	jugada_por_botones
 200:../jugada_por_botones.c **** }
 2873              		.loc 1 200 0
 2874 0724 0CD04BE2 		sub	sp, fp, #12
 2875 0728 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2876 072c 1EFF2FE1 		bx	lr
 2877              	.L38:
 2878              		.align	2
 2879              	.L37:
 2880 0730 0C000000 		.word	ev_tp
 2881              		.cfi_endproc
 2882              	.LFE2:
 2884              		.align	2
 2885              		.global	jugada_ev_der
 2887              	jugada_ev_der:
 2888              	.LFB3:
 201:../jugada_por_botones.c **** 
 202:../jugada_por_botones.c **** //Se llama cuando el botón derecho es pulsado, para tratar el evento
 203:../jugada_por_botones.c **** void jugada_ev_der()
 204:../jugada_por_botones.c **** {
 2889              		.loc 1 204 0
 2890              		.cfi_startproc
 2891              		@ Function supports interworking.
 2892              		@ args = 0, pretend = 0, frame = 0
 2893              		@ frame_needed = 1, uses_anonymous_args = 0
 2894 0734 0DC0A0E1 		mov	ip, sp
 2895              	.LCFI6:
 2896              		.cfi_def_cfa_register 12
 2897 0738 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2898 073c 04B04CE2 		sub	fp, ip, #4
 2899              		.cfi_offset 14, -8
 2900              		.cfi_offset 13, -12
 2901              		.cfi_offset 11, -16
 2902              	.LCFI7:
 2903              		.cfi_def_cfa 11, 4
 205:../jugada_por_botones.c **** 	ev_bot_der = 1;
 2904              		.loc 1 205 0
 2905 0740 14309FE5 		ldr	r3, .L40
 2906 0744 0120A0E3 		mov	r2, #1
 2907 0748 002083E5 		str	r2, [r3, #0]
 206:../jugada_por_botones.c **** 	jugada_por_botones();
 2908              		.loc 1 206 0
 2909 074c FEFFFFEB 		bl	jugada_por_botones
 207:../jugada_por_botones.c **** }
 2910              		.loc 1 207 0
 2911 0750 0CD04BE2 		sub	sp, fp, #12
 2912 0754 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2913 0758 1EFF2FE1 		bx	lr
 2914              	.L41:
 2915              		.align	2
 2916              	.L40:
 2917 075c 08000000 		.word	ev_bot_der
 2918              		.cfi_endproc
 2919              	.LFE3:
 2921              		.align	2
 2922              		.global	jugada_ev_izq
 2924              	jugada_ev_izq:
 2925              	.LFB4:
 208:../jugada_por_botones.c **** 
 209:../jugada_por_botones.c **** //Se llama cuando, por autoincremento o por pulsación nueva,
 210:../jugada_por_botones.c **** //	hay que incrementar el valor del 8Led y la variable asociada a él.
 211:../jugada_por_botones.c **** void jugada_ev_izq()
 212:../jugada_por_botones.c **** {
 2926              		.loc 1 212 0
 2927              		.cfi_startproc
 2928              		@ Function supports interworking.
 2929              		@ args = 0, pretend = 0, frame = 0
 2930              		@ frame_needed = 1, uses_anonymous_args = 0
 2931 0760 0DC0A0E1 		mov	ip, sp
 2932              	.LCFI8:
 2933              		.cfi_def_cfa_register 12
 2934 0764 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2935 0768 04B04CE2 		sub	fp, ip, #4
 2936              		.cfi_offset 14, -8
 2937              		.cfi_offset 13, -12
 2938              		.cfi_offset 11, -16
 2939              	.LCFI9:
 2940              		.cfi_def_cfa 11, 4
 213:../jugada_por_botones.c **** 	ev_bot_izq = 1;
 2941              		.loc 1 213 0
 2942 076c 14309FE5 		ldr	r3, .L43
 2943 0770 0120A0E3 		mov	r2, #1
 2944 0774 002083E5 		str	r2, [r3, #0]
 214:../jugada_por_botones.c **** 	jugada_por_botones();
 2945              		.loc 1 214 0
 2946 0778 FEFFFFEB 		bl	jugada_por_botones
 215:../jugada_por_botones.c **** }
 2947              		.loc 1 215 0
 2948 077c 0CD04BE2 		sub	sp, fp, #12
 2949 0780 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2950 0784 1EFF2FE1 		bx	lr
 2951              	.L44:
 2952              		.align	2
 2953              	.L43:
 2954 0788 04000000 		.word	ev_bot_izq
 2955              		.cfi_endproc
 2956              	.LFE4:
 2958              		.align	2
 2959              		.global	jugada_ev_timer
 2961              	jugada_ev_timer:
 2962              	.LFB5:
 216:../jugada_por_botones.c **** //Se llama cuando haya que incrementar la cuenta de tiempo de juego en segundos
 217:../jugada_por_botones.c **** void jugada_ev_timer()
 218:../jugada_por_botones.c **** {
 2963              		.loc 1 218 0
 2964              		.cfi_startproc
 2965              		@ Function supports interworking.
 2966              		@ args = 0, pretend = 0, frame = 0
 2967              		@ frame_needed = 1, uses_anonymous_args = 0
 2968 078c 0DC0A0E1 		mov	ip, sp
 2969              	.LCFI10:
 2970              		.cfi_def_cfa_register 12
 2971 0790 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2972 0794 04B04CE2 		sub	fp, ip, #4
 2973              		.cfi_offset 14, -8
 2974              		.cfi_offset 13, -12
 2975              		.cfi_offset 11, -16
 2976              	.LCFI11:
 2977              		.cfi_def_cfa 11, 4
 219:../jugada_por_botones.c **** 	ev_timer++;
 2978              		.loc 1 219 0
 2979 0798 1C309FE5 		ldr	r3, .L46
 2980 079c 003093E5 		ldr	r3, [r3, #0]
 2981 07a0 012083E2 		add	r2, r3, #1
 2982 07a4 10309FE5 		ldr	r3, .L46
 2983 07a8 002083E5 		str	r2, [r3, #0]
 220:../jugada_por_botones.c **** 	jugada_por_botones();
 2984              		.loc 1 220 0
 2985 07ac FEFFFFEB 		bl	jugada_por_botones
 221:../jugada_por_botones.c **** }
 2986              		.loc 1 221 0
 2987 07b0 0CD04BE2 		sub	sp, fp, #12
 2988 07b4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2989 07b8 1EFF2FE1 		bx	lr
 2990              	.L47:
 2991              		.align	2
 2992              	.L46:
 2993 07bc 18000000 		.word	ev_timer
 2994              		.cfi_endproc
 2995              	.LFE5:
 2997              		.align	2
 2998              		.global	termina_DMA
 3000              	termina_DMA:
 3001              	.LFB6:
 222:../jugada_por_botones.c **** 
 223:../jugada_por_botones.c **** //Se llama para avisar al autómata de que la transferencia por DMA ha terminado
 224:../jugada_por_botones.c **** void termina_DMA()
 225:../jugada_por_botones.c **** {
 3002              		.loc 1 225 0
 3003              		.cfi_startproc
 3004              		@ Function supports interworking.
 3005              		@ args = 0, pretend = 0, frame = 0
 3006              		@ frame_needed = 1, uses_anonymous_args = 0
 3007 07c0 0DC0A0E1 		mov	ip, sp
 3008              	.LCFI12:
 3009              		.cfi_def_cfa_register 12
 3010 07c4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3011 07c8 04B04CE2 		sub	fp, ip, #4
 3012              		.cfi_offset 14, -8
 3013              		.cfi_offset 13, -12
 3014              		.cfi_offset 11, -16
 3015              	.LCFI13:
 3016              		.cfi_def_cfa 11, 4
 226:../jugada_por_botones.c **** 	haciendo_DMA = 0;
 3017              		.loc 1 226 0
 3018 07cc 14309FE5 		ldr	r3, .L49
 3019 07d0 0020A0E3 		mov	r2, #0
 3020 07d4 002083E5 		str	r2, [r3, #0]
 227:../jugada_por_botones.c **** 	jugada_por_botones();
 3021              		.loc 1 227 0
 3022 07d8 FEFFFFEB 		bl	jugada_por_botones
 228:../jugada_por_botones.c **** }
 3023              		.loc 1 228 0
 3024 07dc 0CD04BE2 		sub	sp, fp, #12
 3025 07e0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3026 07e4 1EFF2FE1 		bx	lr
 3027              	.L50:
 3028              		.align	2
 3029              	.L49:
 3030 07e8 00000000 		.word	haciendo_DMA
 3031              		.cfi_endproc
 3032              	.LFE6:
 3034              		.align	2
 3035              		.global	reiniciar_posicion_gris
 3037              	reiniciar_posicion_gris:
 3038              	.LFB7:
 229:../jugada_por_botones.c **** 
 230:../jugada_por_botones.c **** 
 231:../jugada_por_botones.c **** //Se llama tras hacer un movimiento
 232:../jugada_por_botones.c **** //	Devuelve la ficha gris a 0,0 o a la siguiente posición libre del tablero,
 233:../jugada_por_botones.c **** //	para hacer la siguiente jugada.
 234:../jugada_por_botones.c **** void reiniciar_posicion_gris()
 235:../jugada_por_botones.c **** {
 3039              		.loc 1 235 0
 3040              		.cfi_startproc
 3041              		@ Function supports interworking.
 3042              		@ args = 0, pretend = 0, frame = 16
 3043              		@ frame_needed = 1, uses_anonymous_args = 0
 3044 07ec 0DC0A0E1 		mov	ip, sp
 3045              	.LCFI14:
 3046              		.cfi_def_cfa_register 12
 3047 07f0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3048 07f4 04B04CE2 		sub	fp, ip, #4
 3049              		.cfi_offset 14, -8
 3050              		.cfi_offset 13, -12
 3051              		.cfi_offset 11, -16
 3052              	.LCFI15:
 3053              		.cfi_def_cfa 11, 4
 3054 07f8 10D04DE2 		sub	sp, sp, #16
 236:../jugada_por_botones.c **** 	mi_fila = 0;
 3055              		.loc 1 236 0
 3056 07fc F4309FE5 		ldr	r3, .L59
 3057 0800 0020A0E3 		mov	r2, #0
 3058 0804 0020C3E5 		strb	r2, [r3, #0]
 237:../jugada_por_botones.c **** 	mi_columna = 0;
 3059              		.loc 1 237 0
 3060 0808 EC309FE5 		ldr	r3, .L59+4
 3061 080c 0020A0E3 		mov	r2, #0
 3062 0810 0020C3E5 		strb	r2, [r3, #0]
 238:../jugada_por_botones.c **** 	int i,j;
 239:../jugada_por_botones.c **** 	int fin_bucle = 0;
 3063              		.loc 1 239 0
 3064 0814 0030A0E3 		mov	r3, #0
 3065 0818 18300BE5 		str	r3, [fp, #-24]
 240:../jugada_por_botones.c **** 	for(i = 0; i < num_filas && fin_bucle == 0; i++)
 3066              		.loc 1 240 0
 3067 081c 0030A0E3 		mov	r3, #0
 3068 0820 10300BE5 		str	r3, [fp, #-16]
 3069 0824 210000EA 		b	.L52
 3070              	.L58:
 241:../jugada_por_botones.c **** 	{
 242:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas && fin_bucle == 0; j++)
 3071              		.loc 1 242 0
 3072 0828 0030A0E3 		mov	r3, #0
 3073 082c 14300BE5 		str	r3, [fp, #-20]
 3074 0830 150000EA 		b	.L53
 3075              	.L56:
 243:../jugada_por_botones.c **** 		{
 244:../jugada_por_botones.c **** 			if(tablero_actual[i][j] == CASILLA_VACIA)
 3076              		.loc 1 244 0
 3077 0834 C4209FE5 		ldr	r2, .L59+8
 3078 0838 10301BE5 		ldr	r3, [fp, #-16]
 3079 083c 8311A0E1 		mov	r1, r3, asl #3
 3080 0840 14301BE5 		ldr	r3, [fp, #-20]
 3081 0844 033081E0 		add	r3, r1, r3
 3082 0848 033082E0 		add	r3, r2, r3
 3083 084c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3084 0850 000053E3 		cmp	r3, #0
 3085 0854 0900001A 		bne	.L54
 245:../jugada_por_botones.c **** 			{
 246:../jugada_por_botones.c **** 				mi_fila = i;
 3086              		.loc 1 246 0
 3087 0858 10301BE5 		ldr	r3, [fp, #-16]
 3088 085c FF2003E2 		and	r2, r3, #255
 3089 0860 90309FE5 		ldr	r3, .L59
 3090 0864 0020C3E5 		strb	r2, [r3, #0]
 247:../jugada_por_botones.c **** 				mi_columna = j;
 3091              		.loc 1 247 0
 3092 0868 14301BE5 		ldr	r3, [fp, #-20]
 3093 086c FF2003E2 		and	r2, r3, #255
 3094 0870 84309FE5 		ldr	r3, .L59+4
 3095 0874 0020C3E5 		strb	r2, [r3, #0]
 248:../jugada_por_botones.c **** 				fin_bucle = 1;
 3096              		.loc 1 248 0
 3097 0878 0130A0E3 		mov	r3, #1
 3098 087c 18300BE5 		str	r3, [fp, #-24]
 3099              	.L54:
 242:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas && fin_bucle == 0; j++)
 3100              		.loc 1 242 0
 3101 0880 14301BE5 		ldr	r3, [fp, #-20]
 3102 0884 013083E2 		add	r3, r3, #1
 3103 0888 14300BE5 		str	r3, [fp, #-20]
 3104              	.L53:
 242:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas && fin_bucle == 0; j++)
 3105              		.loc 1 242 0 is_stmt 0 discriminator 1
 3106 088c 14301BE5 		ldr	r3, [fp, #-20]
 3107 0890 070053E3 		cmp	r3, #7
 3108 0894 020000CA 		bgt	.L55
 242:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas && fin_bucle == 0; j++)
 3109              		.loc 1 242 0 discriminator 2
 3110 0898 18301BE5 		ldr	r3, [fp, #-24]
 3111 089c 000053E3 		cmp	r3, #0
 3112 08a0 E3FFFF0A 		beq	.L56
 3113              	.L55:
 240:../jugada_por_botones.c **** 	for(i = 0; i < num_filas && fin_bucle == 0; i++)
 3114              		.loc 1 240 0 is_stmt 1
 3115 08a4 10301BE5 		ldr	r3, [fp, #-16]
 3116 08a8 013083E2 		add	r3, r3, #1
 3117 08ac 10300BE5 		str	r3, [fp, #-16]
 3118              	.L52:
 240:../jugada_por_botones.c **** 	for(i = 0; i < num_filas && fin_bucle == 0; i++)
 3119              		.loc 1 240 0 is_stmt 0 discriminator 1
 3120 08b0 10301BE5 		ldr	r3, [fp, #-16]
 3121 08b4 070053E3 		cmp	r3, #7
 3122 08b8 020000CA 		bgt	.L57
 240:../jugada_por_botones.c **** 	for(i = 0; i < num_filas && fin_bucle == 0; i++)
 3123              		.loc 1 240 0 discriminator 2
 3124 08bc 18301BE5 		ldr	r3, [fp, #-24]
 3125 08c0 000053E3 		cmp	r3, #0
 3126 08c4 D7FFFF0A 		beq	.L58
 3127              	.L57:
 249:../jugada_por_botones.c **** 			}
 250:../jugada_por_botones.c **** 		}
 251:../jugada_por_botones.c **** 	}
 252:../jugada_por_botones.c **** 	pintar_ficha(mi_fila, mi_columna, FICHA_GRIS);
 3128              		.loc 1 252 0 is_stmt 1
 3129 08c8 28309FE5 		ldr	r3, .L59
 3130 08cc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3131 08d0 0320A0E1 		mov	r2, r3
 3132 08d4 20309FE5 		ldr	r3, .L59+4
 3133 08d8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3134 08dc 0200A0E1 		mov	r0, r2
 3135 08e0 0310A0E1 		mov	r1, r3
 3136 08e4 0320A0E3 		mov	r2, #3
 3137 08e8 FEFFFFEB 		bl	pintar_ficha
 253:../jugada_por_botones.c **** }	
 3138              		.loc 1 253 0
 3139 08ec 0CD04BE2 		sub	sp, fp, #12
 3140 08f0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3141 08f4 1EFF2FE1 		bx	lr
 3142              	.L60:
 3143              		.align	2
 3144              	.L59:
 3145 08f8 10000000 		.word	mi_fila
 3146 08fc 11000000 		.word	mi_columna
 3147 0900 30000000 		.word	tablero_actual
 3148              		.cfi_endproc
 3149              	.LFE7:
 3151              		.align	2
 3152              		.global	actualizar_movimientos_pantalla
 3154              	actualizar_movimientos_pantalla:
 3155              	.LFB8:
 254:../jugada_por_botones.c **** 
 255:../jugada_por_botones.c **** void actualizar_movimientos_pantalla()
 256:../jugada_por_botones.c **** {
 3156              		.loc 1 256 0
 3157              		.cfi_startproc
 3158              		@ Function supports interworking.
 3159              		@ args = 0, pretend = 0, frame = 8
 3160              		@ frame_needed = 1, uses_anonymous_args = 0
 3161 0904 0DC0A0E1 		mov	ip, sp
 3162              	.LCFI16:
 3163              		.cfi_def_cfa_register 12
 3164 0908 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3165 090c 04B04CE2 		sub	fp, ip, #4
 3166              		.cfi_offset 14, -8
 3167              		.cfi_offset 13, -12
 3168              		.cfi_offset 11, -16
 3169              	.LCFI17:
 3170              		.cfi_def_cfa 11, 4
 3171 0910 08D04DE2 		sub	sp, sp, #8
 257:../jugada_por_botones.c **** 	obtener_tablero(tablero_actual);
 3172              		.loc 1 257 0
 3173 0914 04019FE5 		ldr	r0, .L67
 3174 0918 FEFFFFEB 		bl	obtener_tablero
 258:../jugada_por_botones.c **** 	int i,j;
 259:../jugada_por_botones.c **** 	for(i = 0; i < num_filas; i++)
 3175              		.loc 1 259 0
 3176 091c 0030A0E3 		mov	r3, #0
 3177 0920 10300BE5 		str	r3, [fp, #-16]
 3178 0924 370000EA 		b	.L62
 3179              	.L66:
 260:../jugada_por_botones.c **** 	{
 261:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas; j++)
 3180              		.loc 1 261 0
 3181 0928 0030A0E3 		mov	r3, #0
 3182 092c 14300BE5 		str	r3, [fp, #-20]
 3183 0930 2E0000EA 		b	.L63
 3184              	.L65:
 262:../jugada_por_botones.c **** 		{
 263:../jugada_por_botones.c **** 			if(tablero_actual[i][j] != tablero_anterior[i][j])
 3185              		.loc 1 263 0
 3186 0934 E4209FE5 		ldr	r2, .L67
 3187 0938 10301BE5 		ldr	r3, [fp, #-16]
 3188 093c 8311A0E1 		mov	r1, r3, asl #3
 3189 0940 14301BE5 		ldr	r3, [fp, #-20]
 3190 0944 033081E0 		add	r3, r1, r3
 3191 0948 033082E0 		add	r3, r2, r3
 3192 094c 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3193 0950 CC109FE5 		ldr	r1, .L67+4
 3194 0954 10301BE5 		ldr	r3, [fp, #-16]
 3195 0958 8301A0E1 		mov	r0, r3, asl #3
 3196 095c 14301BE5 		ldr	r3, [fp, #-20]
 3197 0960 033080E0 		add	r3, r0, r3
 3198 0964 033081E0 		add	r3, r1, r3
 3199 0968 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3200 096c 030052E1 		cmp	r2, r3
 3201 0970 1B00000A 		beq	.L64
 264:../jugada_por_botones.c **** 			{
 265:../jugada_por_botones.c **** 				borrar_ficha(i,j);
 3202              		.loc 1 265 0
 3203 0974 10001BE5 		ldr	r0, [fp, #-16]
 3204 0978 14101BE5 		ldr	r1, [fp, #-20]
 3205 097c FEFFFFEB 		bl	borrar_ficha
 266:../jugada_por_botones.c **** 				pintar_ficha(i, j, tablero_actual[i][j]);
 3206              		.loc 1 266 0
 3207 0980 98209FE5 		ldr	r2, .L67
 3208 0984 10301BE5 		ldr	r3, [fp, #-16]
 3209 0988 8311A0E1 		mov	r1, r3, asl #3
 3210 098c 14301BE5 		ldr	r3, [fp, #-20]
 3211 0990 033081E0 		add	r3, r1, r3
 3212 0994 033082E0 		add	r3, r2, r3
 3213 0998 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 3214 099c 10001BE5 		ldr	r0, [fp, #-16]
 3215 09a0 14101BE5 		ldr	r1, [fp, #-20]
 3216 09a4 0320A0E1 		mov	r2, r3
 3217 09a8 FEFFFFEB 		bl	pintar_ficha
 267:../jugada_por_botones.c **** 				tablero_anterior[i][j] = tablero_actual[i][j];
 3218              		.loc 1 267 0
 3219 09ac 6C209FE5 		ldr	r2, .L67
 3220 09b0 10301BE5 		ldr	r3, [fp, #-16]
 3221 09b4 8311A0E1 		mov	r1, r3, asl #3
 3222 09b8 14301BE5 		ldr	r3, [fp, #-20]
 3223 09bc 033081E0 		add	r3, r1, r3
 3224 09c0 033082E0 		add	r3, r2, r3
 3225 09c4 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 3226 09c8 54109FE5 		ldr	r1, .L67+4
 3227 09cc 10301BE5 		ldr	r3, [fp, #-16]
 3228 09d0 8301A0E1 		mov	r0, r3, asl #3
 3229 09d4 14301BE5 		ldr	r3, [fp, #-20]
 3230 09d8 033080E0 		add	r3, r0, r3
 3231 09dc 033081E0 		add	r3, r1, r3
 3232 09e0 0020C3E5 		strb	r2, [r3, #0]
 3233              	.L64:
 261:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas; j++)
 3234              		.loc 1 261 0
 3235 09e4 14301BE5 		ldr	r3, [fp, #-20]
 3236 09e8 013083E2 		add	r3, r3, #1
 3237 09ec 14300BE5 		str	r3, [fp, #-20]
 3238              	.L63:
 261:../jugada_por_botones.c **** 		for(j = 0; j < num_columnas; j++)
 3239              		.loc 1 261 0 is_stmt 0 discriminator 1
 3240 09f0 14301BE5 		ldr	r3, [fp, #-20]
 3241 09f4 070053E3 		cmp	r3, #7
 3242 09f8 CDFFFFDA 		ble	.L65
 259:../jugada_por_botones.c **** 	for(i = 0; i < num_filas; i++)
 3243              		.loc 1 259 0 is_stmt 1
 3244 09fc 10301BE5 		ldr	r3, [fp, #-16]
 3245 0a00 013083E2 		add	r3, r3, #1
 3246 0a04 10300BE5 		str	r3, [fp, #-16]
 3247              	.L62:
 259:../jugada_por_botones.c **** 	for(i = 0; i < num_filas; i++)
 3248              		.loc 1 259 0 is_stmt 0 discriminator 1
 3249 0a08 10301BE5 		ldr	r3, [fp, #-16]
 3250 0a0c 070053E3 		cmp	r3, #7
 3251 0a10 C4FFFFDA 		ble	.L66
 268:../jugada_por_botones.c **** 			}
 269:../jugada_por_botones.c **** 		}
 270:../jugada_por_botones.c **** 	}
 271:../jugada_por_botones.c **** }
 3252              		.loc 1 271 0 is_stmt 1
 3253 0a14 0CD04BE2 		sub	sp, fp, #12
 3254 0a18 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3255 0a1c 1EFF2FE1 		bx	lr
 3256              	.L68:
 3257              		.align	2
 3258              	.L67:
 3259 0a20 30000000 		.word	tablero_actual
 3260 0a24 70000000 		.word	tablero_anterior
 3261              		.cfi_endproc
 3262              	.LFE8:
 3264              		.align	2
 3265              		.global	jugada_ev_tecla0
 3267              	jugada_ev_tecla0:
 3268              	.LFB9:
 272:../jugada_por_botones.c **** 
 273:../jugada_por_botones.c **** void jugada_ev_tecla0(void)		//Pasar turno de jugador
 274:../jugada_por_botones.c **** {
 3269              		.loc 1 274 0
 3270              		.cfi_startproc
 3271              		@ Function supports interworking.
 3272              		@ args = 0, pretend = 0, frame = 0
 3273              		@ frame_needed = 1, uses_anonymous_args = 0
 3274 0a28 0DC0A0E1 		mov	ip, sp
 3275              	.LCFI18:
 3276              		.cfi_def_cfa_register 12
 3277 0a2c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3278 0a30 04B04CE2 		sub	fp, ip, #4
 3279              		.cfi_offset 14, -8
 3280              		.cfi_offset 13, -12
 3281              		.cfi_offset 11, -16
 3282              	.LCFI19:
 3283              		.cfi_def_cfa 11, 4
 275:../jugada_por_botones.c **** 
 276:../jugada_por_botones.c **** }
 3284              		.loc 1 276 0
 3285 0a34 0CD04BE2 		sub	sp, fp, #12
 3286 0a38 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3287 0a3c 1EFF2FE1 		bx	lr
 3288              		.cfi_endproc
 3289              	.LFE9:
 3291              		.align	2
 3292              		.global	jugada_ev_tecla1
 3294              	jugada_ev_tecla1:
 3295              	.LFB10:
 277:../jugada_por_botones.c **** 
 278:../jugada_por_botones.c **** void jugada_ev_tecla1()			//Finalizar la partida de forma prematura
 279:../jugada_por_botones.c **** {
 3296              		.loc 1 279 0
 3297              		.cfi_startproc
 3298              		@ Function supports interworking.
 3299              		@ args = 0, pretend = 0, frame = 8
 3300              		@ frame_needed = 1, uses_anonymous_args = 0
 3301 0a40 0DC0A0E1 		mov	ip, sp
 3302              	.LCFI20:
 3303              		.cfi_def_cfa_register 12
 3304 0a44 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 3305 0a48 04B04CE2 		sub	fp, ip, #4
 3306              		.cfi_offset 14, -8
 3307              		.cfi_offset 13, -12
 3308              		.cfi_offset 11, -16
 3309              	.LCFI21:
 3310              		.cfi_def_cfa 11, 4
 3311 0a4c 08D04DE2 		sub	sp, sp, #8
 280:../jugada_por_botones.c **** 	int blancas = contar_blancas();
 3312              		.loc 1 280 0
 3313 0a50 FEFFFFEB 		bl	contar_blancas
 3314 0a54 10000BE5 		str	r0, [fp, #-16]
 281:../jugada_por_botones.c **** 	int negras = contar_negras();
 3315              		.loc 1 281 0
 3316 0a58 FEFFFFEB 		bl	contar_negras
 3317 0a5c 14000BE5 		str	r0, [fp, #-20]
 282:../jugada_por_botones.c **** 	haciendo_DMA = 1;
 3318              		.loc 1 282 0
 3319 0a60 5C309FE5 		ldr	r3, .L74
 3320 0a64 0120A0E3 		mov	r2, #1
 3321 0a68 002083E5 		str	r2, [r3, #0]
 283:../jugada_por_botones.c **** 	if(blancas > negras)
 3322              		.loc 1 283 0
 3323 0a6c 10201BE5 		ldr	r2, [fp, #-16]
 3324 0a70 14301BE5 		ldr	r3, [fp, #-20]
 3325 0a74 030052E1 		cmp	r2, r3
 3326 0a78 030000DA 		ble	.L71
 284:../jugada_por_botones.c **** 	{
 285:../jugada_por_botones.c **** 		final = jugador_gana;
 3327              		.loc 1 285 0
 3328 0a7c 44309FE5 		ldr	r3, .L74+4
 3329 0a80 0120A0E3 		mov	r2, #1
 3330 0a84 0020C3E5 		strb	r2, [r3, #0]
 3331 0a88 0A0000EA 		b	.L70
 3332              	.L71:
 286:../jugada_por_botones.c **** 	}
 287:../jugada_por_botones.c **** 	else if(blancas < negras)
 3333              		.loc 1 287 0
 3334 0a8c 10201BE5 		ldr	r2, [fp, #-16]
 3335 0a90 14301BE5 		ldr	r3, [fp, #-20]
 3336 0a94 030052E1 		cmp	r2, r3
 3337 0a98 030000AA 		bge	.L73
 288:../jugada_por_botones.c **** 	{
 289:../jugada_por_botones.c **** 		final = cpu_gana;
 3338              		.loc 1 289 0
 3339 0a9c 24309FE5 		ldr	r3, .L74+4
 3340 0aa0 0220A0E3 		mov	r2, #2
 3341 0aa4 0020C3E5 		strb	r2, [r3, #0]
 3342 0aa8 020000EA 		b	.L70
 3343              	.L73:
 290:../jugada_por_botones.c **** 	}
 291:../jugada_por_botones.c **** 	else	//En caso de empate
 292:../jugada_por_botones.c **** 	{
 293:../jugada_por_botones.c **** 		final = empate;
 3344              		.loc 1 293 0
 3345 0aac 14309FE5 		ldr	r3, .L74+4
 3346 0ab0 0320A0E3 		mov	r2, #3
 3347 0ab4 0020C3E5 		strb	r2, [r3, #0]
 3348              	.L70:
 294:../jugada_por_botones.c **** 	}
 295:../jugada_por_botones.c **** }
 3349              		.loc 1 295 0
 3350 0ab8 0CD04BE2 		sub	sp, fp, #12
 3351 0abc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 3352 0ac0 1EFF2FE1 		bx	lr
 3353              	.L75:
 3354              		.align	2
 3355              	.L74:
 3356 0ac4 00000000 		.word	haciendo_DMA
 3357 0ac8 1C000000 		.word	final
 3358              		.cfi_endproc
 3359              	.LFE10:
 3361              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 jugada_por_botones.c
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2174   .bss:00000000 jugada_botones
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2175   .bss:00000000 $d
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2177   .bss:00000004 ev_bot_izq
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2180   .bss:00000008 ev_bot_der
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2183   .bss:0000000c ev_tp
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2185   .bss:00000010 mi_fila
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2187   .bss:00000011 mi_columna
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2193   .bss:00000014 haciendo_DMA
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2196   .bss:00000018 ev_timer
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2198   .bss:0000001c final
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2201   .bss:00000020 tiempo_calc
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2204   .bss:00000024 tiempo_total
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2207   .bss:00000028 tiempo_pv
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2210   .bss:0000002c veces_pv
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2213   .bss:00000030 tablero_actual
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2216   .bss:00000070 tablero_anterior
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2219   .text:00000000 $a
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2222   .text:00000000 inicializar_jugada_botones
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2308   .text:000000cc $d
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2326   .text:00000108 $a
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2329   .text:00000108 jugada_por_botones
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2829   .text:000006cc $d
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:3154   .text:00000904 actualizar_movimientos_pantalla
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:3037   .text:000007ec reiniciar_posicion_gris
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2847   .text:00000708 $a
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2850   .text:00000708 jugada_ev_tsp
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2880   .text:00000730 $d
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2884   .text:00000734 $a
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2887   .text:00000734 jugada_ev_der
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2917   .text:0000075c $d
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2921   .text:00000760 $a
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2924   .text:00000760 jugada_ev_izq
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2954   .text:00000788 $d
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2958   .text:0000078c $a
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2961   .text:0000078c jugada_ev_timer
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2993   .text:000007bc $d
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:2997   .text:000007c0 $a
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:3000   .text:000007c0 termina_DMA
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:3030   .text:000007e8 $d
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:3034   .text:000007ec $a
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:3145   .text:000008f8 $d
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:3151   .text:00000904 $a
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:3259   .text:00000a20 $d
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:3264   .text:00000a28 $a
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:3267   .text:00000a28 jugada_ev_tecla0
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:3294   .text:00000a40 jugada_ev_tecla1
C:\Users\pjper\AppData\Local\Temp\cc9tffim.s:3356   .text:00000ac4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
reversi8_inicializar
obtener_tablero
pintar_reglas
pintar_jugando
contar_blancas
contar_negras
pintar_fin_victoria
pintar_fin_derrota
pintar_fin_empate
obtener_ficha_en
mover_gris_abajo
mover_gris_derecha
pintar_profiling
iniciar_DMA
timer2_leer
reversi_procesar
obtener_jugada_valida
borrar_ficha
reversi_t_pv
reversi_veces_pv
obtener_fin
Lcd_Clr
pintar_ficha
