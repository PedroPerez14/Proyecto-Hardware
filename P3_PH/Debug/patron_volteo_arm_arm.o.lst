   1              	# 1 "../patron_volteo_arm_arm.asm"
   1              	/*********************************************************************************************
   0              	
   0              	
   0              	
   2              	* Fichero:	patron_volteo_arm_arm.asm
   3              	* Autor:	Fernando Peña Bes (NIA: 756012)
   4              				Pedro José Pérez García (NIA: 756642)
   5              	* Descrip:	Contiene la versión ARM-ARM de patron_volteo()
   6              	*********************************************************************************************/
   7              	
   8              					.section .text
   9              					.global patron_volteo_arm_arm
  10              	
  11              	.equ DIM, 8
  12              	.equ DESPL, 3   @2^DESPL = DIM
  13              	
  14              	.equ CASILLA_VACIA, 0
  15              	.equ NO_HAY_PATRON, 0
  16              	.equ PATRON_ENCONTRADO, 1
  17              	
  18              	
  19              	@ Versión ARM-ARM de patron_volteo()
  20              	
  21              	@ La función comprueba si hay que actualizar una determinada dirección, busca
  22              	@ el patrón de volteo (n fichas del rival seguidas de una ficha del jugador actual) en
  23              	@ una dirección determinada
  24              	
  25              	@ Parámetros:
  26              	@ Par. entrada 0 = tablero
  27              	@ Par. entrada/salida 1 = *longitud
  28              	@ Par. entrada 2 = FA	@ casilla a analizar
  29              	@ Par. entrada 3 = CA
  30              	@ Par. entrada 4 = SF	@ dirección de movimiento a analizar
  31              	@ Par. entrada 5 = SC
  32              	@ Par. entrada 6 = color
  33              	
  34              	@ Devuelve si ha encontrado un patrón de volteo y la longitud analizada en el parámetro *longitud
  35              	patron_volteo_arm_arm:
  36 0000 0DC0A0E1 					mov ip, sp
  37 0004 F0DF2DE9 					push {r4-r10, fp, ip, lr, pc}
  38 0008 04B04CE2 					sub fp, ip, #4
  39              					@ r0=@tablero
  40              					@ r1=@longitud
  41              					@ r2=FA
  42              					@ r3=CA
  43 000c D440DBE1 					ldrsb r4,[fp,#4]	@r4 = SF
  44 0010 D850DBE1 					ldrsb r5,[fp,#8]	@r5 = SC
  45 0014 0C60DBE5 					ldrb r6,[fp,#12]	@r6 = color
  46              	
  47 0018 008091E5 					ldr r8, [r1] @ r8 = longitud inicial
  48              	
  49              					@ FA = FA + SF
  50 001c 042082E0 	WHILE_ARM:		add r2, r2, r4
  51              					@ CA = CA + SC
  52 0020 053083E0 					add r3, r3, r5
  53              	
  54              					@ Llamada a ficha válida
  55              					@ r7=tablero[FA][CA] (casilla), r9=posicion_valida
  56              					@ FA < DIM && FA >= 0 && CA < DIM && CA >= 0 && (tablero[FA][CA] != CASILLA_VACIA)
  57 0024 080052E3 					cmp r2, #DIM
  58 0028 0B0000AA 					bge NO_VALIDA 		@ FA >= DIM
  59 002c 000052E3 					cmp r2, #0
  60 0030 090000BA 					blt NO_VALIDA		@ FA < 0
  61 0034 080053E3 					cmp r3, #DIM
  62 0038 070000AA 					bge NO_VALIDA		@ CA >= DIM
  63 003c 000053E3 					cmp r3, #0
  64 0040 050000BA 					blt NO_VALIDA		@ CA < 0
  65              					@ r10=@ de la posicion en el tablero a analizar
  66 0044 82A180E0 					add r10, r0, r2, LSL #DESPL @añadir fila
  67 0048 03A08AE0 					add r10, r10, r3	@añadir columna
  68 004c 0070DAE5 					ldrb r7, [r10]		@ r7=tablero[FA][CA]
  69 0050 000057E3 					cmp r7, #CASILLA_VACIA
  70 0054 0190A0E3 					mov r9, #1
  71 0058 0100001A 					bne WHILE_COND_ARM		@r7 != CASILLA_VACIA
  72              	
  73 005c 0090A0E3 	NO_VALIDA:		mov r9, #0			@posicion_valida=0
  74 0060 0070A0E3 					mov r7, #CASILLA_VACIA
  75              	
  76              	WHILE_COND_ARM: @(posicion_valida == 1) && (casilla != color)
  77 0064 010059E3 					cmp r9, #1
  78 0068 0300001A 					bne IF_ARM
  79 006c 060057E1 					cmp r7, r6
  80 0070 0100000A 					beq IF_ARM		@ tablero[FA][CA] == color
  81              					@ sumar 1 a longitud
  82 0074 018088E2 					add r8, r8, #1
  83 0078 E7FFFFEA 					b WHILE_ARM
  84              	
  85              	
  86 007c 010059E3 	IF_ARM: 		cmp r9, #1   @posicion_valida==1
  87 0080 06005701 					cmpeq r7, r6 @casilla==color
  88 0084 0000A013 					movne r0, #NO_HAY_PATRON @ Si posicion_valida != 0 o casilla != color, no hay patron. Devolver 
  89 0088 0200001A 					bne FIN_ARM
  90 008c 00005803 					cmpeq r8, #0
  91 0090 0100A083 					movhi r0, #PATRON_ENCONTRADO @ Devolver patron encontrado
  92 0094 0000A093 					movls r0, #NO_HAY_PATRON @ Devolver no hay patron
  93 0098 008081E5 	FIN_ARM:		str r8, [r1]	@ Almacenar longitud calculada
  94 009c F0AF1BE9 					ldmdb fp,{r4-r10, fp, sp, pc}
DEFINED SYMBOLS
../patron_volteo_arm_arm.asm:35     .text:00000000 patron_volteo_arm_arm
../patron_volteo_arm_arm.asm:11     *ABS*:00000008 DIM
../patron_volteo_arm_arm.asm:12     *ABS*:00000003 DESPL
../patron_volteo_arm_arm.asm:14     *ABS*:00000000 CASILLA_VACIA
../patron_volteo_arm_arm.asm:15     *ABS*:00000000 NO_HAY_PATRON
../patron_volteo_arm_arm.asm:16     *ABS*:00000001 PATRON_ENCONTRADO
../patron_volteo_arm_arm.asm:36     .text:00000000 $a
../patron_volteo_arm_arm.asm:50     .text:0000001c WHILE_ARM
../patron_volteo_arm_arm.asm:73     .text:0000005c NO_VALIDA
../patron_volteo_arm_arm.asm:76     .text:00000064 WHILE_COND_ARM
../patron_volteo_arm_arm.asm:86     .text:0000007c IF_ARM
../patron_volteo_arm_arm.asm:93     .text:00000098 FIN_ARM
                   .debug_aranges:0000000c $d

NO UNDEFINED SYMBOLS
