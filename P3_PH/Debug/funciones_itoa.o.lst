   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 2
  10              		.eabi_attribute 18, 4
  11              		.file	"funciones_itoa.c"
  21              	.Ltext0:
  22              		.file 1 "../funciones_itoa.c"
 2043              		.align	2
 2044              		.global	swap
 2046              	swap:
 2047              	.LFB0:
   1:../funciones_itoa.c **** /*********************************************************************************************
   2:../funciones_itoa.c **** * Fichero:		funciones_itoa.h
   3:../funciones_itoa.c **** * Autor:		Pedro José Pérez García (756642) y Fernando Peña Bes (756012)
   4:../funciones_itoa.c **** * Descrip:		Conjunto de funciones auxiliares para poder pasar de entero a cadenas de caracteres.
   5:../funciones_itoa.c **** * Version:
   6:../funciones_itoa.c **** *********************************************************************************************/
   7:../funciones_itoa.c **** #include <stdio.h>
   8:../funciones_itoa.c **** #include <stdlib.h>
   9:../funciones_itoa.c **** 
  10:../funciones_itoa.c **** // inline function to swap two numbers
  11:../funciones_itoa.c **** inline void swap(char *x, char *y) {
 2048              		.loc 1 11 0
 2049              		.cfi_startproc
 2050              		@ Function supports interworking.
 2051              		@ args = 0, pretend = 0, frame = 0
 2052              		@ frame_needed = 0, uses_anonymous_args = 0
 2053              		@ link register save eliminated.
 2054              	.LVL0:
  12:../funciones_itoa.c **** 	char t = *x; *x = *y; *y = t;
 2055              		.loc 1 12 0
 2056 0000 0030D0E5 		ldrb	r3, [r0, #0]	@ zero_extendqisi2
 2057              	.LVL1:
 2058 0004 0020D1E5 		ldrb	r2, [r1, #0]	@ zero_extendqisi2
 2059 0008 0020C0E5 		strb	r2, [r0, #0]
 2060 000c 0030C1E5 		strb	r3, [r1, #0]
  13:../funciones_itoa.c **** }
 2061              		.loc 1 13 0
 2062 0010 1EFF2FE1 		bx	lr
 2063              		.cfi_endproc
 2064              	.LFE0:
 2066              		.align	2
 2067              		.global	reverse
 2069              	reverse:
 2070              	.LFB1:
  14:../funciones_itoa.c **** 
  15:../funciones_itoa.c **** // function to reverse buffer[i..j]
  16:../funciones_itoa.c **** char* reverse(char *buffer, int i, int j)
  17:../funciones_itoa.c **** {
 2071              		.loc 1 17 0
 2072              		.cfi_startproc
 2073              		@ Function supports interworking.
 2074              		@ args = 0, pretend = 0, frame = 0
 2075              		@ frame_needed = 0, uses_anonymous_args = 0
 2076              		@ link register save eliminated.
 2077              	.LVL2:
  18:../funciones_itoa.c **** 	while (i < j)
 2078              		.loc 1 18 0
 2079 0014 020051E1 		cmp	r1, r2
  17:../funciones_itoa.c **** {
 2080              		.loc 1 17 0
 2081 0018 30002DE9 		stmfd	sp!, {r4, r5}
 2082              	.LCFI0:
 2083              		.cfi_def_cfa_offset 8
 2084              		.loc 1 18 0
 2085 001c 090000AA 		bge	.L3
 2086              		.cfi_offset 5, -4
 2087              		.cfi_offset 4, -8
  16:../funciones_itoa.c **** char* reverse(char *buffer, int i, int j)
 2088              		.loc 1 16 0
 2089 0020 01C080E0 		add	ip, r0, r1
 2090 0024 023080E0 		add	r3, r0, r2
 2091              	.L4:
 2092              	.LBB9:
 2093              	.LBB10:
  12:../funciones_itoa.c **** 	char t = *x; *x = *y; *y = t;
 2094              		.loc 1 12 0
 2095 0028 0040DCE5 		ldrb	r4, [ip, #0]	@ zero_extendqisi2
 2096 002c 0050D3E5 		ldrb	r5, [r3, #0]	@ zero_extendqisi2
 2097              	.LBE10:
 2098              	.LBE9:
  19:../funciones_itoa.c **** 		swap(&buffer[i++], &buffer[j--]);
 2099              		.loc 1 19 0
 2100 0030 011081E2 		add	r1, r1, #1
 2101              	.LVL3:
 2102 0034 012042E2 		sub	r2, r2, #1
 2103              	.LVL4:
  18:../funciones_itoa.c **** 	while (i < j)
 2104              		.loc 1 18 0
 2105 0038 020051E1 		cmp	r1, r2
 2106              	.LBB12:
 2107              	.LBB11:
  12:../funciones_itoa.c **** 	char t = *x; *x = *y; *y = t;
 2108              		.loc 1 12 0
 2109 003c 0150CCE4 		strb	r5, [ip], #1
 2110 0040 014043E4 		strb	r4, [r3], #-1
 2111              	.LBE11:
 2112              	.LBE12:
  18:../funciones_itoa.c **** 	while (i < j)
 2113              		.loc 1 18 0
 2114 0044 F7FFFFBA 		blt	.L4
 2115              	.LVL5:
 2116              	.L3:
  20:../funciones_itoa.c **** 
  21:../funciones_itoa.c **** 	return buffer;
  22:../funciones_itoa.c **** }
 2117              		.loc 1 22 0
 2118 0048 3000BDE8 		ldmfd	sp!, {r4, r5}
 2119 004c 1EFF2FE1 		bx	lr
 2120              		.cfi_endproc
 2121              	.LFE1:
 2123              		.global	__aeabi_idivmod
 2124              		.global	__aeabi_idiv
 2125              		.align	2
 2126              		.global	itoa
 2128              	itoa:
 2129              	.LFB2:
  23:../funciones_itoa.c **** 
  24:../funciones_itoa.c **** // Iterative function to implement itoa() function in C
  25:../funciones_itoa.c **** char* itoa(int value, char* buffer, int base)
  26:../funciones_itoa.c **** {
 2130              		.loc 1 26 0
 2131              		.cfi_startproc
 2132              		@ Function supports interworking.
 2133              		@ args = 0, pretend = 0, frame = 0
 2134              		@ frame_needed = 1, uses_anonymous_args = 0
 2135              	.LVL6:
 2136 0050 0DC0A0E1 		mov	ip, sp
 2137              	.LCFI1:
 2138              		.cfi_def_cfa_register 12
 2139 0054 F8DF2DE9 		stmfd	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr, pc}
  27:../funciones_itoa.c **** 	// invalid input
  28:../funciones_itoa.c **** 	if (base < 2 || base > 32)
 2140              		.loc 1 28 0
 2141 0058 023042E2 		sub	r3, r2, #2
 2142              		.cfi_offset 14, -8
 2143              		.cfi_offset 13, -12
 2144              		.cfi_offset 11, -16
 2145              		.cfi_offset 10, -20
 2146              		.cfi_offset 9, -24
 2147              		.cfi_offset 8, -28
 2148              		.cfi_offset 7, -32
 2149              		.cfi_offset 6, -36
 2150              		.cfi_offset 5, -40
 2151              		.cfi_offset 4, -44
 2152              		.cfi_offset 3, -48
 2153 005c 1E0053E3 		cmp	r3, #30
  26:../funciones_itoa.c **** {
 2154              		.loc 1 26 0
 2155 0060 04B04CE2 		sub	fp, ip, #4
 2156              	.LCFI2:
 2157              		.cfi_def_cfa 11, 4
  26:../funciones_itoa.c **** {
 2158              		.loc 1 26 0
 2159 0064 0280A0E1 		mov	r8, r2
 2160 0068 0090A0E1 		mov	r9, r0
 2161 006c 0140A0E1 		mov	r4, r1
 2162              		.loc 1 28 0
 2163 0070 2F00008A 		bhi	.L8
  29:../funciones_itoa.c **** 		return buffer;
  30:../funciones_itoa.c **** 
  31:../funciones_itoa.c **** 	// consider absolute value of number
  32:../funciones_itoa.c **** 	int n = abs(value);
 2164              		.loc 1 32 0
 2165 0074 C05F20E0 		eor	r5, r0, r0, asr #31
 2166 0078 C05F45E0 		sub	r5, r5, r0, asr #31
 2167              	.LVL7:
  33:../funciones_itoa.c **** 
  34:../funciones_itoa.c **** 	int i = 0;
  35:../funciones_itoa.c **** 	while (n)
 2168              		.loc 1 35 0
 2169 007c 000055E3 		cmp	r5, #0
 2170 0080 2F00000A 		beq	.L9
 2171 0084 0170A0E3 		mov	r7, #1
 2172 0088 0060A0E3 		mov	r6, #0
 2173              	.LVL8:
 2174              	.L12:
 2175              	.LBB13:
  36:../funciones_itoa.c **** 	{
  37:../funciones_itoa.c **** 		int r = n % base;
 2176              		.loc 1 37 0
 2177 008c 0500A0E1 		mov	r0, r5
 2178 0090 0810A0E1 		mov	r1, r8
 2179 0094 FEFFFFEB 		bl	__aeabi_idivmod
 2180              	.LVL9:
  38:../funciones_itoa.c **** 
  39:../funciones_itoa.c **** 		if (r >= 10)
 2181              		.loc 1 39 0
 2182 0098 090051E3 		cmp	r1, #9
  40:../funciones_itoa.c **** 			buffer[i++] = 65 + (r - 10);
 2183              		.loc 1 40 0
 2184 009c 371081C2 		addgt	r1, r1, #55
 2185              	.LVL10:
  41:../funciones_itoa.c **** 		else
  42:../funciones_itoa.c **** 			buffer[i++] = 48 + r;
 2186              		.loc 1 42 0
 2187 00a0 301081D2 		addle	r1, r1, #48
 2188 00a4 0610C4E7 		strb	r1, [r4, r6]
  43:../funciones_itoa.c **** 
  44:../funciones_itoa.c **** 		n = n / base;
 2189              		.loc 1 44 0
 2190 00a8 0500A0E1 		mov	r0, r5
 2191 00ac 0810A0E1 		mov	r1, r8
 2192 00b0 FEFFFFEB 		bl	__aeabi_idiv
 2193              	.LBE13:
  35:../funciones_itoa.c **** 	while (n)
 2194              		.loc 1 35 0
 2195 00b4 005050E2 		subs	r5, r0, #0
 2196              	.LVL11:
 2197              	.LBB14:
  42:../funciones_itoa.c **** 			buffer[i++] = 48 + r;
 2198              		.loc 1 42 0
 2199 00b8 07A0A0E1 		mov	sl, r7
 2200              	.LVL12:
 2201              		.loc 1 44 0
 2202 00bc 016086E2 		add	r6, r6, #1
 2203 00c0 017087E2 		add	r7, r7, #1
 2204              	.LVL13:
 2205              	.LBE14:
  35:../funciones_itoa.c **** 	while (n)
 2206              		.loc 1 35 0
 2207 00c4 F0FFFF1A 		bne	.L12
  45:../funciones_itoa.c **** 	}
  46:../funciones_itoa.c **** 
  47:../funciones_itoa.c **** 	// if number is 0
  48:../funciones_itoa.c **** 	if (i == 0)
 2208              		.loc 1 48 0
 2209 00c8 00005AE3 		cmp	sl, #0
 2210 00cc 0A20A011 		movne	r2, sl
 2211 00d0 1B00000A 		beq	.L9
 2212              	.LVL14:
 2213              	.L13:
  49:../funciones_itoa.c **** 		buffer[i++] = '0';
  50:../funciones_itoa.c **** 
  51:../funciones_itoa.c **** 	// If base is 10 and value is negative, the resulting string
  52:../funciones_itoa.c **** 	// is preceded with a minus sign (-)
  53:../funciones_itoa.c **** 	// With any other base, value is always considered unsigned
  54:../funciones_itoa.c **** 	if (value < 0 && base == 10)
 2214              		.loc 1 54 0
 2215 00d4 A99FA0E1 		mov	r9, r9, lsr #31
 2216              	.LVL15:
 2217 00d8 0A0058E3 		cmp	r8, #10
 2218 00dc 0080A013 		movne	r8, #0
 2219 00e0 01800902 		andeq	r8, r9, #1
 2220              	.LVL16:
 2221 00e4 000058E3 		cmp	r8, #0
  55:../funciones_itoa.c **** 		buffer[i++] = '-';
 2222              		.loc 1 55 0
 2223 00e8 01A08A12 		addne	sl, sl, #1
 2224              	.LVL17:
 2225 00ec 2D30A013 		movne	r3, #45
 2226 00f0 0230C417 		strneb	r3, [r4, r2]
 2227 00f4 0A20A011 		movne	r2, sl
  56:../funciones_itoa.c **** 
  57:../funciones_itoa.c **** 	buffer[i] = '\0'; // null terminate string
 2228              		.loc 1 57 0
 2229 00f8 0030A0E3 		mov	r3, #0
  58:../funciones_itoa.c **** 
  59:../funciones_itoa.c **** 	// reverse the string and return it
  60:../funciones_itoa.c **** 	return reverse(buffer, 0, i - 1);
 2230              		.loc 1 60 0
 2231 00fc 01A04AE2 		sub	sl, sl, #1
 2232              	.LVL18:
 2233              	.LBB15:
 2234              	.LBB16:
  18:../funciones_itoa.c **** 	while (i < j)
 2235              		.loc 1 18 0
 2236 0100 03005AE1 		cmp	sl, r3
 2237              	.LBE16:
 2238              	.LBE15:
  57:../funciones_itoa.c **** 	buffer[i] = '\0'; // null terminate string
 2239              		.loc 1 57 0
 2240 0104 0230C4E7 		strb	r3, [r4, r2]
 2241              	.LBB22:
 2242              	.LBB21:
  18:../funciones_itoa.c **** 	while (i < j)
 2243              		.loc 1 18 0
 2244 0108 010000CA 		bgt	.L15
 2245 010c 080000EA 		b	.L8
 2246              	.LVL19:
 2247              	.L16:
 2248 0110 0230A0E1 		mov	r3, r2
 2249              	.LVL20:
 2250              	.L15:
 2251              	.LBB17:
 2252              	.LBB18:
  12:../funciones_itoa.c **** 	char t = *x; *x = *y; *y = t;
 2253              		.loc 1 12 0
 2254 0114 0A00D4E7 		ldrb	r0, [r4, sl]	@ zero_extendqisi2
 2255 0118 0310D4E7 		ldrb	r1, [r4, r3]	@ zero_extendqisi2
 2256              	.LBE18:
 2257              	.LBE17:
  25:../funciones_itoa.c **** char* itoa(int value, char* buffer, int base)
 2258              		.loc 1 25 0
 2259 011c 012083E2 		add	r2, r3, #1
 2260              	.LVL21:
 2261              	.LBB20:
 2262              	.LBB19:
  12:../funciones_itoa.c **** 	char t = *x; *x = *y; *y = t;
 2263              		.loc 1 12 0
 2264 0120 0300C4E7 		strb	r0, [r4, r3]
 2265 0124 0A10C4E7 		strb	r1, [r4, sl]
 2266 0128 01A04AE2 		sub	sl, sl, #1
 2267              	.LVL22:
 2268              	.LBE19:
 2269              	.LBE20:
  18:../funciones_itoa.c **** 	while (i < j)
 2270              		.loc 1 18 0
 2271 012c 0A0052E1 		cmp	r2, sl
 2272 0130 F6FFFFBA 		blt	.L16
 2273              	.LVL23:
 2274              	.L8:
 2275              	.LBE21:
 2276              	.LBE22:
  61:../funciones_itoa.c **** }
 2277              		.loc 1 61 0
 2278 0134 0400A0E1 		mov	r0, r4
 2279 0138 2CD04BE2 		sub	sp, fp, #44
 2280 013c F86F9DE8 		ldmfd	sp, {r3, r4, r5, r6, r7, r8, r9, sl, fp, sp, lr}
 2281 0140 1EFF2FE1 		bx	lr
 2282              	.LVL24:
 2283              	.L9:
  49:../funciones_itoa.c **** 		buffer[i++] = '0';
 2284              		.loc 1 49 0
 2285 0144 0120A0E3 		mov	r2, #1
 2286 0148 3030A0E3 		mov	r3, #48
 2287 014c 0030C4E5 		strb	r3, [r4, #0]
 2288              	.LVL25:
 2289 0150 02A0A0E1 		mov	sl, r2
 2290 0154 DEFFFFEA 		b	.L13
 2291              		.cfi_endproc
 2292              	.LFE2:
 2294              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 funciones_itoa.c
C:\Users\pjper\AppData\Local\Temp\ccUXIrje.s:2043   .text:00000000 $a
C:\Users\pjper\AppData\Local\Temp\ccUXIrje.s:2046   .text:00000000 swap
C:\Users\pjper\AppData\Local\Temp\ccUXIrje.s:2069   .text:00000014 reverse
C:\Users\pjper\AppData\Local\Temp\ccUXIrje.s:2128   .text:00000050 itoa
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_idivmod
__aeabi_idiv
