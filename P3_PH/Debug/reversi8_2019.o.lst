   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"reversi8_2019.c"
  21              	.Ltext0:
  22              		.file 1 "../reversi8_2019.c"
 989              		.align	3
 992              	tabla_valor:
 993 0000 08       		.byte	8
 994 0001 02       		.byte	2
 995 0002 07       		.byte	7
 996 0003 03       		.byte	3
 997 0004 03       		.byte	3
 998 0005 07       		.byte	7
 999 0006 02       		.byte	2
 1000 0007 08       		.byte	8
 1001 0008 02       		.byte	2
 1002 0009 01       		.byte	1
 1003 000a 04       		.byte	4
 1004 000b 04       		.byte	4
 1005 000c 04       		.byte	4
 1006 000d 04       		.byte	4
 1007 000e 01       		.byte	1
 1008 000f 02       		.byte	2
 1009 0010 07       		.byte	7
 1010 0011 04       		.byte	4
 1011 0012 06       		.byte	6
 1012 0013 05       		.byte	5
 1013 0014 05       		.byte	5
 1014 0015 06       		.byte	6
 1015 0016 04       		.byte	4
 1016 0017 07       		.byte	7
 1017 0018 03       		.byte	3
 1018 0019 04       		.byte	4
 1019 001a 05       		.byte	5
 1020 001b 00       		.byte	0
 1021 001c 00       		.byte	0
 1022 001d 05       		.byte	5
 1023 001e 04       		.byte	4
 1024 001f 03       		.byte	3
 1025 0020 03       		.byte	3
 1026 0021 04       		.byte	4
 1027 0022 05       		.byte	5
 1028 0023 00       		.byte	0
 1029 0024 00       		.byte	0
 1030 0025 05       		.byte	5
 1031 0026 04       		.byte	4
 1032 0027 03       		.byte	3
 1033 0028 07       		.byte	7
 1034 0029 04       		.byte	4
 1035 002a 06       		.byte	6
 1036 002b 05       		.byte	5
 1037 002c 05       		.byte	5
 1038 002d 06       		.byte	6
 1039 002e 04       		.byte	4
 1040 002f 07       		.byte	7
 1041 0030 02       		.byte	2
 1042 0031 01       		.byte	1
 1043 0032 04       		.byte	4
 1044 0033 04       		.byte	4
 1045 0034 04       		.byte	4
 1046 0035 04       		.byte	4
 1047 0036 01       		.byte	1
 1048 0037 02       		.byte	2
 1049 0038 08       		.byte	8
 1050 0039 02       		.byte	2
 1051 003a 07       		.byte	7
 1052 003b 03       		.byte	3
 1053 003c 03       		.byte	3
 1054 003d 07       		.byte	7
 1055 003e 02       		.byte	2
 1056 003f 08       		.byte	8
 1057              		.global	vSF
 1058              		.align	2
 1061              	vSF:
 1062 0040 FF       		.byte	-1
 1063 0041 FF       		.byte	-1
 1064 0042 00       		.byte	0
 1065 0043 01       		.byte	1
 1066 0044 01       		.byte	1
 1067 0045 01       		.byte	1
 1068 0046 00       		.byte	0
 1069 0047 FF       		.byte	-1
 1070              		.global	vSC
 1071              		.align	2
 1074              	vSC:
 1075 0048 00       		.byte	0
 1076 0049 01       		.byte	1
 1077 004a 01       		.byte	1
 1078 004b 01       		.byte	1
 1079 004c 00       		.byte	0
 1080 004d FF       		.byte	-1
 1081 004e FF       		.byte	-1
 1082 004f FF       		.byte	-1
 1083              		.bss
 1084              		.align	3
 1085              	tablero:
 1086 0000 00000000 		.space	64
 1086      00000000 
 1086      00000000 
 1086      00000000 
 1086      00000000 
 1087              		.align	3
 1088              	candidatas:
 1089 0040 00000000 		.space	64
 1089      00000000 
 1089      00000000 
 1089      00000000 
 1089      00000000 
 1090              		.align	2
 1091              	veces_pv:
 1092 0080 00000000 		.space	4
 1093              		.align	2
 1094              	t_pv:
 1095 0084 00000000 		.space	4
 1096              		.comm	done,4,4
 1097              		.global	move
 1098              		.align	2
 1101              	move:
 1102 0088 00000000 		.space	4
 1103              		.comm	blancas,4,4
 1104              		.comm	negras,4,4
 1105              		.global	fin
 1106              		.align	2
 1109              	fin:
 1110 008c 00000000 		.space	4
 1111              		.comm	f,1,1
 1112              		.comm	c,1,1
 1113              	fila:
 1114 0090 00       		.space	1
 1115              	columna:
 1116 0091 00       		.space	1
 1117              	ready:
 1118 0092 00       		.space	1
 1119 0093 00000000 		.text
 1119      00
 1120              		.align	2
 1121              		.global	obtener_fin
 1123              	obtener_fin:
 1124              	.LFB0:
   1:../reversi8_2019.c **** /*********************************************************************************************
   2:../reversi8_2019.c **** * Fichero:	reversi8_2019.c
   3:../reversi8_2019.c **** * Autor:	Profesores de la asignatura
   4:../reversi8_2019.c **** 			Fernando Peña Bes (NIA: 756012)
   5:../reversi8_2019.c **** 			Pedro José Pérez García (NIA: 756642)
   6:../reversi8_2019.c **** * Descrip:	Implementación del juego reversi8.
   7:../reversi8_2019.c **** * Version:
   8:../reversi8_2019.c **** *********************************************************************************************/
   9:../reversi8_2019.c **** #include "reversi8_2019.h"
  10:../reversi8_2019.c **** 
  11:../reversi8_2019.c **** // Tamaño del tablero
  12:../reversi8_2019.c **** enum { DIM=8 };
  13:../reversi8_2019.c **** 
  14:../reversi8_2019.c **** // Valores que puede devolver la función patron_volteo())
  15:../reversi8_2019.c **** enum {
  16:../reversi8_2019.c **** 	NO_HAY_PATRON = 0,
  17:../reversi8_2019.c ****   PATRON_ENCONTRADO = 1
  18:../reversi8_2019.c **** };
  19:../reversi8_2019.c **** 
  20:../reversi8_2019.c **** // Estados de las casillas del tablero
  21:../reversi8_2019.c **** // deberia ser enum, lo dejamos como const para usar char...
  22:../reversi8_2019.c **** //const char CASILLA_VACIA = 0;
  23:../reversi8_2019.c **** //const char FICHA_BLANCA  = 1;
  24:../reversi8_2019.c **** //const char FICHA_NEGRA   = 2;
  25:../reversi8_2019.c **** 
  26:../reversi8_2019.c **** //El enum que debería estar aquí ha sido movido a definiciones_juego.h
  27:../reversi8_2019.c **** //	para que las funciones de elementos_pantalla, jugada_por_botones y reversi8
  28:../reversi8_2019.c **** //	puedan tener definiciones comunes en vez ed hacer una chapuza redefiniendo todo
  29:../reversi8_2019.c **** //	en cada uno de los sitios donde lo necesite
  30:../reversi8_2019.c **** 
  31:../reversi8_2019.c **** // candidatas: indica las posiciones a explorar
  32:../reversi8_2019.c **** // Se usa para no explorar todo el tablero innecesariamente
  33:../reversi8_2019.c **** // Sus posibles valores son NO, SI, CASILLA_OCUPADA
  34:../reversi8_2019.c **** enum {NO=0,SI=1,CASILLA_OCUPADA=2};
  35:../reversi8_2019.c **** /*
  36:../reversi8_2019.c **** const char  NO              = 0;
  37:../reversi8_2019.c **** const char  SI              = 1;
  38:../reversi8_2019.c **** const char  CASILLA_OCUPADA = 2;*/
  39:../reversi8_2019.c **** 
  40:../reversi8_2019.c **** /////////////////////////////////////////////////////////////////////////////
  41:../reversi8_2019.c **** // TABLAS AUXILIARES
  42:../reversi8_2019.c **** // declaramos las siguientes tablas como globales para que sean más fáciles visualizarlas en el sim
  43:../reversi8_2019.c **** // __attribute__ ((aligned (8))): specifies a minimum alignment for the variable or structure field
  44:../reversi8_2019.c **** 
  45:../reversi8_2019.c **** static const char __attribute__ ((aligned (8))) tabla_valor[DIM][DIM] =
  46:../reversi8_2019.c **** {
  47:../reversi8_2019.c ****     {8,2,7,3,3,7,2,8},
  48:../reversi8_2019.c ****     {2,1,4,4,4,4,1,2},
  49:../reversi8_2019.c ****     {7,4,6,5,5,6,4,7},
  50:../reversi8_2019.c ****     {3,4,5,0,0,5,4,3},
  51:../reversi8_2019.c ****     {3,4,5,0,0,5,4,3},
  52:../reversi8_2019.c ****     {7,4,6,5,5,6,4,7},
  53:../reversi8_2019.c ****     {2,1,4,4,4,4,1,2},
  54:../reversi8_2019.c ****     {8,2,7,3,3,7,2,8}
  55:../reversi8_2019.c **** };
  56:../reversi8_2019.c **** 
  57:../reversi8_2019.c **** 
  58:../reversi8_2019.c **** // Tabla de direcciones. Contiene los desplazamientos de las 8 direcciones posibles
  59:../reversi8_2019.c **** const char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
  60:../reversi8_2019.c **** const char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
  61:../reversi8_2019.c **** 
  62:../reversi8_2019.c **** //////////////////////////////////////////////////////////////////////////////////////
  63:../reversi8_2019.c **** // Variables globales que no deberían serlo
  64:../reversi8_2019.c **** // tablero, fila, columna y ready son varibles que se deberían definir como locales dentro de rever
  65:../reversi8_2019.c **** // Sin embargo, las hemos definido como globales para que sea más fácil visualizar el tablero y las
  66:../reversi8_2019.c **** //////////////////////////////////////////////////////////////////////////////////////
  67:../reversi8_2019.c **** 
  68:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////
  69:../reversi8_2019.c **** // Tablero sin inicializar
  70:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////
  71:../reversi8_2019.c **** static char __attribute__ ((aligned (8))) tablero[DIM][DIM] = {
  72:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  73:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  74:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  75:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  76:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  77:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  78:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  79:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  80:../reversi8_2019.c **** 	    };
  81:../reversi8_2019.c **** 
  82:../reversi8_2019.c **** 	static char __attribute__ ((aligned (8))) candidatas[DIM][DIM] =
  83:../reversi8_2019.c ****     {
  84:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  85:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  86:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  87:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  88:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  89:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  90:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  91:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO}
  92:../reversi8_2019.c ****     };
  93:../reversi8_2019.c **** 
  94:../reversi8_2019.c **** 	static int veces_pv = 0;
  95:../reversi8_2019.c **** 	static int t_pv = 0;
  96:../reversi8_2019.c **** 	int done;     // la máquina ha conseguido mover o no
  97:../reversi8_2019.c ****     int move = 0; // el humano ha conseguido mover o no
  98:../reversi8_2019.c ****     int blancas, negras; // número de fichas de cada color
  99:../reversi8_2019.c ****     volatile int fin = 0;  // fin vale 1 si el humano no ha podido mover
 100:../reversi8_2019.c ****                   // (ha introducido un valor de movimiento con algún 8)
 101:../reversi8_2019.c ****                   // y luego la máquina tampoco puede
 102:../reversi8_2019.c ****     char f, c;    // fila y columna elegidas por la máquina para su movimiento
 103:../reversi8_2019.c **** 
 104:../reversi8_2019.c ****   ////////////////////////////////////////////////////////////////////
 105:../reversi8_2019.c ****      // VARIABLES PARA INTERACCIONAR CON LA ENTRADA SALIDA
 106:../reversi8_2019.c ****      // Pregunta: ¿hay que hacer algo con ellas para que esto funcione bien?
 107:../reversi8_2019.c ****      // (por ejemplo añadir alguna palabra clave para garantizar que la sincronización a través de 
 108:../reversi8_2019.c **** static volatile char fila=0, columna=0, ready=0;
 109:../reversi8_2019.c **** 
 110:../reversi8_2019.c **** enum final_partida obtener_fin(void)
 111:../reversi8_2019.c **** {
 1125              		.loc 1 111 0
 1126              		.cfi_startproc
 1127              		@ Function supports interworking.
 1128              		@ args = 0, pretend = 0, frame = 0
 1129              		@ frame_needed = 1, uses_anonymous_args = 0
 1130 0000 0DC0A0E1 		mov	ip, sp
 1131              	.LCFI0:
 1132              		.cfi_def_cfa_register 12
 1133 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1134 0008 04B04CE2 		sub	fp, ip, #4
 1135              		.cfi_offset 14, -8
 1136              		.cfi_offset 13, -12
 1137              		.cfi_offset 11, -16
 1138              	.LCFI1:
 1139              		.cfi_def_cfa 11, 4
 112:../reversi8_2019.c **** 	if(fin == 0)
 1140              		.loc 1 112 0
 1141 000c 64309FE5 		ldr	r3, .L6
 1142 0010 003093E5 		ldr	r3, [r3, #0]
 1143 0014 000053E3 		cmp	r3, #0
 1144 0018 0100001A 		bne	.L2
 113:../reversi8_2019.c **** 	{
 114:../reversi8_2019.c **** 		return no_fin;
 1145              		.loc 1 114 0
 1146 001c 0030A0E3 		mov	r3, #0
 1147 0020 100000EA 		b	.L3
 1148              	.L2:
 115:../reversi8_2019.c **** 	}
 116:../reversi8_2019.c **** 	else
 117:../reversi8_2019.c **** 	{
 118:../reversi8_2019.c **** 		if(blancas > negras)
 1149              		.loc 1 118 0
 1150 0024 50309FE5 		ldr	r3, .L6+4
 1151 0028 002093E5 		ldr	r2, [r3, #0]
 1152 002c 4C309FE5 		ldr	r3, .L6+8
 1153 0030 003093E5 		ldr	r3, [r3, #0]
 1154 0034 030052E1 		cmp	r2, r3
 1155 0038 010000DA 		ble	.L4
 119:../reversi8_2019.c **** 		{
 120:../reversi8_2019.c **** 			return jugador_gana;
 1156              		.loc 1 120 0
 1157 003c 0130A0E3 		mov	r3, #1
 1158 0040 080000EA 		b	.L3
 1159              	.L4:
 121:../reversi8_2019.c **** 		}
 122:../reversi8_2019.c **** 		else if(negras > blancas)
 1160              		.loc 1 122 0
 1161 0044 34309FE5 		ldr	r3, .L6+8
 1162 0048 002093E5 		ldr	r2, [r3, #0]
 1163 004c 28309FE5 		ldr	r3, .L6+4
 1164 0050 003093E5 		ldr	r3, [r3, #0]
 1165 0054 030052E1 		cmp	r2, r3
 1166 0058 010000DA 		ble	.L5
 123:../reversi8_2019.c **** 		{
 124:../reversi8_2019.c **** 			return cpu_gana;
 1167              		.loc 1 124 0
 1168 005c 0230A0E3 		mov	r3, #2
 1169 0060 000000EA 		b	.L3
 1170              	.L5:
 125:../reversi8_2019.c **** 		}
 126:../reversi8_2019.c **** 	}
 127:../reversi8_2019.c **** 	//blancas == negras
 128:../reversi8_2019.c **** 	return empate;
 1171              		.loc 1 128 0
 1172 0064 0330A0E3 		mov	r3, #3
 1173              	.L3:
 129:../reversi8_2019.c **** }
 1174              		.loc 1 129 0
 1175 0068 0300A0E1 		mov	r0, r3
 1176 006c 0CD04BE2 		sub	sp, fp, #12
 1177 0070 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1178 0074 1EFF2FE1 		bx	lr
 1179              	.L7:
 1180              		.align	2
 1181              	.L6:
 1182 0078 00000000 		.word	fin
 1183 007c 00000000 		.word	blancas
 1184 0080 00000000 		.word	negras
 1185              		.cfi_endproc
 1186              	.LFE0:
 1188              		.align	2
 1189              		.global	contar_blancas
 1191              	contar_blancas:
 1192              	.LFB1:
 130:../reversi8_2019.c **** 
 131:../reversi8_2019.c **** 
 132:../reversi8_2019.c **** //Devuelven el número de fichas de cada color al final de la partida
 133:../reversi8_2019.c **** //	y solo se cuenta al final, por tanto no hace falta volver a contar
 134:../reversi8_2019.c **** //	Si se quiere contar a mitad de partida, se tendría que contar antes
 135:../reversi8_2019.c **** //	de devolver el número.
 136:../reversi8_2019.c **** int contar_blancas(void){return blancas;}
 1193              		.loc 1 136 0
 1194              		.cfi_startproc
 1195              		@ Function supports interworking.
 1196              		@ args = 0, pretend = 0, frame = 0
 1197              		@ frame_needed = 1, uses_anonymous_args = 0
 1198 0084 0DC0A0E1 		mov	ip, sp
 1199              	.LCFI2:
 1200              		.cfi_def_cfa_register 12
 1201 0088 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1202 008c 04B04CE2 		sub	fp, ip, #4
 1203              		.cfi_offset 14, -8
 1204              		.cfi_offset 13, -12
 1205              		.cfi_offset 11, -16
 1206              	.LCFI3:
 1207              		.cfi_def_cfa 11, 4
 1208              		.loc 1 136 0
 1209 0090 10309FE5 		ldr	r3, .L9
 1210 0094 003093E5 		ldr	r3, [r3, #0]
 1211 0098 0300A0E1 		mov	r0, r3
 1212 009c 0CD04BE2 		sub	sp, fp, #12
 1213 00a0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1214 00a4 1EFF2FE1 		bx	lr
 1215              	.L10:
 1216              		.align	2
 1217              	.L9:
 1218 00a8 00000000 		.word	blancas
 1219              		.cfi_endproc
 1220              	.LFE1:
 1222              		.align	2
 1223              		.global	contar_negras
 1225              	contar_negras:
 1226              	.LFB2:
 137:../reversi8_2019.c **** int contar_negras(void){return negras;}
 1227              		.loc 1 137 0
 1228              		.cfi_startproc
 1229              		@ Function supports interworking.
 1230              		@ args = 0, pretend = 0, frame = 0
 1231              		@ frame_needed = 1, uses_anonymous_args = 0
 1232 00ac 0DC0A0E1 		mov	ip, sp
 1233              	.LCFI4:
 1234              		.cfi_def_cfa_register 12
 1235 00b0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1236 00b4 04B04CE2 		sub	fp, ip, #4
 1237              		.cfi_offset 14, -8
 1238              		.cfi_offset 13, -12
 1239              		.cfi_offset 11, -16
 1240              	.LCFI5:
 1241              		.cfi_def_cfa 11, 4
 1242              		.loc 1 137 0
 1243 00b8 10309FE5 		ldr	r3, .L12
 1244 00bc 003093E5 		ldr	r3, [r3, #0]
 1245 00c0 0300A0E1 		mov	r0, r3
 1246 00c4 0CD04BE2 		sub	sp, fp, #12
 1247 00c8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1248 00cc 1EFF2FE1 		bx	lr
 1249              	.L13:
 1250              		.align	2
 1251              	.L12:
 1252 00d0 00000000 		.word	negras
 1253              		.cfi_endproc
 1254              	.LFE2:
 1256              		.align	2
 1257              		.global	reversi_t_pv
 1259              	reversi_t_pv:
 1260              	.LFB3:
 138:../reversi8_2019.c **** 
 139:../reversi8_2019.c **** int reversi_t_pv(void)
 140:../reversi8_2019.c **** {
 1261              		.loc 1 140 0
 1262              		.cfi_startproc
 1263              		@ Function supports interworking.
 1264              		@ args = 0, pretend = 0, frame = 0
 1265              		@ frame_needed = 1, uses_anonymous_args = 0
 1266 00d4 0DC0A0E1 		mov	ip, sp
 1267              	.LCFI6:
 1268              		.cfi_def_cfa_register 12
 1269 00d8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1270 00dc 04B04CE2 		sub	fp, ip, #4
 1271              		.cfi_offset 14, -8
 1272              		.cfi_offset 13, -12
 1273              		.cfi_offset 11, -16
 1274              	.LCFI7:
 1275              		.cfi_def_cfa 11, 4
 141:../reversi8_2019.c **** 	return veces_pv;
 1276              		.loc 1 141 0
 1277 00e0 10309FE5 		ldr	r3, .L15
 1278 00e4 003093E5 		ldr	r3, [r3, #0]
 142:../reversi8_2019.c **** }
 1279              		.loc 1 142 0
 1280 00e8 0300A0E1 		mov	r0, r3
 1281 00ec 0CD04BE2 		sub	sp, fp, #12
 1282 00f0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1283 00f4 1EFF2FE1 		bx	lr
 1284              	.L16:
 1285              		.align	2
 1286              	.L15:
 1287 00f8 80000000 		.word	veces_pv
 1288              		.cfi_endproc
 1289              	.LFE3:
 1291              		.align	2
 1292              		.global	reversi_veces_pv
 1294              	reversi_veces_pv:
 1295              	.LFB4:
 143:../reversi8_2019.c **** 
 144:../reversi8_2019.c **** int reversi_veces_pv(void)
 145:../reversi8_2019.c **** {
 1296              		.loc 1 145 0
 1297              		.cfi_startproc
 1298              		@ Function supports interworking.
 1299              		@ args = 0, pretend = 0, frame = 0
 1300              		@ frame_needed = 1, uses_anonymous_args = 0
 1301 00fc 0DC0A0E1 		mov	ip, sp
 1302              	.LCFI8:
 1303              		.cfi_def_cfa_register 12
 1304 0100 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1305 0104 04B04CE2 		sub	fp, ip, #4
 1306              		.cfi_offset 14, -8
 1307              		.cfi_offset 13, -12
 1308              		.cfi_offset 11, -16
 1309              	.LCFI9:
 1310              		.cfi_def_cfa 11, 4
 146:../reversi8_2019.c **** 	return t_pv;
 1311              		.loc 1 146 0
 1312 0108 10309FE5 		ldr	r3, .L18
 1313 010c 003093E5 		ldr	r3, [r3, #0]
 147:../reversi8_2019.c **** }
 1314              		.loc 1 147 0
 1315 0110 0300A0E1 		mov	r0, r3
 1316 0114 0CD04BE2 		sub	sp, fp, #12
 1317 0118 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1318 011c 1EFF2FE1 		bx	lr
 1319              	.L19:
 1320              		.align	2
 1321              	.L18:
 1322 0120 84000000 		.word	t_pv
 1323              		.cfi_endproc
 1324              	.LFE4:
 1326              		.align	2
 1327              		.global	reversi_procesar
 1329              	reversi_procesar:
 1330              	.LFB5:
 148:../reversi8_2019.c **** 
 149:../reversi8_2019.c **** void reversi_procesar(char f, char c)
 150:../reversi8_2019.c **** {
 1331              		.loc 1 150 0
 1332              		.cfi_startproc
 1333              		@ Function supports interworking.
 1334              		@ args = 0, pretend = 0, frame = 8
 1335              		@ frame_needed = 1, uses_anonymous_args = 0
 1336 0124 0DC0A0E1 		mov	ip, sp
 1337              	.LCFI10:
 1338              		.cfi_def_cfa_register 12
 1339 0128 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1340 012c 04B04CE2 		sub	fp, ip, #4
 1341              		.cfi_offset 14, -8
 1342              		.cfi_offset 13, -12
 1343              		.cfi_offset 11, -16
 1344              	.LCFI11:
 1345              		.cfi_def_cfa 11, 4
 1346 0130 08D04DE2 		sub	sp, sp, #8
 1347 0134 0020A0E1 		mov	r2, r0
 1348 0138 0130A0E1 		mov	r3, r1
 1349 013c 0D204BE5 		strb	r2, [fp, #-13]
 1350 0140 0E304BE5 		strb	r3, [fp, #-14]
 151:../reversi8_2019.c **** 	fila = f;
 1351              		.loc 1 151 0
 1352 0144 2C309FE5 		ldr	r3, .L21
 1353 0148 0D205BE5 		ldrb	r2, [fp, #-13]
 1354 014c 0020C3E5 		strb	r2, [r3, #0]
 152:../reversi8_2019.c **** 	columna = c;
 1355              		.loc 1 152 0
 1356 0150 24309FE5 		ldr	r3, .L21+4
 1357 0154 0E205BE5 		ldrb	r2, [fp, #-14]
 1358 0158 0020C3E5 		strb	r2, [r3, #0]
 153:../reversi8_2019.c **** 	ready = 1;
 1359              		.loc 1 153 0
 1360 015c 1C309FE5 		ldr	r3, .L21+8
 1361 0160 0120A0E3 		mov	r2, #1
 1362 0164 0020C3E5 		strb	r2, [r3, #0]
 154:../reversi8_2019.c **** 	reversi8();
 1363              		.loc 1 154 0
 1364 0168 FEFFFFEB 		bl	reversi8
 155:../reversi8_2019.c **** }
 1365              		.loc 1 155 0
 1366 016c 0CD04BE2 		sub	sp, fp, #12
 1367 0170 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1368 0174 1EFF2FE1 		bx	lr
 1369              	.L22:
 1370              		.align	2
 1371              	.L21:
 1372 0178 90000000 		.word	fila
 1373 017c 91000000 		.word	columna
 1374 0180 92000000 		.word	ready
 1375              		.cfi_endproc
 1376              	.LFE5:
 1378              		.align	2
 1379              		.global	obtener_ficha_en
 1381              	obtener_ficha_en:
 1382              	.LFB6:
 156:../reversi8_2019.c **** 
 157:../reversi8_2019.c **** enum estado_casilla obtener_ficha_en(int f, int c)		//TODO terminado
 158:../reversi8_2019.c **** {
 1383              		.loc 1 158 0
 1384              		.cfi_startproc
 1385              		@ Function supports interworking.
 1386              		@ args = 0, pretend = 0, frame = 8
 1387              		@ frame_needed = 1, uses_anonymous_args = 0
 1388 0184 0DC0A0E1 		mov	ip, sp
 1389              	.LCFI12:
 1390              		.cfi_def_cfa_register 12
 1391 0188 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1392 018c 04B04CE2 		sub	fp, ip, #4
 1393              		.cfi_offset 14, -8
 1394              		.cfi_offset 13, -12
 1395              		.cfi_offset 11, -16
 1396              	.LCFI13:
 1397              		.cfi_def_cfa 11, 4
 1398 0190 08D04DE2 		sub	sp, sp, #8
 1399 0194 10000BE5 		str	r0, [fp, #-16]
 1400 0198 14100BE5 		str	r1, [fp, #-20]
 159:../reversi8_2019.c **** 	return tablero[f][c];
 1401              		.loc 1 159 0
 1402 019c 24209FE5 		ldr	r2, .L24
 1403 01a0 10301BE5 		ldr	r3, [fp, #-16]
 1404 01a4 8311A0E1 		mov	r1, r3, asl #3
 1405 01a8 14301BE5 		ldr	r3, [fp, #-20]
 1406 01ac 033081E0 		add	r3, r1, r3
 1407 01b0 033082E0 		add	r3, r2, r3
 1408 01b4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 160:../reversi8_2019.c **** }
 1409              		.loc 1 160 0
 1410 01b8 0300A0E1 		mov	r0, r3
 1411 01bc 0CD04BE2 		sub	sp, fp, #12
 1412 01c0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1413 01c4 1EFF2FE1 		bx	lr
 1414              	.L25:
 1415              		.align	2
 1416              	.L24:
 1417 01c8 00000000 		.word	tablero
 1418              		.cfi_endproc
 1419              	.LFE6:
 1421              		.align	2
 1422              		.global	init_table
 1424              	init_table:
 1425              	.LFB7:
 161:../reversi8_2019.c **** 
 162:../reversi8_2019.c **** //extern int patron_volteo_arm_c(char tablero[][DIM], int *longitud,char FA, char CA, char SF, char
 163:../reversi8_2019.c **** //extern int patron_volteo_arm_arm(char tablero[][DIM], int *longitud,char FA, char CA, char SF, ch
 164:../reversi8_2019.c **** //extern int patron_volteo_arm_arm_opt(char tablero[][DIM], int *longitud,char FA, char CA, char SF
 165:../reversi8_2019.c **** 
 166:../reversi8_2019.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 167:../reversi8_2019.c **** // 0 indica CASILLA_VACIA, 1 indica FICHA_BLANCA y 2 indica FICHA_NEGRA
 168:../reversi8_2019.c **** // pone el tablero a cero y luego coloca las fichas centrales.
 169:../reversi8_2019.c **** void init_table(char tablero[][DIM], char candidatas[][DIM])
 170:../reversi8_2019.c **** {
 1426              		.loc 1 170 0
 1427              		.cfi_startproc
 1428              		@ Function supports interworking.
 1429              		@ args = 0, pretend = 0, frame = 16
 1430              		@ frame_needed = 1, uses_anonymous_args = 0
 1431 01cc 0DC0A0E1 		mov	ip, sp
 1432              	.LCFI14:
 1433              		.cfi_def_cfa_register 12
 1434 01d0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1435 01d4 04B04CE2 		sub	fp, ip, #4
 1436              		.cfi_offset 14, -8
 1437              		.cfi_offset 13, -12
 1438              		.cfi_offset 11, -16
 1439              	.LCFI15:
 1440              		.cfi_def_cfa 11, 4
 1441 01d8 10D04DE2 		sub	sp, sp, #16
 1442 01dc 18000BE5 		str	r0, [fp, #-24]
 1443 01e0 1C100BE5 		str	r1, [fp, #-28]
 171:../reversi8_2019.c ****     int i, j;
 172:../reversi8_2019.c **** 
 173:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1444              		.loc 1 173 0
 1445 01e4 0030A0E3 		mov	r3, #0
 1446 01e8 10300BE5 		str	r3, [fp, #-16]
 1447 01ec 130000EA 		b	.L27
 1448              	.L30:
 174:../reversi8_2019.c ****     {
 175:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1449              		.loc 1 175 0
 1450 01f0 0030A0E3 		mov	r3, #0
 1451 01f4 14300BE5 		str	r3, [fp, #-20]
 1452 01f8 0A0000EA 		b	.L28
 1453              	.L29:
 176:../reversi8_2019.c ****             tablero[i][j] = CASILLA_VACIA;
 1454              		.loc 1 176 0 discriminator 2
 1455 01fc 10301BE5 		ldr	r3, [fp, #-16]
 1456 0200 8331A0E1 		mov	r3, r3, asl #3
 1457 0204 18201BE5 		ldr	r2, [fp, #-24]
 1458 0208 032082E0 		add	r2, r2, r3
 1459 020c 14301BE5 		ldr	r3, [fp, #-20]
 1460 0210 033082E0 		add	r3, r2, r3
 1461 0214 0020A0E3 		mov	r2, #0
 1462 0218 0020C3E5 		strb	r2, [r3, #0]
 175:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1463              		.loc 1 175 0 discriminator 2
 1464 021c 14301BE5 		ldr	r3, [fp, #-20]
 1465 0220 013083E2 		add	r3, r3, #1
 1466 0224 14300BE5 		str	r3, [fp, #-20]
 1467              	.L28:
 175:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1468              		.loc 1 175 0 is_stmt 0 discriminator 1
 1469 0228 14301BE5 		ldr	r3, [fp, #-20]
 1470 022c 070053E3 		cmp	r3, #7
 1471 0230 F1FFFFDA 		ble	.L29
 173:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1472              		.loc 1 173 0 is_stmt 1
 1473 0234 10301BE5 		ldr	r3, [fp, #-16]
 1474 0238 013083E2 		add	r3, r3, #1
 1475 023c 10300BE5 		str	r3, [fp, #-16]
 1476              	.L27:
 173:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1477              		.loc 1 173 0 is_stmt 0 discriminator 1
 1478 0240 10301BE5 		ldr	r3, [fp, #-16]
 1479 0244 070053E3 		cmp	r3, #7
 1480 0248 E8FFFFDA 		ble	.L30
 177:../reversi8_2019.c ****     }
 178:../reversi8_2019.c **** #if 0
 179:../reversi8_2019.c ****     for (i = 3; i < 5; ++i) {
 180:../reversi8_2019.c **** 	for(j = 3; j < 5; ++j) {
 181:../reversi8_2019.c **** 	    tablero[i][j] = i == j ? FICHA_BLANCA : FICHA_NEGRA;
 182:../reversi8_2019.c **** 	}
 183:../reversi8_2019.c ****     }
 184:../reversi8_2019.c **** 
 185:../reversi8_2019.c ****     for (i = 2; i < 6; ++i) {
 186:../reversi8_2019.c **** 	for (j = 2; j < 6; ++j) {
 187:../reversi8_2019.c **** 	    if((i>=3) && (i < 5) && (j>=3) && (j<5)) {
 188:../reversi8_2019.c **** 		candidatas[i][j] = CASILLA_OCUPADA;
 189:../reversi8_2019.c **** 	    } else {
 190:../reversi8_2019.c **** 		candidatas[i][j] = SI; //CASILLA_LIBRE;
 191:../reversi8_2019.c **** 	    }
 192:../reversi8_2019.c **** 	}
 193:../reversi8_2019.c ****     }
 194:../reversi8_2019.c **** #endif
 195:../reversi8_2019.c ****     // arriba hay versión alternativa
 196:../reversi8_2019.c ****     tablero[3][3] = FICHA_BLANCA;
 1481              		.loc 1 196 0 is_stmt 1
 1482 024c 18301BE5 		ldr	r3, [fp, #-24]
 1483 0250 183083E2 		add	r3, r3, #24
 1484 0254 0120A0E3 		mov	r2, #1
 1485 0258 0320C3E5 		strb	r2, [r3, #3]
 197:../reversi8_2019.c ****     tablero[4][4] = FICHA_BLANCA;
 1486              		.loc 1 197 0
 1487 025c 18301BE5 		ldr	r3, [fp, #-24]
 1488 0260 203083E2 		add	r3, r3, #32
 1489 0264 0120A0E3 		mov	r2, #1
 1490 0268 0420C3E5 		strb	r2, [r3, #4]
 198:../reversi8_2019.c ****     tablero[3][4] = FICHA_NEGRA;
 1491              		.loc 1 198 0
 1492 026c 18301BE5 		ldr	r3, [fp, #-24]
 1493 0270 183083E2 		add	r3, r3, #24
 1494 0274 0220A0E3 		mov	r2, #2
 1495 0278 0420C3E5 		strb	r2, [r3, #4]
 199:../reversi8_2019.c ****     tablero[4][3] = FICHA_NEGRA;
 1496              		.loc 1 199 0
 1497 027c 18301BE5 		ldr	r3, [fp, #-24]
 1498 0280 203083E2 		add	r3, r3, #32
 1499 0284 0220A0E3 		mov	r2, #2
 1500 0288 0320C3E5 		strb	r2, [r3, #3]
 200:../reversi8_2019.c **** 
 201:../reversi8_2019.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 1501              		.loc 1 201 0
 1502 028c 1C301BE5 		ldr	r3, [fp, #-28]
 1503 0290 183083E2 		add	r3, r3, #24
 1504 0294 0220A0E3 		mov	r2, #2
 1505 0298 0320C3E5 		strb	r2, [r3, #3]
 202:../reversi8_2019.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 1506              		.loc 1 202 0
 1507 029c 1C301BE5 		ldr	r3, [fp, #-28]
 1508 02a0 203083E2 		add	r3, r3, #32
 1509 02a4 0220A0E3 		mov	r2, #2
 1510 02a8 0420C3E5 		strb	r2, [r3, #4]
 203:../reversi8_2019.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 1511              		.loc 1 203 0
 1512 02ac 1C301BE5 		ldr	r3, [fp, #-28]
 1513 02b0 183083E2 		add	r3, r3, #24
 1514 02b4 0220A0E3 		mov	r2, #2
 1515 02b8 0420C3E5 		strb	r2, [r3, #4]
 204:../reversi8_2019.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 1516              		.loc 1 204 0
 1517 02bc 1C301BE5 		ldr	r3, [fp, #-28]
 1518 02c0 203083E2 		add	r3, r3, #32
 1519 02c4 0220A0E3 		mov	r2, #2
 1520 02c8 0320C3E5 		strb	r2, [r3, #3]
 205:../reversi8_2019.c **** 
 206:../reversi8_2019.c ****     // casillas a explorar:
 207:../reversi8_2019.c ****     candidatas[2][2] = SI;
 1521              		.loc 1 207 0
 1522 02cc 1C301BE5 		ldr	r3, [fp, #-28]
 1523 02d0 103083E2 		add	r3, r3, #16
 1524 02d4 0120A0E3 		mov	r2, #1
 1525 02d8 0220C3E5 		strb	r2, [r3, #2]
 208:../reversi8_2019.c ****     candidatas[2][3] = SI;
 1526              		.loc 1 208 0
 1527 02dc 1C301BE5 		ldr	r3, [fp, #-28]
 1528 02e0 103083E2 		add	r3, r3, #16
 1529 02e4 0120A0E3 		mov	r2, #1
 1530 02e8 0320C3E5 		strb	r2, [r3, #3]
 209:../reversi8_2019.c ****     candidatas[2][4] = SI;
 1531              		.loc 1 209 0
 1532 02ec 1C301BE5 		ldr	r3, [fp, #-28]
 1533 02f0 103083E2 		add	r3, r3, #16
 1534 02f4 0120A0E3 		mov	r2, #1
 1535 02f8 0420C3E5 		strb	r2, [r3, #4]
 210:../reversi8_2019.c ****     candidatas[2][5] = SI;
 1536              		.loc 1 210 0
 1537 02fc 1C301BE5 		ldr	r3, [fp, #-28]
 1538 0300 103083E2 		add	r3, r3, #16
 1539 0304 0120A0E3 		mov	r2, #1
 1540 0308 0520C3E5 		strb	r2, [r3, #5]
 211:../reversi8_2019.c ****     candidatas[3][2] = SI;
 1541              		.loc 1 211 0
 1542 030c 1C301BE5 		ldr	r3, [fp, #-28]
 1543 0310 183083E2 		add	r3, r3, #24
 1544 0314 0120A0E3 		mov	r2, #1
 1545 0318 0220C3E5 		strb	r2, [r3, #2]
 212:../reversi8_2019.c ****     candidatas[3][5] = SI;
 1546              		.loc 1 212 0
 1547 031c 1C301BE5 		ldr	r3, [fp, #-28]
 1548 0320 183083E2 		add	r3, r3, #24
 1549 0324 0120A0E3 		mov	r2, #1
 1550 0328 0520C3E5 		strb	r2, [r3, #5]
 213:../reversi8_2019.c ****     candidatas[4][2] = SI;
 1551              		.loc 1 213 0
 1552 032c 1C301BE5 		ldr	r3, [fp, #-28]
 1553 0330 203083E2 		add	r3, r3, #32
 1554 0334 0120A0E3 		mov	r2, #1
 1555 0338 0220C3E5 		strb	r2, [r3, #2]
 214:../reversi8_2019.c ****     candidatas[4][5] = SI;
 1556              		.loc 1 214 0
 1557 033c 1C301BE5 		ldr	r3, [fp, #-28]
 1558 0340 203083E2 		add	r3, r3, #32
 1559 0344 0120A0E3 		mov	r2, #1
 1560 0348 0520C3E5 		strb	r2, [r3, #5]
 215:../reversi8_2019.c ****     candidatas[5][2] = SI;
 1561              		.loc 1 215 0
 1562 034c 1C301BE5 		ldr	r3, [fp, #-28]
 1563 0350 283083E2 		add	r3, r3, #40
 1564 0354 0120A0E3 		mov	r2, #1
 1565 0358 0220C3E5 		strb	r2, [r3, #2]
 216:../reversi8_2019.c ****     candidatas[5][3] = SI;
 1566              		.loc 1 216 0
 1567 035c 1C301BE5 		ldr	r3, [fp, #-28]
 1568 0360 283083E2 		add	r3, r3, #40
 1569 0364 0120A0E3 		mov	r2, #1
 1570 0368 0320C3E5 		strb	r2, [r3, #3]
 217:../reversi8_2019.c ****     candidatas[5][4] = SI;
 1571              		.loc 1 217 0
 1572 036c 1C301BE5 		ldr	r3, [fp, #-28]
 1573 0370 283083E2 		add	r3, r3, #40
 1574 0374 0120A0E3 		mov	r2, #1
 1575 0378 0420C3E5 		strb	r2, [r3, #4]
 218:../reversi8_2019.c ****     candidatas[5][5] = SI;
 1576              		.loc 1 218 0
 1577 037c 1C301BE5 		ldr	r3, [fp, #-28]
 1578 0380 283083E2 		add	r3, r3, #40
 1579 0384 0120A0E3 		mov	r2, #1
 1580 0388 0520C3E5 		strb	r2, [r3, #5]
 219:../reversi8_2019.c **** }
 1581              		.loc 1 219 0
 1582 038c 0CD04BE2 		sub	sp, fp, #12
 1583 0390 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1584 0394 1EFF2FE1 		bx	lr
 1585              		.cfi_endproc
 1586              	.LFE7:
 1588              		.align	2
 1589              		.global	ficha_valida
 1591              	ficha_valida:
 1592              	.LFB8:
 220:../reversi8_2019.c **** 
 221:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 222:../reversi8_2019.c **** // Espera a que ready valga 1.
 223:../reversi8_2019.c **** // CUIDADO: si el compilador coloca esta variable en un registro, no funcionará.
 224:../reversi8_2019.c **** // Hay que definirla como "volatile" para forzar a que antes de cada uso la cargue de memoria
 225:../reversi8_2019.c **** 
 226:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 227:../reversi8_2019.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 228:../reversi8_2019.c **** // IMPORTANTE: AL SUSTITUIR FICHA_VALIDA() Y PATRON_VOLTEO()
 229:../reversi8_2019.c **** // POR RUTINAS EN ENSAMBLADOR HAY QUE RESPETAR LA MODULARIDAD.
 230:../reversi8_2019.c **** // DEBEN SEGUIR SIENDO LLAMADAS A FUNCIONES Y DEBEN CUMPLIR CON EL ATPCS
 231:../reversi8_2019.c **** // (VER TRANSPARENCIAS Y MATERIAL DE PRACTICAS):
 232:../reversi8_2019.c **** //  - DEBEN PASAR LOS PARAMETROS POR LOS REGISTROS CORRESPONDIENTES
 233:../reversi8_2019.c **** //  - GUARDAR EN PILA SOLO LOS REGISTROS QUE TOCAN
 234:../reversi8_2019.c **** //  - CREAR UN MARCO DE PILA TAL Y COMO MUESTRAN LAS TRANSPARENCIAS
 235:../reversi8_2019.c **** //    DE LA ASIGNATURA (CON EL PC, FP, LR,....)
 236:../reversi8_2019.c **** //  - EN EL CASO DE LAS VARIABLES LOCALES, SOLO HAY QUE APILARLAS
 237:../reversi8_2019.c **** //    SI NO SE PUEDEN COLOCAR EN UN REGISTRO.
 238:../reversi8_2019.c **** //    SI SE COLOCAN EN UN REGISTRO NO HACE FALTA
 239:../reversi8_2019.c **** //    NI GUARDARLAS EN PILA NI RESERVAR UN ESPACIO EN LA PILA PARA ELLAS
 240:../reversi8_2019.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 241:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 242:../reversi8_2019.c **** // Devuelve el contenido de la posición indicadas por la fila y columna actual.
 243:../reversi8_2019.c **** // Además informa si la posición es válida y contiene alguna ficha.
 244:../reversi8_2019.c **** // Esto lo hace por referencia (en *posicion_valida)
 245:../reversi8_2019.c **** // Si devuelve un 0 no es válida o está vacia.
 246:../reversi8_2019.c **** char ficha_valida(char tablero[][DIM], char f, char c, int *posicion_valida)
 247:../reversi8_2019.c **** {
 1593              		.loc 1 247 0
 1594              		.cfi_startproc
 1595              		@ Function supports interworking.
 1596              		@ args = 0, pretend = 0, frame = 24
 1597              		@ frame_needed = 1, uses_anonymous_args = 0
 1598 0398 0DC0A0E1 		mov	ip, sp
 1599              	.LCFI16:
 1600              		.cfi_def_cfa_register 12
 1601 039c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1602 03a0 04B04CE2 		sub	fp, ip, #4
 1603              		.cfi_offset 14, -8
 1604              		.cfi_offset 13, -12
 1605              		.cfi_offset 11, -16
 1606              	.LCFI17:
 1607              		.cfi_def_cfa 11, 4
 1608 03a4 18D04DE2 		sub	sp, sp, #24
 1609 03a8 18000BE5 		str	r0, [fp, #-24]
 1610 03ac 20300BE5 		str	r3, [fp, #-32]
 1611 03b0 0130A0E1 		mov	r3, r1
 1612 03b4 19304BE5 		strb	r3, [fp, #-25]
 1613 03b8 0230A0E1 		mov	r3, r2
 1614 03bc 1A304BE5 		strb	r3, [fp, #-26]
 248:../reversi8_2019.c ****     char ficha;
 249:../reversi8_2019.c **** 
 250:../reversi8_2019.c ****     // ficha = tablero[f][c];
 251:../reversi8_2019.c ****     // no puede accederse a tablero[f][c]
 252:../reversi8_2019.c ****     // ya que algún índice puede ser negativo
 253:../reversi8_2019.c ****     //TODO a lo mejor la condicion que hay comentada hace falta
 254:../reversi8_2019.c ****     if ((f < DIM) /*&& (f >= 0)*/ && (c < DIM) /*&& (c >= 0)*/ && (tablero[f][c] != CASILLA_VACIA))
 1615              		.loc 1 254 0
 1616 03c0 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1617 03c4 070053E3 		cmp	r3, #7
 1618 03c8 1500008A 		bhi	.L32
 1619              		.loc 1 254 0 is_stmt 0 discriminator 1
 1620 03cc 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1621 03d0 070053E3 		cmp	r3, #7
 1622 03d4 1200008A 		bhi	.L32
 1623 03d8 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1624 03dc 8331A0E1 		mov	r3, r3, asl #3
 1625 03e0 18201BE5 		ldr	r2, [fp, #-24]
 1626 03e4 032082E0 		add	r2, r2, r3
 1627 03e8 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1628 03ec 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1629 03f0 000053E3 		cmp	r3, #0
 1630 03f4 0A00000A 		beq	.L32
 255:../reversi8_2019.c ****     {
 256:../reversi8_2019.c ****         *posicion_valida = 1;
 1631              		.loc 1 256 0 is_stmt 1
 1632 03f8 20301BE5 		ldr	r3, [fp, #-32]
 1633 03fc 0120A0E3 		mov	r2, #1
 1634 0400 002083E5 		str	r2, [r3, #0]
 257:../reversi8_2019.c ****         ficha = tablero[f][c];
 1635              		.loc 1 257 0
 1636 0404 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1637 0408 8331A0E1 		mov	r3, r3, asl #3
 1638 040c 18201BE5 		ldr	r2, [fp, #-24]
 1639 0410 032082E0 		add	r2, r2, r3
 1640 0414 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1641 0418 0330D2E7 		ldrb	r3, [r2, r3]
 1642 041c 0D304BE5 		strb	r3, [fp, #-13]
 1643 0420 040000EA 		b	.L33
 1644              	.L32:
 258:../reversi8_2019.c ****     }
 259:../reversi8_2019.c ****     else
 260:../reversi8_2019.c ****     {
 261:../reversi8_2019.c ****         *posicion_valida = 0;
 1645              		.loc 1 261 0
 1646 0424 20301BE5 		ldr	r3, [fp, #-32]
 1647 0428 0020A0E3 		mov	r2, #0
 1648 042c 002083E5 		str	r2, [r3, #0]
 262:../reversi8_2019.c ****         ficha = CASILLA_VACIA;
 1649              		.loc 1 262 0
 1650 0430 0030A0E3 		mov	r3, #0
 1651 0434 0D304BE5 		strb	r3, [fp, #-13]
 1652              	.L33:
 263:../reversi8_2019.c ****     }
 264:../reversi8_2019.c ****     return ficha;
 1653              		.loc 1 264 0
 1654 0438 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 265:../reversi8_2019.c **** }
 1655              		.loc 1 265 0
 1656 043c 0300A0E1 		mov	r0, r3
 1657 0440 0CD04BE2 		sub	sp, fp, #12
 1658 0444 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1659 0448 1EFF2FE1 		bx	lr
 1660              		.cfi_endproc
 1661              	.LFE8:
 1663              		.align	2
 1664              		.global	patron_volteo
 1666              	patron_volteo:
 1667              	.LFB9:
 266:../reversi8_2019.c **** 
 267:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 268:../reversi8_2019.c **** // La función patrón volteo comprueba si hay que actualizar una determinada direccion,
 269:../reversi8_2019.c **** // busca el patrón de volteo (n fichas del rival seguidas de una ficha del jugador actual)
 270:../reversi8_2019.c **** // en una dirección determinada
 271:../reversi8_2019.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 272:../reversi8_2019.c **** // color indica el color de la pieza que se acaba de colocar
 273:../reversi8_2019.c **** // la función devuelve PATRON_ENCONTRADO (1) si encuentra patrón y NO_HAY_PATRON (0) en caso contra
 274:../reversi8_2019.c **** // FA y CA son la fila y columna a analizar
 275:../reversi8_2019.c **** // longitud es un parámetro por referencia. Sirve para saber la longitud del patrón que se está ana
 276:../reversi8_2019.c **** //          Se usa para saber cuantas fichas habría que voltear
 277:../reversi8_2019.c **** int patron_volteo(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char colo
 278:../reversi8_2019.c **** {
 1668              		.loc 1 278 0
 1669              		.cfi_startproc
 1670              		@ Function supports interworking.
 1671              		@ args = 12, pretend = 0, frame = 32
 1672              		@ frame_needed = 1, uses_anonymous_args = 0
 1673 044c 0DC0A0E1 		mov	ip, sp
 1674              	.LCFI18:
 1675              		.cfi_def_cfa_register 12
 1676 0450 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1677 0454 04B04CE2 		sub	fp, ip, #4
 1678              		.cfi_offset 14, -8
 1679              		.cfi_offset 13, -12
 1680              		.cfi_offset 11, -16
 1681              	.LCFI19:
 1682              		.cfi_def_cfa 11, 4
 1683 0458 20D04DE2 		sub	sp, sp, #32
 1684 045c 20000BE5 		str	r0, [fp, #-32]
 1685 0460 24100BE5 		str	r1, [fp, #-36]
 1686 0464 25204BE5 		strb	r2, [fp, #-37]
 1687 0468 26304BE5 		strb	r3, [fp, #-38]
 279:../reversi8_2019.c **** 	int t_inicio = timer2_leer();
 1688              		.loc 1 279 0
 1689 046c FEFFFFEB 		bl	timer2_leer
 1690 0470 0030A0E1 		mov	r3, r0
 1691 0474 14300BE5 		str	r3, [fp, #-20]
 280:../reversi8_2019.c **** 	int t_final;
 281:../reversi8_2019.c **** 	int posicion_valida; // indica si la posición es valida y contiene una ficha de algún jugador
 282:../reversi8_2019.c **** 	char casilla;   // casilla es la casilla que se lee del tablero
 283:../reversi8_2019.c **** 
 284:../reversi8_2019.c **** 	FA = FA + SF;
 1692              		.loc 1 284 0
 1693 0478 25205BE5 		ldrb	r2, [fp, #-37]
 1694 047c 0430DBE5 		ldrb	r3, [fp, #4]
 1695 0480 033082E0 		add	r3, r2, r3
 1696 0484 25304BE5 		strb	r3, [fp, #-37]
 285:../reversi8_2019.c **** 	CA = CA + SC;
 1697              		.loc 1 285 0
 1698 0488 26205BE5 		ldrb	r2, [fp, #-38]
 1699 048c 0830DBE5 		ldrb	r3, [fp, #8]
 1700 0490 033082E0 		add	r3, r2, r3
 1701 0494 26304BE5 		strb	r3, [fp, #-38]
 286:../reversi8_2019.c **** 	casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 1702              		.loc 1 286 0
 1703 0498 25105BE5 		ldrb	r1, [fp, #-37]	@ zero_extendqisi2
 1704 049c 26205BE5 		ldrb	r2, [fp, #-38]	@ zero_extendqisi2
 1705 04a0 1C304BE2 		sub	r3, fp, #28
 1706 04a4 20001BE5 		ldr	r0, [fp, #-32]
 1707 04a8 FEFFFFEB 		bl	ficha_valida
 1708 04ac 0030A0E1 		mov	r3, r0
 1709 04b0 0D304BE5 		strb	r3, [fp, #-13]
 287:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1710              		.loc 1 287 0
 1711 04b4 130000EA 		b	.L35
 1712              	.L37:
 288:../reversi8_2019.c **** 	// mientras la casilla está en el tablero, no está vací­a,
 289:../reversi8_2019.c **** 	// y es del color rival seguimos buscando el patron de volteo
 290:../reversi8_2019.c **** 	{
 291:../reversi8_2019.c **** 		FA = FA + SF;
 1713              		.loc 1 291 0
 1714 04b8 25205BE5 		ldrb	r2, [fp, #-37]
 1715 04bc 0430DBE5 		ldrb	r3, [fp, #4]
 1716 04c0 033082E0 		add	r3, r2, r3
 1717 04c4 25304BE5 		strb	r3, [fp, #-37]
 292:../reversi8_2019.c **** 		CA = CA + SC;
 1718              		.loc 1 292 0
 1719 04c8 26205BE5 		ldrb	r2, [fp, #-38]
 1720 04cc 0830DBE5 		ldrb	r3, [fp, #8]
 1721 04d0 033082E0 		add	r3, r2, r3
 1722 04d4 26304BE5 		strb	r3, [fp, #-38]
 293:../reversi8_2019.c **** 		*longitud = *longitud + 1;
 1723              		.loc 1 293 0
 1724 04d8 24301BE5 		ldr	r3, [fp, #-36]
 1725 04dc 003093E5 		ldr	r3, [r3, #0]
 1726 04e0 012083E2 		add	r2, r3, #1
 1727 04e4 24301BE5 		ldr	r3, [fp, #-36]
 1728 04e8 002083E5 		str	r2, [r3, #0]
 294:../reversi8_2019.c **** 		casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 1729              		.loc 1 294 0
 1730 04ec 25105BE5 		ldrb	r1, [fp, #-37]	@ zero_extendqisi2
 1731 04f0 26205BE5 		ldrb	r2, [fp, #-38]	@ zero_extendqisi2
 1732 04f4 1C304BE2 		sub	r3, fp, #28
 1733 04f8 20001BE5 		ldr	r0, [fp, #-32]
 1734 04fc FEFFFFEB 		bl	ficha_valida
 1735 0500 0030A0E1 		mov	r3, r0
 1736 0504 0D304BE5 		strb	r3, [fp, #-13]
 1737              	.L35:
 287:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1738              		.loc 1 287 0 discriminator 1
 1739 0508 1C301BE5 		ldr	r3, [fp, #-28]
 1740 050c 010053E3 		cmp	r3, #1
 1741 0510 0300001A 		bne	.L36
 287:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1742              		.loc 1 287 0 is_stmt 0 discriminator 2
 1743 0514 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1744 0518 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1745 051c 030052E1 		cmp	r2, r3
 1746 0520 E4FFFF1A 		bne	.L37
 1747              	.L36:
 295:../reversi8_2019.c **** 	}
 296:../reversi8_2019.c ****     // si la ultima posición era válida y la ficha es del jugador actual,
 297:../reversi8_2019.c ****     // entonces hemos encontrado el patrón
 298:../reversi8_2019.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0))
 1748              		.loc 1 298 0 is_stmt 1
 1749 0524 1C301BE5 		ldr	r3, [fp, #-28]
 1750 0528 010053E3 		cmp	r3, #1
 1751 052c 1900001A 		bne	.L38
 1752              		.loc 1 298 0 is_stmt 0 discriminator 1
 1753 0530 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1754 0534 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1755 0538 030052E1 		cmp	r2, r3
 1756 053c 1500001A 		bne	.L38
 1757 0540 24301BE5 		ldr	r3, [fp, #-36]
 1758 0544 003093E5 		ldr	r3, [r3, #0]
 1759 0548 000053E3 		cmp	r3, #0
 1760 054c 110000DA 		ble	.L38
 299:../reversi8_2019.c **** 	{
 300:../reversi8_2019.c **** 		t_final = timer2_leer();
 1761              		.loc 1 300 0 is_stmt 1
 1762 0550 FEFFFFEB 		bl	timer2_leer
 1763 0554 0030A0E1 		mov	r3, r0
 1764 0558 18300BE5 		str	r3, [fp, #-24]
 301:../reversi8_2019.c **** 		t_pv += (t_final - t_inicio);
 1765              		.loc 1 301 0
 1766 055c 18201BE5 		ldr	r2, [fp, #-24]
 1767 0560 14301BE5 		ldr	r3, [fp, #-20]
 1768 0564 022063E0 		rsb	r2, r3, r2
 1769 0568 7C309FE5 		ldr	r3, .L40
 1770 056c 003093E5 		ldr	r3, [r3, #0]
 1771 0570 032082E0 		add	r2, r2, r3
 1772 0574 70309FE5 		ldr	r3, .L40
 1773 0578 002083E5 		str	r2, [r3, #0]
 302:../reversi8_2019.c **** 		veces_pv++;
 1774              		.loc 1 302 0
 1775 057c 6C309FE5 		ldr	r3, .L40+4
 1776 0580 003093E5 		ldr	r3, [r3, #0]
 1777 0584 012083E2 		add	r2, r3, #1
 1778 0588 60309FE5 		ldr	r3, .L40+4
 1779 058c 002083E5 		str	r2, [r3, #0]
 303:../reversi8_2019.c **** 		return PATRON_ENCONTRADO; // si hay que voltear una ficha o más hemos encontrado el patrón
 1780              		.loc 1 303 0
 1781 0590 0130A0E3 		mov	r3, #1
 1782 0594 100000EA 		b	.L39
 1783              	.L38:
 304:../reversi8_2019.c **** 	}
 305:../reversi8_2019.c **** 	else
 306:../reversi8_2019.c **** 	{
 307:../reversi8_2019.c **** 		t_final = timer2_leer();
 1784              		.loc 1 307 0
 1785 0598 FEFFFFEB 		bl	timer2_leer
 1786 059c 0030A0E1 		mov	r3, r0
 1787 05a0 18300BE5 		str	r3, [fp, #-24]
 308:../reversi8_2019.c **** 		t_pv += (t_final - t_inicio);
 1788              		.loc 1 308 0
 1789 05a4 18201BE5 		ldr	r2, [fp, #-24]
 1790 05a8 14301BE5 		ldr	r3, [fp, #-20]
 1791 05ac 022063E0 		rsb	r2, r3, r2
 1792 05b0 34309FE5 		ldr	r3, .L40
 1793 05b4 003093E5 		ldr	r3, [r3, #0]
 1794 05b8 032082E0 		add	r2, r2, r3
 1795 05bc 28309FE5 		ldr	r3, .L40
 1796 05c0 002083E5 		str	r2, [r3, #0]
 309:../reversi8_2019.c **** 		veces_pv++;
 1797              		.loc 1 309 0
 1798 05c4 24309FE5 		ldr	r3, .L40+4
 1799 05c8 003093E5 		ldr	r3, [r3, #0]
 1800 05cc 012083E2 		add	r2, r3, #1
 1801 05d0 18309FE5 		ldr	r3, .L40+4
 1802 05d4 002083E5 		str	r2, [r3, #0]
 310:../reversi8_2019.c **** 		return NO_HAY_PATRON; // si no hay que voltear no hay patrón
 1803              		.loc 1 310 0
 1804 05d8 0030A0E3 		mov	r3, #0
 1805              	.L39:
 311:../reversi8_2019.c **** 	}
 312:../reversi8_2019.c **** }
 1806              		.loc 1 312 0
 1807 05dc 0300A0E1 		mov	r0, r3
 1808 05e0 0CD04BE2 		sub	sp, fp, #12
 1809 05e4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1810 05e8 1EFF2FE1 		bx	lr
 1811              	.L41:
 1812              		.align	2
 1813              	.L40:
 1814 05ec 84000000 		.word	t_pv
 1815 05f0 80000000 		.word	veces_pv
 1816              		.cfi_endproc
 1817              	.LFE9:
 1819              		.align	2
 1820              		.global	voltear
 1822              	voltear:
 1823              	.LFB10:
 313:../reversi8_2019.c **** 
 314:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 315:../reversi8_2019.c **** // voltea n fichas en la dirección que toque
 316:../reversi8_2019.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 317:../reversi8_2019.c **** // color indica el color de la pieza que se acaba de colocar
 318:../reversi8_2019.c **** // FA y CA son la fila y columna a analizar
 319:../reversi8_2019.c **** void voltear(char tablero[][DIM], char FA, char CA, char SF, char SC, int n, char color)
 320:../reversi8_2019.c **** {
 1824              		.loc 1 320 0
 1825              		.cfi_startproc
 1826              		@ Function supports interworking.
 1827              		@ args = 12, pretend = 0, frame = 16
 1828              		@ frame_needed = 1, uses_anonymous_args = 0
 1829 05f4 0DC0A0E1 		mov	ip, sp
 1830              	.LCFI20:
 1831              		.cfi_def_cfa_register 12
 1832 05f8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1833 05fc 04B04CE2 		sub	fp, ip, #4
 1834              		.cfi_offset 14, -8
 1835              		.cfi_offset 13, -12
 1836              		.cfi_offset 11, -16
 1837              	.LCFI21:
 1838              		.cfi_def_cfa 11, 4
 1839 0600 10D04DE2 		sub	sp, sp, #16
 1840 0604 18000BE5 		str	r0, [fp, #-24]
 1841 0608 19104BE5 		strb	r1, [fp, #-25]
 1842 060c 1A204BE5 		strb	r2, [fp, #-26]
 1843 0610 1B304BE5 		strb	r3, [fp, #-27]
 321:../reversi8_2019.c ****     int i;
 322:../reversi8_2019.c **** 
 323:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1844              		.loc 1 323 0
 1845 0614 0030A0E3 		mov	r3, #0
 1846 0618 10300BE5 		str	r3, [fp, #-16]
 1847 061c 110000EA 		b	.L43
 1848              	.L44:
 324:../reversi8_2019.c ****     {
 325:../reversi8_2019.c ****         FA = FA + SF;
 1849              		.loc 1 325 0 discriminator 2
 1850 0620 19205BE5 		ldrb	r2, [fp, #-25]
 1851 0624 1B305BE5 		ldrb	r3, [fp, #-27]
 1852 0628 033082E0 		add	r3, r2, r3
 1853 062c 19304BE5 		strb	r3, [fp, #-25]
 326:../reversi8_2019.c ****         CA = CA + SC;
 1854              		.loc 1 326 0 discriminator 2
 1855 0630 1A205BE5 		ldrb	r2, [fp, #-26]
 1856 0634 0430DBE5 		ldrb	r3, [fp, #4]
 1857 0638 033082E0 		add	r3, r2, r3
 1858 063c 1A304BE5 		strb	r3, [fp, #-26]
 327:../reversi8_2019.c ****         tablero[FA][CA] = color;
 1859              		.loc 1 327 0 discriminator 2
 1860 0640 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1861 0644 8331A0E1 		mov	r3, r3, asl #3
 1862 0648 18201BE5 		ldr	r2, [fp, #-24]
 1863 064c 032082E0 		add	r2, r2, r3
 1864 0650 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1865 0654 0C10DBE5 		ldrb	r1, [fp, #12]
 1866 0658 0310C2E7 		strb	r1, [r2, r3]
 323:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1867              		.loc 1 323 0 discriminator 2
 1868 065c 10301BE5 		ldr	r3, [fp, #-16]
 1869 0660 013083E2 		add	r3, r3, #1
 1870 0664 10300BE5 		str	r3, [fp, #-16]
 1871              	.L43:
 323:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1872              		.loc 1 323 0 is_stmt 0 discriminator 1
 1873 0668 10201BE5 		ldr	r2, [fp, #-16]
 1874 066c 08309BE5 		ldr	r3, [fp, #8]
 1875 0670 030052E1 		cmp	r2, r3
 1876 0674 E9FFFFBA 		blt	.L44
 328:../reversi8_2019.c ****     }
 329:../reversi8_2019.c **** }
 1877              		.loc 1 329 0 is_stmt 1
 1878 0678 0CD04BE2 		sub	sp, fp, #12
 1879 067c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1880 0680 1EFF2FE1 		bx	lr
 1881              		.cfi_endproc
 1882              	.LFE10:
 1884              		.align	2
 1885              		.global	actualizar_tablero
 1887              	actualizar_tablero:
 1888              	.LFB11:
 330:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 331:../reversi8_2019.c **** // comprueba si hay que actualizar alguna ficha
 332:../reversi8_2019.c **** // no comprueba que el movimiento realizado sea válido
 333:../reversi8_2019.c **** // f y c son la fila y columna a analizar
 334:../reversi8_2019.c **** // char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
 335:../reversi8_2019.c **** // char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
 336:../reversi8_2019.c **** int actualizar_tablero(char tablero[][DIM], char f, char c, char color)
 337:../reversi8_2019.c **** {
 1889              		.loc 1 337 0
 1890              		.cfi_startproc
 1891              		@ Function supports interworking.
 1892              		@ args = 0, pretend = 0, frame = 24
 1893              		@ frame_needed = 1, uses_anonymous_args = 0
 1894 0684 0DC0A0E1 		mov	ip, sp
 1895              	.LCFI22:
 1896              		.cfi_def_cfa_register 12
 1897 0688 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1898 068c 04B04CE2 		sub	fp, ip, #4
 1899              		.cfi_offset 14, -8
 1900              		.cfi_offset 13, -12
 1901              		.cfi_offset 11, -16
 1902              	.LCFI23:
 1903              		.cfi_def_cfa 11, 4
 1904 0690 28D04DE2 		sub	sp, sp, #40
 1905 0694 20000BE5 		str	r0, [fp, #-32]
 1906 0698 21104BE5 		strb	r1, [fp, #-33]
 1907 069c 22204BE5 		strb	r2, [fp, #-34]
 1908 06a0 23304BE5 		strb	r3, [fp, #-35]
 338:../reversi8_2019.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 339:../reversi8_2019.c ****     int i, flip, patron;
 340:../reversi8_2019.c **** 
 341:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1909              		.loc 1 341 0
 1910 06a4 0030A0E3 		mov	r3, #0
 1911 06a8 10300BE5 		str	r3, [fp, #-16]
 1912 06ac 280000EA 		b	.L46
 1913              	.L48:
 342:../reversi8_2019.c ****     {
 343:../reversi8_2019.c ****         SF = vSF[i];
 1914              		.loc 1 343 0
 1915 06b0 BC209FE5 		ldr	r2, .L49
 1916 06b4 10301BE5 		ldr	r3, [fp, #-16]
 1917 06b8 033082E0 		add	r3, r2, r3
 1918 06bc 0030D3E5 		ldrb	r3, [r3, #0]
 1919 06c0 11304BE5 		strb	r3, [fp, #-17]
 344:../reversi8_2019.c ****         SC = vSC[i];
 1920              		.loc 1 344 0
 1921 06c4 AC209FE5 		ldr	r2, .L49+4
 1922 06c8 10301BE5 		ldr	r3, [fp, #-16]
 1923 06cc 033082E0 		add	r3, r2, r3
 1924 06d0 0030D3E5 		ldrb	r3, [r3, #0]
 1925 06d4 12304BE5 		strb	r3, [fp, #-18]
 345:../reversi8_2019.c ****         // flip: numero de fichas a voltear
 346:../reversi8_2019.c ****         flip = 0;
 1926              		.loc 1 346 0
 1927 06d8 0030A0E3 		mov	r3, #0
 1928 06dc 1C300BE5 		str	r3, [fp, #-28]
 347:../reversi8_2019.c ****         patron = patron_volteo(tablero, &flip, f, c, SF, SC, color);
 1929              		.loc 1 347 0
 1930 06e0 1C104BE2 		sub	r1, fp, #28
 1931 06e4 21205BE5 		ldrb	r2, [fp, #-33]	@ zero_extendqisi2
 1932 06e8 22305BE5 		ldrb	r3, [fp, #-34]	@ zero_extendqisi2
 1933 06ec 11005BE5 		ldrb	r0, [fp, #-17]	@ zero_extendqisi2
 1934 06f0 00008DE5 		str	r0, [sp, #0]
 1935 06f4 12005BE5 		ldrb	r0, [fp, #-18]	@ zero_extendqisi2
 1936 06f8 04008DE5 		str	r0, [sp, #4]
 1937 06fc 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 1938 0700 08008DE5 		str	r0, [sp, #8]
 1939 0704 20001BE5 		ldr	r0, [fp, #-32]
 1940 0708 FEFFFFEB 		bl	patron_volteo
 1941 070c 18000BE5 		str	r0, [fp, #-24]
 348:../reversi8_2019.c ****         if (patron == PATRON_ENCONTRADO )
 1942              		.loc 1 348 0
 1943 0710 18301BE5 		ldr	r3, [fp, #-24]
 1944 0714 010053E3 		cmp	r3, #1
 1945 0718 0A00001A 		bne	.L47
 349:../reversi8_2019.c ****         {
 350:../reversi8_2019.c ****             voltear(tablero, f, c, SF, SC, flip, color);
 1946              		.loc 1 350 0
 1947 071c 1C001BE5 		ldr	r0, [fp, #-28]
 1948 0720 21105BE5 		ldrb	r1, [fp, #-33]	@ zero_extendqisi2
 1949 0724 22205BE5 		ldrb	r2, [fp, #-34]	@ zero_extendqisi2
 1950 0728 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1951 072c 12C05BE5 		ldrb	ip, [fp, #-18]	@ zero_extendqisi2
 1952 0730 00C08DE5 		str	ip, [sp, #0]
 1953 0734 04008DE5 		str	r0, [sp, #4]
 1954 0738 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 1955 073c 08008DE5 		str	r0, [sp, #8]
 1956 0740 20001BE5 		ldr	r0, [fp, #-32]
 1957 0744 FEFFFFEB 		bl	voltear
 1958              	.L47:
 341:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1959              		.loc 1 341 0
 1960 0748 10301BE5 		ldr	r3, [fp, #-16]
 1961 074c 013083E2 		add	r3, r3, #1
 1962 0750 10300BE5 		str	r3, [fp, #-16]
 1963              	.L46:
 341:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1964              		.loc 1 341 0 is_stmt 0 discriminator 1
 1965 0754 10301BE5 		ldr	r3, [fp, #-16]
 1966 0758 070053E3 		cmp	r3, #7
 1967 075c D3FFFFDA 		ble	.L48
 351:../reversi8_2019.c ****         }
 352:../reversi8_2019.c ****     }
 353:../reversi8_2019.c ****     return 0;
 1968              		.loc 1 353 0 is_stmt 1
 1969 0760 0030A0E3 		mov	r3, #0
 354:../reversi8_2019.c **** }
 1970              		.loc 1 354 0
 1971 0764 0300A0E1 		mov	r0, r3
 1972 0768 0CD04BE2 		sub	sp, fp, #12
 1973 076c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1974 0770 1EFF2FE1 		bx	lr
 1975              	.L50:
 1976              		.align	2
 1977              	.L49:
 1978 0774 00000000 		.word	vSF
 1979 0778 00000000 		.word	vSC
 1980              		.cfi_endproc
 1981              	.LFE11:
 1983              		.align	2
 1984              		.global	elegir_mov
 1986              	elegir_mov:
 1987              	.LFB12:
 355:../reversi8_2019.c **** 
 356:../reversi8_2019.c **** /////////////////////////////////////////////////////////////////////////////////
 357:../reversi8_2019.c **** // Recorre todo el tablero comprobando en cada posición si se puede mover
 358:../reversi8_2019.c **** // En caso afirmativo, consulta la puntuación de la posición y si es la mejor
 359:../reversi8_2019.c **** // que se ha encontrado la guarda
 360:../reversi8_2019.c **** // Al acabar escribe el movimiento seleccionado en f y c
 361:../reversi8_2019.c **** 
 362:../reversi8_2019.c **** // Candidatas
 363:../reversi8_2019.c **** // NO    0
 364:../reversi8_2019.c **** // SI    1
 365:../reversi8_2019.c **** // CASILLA_OCUPADA 2
 366:../reversi8_2019.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 367:../reversi8_2019.c **** {
 1988              		.loc 1 367 0
 1989              		.cfi_startproc
 1990              		@ Function supports interworking.
 1991              		@ args = 0, pretend = 0, frame = 56
 1992              		@ frame_needed = 1, uses_anonymous_args = 0
 1993 077c 0DC0A0E1 		mov	ip, sp
 1994              	.LCFI24:
 1995              		.cfi_def_cfa_register 12
 1996 0780 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1997 0784 04B04CE2 		sub	fp, ip, #4
 1998              		.cfi_offset 14, -8
 1999              		.cfi_offset 13, -12
 2000              		.cfi_offset 11, -16
 2001              	.LCFI25:
 2002              		.cfi_def_cfa 11, 4
 2003 0788 48D04DE2 		sub	sp, sp, #72
 2004 078c 38000BE5 		str	r0, [fp, #-56]
 2005 0790 3C100BE5 		str	r1, [fp, #-60]
 2006 0794 40200BE5 		str	r2, [fp, #-64]
 2007 0798 44300BE5 		str	r3, [fp, #-68]
 368:../reversi8_2019.c ****     int i, j, k, found;
 369:../reversi8_2019.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 2008              		.loc 1 369 0
 2009 079c 0030E0E3 		mvn	r3, #0
 2010 07a0 20300BE5 		str	r3, [fp, #-32]
 370:../reversi8_2019.c ****     int mc;      // almacena la columna del mejor movimiento encontrado
 371:../reversi8_2019.c ****     char mejor = 0; // almacena el mejor valor encontrado
 2011              		.loc 1 371 0
 2012 07a4 0030A0E3 		mov	r3, #0
 2013 07a8 25304BE5 		strb	r3, [fp, #-37]
 372:../reversi8_2019.c ****     int patron, longitud;
 373:../reversi8_2019.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 374:../reversi8_2019.c **** 
 375:../reversi8_2019.c ****     // Recorremos todo el tablero comprobando dónde podemos mover
 376:../reversi8_2019.c ****     // Comparamos la puntuación de los movimientos encontrados y nos quedamos con el mejor
 377:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 2014              		.loc 1 377 0
 2015 07ac 0030A0E3 		mov	r3, #0
 2016 07b0 10300BE5 		str	r3, [fp, #-16]
 2017 07b4 600000EA 		b	.L52
 2018              	.L59:
 378:../reversi8_2019.c ****     {
 379:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 2019              		.loc 1 379 0
 2020 07b8 0030A0E3 		mov	r3, #0
 2021 07bc 14300BE5 		str	r3, [fp, #-20]
 2022 07c0 570000EA 		b	.L53
 2023              	.L58:
 380:../reversi8_2019.c ****         {   // indica en qué casillas quizá se pueda mover
 381:../reversi8_2019.c ****             if (candidatas[i][j] == SI)
 2024              		.loc 1 381 0
 2025 07c4 10301BE5 		ldr	r3, [fp, #-16]
 2026 07c8 8331A0E1 		mov	r3, r3, asl #3
 2027 07cc 38201BE5 		ldr	r2, [fp, #-56]
 2028 07d0 032082E0 		add	r2, r2, r3
 2029 07d4 14301BE5 		ldr	r3, [fp, #-20]
 2030 07d8 033082E0 		add	r3, r2, r3
 2031 07dc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2032 07e0 010053E3 		cmp	r3, #1
 2033 07e4 4B00001A 		bne	.L54
 382:../reversi8_2019.c ****             {
 383:../reversi8_2019.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 2034              		.loc 1 383 0
 2035 07e8 10301BE5 		ldr	r3, [fp, #-16]
 2036 07ec 8331A0E1 		mov	r3, r3, asl #3
 2037 07f0 3C201BE5 		ldr	r2, [fp, #-60]
 2038 07f4 032082E0 		add	r2, r2, r3
 2039 07f8 14301BE5 		ldr	r3, [fp, #-20]
 2040 07fc 033082E0 		add	r3, r2, r3
 2041 0800 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2042 0804 000053E3 		cmp	r3, #0
 2043 0808 4200001A 		bne	.L54
 384:../reversi8_2019.c ****                 {
 385:../reversi8_2019.c ****                     found = 0;
 2044              		.loc 1 385 0
 2045 080c 0030A0E3 		mov	r3, #0
 2046 0810 1C300BE5 		str	r3, [fp, #-28]
 386:../reversi8_2019.c ****                     k = 0;
 2047              		.loc 1 386 0
 2048 0814 0030A0E3 		mov	r3, #0
 2049 0818 18300BE5 		str	r3, [fp, #-24]
 387:../reversi8_2019.c **** 
 388:../reversi8_2019.c ****                     // en este bucle comprobamos si es un movimiento válido
 389:../reversi8_2019.c ****                     // (es decir si implica voltear en alguna dirección)
 390:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 2050              		.loc 1 390 0
 2051 081c 370000EA 		b	.L55
 2052              	.L57:
 391:../reversi8_2019.c ****                     {
 392:../reversi8_2019.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 2053              		.loc 1 392 0
 2054 0820 54219FE5 		ldr	r2, .L60
 2055 0824 18301BE5 		ldr	r3, [fp, #-24]
 2056 0828 033082E0 		add	r3, r2, r3
 2057 082c 0030D3E5 		ldrb	r3, [r3, #0]
 2058 0830 26304BE5 		strb	r3, [fp, #-38]
 393:../reversi8_2019.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 2059              		.loc 1 393 0
 2060 0834 44219FE5 		ldr	r2, .L60+4
 2061 0838 18301BE5 		ldr	r3, [fp, #-24]
 2062 083c 033082E0 		add	r3, r2, r3
 2063 0840 0030D3E5 		ldrb	r3, [r3, #0]
 2064 0844 27304BE5 		strb	r3, [fp, #-39]
 394:../reversi8_2019.c **** 
 395:../reversi8_2019.c ****                         // nos dice qué hay que voltear en cada dirección
 396:../reversi8_2019.c ****                         longitud = 0;
 2065              		.loc 1 396 0
 2066 0848 0030A0E3 		mov	r3, #0
 2067 084c 30300BE5 		str	r3, [fp, #-48]
 397:../reversi8_2019.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA);
 2068              		.loc 1 397 0
 2069 0850 10301BE5 		ldr	r3, [fp, #-16]
 2070 0854 FF2003E2 		and	r2, r3, #255
 2071 0858 14301BE5 		ldr	r3, [fp, #-20]
 2072 085c FF3003E2 		and	r3, r3, #255
 2073 0860 30104BE2 		sub	r1, fp, #48
 2074 0864 26005BE5 		ldrb	r0, [fp, #-38]	@ zero_extendqisi2
 2075 0868 00008DE5 		str	r0, [sp, #0]
 2076 086c 27005BE5 		ldrb	r0, [fp, #-39]	@ zero_extendqisi2
 2077 0870 04008DE5 		str	r0, [sp, #4]
 2078 0874 0100A0E3 		mov	r0, #1
 2079 0878 08008DE5 		str	r0, [sp, #8]
 2080 087c 3C001BE5 		ldr	r0, [fp, #-60]
 2081 0880 FEFFFFEB 		bl	patron_volteo
 2082 0884 2C000BE5 		str	r0, [fp, #-44]
 398:../reversi8_2019.c ****                         if (patron == PATRON_ENCONTRADO)
 2083              		.loc 1 398 0
 2084 0888 2C301BE5 		ldr	r3, [fp, #-44]
 2085 088c 010053E3 		cmp	r3, #1
 2086 0890 1700001A 		bne	.L56
 399:../reversi8_2019.c ****                         {
 400:../reversi8_2019.c ****                             found = 1;
 2087              		.loc 1 400 0
 2088 0894 0130A0E3 		mov	r3, #1
 2089 0898 1C300BE5 		str	r3, [fp, #-28]
 401:../reversi8_2019.c ****                             if (tabla_valor[i][j] > mejor)
 2090              		.loc 1 401 0
 2091 089c E0209FE5 		ldr	r2, .L60+8
 2092 08a0 10301BE5 		ldr	r3, [fp, #-16]
 2093 08a4 8311A0E1 		mov	r1, r3, asl #3
 2094 08a8 14301BE5 		ldr	r3, [fp, #-20]
 2095 08ac 033081E0 		add	r3, r1, r3
 2096 08b0 033082E0 		add	r3, r2, r3
 2097 08b4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2098 08b8 25205BE5 		ldrb	r2, [fp, #-37]	@ zero_extendqisi2
 2099 08bc 030052E1 		cmp	r2, r3
 2100 08c0 0B00002A 		bcs	.L56
 402:../reversi8_2019.c ****                             {
 403:../reversi8_2019.c ****                                 mf = i;
 2101              		.loc 1 403 0
 2102 08c4 10301BE5 		ldr	r3, [fp, #-16]
 2103 08c8 20300BE5 		str	r3, [fp, #-32]
 404:../reversi8_2019.c ****                                 mc = j;
 2104              		.loc 1 404 0
 2105 08cc 14301BE5 		ldr	r3, [fp, #-20]
 2106 08d0 24300BE5 		str	r3, [fp, #-36]
 405:../reversi8_2019.c ****                                 mejor = tabla_valor[i][j];
 2107              		.loc 1 405 0
 2108 08d4 A8209FE5 		ldr	r2, .L60+8
 2109 08d8 10301BE5 		ldr	r3, [fp, #-16]
 2110 08dc 8311A0E1 		mov	r1, r3, asl #3
 2111 08e0 14301BE5 		ldr	r3, [fp, #-20]
 2112 08e4 033081E0 		add	r3, r1, r3
 2113 08e8 033082E0 		add	r3, r2, r3
 2114 08ec 0030D3E5 		ldrb	r3, [r3, #0]
 2115 08f0 25304BE5 		strb	r3, [fp, #-37]
 2116              	.L56:
 406:../reversi8_2019.c ****                             }
 407:../reversi8_2019.c ****                         }
 408:../reversi8_2019.c ****                         k++;
 2117              		.loc 1 408 0
 2118 08f4 18301BE5 		ldr	r3, [fp, #-24]
 2119 08f8 013083E2 		add	r3, r3, #1
 2120 08fc 18300BE5 		str	r3, [fp, #-24]
 2121              	.L55:
 390:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 2122              		.loc 1 390 0 discriminator 1
 2123 0900 1C301BE5 		ldr	r3, [fp, #-28]
 2124 0904 000053E3 		cmp	r3, #0
 2125 0908 0200001A 		bne	.L54
 390:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 2126              		.loc 1 390 0 is_stmt 0 discriminator 2
 2127 090c 18301BE5 		ldr	r3, [fp, #-24]
 2128 0910 070053E3 		cmp	r3, #7
 2129 0914 C1FFFFDA 		ble	.L57
 2130              	.L54:
 379:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 2131              		.loc 1 379 0 is_stmt 1
 2132 0918 14301BE5 		ldr	r3, [fp, #-20]
 2133 091c 013083E2 		add	r3, r3, #1
 2134 0920 14300BE5 		str	r3, [fp, #-20]
 2135              	.L53:
 379:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 2136              		.loc 1 379 0 is_stmt 0 discriminator 1
 2137 0924 14301BE5 		ldr	r3, [fp, #-20]
 2138 0928 070053E3 		cmp	r3, #7
 2139 092c A4FFFFDA 		ble	.L58
 377:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 2140              		.loc 1 377 0 is_stmt 1
 2141 0930 10301BE5 		ldr	r3, [fp, #-16]
 2142 0934 013083E2 		add	r3, r3, #1
 2143 0938 10300BE5 		str	r3, [fp, #-16]
 2144              	.L52:
 377:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 2145              		.loc 1 377 0 is_stmt 0 discriminator 1
 2146 093c 10301BE5 		ldr	r3, [fp, #-16]
 2147 0940 070053E3 		cmp	r3, #7
 2148 0944 9BFFFFDA 		ble	.L59
 409:../reversi8_2019.c ****                         // si no hemos encontrado nada probamos con la siguiente dirección
 410:../reversi8_2019.c ****                     }
 411:../reversi8_2019.c ****                 }
 412:../reversi8_2019.c ****             }
 413:../reversi8_2019.c ****         }
 414:../reversi8_2019.c ****     }
 415:../reversi8_2019.c ****     *f = (char) mf;
 2149              		.loc 1 415 0 is_stmt 1
 2150 0948 20301BE5 		ldr	r3, [fp, #-32]
 2151 094c FF2003E2 		and	r2, r3, #255
 2152 0950 40301BE5 		ldr	r3, [fp, #-64]
 2153 0954 0020C3E5 		strb	r2, [r3, #0]
 416:../reversi8_2019.c ****     *c = (char) mc;
 2154              		.loc 1 416 0
 2155 0958 24301BE5 		ldr	r3, [fp, #-36]
 2156 095c FF2003E2 		and	r2, r3, #255
 2157 0960 44301BE5 		ldr	r3, [fp, #-68]
 2158 0964 0020C3E5 		strb	r2, [r3, #0]
 417:../reversi8_2019.c ****     // si no se ha encontrado una posición válida devuelve -1
 418:../reversi8_2019.c ****     return mf;
 2159              		.loc 1 418 0
 2160 0968 20301BE5 		ldr	r3, [fp, #-32]
 419:../reversi8_2019.c **** }
 2161              		.loc 1 419 0
 2162 096c 0300A0E1 		mov	r0, r3
 2163 0970 0CD04BE2 		sub	sp, fp, #12
 2164 0974 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2165 0978 1EFF2FE1 		bx	lr
 2166              	.L61:
 2167              		.align	2
 2168              	.L60:
 2169 097c 00000000 		.word	vSF
 2170 0980 00000000 		.word	vSC
 2171 0984 00000000 		.word	tabla_valor
 2172              		.cfi_endproc
 2173              	.LFE12:
 2175              		.align	2
 2176              		.global	contar
 2178              	contar:
 2179              	.LFB13:
 420:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 421:../reversi8_2019.c **** // Cuenta el número de fichas de cada color.
 422:../reversi8_2019.c **** // Los guarda en la dirección b (blancas) y n (negras)
 423:../reversi8_2019.c **** void contar(char tablero[][DIM], int *b, int *n)
 424:../reversi8_2019.c **** {
 2180              		.loc 1 424 0
 2181              		.cfi_startproc
 2182              		@ Function supports interworking.
 2183              		@ args = 0, pretend = 0, frame = 24
 2184              		@ frame_needed = 1, uses_anonymous_args = 0
 2185 0988 0DC0A0E1 		mov	ip, sp
 2186              	.LCFI26:
 2187              		.cfi_def_cfa_register 12
 2188 098c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2189 0990 04B04CE2 		sub	fp, ip, #4
 2190              		.cfi_offset 14, -8
 2191              		.cfi_offset 13, -12
 2192              		.cfi_offset 11, -16
 2193              	.LCFI27:
 2194              		.cfi_def_cfa 11, 4
 2195 0994 18D04DE2 		sub	sp, sp, #24
 2196 0998 18000BE5 		str	r0, [fp, #-24]
 2197 099c 1C100BE5 		str	r1, [fp, #-28]
 2198 09a0 20200BE5 		str	r2, [fp, #-32]
 425:../reversi8_2019.c ****     int i,j;
 426:../reversi8_2019.c **** 
 427:../reversi8_2019.c ****     *b = 0;
 2199              		.loc 1 427 0
 2200 09a4 1C301BE5 		ldr	r3, [fp, #-28]
 2201 09a8 0020A0E3 		mov	r2, #0
 2202 09ac 002083E5 		str	r2, [r3, #0]
 428:../reversi8_2019.c ****     *n = 0;
 2203              		.loc 1 428 0
 2204 09b0 20301BE5 		ldr	r3, [fp, #-32]
 2205 09b4 0020A0E3 		mov	r2, #0
 2206 09b8 002083E5 		str	r2, [r3, #0]
 429:../reversi8_2019.c **** 
 430:../reversi8_2019.c ****     // recorremos todo el tablero contando las fichas de cada color
 431:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 2207              		.loc 1 431 0
 2208 09bc 0030A0E3 		mov	r3, #0
 2209 09c0 10300BE5 		str	r3, [fp, #-16]
 2210 09c4 280000EA 		b	.L63
 2211              	.L68:
 432:../reversi8_2019.c ****     {
 433:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 2212              		.loc 1 433 0
 2213 09c8 0030A0E3 		mov	r3, #0
 2214 09cc 14300BE5 		str	r3, [fp, #-20]
 2215 09d0 1F0000EA 		b	.L64
 2216              	.L67:
 434:../reversi8_2019.c ****         {
 435:../reversi8_2019.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2217              		.loc 1 435 0
 2218 09d4 10301BE5 		ldr	r3, [fp, #-16]
 2219 09d8 8331A0E1 		mov	r3, r3, asl #3
 2220 09dc 18201BE5 		ldr	r2, [fp, #-24]
 2221 09e0 032082E0 		add	r2, r2, r3
 2222 09e4 14301BE5 		ldr	r3, [fp, #-20]
 2223 09e8 033082E0 		add	r3, r2, r3
 2224 09ec 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2225 09f0 010053E3 		cmp	r3, #1
 2226 09f4 0500001A 		bne	.L65
 436:../reversi8_2019.c ****             {
 437:../reversi8_2019.c ****                 (*b)++;
 2227              		.loc 1 437 0
 2228 09f8 1C301BE5 		ldr	r3, [fp, #-28]
 2229 09fc 003093E5 		ldr	r3, [r3, #0]
 2230 0a00 012083E2 		add	r2, r3, #1
 2231 0a04 1C301BE5 		ldr	r3, [fp, #-28]
 2232 0a08 002083E5 		str	r2, [r3, #0]
 2233 0a0c 0D0000EA 		b	.L66
 2234              	.L65:
 438:../reversi8_2019.c ****             }
 439:../reversi8_2019.c ****             else if (tablero[i][j] == FICHA_NEGRA)
 2235              		.loc 1 439 0
 2236 0a10 10301BE5 		ldr	r3, [fp, #-16]
 2237 0a14 8331A0E1 		mov	r3, r3, asl #3
 2238 0a18 18201BE5 		ldr	r2, [fp, #-24]
 2239 0a1c 032082E0 		add	r2, r2, r3
 2240 0a20 14301BE5 		ldr	r3, [fp, #-20]
 2241 0a24 033082E0 		add	r3, r2, r3
 2242 0a28 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2243 0a2c 020053E3 		cmp	r3, #2
 2244 0a30 0400001A 		bne	.L66
 440:../reversi8_2019.c ****             {
 441:../reversi8_2019.c ****                 (*n)++;
 2245              		.loc 1 441 0
 2246 0a34 20301BE5 		ldr	r3, [fp, #-32]
 2247 0a38 003093E5 		ldr	r3, [r3, #0]
 2248 0a3c 012083E2 		add	r2, r3, #1
 2249 0a40 20301BE5 		ldr	r3, [fp, #-32]
 2250 0a44 002083E5 		str	r2, [r3, #0]
 2251              	.L66:
 433:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 2252              		.loc 1 433 0
 2253 0a48 14301BE5 		ldr	r3, [fp, #-20]
 2254 0a4c 013083E2 		add	r3, r3, #1
 2255 0a50 14300BE5 		str	r3, [fp, #-20]
 2256              	.L64:
 433:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 2257              		.loc 1 433 0 is_stmt 0 discriminator 1
 2258 0a54 14301BE5 		ldr	r3, [fp, #-20]
 2259 0a58 070053E3 		cmp	r3, #7
 2260 0a5c DCFFFFDA 		ble	.L67
 431:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 2261              		.loc 1 431 0 is_stmt 1
 2262 0a60 10301BE5 		ldr	r3, [fp, #-16]
 2263 0a64 013083E2 		add	r3, r3, #1
 2264 0a68 10300BE5 		str	r3, [fp, #-16]
 2265              	.L63:
 431:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 2266              		.loc 1 431 0 is_stmt 0 discriminator 1
 2267 0a6c 10301BE5 		ldr	r3, [fp, #-16]
 2268 0a70 070053E3 		cmp	r3, #7
 2269 0a74 D3FFFFDA 		ble	.L68
 442:../reversi8_2019.c ****             }
 443:../reversi8_2019.c ****         }
 444:../reversi8_2019.c ****     }
 445:../reversi8_2019.c **** }
 2270              		.loc 1 445 0 is_stmt 1
 2271 0a78 0CD04BE2 		sub	sp, fp, #12
 2272 0a7c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2273 0a80 1EFF2FE1 		bx	lr
 2274              		.cfi_endproc
 2275              	.LFE13:
 2277              		.align	2
 2278              		.global	actualizar_candidatas
 2280              	actualizar_candidatas:
 2281              	.LFB14:
 446:../reversi8_2019.c **** 
 447:../reversi8_2019.c **** void actualizar_candidatas(char candidatas[][DIM], char f, char c)
 448:../reversi8_2019.c **** {
 2282              		.loc 1 448 0
 2283              		.cfi_startproc
 2284              		@ Function supports interworking.
 2285              		@ args = 0, pretend = 0, frame = 8
 2286              		@ frame_needed = 1, uses_anonymous_args = 0
 2287 0a84 0DC0A0E1 		mov	ip, sp
 2288              	.LCFI28:
 2289              		.cfi_def_cfa_register 12
 2290 0a88 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2291 0a8c 04B04CE2 		sub	fp, ip, #4
 2292              		.cfi_offset 14, -8
 2293              		.cfi_offset 13, -12
 2294              		.cfi_offset 11, -16
 2295              	.LCFI29:
 2296              		.cfi_def_cfa 11, 4
 2297 0a90 08D04DE2 		sub	sp, sp, #8
 2298 0a94 10000BE5 		str	r0, [fp, #-16]
 2299 0a98 0230A0E1 		mov	r3, r2
 2300 0a9c 0120A0E1 		mov	r2, r1
 2301 0aa0 11204BE5 		strb	r2, [fp, #-17]
 2302 0aa4 12304BE5 		strb	r3, [fp, #-18]
 449:../reversi8_2019.c ****     // donde ya se ha colocado no se puede volver a colocar
 450:../reversi8_2019.c ****     // En las posiciones alrededor sí
 451:../reversi8_2019.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 2303              		.loc 1 451 0
 2304 0aa8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2305 0aac 8331A0E1 		mov	r3, r3, asl #3
 2306 0ab0 10201BE5 		ldr	r2, [fp, #-16]
 2307 0ab4 032082E0 		add	r2, r2, r3
 2308 0ab8 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2309 0abc 0210A0E3 		mov	r1, #2
 2310 0ac0 0310C2E7 		strb	r1, [r2, r3]
 452:../reversi8_2019.c ****     if (f > 0)
 2311              		.loc 1 452 0
 2312 0ac4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2313 0ac8 000053E3 		cmp	r3, #0
 2314 0acc 3C00000A 		beq	.L70
 453:../reversi8_2019.c ****     {
 454:../reversi8_2019.c ****         if (candidatas[f-1][c] != CASILLA_OCUPADA)
 2315              		.loc 1 454 0
 2316 0ad0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2317 0ad4 013043E2 		sub	r3, r3, #1
 2318 0ad8 8331A0E1 		mov	r3, r3, asl #3
 2319 0adc 10201BE5 		ldr	r2, [fp, #-16]
 2320 0ae0 032082E0 		add	r2, r2, r3
 2321 0ae4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2322 0ae8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2323 0aec 020053E3 		cmp	r3, #2
 2324 0af0 0700000A 		beq	.L71
 455:../reversi8_2019.c ****             candidatas[f-1][c] = SI;
 2325              		.loc 1 455 0
 2326 0af4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2327 0af8 013043E2 		sub	r3, r3, #1
 2328 0afc 8331A0E1 		mov	r3, r3, asl #3
 2329 0b00 10201BE5 		ldr	r2, [fp, #-16]
 2330 0b04 032082E0 		add	r2, r2, r3
 2331 0b08 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2332 0b0c 0110A0E3 		mov	r1, #1
 2333 0b10 0310C2E7 		strb	r1, [r2, r3]
 2334              	.L71:
 456:../reversi8_2019.c **** 
 457:../reversi8_2019.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2335              		.loc 1 457 0
 2336 0b14 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2337 0b18 000053E3 		cmp	r3, #0
 2338 0b1c 1200000A 		beq	.L72
 2339              		.loc 1 457 0 is_stmt 0 discriminator 1
 2340 0b20 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2341 0b24 013043E2 		sub	r3, r3, #1
 2342 0b28 8331A0E1 		mov	r3, r3, asl #3
 2343 0b2c 10201BE5 		ldr	r2, [fp, #-16]
 2344 0b30 032082E0 		add	r2, r2, r3
 2345 0b34 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2346 0b38 013043E2 		sub	r3, r3, #1
 2347 0b3c 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2348 0b40 020053E3 		cmp	r3, #2
 2349 0b44 0800000A 		beq	.L72
 458:../reversi8_2019.c ****             candidatas[f-1][c-1] = SI;
 2350              		.loc 1 458 0 is_stmt 1
 2351 0b48 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2352 0b4c 013043E2 		sub	r3, r3, #1
 2353 0b50 8331A0E1 		mov	r3, r3, asl #3
 2354 0b54 10201BE5 		ldr	r2, [fp, #-16]
 2355 0b58 032082E0 		add	r2, r2, r3
 2356 0b5c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2357 0b60 013043E2 		sub	r3, r3, #1
 2358 0b64 0110A0E3 		mov	r1, #1
 2359 0b68 0310C2E7 		strb	r1, [r2, r3]
 2360              	.L72:
 459:../reversi8_2019.c **** 
 460:../reversi8_2019.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2361              		.loc 1 460 0
 2362 0b6c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2363 0b70 060053E3 		cmp	r3, #6
 2364 0b74 1200008A 		bhi	.L70
 2365              		.loc 1 460 0 is_stmt 0 discriminator 1
 2366 0b78 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2367 0b7c 013043E2 		sub	r3, r3, #1
 2368 0b80 8331A0E1 		mov	r3, r3, asl #3
 2369 0b84 10201BE5 		ldr	r2, [fp, #-16]
 2370 0b88 032082E0 		add	r2, r2, r3
 2371 0b8c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2372 0b90 013083E2 		add	r3, r3, #1
 2373 0b94 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2374 0b98 020053E3 		cmp	r3, #2
 2375 0b9c 0800000A 		beq	.L70
 461:../reversi8_2019.c ****             candidatas[f-1][c+1] = SI;
 2376              		.loc 1 461 0 is_stmt 1
 2377 0ba0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2378 0ba4 013043E2 		sub	r3, r3, #1
 2379 0ba8 8331A0E1 		mov	r3, r3, asl #3
 2380 0bac 10201BE5 		ldr	r2, [fp, #-16]
 2381 0bb0 032082E0 		add	r2, r2, r3
 2382 0bb4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2383 0bb8 013083E2 		add	r3, r3, #1
 2384 0bbc 0110A0E3 		mov	r1, #1
 2385 0bc0 0310C2E7 		strb	r1, [r2, r3]
 2386              	.L70:
 462:../reversi8_2019.c ****     }
 463:../reversi8_2019.c ****     if (f < 7)
 2387              		.loc 1 463 0
 2388 0bc4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2389 0bc8 060053E3 		cmp	r3, #6
 2390 0bcc 3C00008A 		bhi	.L73
 464:../reversi8_2019.c ****     {
 465:../reversi8_2019.c ****         if (candidatas[f+1][c] != CASILLA_OCUPADA)
 2391              		.loc 1 465 0
 2392 0bd0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2393 0bd4 013083E2 		add	r3, r3, #1
 2394 0bd8 8331A0E1 		mov	r3, r3, asl #3
 2395 0bdc 10201BE5 		ldr	r2, [fp, #-16]
 2396 0be0 032082E0 		add	r2, r2, r3
 2397 0be4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2398 0be8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2399 0bec 020053E3 		cmp	r3, #2
 2400 0bf0 0700000A 		beq	.L74
 466:../reversi8_2019.c ****             candidatas[f+1][c] = SI;
 2401              		.loc 1 466 0
 2402 0bf4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2403 0bf8 013083E2 		add	r3, r3, #1
 2404 0bfc 8331A0E1 		mov	r3, r3, asl #3
 2405 0c00 10201BE5 		ldr	r2, [fp, #-16]
 2406 0c04 032082E0 		add	r2, r2, r3
 2407 0c08 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2408 0c0c 0110A0E3 		mov	r1, #1
 2409 0c10 0310C2E7 		strb	r1, [r2, r3]
 2410              	.L74:
 467:../reversi8_2019.c **** 
 468:../reversi8_2019.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2411              		.loc 1 468 0
 2412 0c14 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2413 0c18 000053E3 		cmp	r3, #0
 2414 0c1c 1200000A 		beq	.L75
 2415              		.loc 1 468 0 is_stmt 0 discriminator 1
 2416 0c20 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2417 0c24 013083E2 		add	r3, r3, #1
 2418 0c28 8331A0E1 		mov	r3, r3, asl #3
 2419 0c2c 10201BE5 		ldr	r2, [fp, #-16]
 2420 0c30 032082E0 		add	r2, r2, r3
 2421 0c34 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2422 0c38 013043E2 		sub	r3, r3, #1
 2423 0c3c 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2424 0c40 020053E3 		cmp	r3, #2
 2425 0c44 0800000A 		beq	.L75
 469:../reversi8_2019.c ****             candidatas[f+1][c-1] = SI;
 2426              		.loc 1 469 0 is_stmt 1
 2427 0c48 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2428 0c4c 013083E2 		add	r3, r3, #1
 2429 0c50 8331A0E1 		mov	r3, r3, asl #3
 2430 0c54 10201BE5 		ldr	r2, [fp, #-16]
 2431 0c58 032082E0 		add	r2, r2, r3
 2432 0c5c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2433 0c60 013043E2 		sub	r3, r3, #1
 2434 0c64 0110A0E3 		mov	r1, #1
 2435 0c68 0310C2E7 		strb	r1, [r2, r3]
 2436              	.L75:
 470:../reversi8_2019.c **** 
 471:../reversi8_2019.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2437              		.loc 1 471 0
 2438 0c6c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2439 0c70 060053E3 		cmp	r3, #6
 2440 0c74 1200008A 		bhi	.L73
 2441              		.loc 1 471 0 is_stmt 0 discriminator 1
 2442 0c78 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2443 0c7c 013083E2 		add	r3, r3, #1
 2444 0c80 8331A0E1 		mov	r3, r3, asl #3
 2445 0c84 10201BE5 		ldr	r2, [fp, #-16]
 2446 0c88 032082E0 		add	r2, r2, r3
 2447 0c8c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2448 0c90 013083E2 		add	r3, r3, #1
 2449 0c94 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2450 0c98 020053E3 		cmp	r3, #2
 2451 0c9c 0800000A 		beq	.L73
 472:../reversi8_2019.c ****             candidatas[f+1][c+1] = SI;
 2452              		.loc 1 472 0 is_stmt 1
 2453 0ca0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2454 0ca4 013083E2 		add	r3, r3, #1
 2455 0ca8 8331A0E1 		mov	r3, r3, asl #3
 2456 0cac 10201BE5 		ldr	r2, [fp, #-16]
 2457 0cb0 032082E0 		add	r2, r2, r3
 2458 0cb4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2459 0cb8 013083E2 		add	r3, r3, #1
 2460 0cbc 0110A0E3 		mov	r1, #1
 2461 0cc0 0310C2E7 		strb	r1, [r2, r3]
 2462              	.L73:
 473:../reversi8_2019.c ****     }
 474:../reversi8_2019.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2463              		.loc 1 474 0
 2464 0cc4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2465 0cc8 000053E3 		cmp	r3, #0
 2466 0ccc 1000000A 		beq	.L76
 2467              		.loc 1 474 0 is_stmt 0 discriminator 1
 2468 0cd0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2469 0cd4 8331A0E1 		mov	r3, r3, asl #3
 2470 0cd8 10201BE5 		ldr	r2, [fp, #-16]
 2471 0cdc 032082E0 		add	r2, r2, r3
 2472 0ce0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2473 0ce4 013043E2 		sub	r3, r3, #1
 2474 0ce8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2475 0cec 020053E3 		cmp	r3, #2
 2476 0cf0 0700000A 		beq	.L76
 475:../reversi8_2019.c ****         candidatas[f][c-1] = SI;
 2477              		.loc 1 475 0 is_stmt 1
 2478 0cf4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2479 0cf8 8331A0E1 		mov	r3, r3, asl #3
 2480 0cfc 10201BE5 		ldr	r2, [fp, #-16]
 2481 0d00 032082E0 		add	r2, r2, r3
 2482 0d04 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2483 0d08 013043E2 		sub	r3, r3, #1
 2484 0d0c 0110A0E3 		mov	r1, #1
 2485 0d10 0310C2E7 		strb	r1, [r2, r3]
 2486              	.L76:
 476:../reversi8_2019.c **** 
 477:../reversi8_2019.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2487              		.loc 1 477 0
 2488 0d14 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2489 0d18 060053E3 		cmp	r3, #6
 2490 0d1c 1000008A 		bhi	.L69
 2491              		.loc 1 477 0 is_stmt 0 discriminator 1
 2492 0d20 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2493 0d24 8331A0E1 		mov	r3, r3, asl #3
 2494 0d28 10201BE5 		ldr	r2, [fp, #-16]
 2495 0d2c 032082E0 		add	r2, r2, r3
 2496 0d30 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2497 0d34 013083E2 		add	r3, r3, #1
 2498 0d38 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2499 0d3c 020053E3 		cmp	r3, #2
 2500 0d40 0700000A 		beq	.L69
 478:../reversi8_2019.c ****         candidatas[f][c+1] = SI;
 2501              		.loc 1 478 0 is_stmt 1
 2502 0d44 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2503 0d48 8331A0E1 		mov	r3, r3, asl #3
 2504 0d4c 10201BE5 		ldr	r2, [fp, #-16]
 2505 0d50 032082E0 		add	r2, r2, r3
 2506 0d54 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2507 0d58 013083E2 		add	r3, r3, #1
 2508 0d5c 0110A0E3 		mov	r1, #1
 2509 0d60 0310C2E7 		strb	r1, [r2, r3]
 2510              	.L69:
 479:../reversi8_2019.c **** }
 2511              		.loc 1 479 0
 2512 0d64 0CD04BE2 		sub	sp, fp, #12
 2513 0d68 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2514 0d6c 1EFF2FE1 		bx	lr
 2515              		.cfi_endproc
 2516              	.LFE14:
 2518              		.align	2
 2519              		.global	reversi8_inicializar
 2521              	reversi8_inicializar:
 2522              	.LFB15:
 480:../reversi8_2019.c **** 
 481:../reversi8_2019.c **** 
 482:../reversi8_2019.c **** 
 483:../reversi8_2019.c **** 
 484:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 485:../reversi8_2019.c **** // Proceso principal del juego
 486:../reversi8_2019.c **** // Utiliza el tablero,
 487:../reversi8_2019.c **** // y las direcciones en las que indica el jugador la fila y la columna
 488:../reversi8_2019.c **** // y la señal de ready que indica que se han actualizado fila y columna
 489:../reversi8_2019.c **** // tablero, fila, columna y ready son variables globales aunque deberían ser locales de reversi8,
 490:../reversi8_2019.c **** // la razón es que al meterlas en la pila no las pone juntas, y así jugar es más complicado.
 491:../reversi8_2019.c **** // en esta versión el humano lleva negras y la máquina blancas
 492:../reversi8_2019.c **** // no se comprueba que el humano mueva correctamente.
 493:../reversi8_2019.c **** // Sólo que la máquina realice un movimiento correcto.
 494:../reversi8_2019.c **** 
 495:../reversi8_2019.c **** void reversi8_inicializar()
 496:../reversi8_2019.c **** {
 2523              		.loc 1 496 0
 2524              		.cfi_startproc
 2525              		@ Function supports interworking.
 2526              		@ args = 0, pretend = 0, frame = 0
 2527              		@ frame_needed = 1, uses_anonymous_args = 0
 2528 0d70 0DC0A0E1 		mov	ip, sp
 2529              	.LCFI30:
 2530              		.cfi_def_cfa_register 12
 2531 0d74 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2532 0d78 04B04CE2 		sub	fp, ip, #4
 2533              		.cfi_offset 14, -8
 2534              		.cfi_offset 13, -12
 2535              		.cfi_offset 11, -16
 2536              	.LCFI31:
 2537              		.cfi_def_cfa 11, 4
 497:../reversi8_2019.c **** 	init_table(tablero, candidatas);
 2538              		.loc 1 497 0
 2539 0d7c 1C009FE5 		ldr	r0, .L79
 2540 0d80 1C109FE5 		ldr	r1, .L79+4
 2541 0d84 FEFFFFEB 		bl	init_table
 498:../reversi8_2019.c **** 	fin = 0;
 2542              		.loc 1 498 0
 2543 0d88 18309FE5 		ldr	r3, .L79+8
 2544 0d8c 0020A0E3 		mov	r2, #0
 2545 0d90 002083E5 		str	r2, [r3, #0]
 499:../reversi8_2019.c **** }
 2546              		.loc 1 499 0
 2547 0d94 0CD04BE2 		sub	sp, fp, #12
 2548 0d98 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2549 0d9c 1EFF2FE1 		bx	lr
 2550              	.L80:
 2551              		.align	2
 2552              	.L79:
 2553 0da0 00000000 		.word	tablero
 2554 0da4 40000000 		.word	candidatas
 2555 0da8 00000000 		.word	fin
 2556              		.cfi_endproc
 2557              	.LFE15:
 2559              		.align	2
 2560              		.global	reversi8
 2562              	reversi8:
 2563              	.LFB16:
 500:../reversi8_2019.c **** 
 501:../reversi8_2019.c **** void reversi8()
 502:../reversi8_2019.c **** {
 2564              		.loc 1 502 0
 2565              		.cfi_startproc
 2566              		@ Function supports interworking.
 2567              		@ args = 0, pretend = 0, frame = 0
 2568              		@ frame_needed = 1, uses_anonymous_args = 0
 2569 0dac 0DC0A0E1 		mov	ip, sp
 2570              	.LCFI32:
 2571              		.cfi_def_cfa_register 12
 2572 0db0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2573 0db4 04B04CE2 		sub	fp, ip, #4
 2574              		.cfi_offset 14, -8
 2575              		.cfi_offset 13, -12
 2576              		.cfi_offset 11, -16
 2577              	.LCFI33:
 2578              		.cfi_def_cfa 11, 4
 503:../reversi8_2019.c **** 	 ////////////////////////////////////////////////////////////////////
 504:../reversi8_2019.c **** 	 // Tablero candidatas: se usa para no explorar todas las posiciones del tablero
 505:../reversi8_2019.c **** 	// sólo se exploran las que están alrededor de las fichas colocadas
 506:../reversi8_2019.c **** 	 ////////////////////////////////////////////////////////////////////
 507:../reversi8_2019.c **** 	veces_pv = 0;
 2579              		.loc 1 507 0
 2580 0db8 E4319FE5 		ldr	r3, .L85
 2581 0dbc 0020A0E3 		mov	r2, #0
 2582 0dc0 002083E5 		str	r2, [r3, #0]
 508:../reversi8_2019.c **** 	t_pv = 0;
 2583              		.loc 1 508 0
 2584 0dc4 DC319FE5 		ldr	r3, .L85+4
 2585 0dc8 0020A0E3 		mov	r2, #0
 2586 0dcc 002083E5 		str	r2, [r3, #0]
 509:../reversi8_2019.c ****     if(fin == 0)
 2587              		.loc 1 509 0
 2588 0dd0 D4319FE5 		ldr	r3, .L85+8
 2589 0dd4 003093E5 		ldr	r3, [r3, #0]
 2590 0dd8 000053E3 		cmp	r3, #0
 2591 0ddc 6900001A 		bne	.L82
 510:../reversi8_2019.c ****     {
 511:../reversi8_2019.c ****         move = 0;
 2592              		.loc 1 511 0
 2593 0de0 C8319FE5 		ldr	r3, .L85+12
 2594 0de4 0020A0E3 		mov	r2, #0
 2595 0de8 002083E5 		str	r2, [r3, #0]
 512:../reversi8_2019.c ****         if(ready)
 2596              		.loc 1 512 0
 2597 0dec C0319FE5 		ldr	r3, .L85+16
 2598 0df0 0030D3E5 		ldrb	r3, [r3, #0]
 2599 0df4 FF3003E2 		and	r3, r3, #255
 2600 0df8 000053E3 		cmp	r3, #0
 2601 0dfc 6100000A 		beq	.L82
 513:../reversi8_2019.c ****         {
 514:../reversi8_2019.c ****         	ready = 0;
 2602              		.loc 1 514 0
 2603 0e00 AC319FE5 		ldr	r3, .L85+16
 2604 0e04 0020A0E3 		mov	r2, #0
 2605 0e08 0020C3E5 		strb	r2, [r3, #0]
 515:../reversi8_2019.c ****         	// si la fila o columna son 8 asumimos que el jugador no puede mover
 516:../reversi8_2019.c ****         	if (((fila) != DIM) && ((columna) != DIM))
 2606              		.loc 1 516 0
 2607 0e0c A4319FE5 		ldr	r3, .L85+20
 2608 0e10 0030D3E5 		ldrb	r3, [r3, #0]
 2609 0e14 FF3003E2 		and	r3, r3, #255
 2610 0e18 080053E3 		cmp	r3, #8
 2611 0e1c 2900000A 		beq	.L83
 2612              		.loc 1 516 0 is_stmt 0 discriminator 1
 2613 0e20 94319FE5 		ldr	r3, .L85+24
 2614 0e24 0030D3E5 		ldrb	r3, [r3, #0]
 2615 0e28 FF3003E2 		and	r3, r3, #255
 2616 0e2c 080053E3 		cmp	r3, #8
 2617 0e30 2400000A 		beq	.L83
 517:../reversi8_2019.c ****         	{
 518:../reversi8_2019.c ****         		tablero[fila][columna] = FICHA_NEGRA;
 2618              		.loc 1 518 0 is_stmt 1
 2619 0e34 7C319FE5 		ldr	r3, .L85+20
 2620 0e38 0030D3E5 		ldrb	r3, [r3, #0]
 2621 0e3c FF3003E2 		and	r3, r3, #255
 2622 0e40 0310A0E1 		mov	r1, r3
 2623 0e44 70319FE5 		ldr	r3, .L85+24
 2624 0e48 0030D3E5 		ldrb	r3, [r3, #0]
 2625 0e4c FF3003E2 		and	r3, r3, #255
 2626 0e50 68219FE5 		ldr	r2, .L85+28
 2627 0e54 8111A0E1 		mov	r1, r1, asl #3
 2628 0e58 033081E0 		add	r3, r1, r3
 2629 0e5c 033082E0 		add	r3, r2, r3
 2630 0e60 0220A0E3 		mov	r2, #2
 2631 0e64 0020C3E5 		strb	r2, [r3, #0]
 519:../reversi8_2019.c ****         		actualizar_tablero(tablero, fila, columna, FICHA_NEGRA);
 2632              		.loc 1 519 0
 2633 0e68 48319FE5 		ldr	r3, .L85+20
 2634 0e6c 0030D3E5 		ldrb	r3, [r3, #0]
 2635 0e70 FF2003E2 		and	r2, r3, #255
 2636 0e74 40319FE5 		ldr	r3, .L85+24
 2637 0e78 0030D3E5 		ldrb	r3, [r3, #0]
 2638 0e7c FF3003E2 		and	r3, r3, #255
 2639 0e80 38019FE5 		ldr	r0, .L85+28
 2640 0e84 0210A0E1 		mov	r1, r2
 2641 0e88 0320A0E1 		mov	r2, r3
 2642 0e8c 0230A0E3 		mov	r3, #2
 2643 0e90 FEFFFFEB 		bl	actualizar_tablero
 520:../reversi8_2019.c ****         		actualizar_candidatas(candidatas, fila, columna);
 2644              		.loc 1 520 0
 2645 0e94 1C319FE5 		ldr	r3, .L85+20
 2646 0e98 0030D3E5 		ldrb	r3, [r3, #0]
 2647 0e9c FF2003E2 		and	r2, r3, #255
 2648 0ea0 14319FE5 		ldr	r3, .L85+24
 2649 0ea4 0030D3E5 		ldrb	r3, [r3, #0]
 2650 0ea8 FF3003E2 		and	r3, r3, #255
 2651 0eac 10019FE5 		ldr	r0, .L85+32
 2652 0eb0 0210A0E1 		mov	r1, r2
 2653 0eb4 0320A0E1 		mov	r2, r3
 2654 0eb8 FEFFFFEB 		bl	actualizar_candidatas
 521:../reversi8_2019.c ****         		move = 1;
 2655              		.loc 1 521 0
 2656 0ebc EC309FE5 		ldr	r3, .L85+12
 2657 0ec0 0120A0E3 		mov	r2, #1
 2658 0ec4 002083E5 		str	r2, [r3, #0]
 2659              	.L83:
 522:../reversi8_2019.c ****         	}
 523:../reversi8_2019.c ****         	// escribe el movimiento en las variables globales fila columna
 524:../reversi8_2019.c ****         	done = elegir_mov(candidatas, tablero, &f, &c);
 2660              		.loc 1 524 0
 2661 0ec8 F4009FE5 		ldr	r0, .L85+32
 2662 0ecc EC109FE5 		ldr	r1, .L85+28
 2663 0ed0 F0209FE5 		ldr	r2, .L85+36
 2664 0ed4 F0309FE5 		ldr	r3, .L85+40
 2665 0ed8 FEFFFFEB 		bl	elegir_mov
 2666 0edc 0020A0E1 		mov	r2, r0
 2667 0ee0 E8309FE5 		ldr	r3, .L85+44
 2668 0ee4 002083E5 		str	r2, [r3, #0]
 525:../reversi8_2019.c ****         	if (done == -1)
 2669              		.loc 1 525 0
 2670 0ee8 E0309FE5 		ldr	r3, .L85+44
 2671 0eec 003093E5 		ldr	r3, [r3, #0]
 2672 0ef0 010073E3 		cmn	r3, #1
 2673 0ef4 0700001A 		bne	.L84
 526:../reversi8_2019.c ****         	{
 527:../reversi8_2019.c ****         		if (move == 0)
 2674              		.loc 1 527 0
 2675 0ef8 B0309FE5 		ldr	r3, .L85+12
 2676 0efc 003093E5 		ldr	r3, [r3, #0]
 2677 0f00 000053E3 		cmp	r3, #0
 2678 0f04 1F00001A 		bne	.L82
 528:../reversi8_2019.c ****         		fin = 1;
 2679              		.loc 1 528 0
 2680 0f08 9C309FE5 		ldr	r3, .L85+8
 2681 0f0c 0120A0E3 		mov	r2, #1
 2682 0f10 002083E5 		str	r2, [r3, #0]
 2683 0f14 1B0000EA 		b	.L82
 2684              	.L84:
 529:../reversi8_2019.c ****         	}
 530:../reversi8_2019.c ****         	else
 531:../reversi8_2019.c ****         	{
 532:../reversi8_2019.c ****         		tablero[f][c] = FICHA_BLANCA;
 2685              		.loc 1 532 0
 2686 0f18 A8309FE5 		ldr	r3, .L85+36
 2687 0f1c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2688 0f20 0310A0E1 		mov	r1, r3
 2689 0f24 A0309FE5 		ldr	r3, .L85+40
 2690 0f28 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2691 0f2c 8C209FE5 		ldr	r2, .L85+28
 2692 0f30 8111A0E1 		mov	r1, r1, asl #3
 2693 0f34 033081E0 		add	r3, r1, r3
 2694 0f38 033082E0 		add	r3, r2, r3
 2695 0f3c 0120A0E3 		mov	r2, #1
 2696 0f40 0020C3E5 		strb	r2, [r3, #0]
 533:../reversi8_2019.c ****         		actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 2697              		.loc 1 533 0
 2698 0f44 7C309FE5 		ldr	r3, .L85+36
 2699 0f48 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2700 0f4c 78309FE5 		ldr	r3, .L85+40
 2701 0f50 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2702 0f54 64009FE5 		ldr	r0, .L85+28
 2703 0f58 0210A0E1 		mov	r1, r2
 2704 0f5c 0320A0E1 		mov	r2, r3
 2705 0f60 0130A0E3 		mov	r3, #1
 2706 0f64 FEFFFFEB 		bl	actualizar_tablero
 534:../reversi8_2019.c ****         		actualizar_candidatas(candidatas, f, c);
 2707              		.loc 1 534 0
 2708 0f68 58309FE5 		ldr	r3, .L85+36
 2709 0f6c 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2710 0f70 54309FE5 		ldr	r3, .L85+40
 2711 0f74 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2712 0f78 44009FE5 		ldr	r0, .L85+32
 2713 0f7c 0210A0E1 		mov	r1, r2
 2714 0f80 0320A0E1 		mov	r2, r3
 2715 0f84 FEFFFFEB 		bl	actualizar_candidatas
 2716              	.L82:
 535:../reversi8_2019.c ****         	}
 536:../reversi8_2019.c ****         }
 537:../reversi8_2019.c ****     }
 538:../reversi8_2019.c ****     contar(tablero, &blancas, &negras);
 2717              		.loc 1 538 0
 2718 0f88 30009FE5 		ldr	r0, .L85+28
 2719 0f8c 40109FE5 		ldr	r1, .L85+48
 2720 0f90 40209FE5 		ldr	r2, .L85+52
 2721 0f94 FEFFFFEB 		bl	contar
 539:../reversi8_2019.c **** }
 2722              		.loc 1 539 0
 2723 0f98 0CD04BE2 		sub	sp, fp, #12
 2724 0f9c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2725 0fa0 1EFF2FE1 		bx	lr
 2726              	.L86:
 2727              		.align	2
 2728              	.L85:
 2729 0fa4 80000000 		.word	veces_pv
 2730 0fa8 84000000 		.word	t_pv
 2731 0fac 00000000 		.word	fin
 2732 0fb0 00000000 		.word	move
 2733 0fb4 92000000 		.word	ready
 2734 0fb8 90000000 		.word	fila
 2735 0fbc 91000000 		.word	columna
 2736 0fc0 00000000 		.word	tablero
 2737 0fc4 40000000 		.word	candidatas
 2738 0fc8 00000000 		.word	f
 2739 0fcc 00000000 		.word	c
 2740 0fd0 00000000 		.word	done
 2741 0fd4 00000000 		.word	blancas
 2742 0fd8 00000000 		.word	negras
 2743              		.cfi_endproc
 2744              	.LFE16:
 2746              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 reversi8_2019.c
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:989    .rodata:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:992    .rodata:00000000 tabla_valor
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1061   .rodata:00000040 vSF
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1074   .rodata:00000048 vSC
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1084   .bss:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1085   .bss:00000000 tablero
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1088   .bss:00000040 candidatas
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1091   .bss:00000080 veces_pv
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1094   .bss:00000084 t_pv
                            *COM*:00000004 done
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1101   .bss:00000088 move
                            *COM*:00000004 blancas
                            *COM*:00000004 negras
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1109   .bss:0000008c fin
                            *COM*:00000001 f
                            *COM*:00000001 c
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1113   .bss:00000090 fila
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1115   .bss:00000091 columna
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1117   .bss:00000092 ready
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1120   .text:00000000 $a
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1123   .text:00000000 obtener_fin
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1182   .text:00000078 $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1188   .text:00000084 $a
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1191   .text:00000084 contar_blancas
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1218   .text:000000a8 $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1222   .text:000000ac $a
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1225   .text:000000ac contar_negras
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1252   .text:000000d0 $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1256   .text:000000d4 $a
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1259   .text:000000d4 reversi_t_pv
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1287   .text:000000f8 $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1291   .text:000000fc $a
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1294   .text:000000fc reversi_veces_pv
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1322   .text:00000120 $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1326   .text:00000124 $a
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1329   .text:00000124 reversi_procesar
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:2562   .text:00000dac reversi8
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1372   .text:00000178 $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1378   .text:00000184 $a
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1381   .text:00000184 obtener_ficha_en
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1417   .text:000001c8 $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1421   .text:000001cc $a
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1424   .text:000001cc init_table
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1591   .text:00000398 ficha_valida
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1666   .text:0000044c patron_volteo
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1814   .text:000005ec $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1819   .text:000005f4 $a
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1822   .text:000005f4 voltear
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1887   .text:00000684 actualizar_tablero
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1978   .text:00000774 $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1983   .text:0000077c $a
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:1986   .text:0000077c elegir_mov
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:2169   .text:0000097c $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:2175   .text:00000988 $a
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:2178   .text:00000988 contar
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:2280   .text:00000a84 actualizar_candidatas
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:2521   .text:00000d70 reversi8_inicializar
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:2553   .text:00000da0 $d
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:2559   .text:00000dac $a
C:\Users\guest\AppData\Local\Temp\ccg4jYQN.s:2729   .text:00000fa4 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timer2_leer
