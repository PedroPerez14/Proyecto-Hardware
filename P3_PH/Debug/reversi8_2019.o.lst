   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"reversi8_2019.c"
  21              	.Ltext0:
  22              		.file 1 "../reversi8_2019.c"
 981              		.align	3
 984              	tabla_valor:
 985 0000 08       		.byte	8
 986 0001 02       		.byte	2
 987 0002 07       		.byte	7
 988 0003 03       		.byte	3
 989 0004 03       		.byte	3
 990 0005 07       		.byte	7
 991 0006 02       		.byte	2
 992 0007 08       		.byte	8
 993 0008 02       		.byte	2
 994 0009 01       		.byte	1
 995 000a 04       		.byte	4
 996 000b 04       		.byte	4
 997 000c 04       		.byte	4
 998 000d 04       		.byte	4
 999 000e 01       		.byte	1
 1000 000f 02       		.byte	2
 1001 0010 07       		.byte	7
 1002 0011 04       		.byte	4
 1003 0012 06       		.byte	6
 1004 0013 05       		.byte	5
 1005 0014 05       		.byte	5
 1006 0015 06       		.byte	6
 1007 0016 04       		.byte	4
 1008 0017 07       		.byte	7
 1009 0018 03       		.byte	3
 1010 0019 04       		.byte	4
 1011 001a 05       		.byte	5
 1012 001b 00       		.byte	0
 1013 001c 00       		.byte	0
 1014 001d 05       		.byte	5
 1015 001e 04       		.byte	4
 1016 001f 03       		.byte	3
 1017 0020 03       		.byte	3
 1018 0021 04       		.byte	4
 1019 0022 05       		.byte	5
 1020 0023 00       		.byte	0
 1021 0024 00       		.byte	0
 1022 0025 05       		.byte	5
 1023 0026 04       		.byte	4
 1024 0027 03       		.byte	3
 1025 0028 07       		.byte	7
 1026 0029 04       		.byte	4
 1027 002a 06       		.byte	6
 1028 002b 05       		.byte	5
 1029 002c 05       		.byte	5
 1030 002d 06       		.byte	6
 1031 002e 04       		.byte	4
 1032 002f 07       		.byte	7
 1033 0030 02       		.byte	2
 1034 0031 01       		.byte	1
 1035 0032 04       		.byte	4
 1036 0033 04       		.byte	4
 1037 0034 04       		.byte	4
 1038 0035 04       		.byte	4
 1039 0036 01       		.byte	1
 1040 0037 02       		.byte	2
 1041 0038 08       		.byte	8
 1042 0039 02       		.byte	2
 1043 003a 07       		.byte	7
 1044 003b 03       		.byte	3
 1045 003c 03       		.byte	3
 1046 003d 07       		.byte	7
 1047 003e 02       		.byte	2
 1048 003f 08       		.byte	8
 1049              		.global	vSF
 1050              		.align	2
 1053              	vSF:
 1054 0040 FF       		.byte	-1
 1055 0041 FF       		.byte	-1
 1056 0042 00       		.byte	0
 1057 0043 01       		.byte	1
 1058 0044 01       		.byte	1
 1059 0045 01       		.byte	1
 1060 0046 00       		.byte	0
 1061 0047 FF       		.byte	-1
 1062              		.global	vSC
 1063              		.align	2
 1066              	vSC:
 1067 0048 00       		.byte	0
 1068 0049 01       		.byte	1
 1069 004a 01       		.byte	1
 1070 004b 01       		.byte	1
 1071 004c 00       		.byte	0
 1072 004d FF       		.byte	-1
 1073 004e FF       		.byte	-1
 1074 004f FF       		.byte	-1
 1075              		.bss
 1076              		.align	3
 1077              	tablero:
 1078 0000 00000000 		.space	64
 1078      00000000 
 1078      00000000 
 1078      00000000 
 1078      00000000 
 1079              		.align	3
 1080              	candidatas:
 1081 0040 00000000 		.space	64
 1081      00000000 
 1081      00000000 
 1081      00000000 
 1081      00000000 
 1082              		.comm	done,4,4
 1083              		.global	move
 1084              		.align	2
 1087              	move:
 1088 0080 00000000 		.space	4
 1089              		.comm	blancas,4,4
 1090              		.comm	negras,4,4
 1091              		.global	fin
 1092              		.align	2
 1095              	fin:
 1096 0084 00000000 		.space	4
 1097              		.comm	f,1,1
 1098              		.comm	c,1,1
 1099              	fila:
 1100 0088 00       		.space	1
 1101              	columna:
 1102 0089 00       		.space	1
 1103              	ready:
 1104 008a 00       		.space	1
 1105 008b 00000000 		.text
 1105      00
 1106              		.align	2
 1107              		.global	reversi_procesar
 1109              	reversi_procesar:
 1110              	.LFB0:
   1:../reversi8_2019.c **** /*********************************************************************************************
   2:../reversi8_2019.c **** * Fichero:	reversi8_2019.c
   3:../reversi8_2019.c **** * Autor:	Profesores de la asignatura
   4:../reversi8_2019.c **** 			Fernando Peña Bes (NIA: 756012)
   5:../reversi8_2019.c **** 			Pedro José Pérez García (NIA: 756642)
   6:../reversi8_2019.c **** * Descrip:	Implementación del juego reversi8.
   7:../reversi8_2019.c **** * Version:
   8:../reversi8_2019.c **** *********************************************************************************************/
   9:../reversi8_2019.c **** #include "reversi8_2019.h"
  10:../reversi8_2019.c **** 
  11:../reversi8_2019.c **** // Tamaño del tablero
  12:../reversi8_2019.c **** enum { DIM=8 };
  13:../reversi8_2019.c **** 
  14:../reversi8_2019.c **** // Valores que puede devolver la función patron_volteo())
  15:../reversi8_2019.c **** enum {
  16:../reversi8_2019.c **** 	NO_HAY_PATRON = 0,
  17:../reversi8_2019.c ****   PATRON_ENCONTRADO = 1
  18:../reversi8_2019.c **** };
  19:../reversi8_2019.c **** 
  20:../reversi8_2019.c **** // Estados de las casillas del tablero
  21:../reversi8_2019.c **** // deberia ser enum, lo dejamos como const para usar char...
  22:../reversi8_2019.c **** //const char CASILLA_VACIA = 0;
  23:../reversi8_2019.c **** //const char FICHA_BLANCA  = 1;
  24:../reversi8_2019.c **** //const char FICHA_NEGRA   = 2;
  25:../reversi8_2019.c **** 
  26:../reversi8_2019.c **** enum {
  27:../reversi8_2019.c **** 	CASILLA_VACIA = 0,
  28:../reversi8_2019.c **** 	FICHA_BLANCA = 1,
  29:../reversi8_2019.c **** 	FICHA_NEGRA = 2
  30:../reversi8_2019.c **** };
  31:../reversi8_2019.c **** 
  32:../reversi8_2019.c **** // candidatas: indica las posiciones a explorar
  33:../reversi8_2019.c **** // Se usa para no explorar todo el tablero innecesariamente
  34:../reversi8_2019.c **** // Sus posibles valores son NO, SI, CASILLA_OCUPADA
  35:../reversi8_2019.c **** enum {NO=0,SI=1,CASILLA_OCUPADA=2};
  36:../reversi8_2019.c **** /*
  37:../reversi8_2019.c **** const char  NO              = 0;
  38:../reversi8_2019.c **** const char  SI              = 1;
  39:../reversi8_2019.c **** const char  CASILLA_OCUPADA = 2;*/
  40:../reversi8_2019.c **** 
  41:../reversi8_2019.c **** /////////////////////////////////////////////////////////////////////////////
  42:../reversi8_2019.c **** // TABLAS AUXILIARES
  43:../reversi8_2019.c **** // declaramos las siguientes tablas como globales para que sean más fáciles visualizarlas en el sim
  44:../reversi8_2019.c **** // __attribute__ ((aligned (8))): specifies a minimum alignment for the variable or structure field
  45:../reversi8_2019.c **** 
  46:../reversi8_2019.c **** static const char __attribute__ ((aligned (8))) tabla_valor[DIM][DIM] =
  47:../reversi8_2019.c **** {
  48:../reversi8_2019.c ****     {8,2,7,3,3,7,2,8},
  49:../reversi8_2019.c ****     {2,1,4,4,4,4,1,2},
  50:../reversi8_2019.c ****     {7,4,6,5,5,6,4,7},
  51:../reversi8_2019.c ****     {3,4,5,0,0,5,4,3},
  52:../reversi8_2019.c ****     {3,4,5,0,0,5,4,3},
  53:../reversi8_2019.c ****     {7,4,6,5,5,6,4,7},
  54:../reversi8_2019.c ****     {2,1,4,4,4,4,1,2},
  55:../reversi8_2019.c ****     {8,2,7,3,3,7,2,8}
  56:../reversi8_2019.c **** };
  57:../reversi8_2019.c **** 
  58:../reversi8_2019.c **** 
  59:../reversi8_2019.c **** // Tabla de direcciones. Contiene los desplazamientos de las 8 direcciones posibles
  60:../reversi8_2019.c **** const char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
  61:../reversi8_2019.c **** const char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
  62:../reversi8_2019.c **** 
  63:../reversi8_2019.c **** //////////////////////////////////////////////////////////////////////////////////////
  64:../reversi8_2019.c **** // Variables globales que no deberían serlo
  65:../reversi8_2019.c **** // tablero, fila, columna y ready son varibles que se deberían definir como locales dentro de rever
  66:../reversi8_2019.c **** // Sin embargo, las hemos definido como globales para que sea más fácil visualizar el tablero y las
  67:../reversi8_2019.c **** //////////////////////////////////////////////////////////////////////////////////////
  68:../reversi8_2019.c **** 
  69:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////
  70:../reversi8_2019.c **** // Tablero sin inicializar
  71:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////
  72:../reversi8_2019.c **** static char __attribute__ ((aligned (8))) tablero[DIM][DIM] = {
  73:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  74:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  75:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  76:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  77:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  78:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  79:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  80:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  81:../reversi8_2019.c **** 	    };
  82:../reversi8_2019.c **** 
  83:../reversi8_2019.c **** 	static char __attribute__ ((aligned (8))) candidatas[DIM][DIM] =
  84:../reversi8_2019.c ****     {
  85:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  86:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  87:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  88:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  89:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  90:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  91:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  92:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO}
  93:../reversi8_2019.c ****     };
  94:../reversi8_2019.c **** 
  95:../reversi8_2019.c **** 	int done;     // la máquina ha conseguido mover o no
  96:../reversi8_2019.c ****     int move = 0; // el humano ha conseguido mover o no
  97:../reversi8_2019.c ****     int blancas, negras; // número de fichas de cada color
  98:../reversi8_2019.c ****     volatile int fin = 0;  // fin vale 1 si el humano no ha podido mover
  99:../reversi8_2019.c ****                   // (ha introducido un valor de movimiento con algún 8)
 100:../reversi8_2019.c ****                   // y luego la máquina tampoco puede
 101:../reversi8_2019.c ****     char f, c;    // fila y columna elegidas por la máquina para su movimiento
 102:../reversi8_2019.c **** 
 103:../reversi8_2019.c ****   ////////////////////////////////////////////////////////////////////
 104:../reversi8_2019.c ****      // VARIABLES PARA INTERACCIONAR CON LA ENTRADA SALIDA
 105:../reversi8_2019.c ****      // Pregunta: ¿hay que hacer algo con ellas para que esto funcione bien?
 106:../reversi8_2019.c ****      // (por ejemplo añadir alguna palabra clave para garantizar que la sincronización a través de 
 107:../reversi8_2019.c **** static volatile char fila=0, columna=0, ready=0;
 108:../reversi8_2019.c **** 
 109:../reversi8_2019.c **** 
 110:../reversi8_2019.c **** void reversi_procesar(char f, char c)
 111:../reversi8_2019.c **** {
 1111              		.loc 1 111 0
 1112              		.cfi_startproc
 1113              		@ Function supports interworking.
 1114              		@ args = 0, pretend = 0, frame = 8
 1115              		@ frame_needed = 1, uses_anonymous_args = 0
 1116 0000 0DC0A0E1 		mov	ip, sp
 1117              	.LCFI0:
 1118              		.cfi_def_cfa_register 12
 1119 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1120 0008 04B04CE2 		sub	fp, ip, #4
 1121              		.cfi_offset 14, -8
 1122              		.cfi_offset 13, -12
 1123              		.cfi_offset 11, -16
 1124              	.LCFI1:
 1125              		.cfi_def_cfa 11, 4
 1126 000c 08D04DE2 		sub	sp, sp, #8
 1127 0010 0020A0E1 		mov	r2, r0
 1128 0014 0130A0E1 		mov	r3, r1
 1129 0018 0D204BE5 		strb	r2, [fp, #-13]
 1130 001c 0E304BE5 		strb	r3, [fp, #-14]
 112:../reversi8_2019.c **** 	fila = f;
 1131              		.loc 1 112 0
 1132 0020 2C309FE5 		ldr	r3, .L2
 1133 0024 0D205BE5 		ldrb	r2, [fp, #-13]
 1134 0028 0020C3E5 		strb	r2, [r3, #0]
 113:../reversi8_2019.c **** 	columna = c;
 1135              		.loc 1 113 0
 1136 002c 24309FE5 		ldr	r3, .L2+4
 1137 0030 0E205BE5 		ldrb	r2, [fp, #-14]
 1138 0034 0020C3E5 		strb	r2, [r3, #0]
 114:../reversi8_2019.c **** 	ready = 1;
 1139              		.loc 1 114 0
 1140 0038 1C309FE5 		ldr	r3, .L2+8
 1141 003c 0120A0E3 		mov	r2, #1
 1142 0040 0020C3E5 		strb	r2, [r3, #0]
 115:../reversi8_2019.c **** 	reversi8();
 1143              		.loc 1 115 0
 1144 0044 FEFFFFEB 		bl	reversi8
 116:../reversi8_2019.c **** }
 1145              		.loc 1 116 0
 1146 0048 0CD04BE2 		sub	sp, fp, #12
 1147 004c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1148 0050 1EFF2FE1 		bx	lr
 1149              	.L3:
 1150              		.align	2
 1151              	.L2:
 1152 0054 88000000 		.word	fila
 1153 0058 89000000 		.word	columna
 1154 005c 8A000000 		.word	ready
 1155              		.cfi_endproc
 1156              	.LFE0:
 1158              		.align	2
 1159              		.global	init_table
 1161              	init_table:
 1162              	.LFB1:
 117:../reversi8_2019.c **** 
 118:../reversi8_2019.c **** 
 119:../reversi8_2019.c **** 
 120:../reversi8_2019.c **** //extern int patron_volteo_arm_c(char tablero[][DIM], int *longitud,char FA, char CA, char SF, char
 121:../reversi8_2019.c **** //extern int patron_volteo_arm_arm(char tablero[][DIM], int *longitud,char FA, char CA, char SF, ch
 122:../reversi8_2019.c **** //extern int patron_volteo_arm_arm_opt(char tablero[][DIM], int *longitud,char FA, char CA, char SF
 123:../reversi8_2019.c **** 
 124:../reversi8_2019.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 125:../reversi8_2019.c **** // 0 indica CASILLA_VACIA, 1 indica FICHA_BLANCA y 2 indica FICHA_NEGRA
 126:../reversi8_2019.c **** // pone el tablero a cero y luego coloca las fichas centrales.
 127:../reversi8_2019.c **** void init_table(char tablero[][DIM], char candidatas[][DIM])
 128:../reversi8_2019.c **** {
 1163              		.loc 1 128 0
 1164              		.cfi_startproc
 1165              		@ Function supports interworking.
 1166              		@ args = 0, pretend = 0, frame = 16
 1167              		@ frame_needed = 1, uses_anonymous_args = 0
 1168 0060 0DC0A0E1 		mov	ip, sp
 1169              	.LCFI2:
 1170              		.cfi_def_cfa_register 12
 1171 0064 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1172 0068 04B04CE2 		sub	fp, ip, #4
 1173              		.cfi_offset 14, -8
 1174              		.cfi_offset 13, -12
 1175              		.cfi_offset 11, -16
 1176              	.LCFI3:
 1177              		.cfi_def_cfa 11, 4
 1178 006c 10D04DE2 		sub	sp, sp, #16
 1179 0070 18000BE5 		str	r0, [fp, #-24]
 1180 0074 1C100BE5 		str	r1, [fp, #-28]
 129:../reversi8_2019.c ****     int i, j;
 130:../reversi8_2019.c **** 
 131:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1181              		.loc 1 131 0
 1182 0078 0030A0E3 		mov	r3, #0
 1183 007c 10300BE5 		str	r3, [fp, #-16]
 1184 0080 130000EA 		b	.L5
 1185              	.L8:
 132:../reversi8_2019.c ****     {
 133:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1186              		.loc 1 133 0
 1187 0084 0030A0E3 		mov	r3, #0
 1188 0088 14300BE5 		str	r3, [fp, #-20]
 1189 008c 0A0000EA 		b	.L6
 1190              	.L7:
 134:../reversi8_2019.c ****             tablero[i][j] = CASILLA_VACIA;
 1191              		.loc 1 134 0 discriminator 2
 1192 0090 10301BE5 		ldr	r3, [fp, #-16]
 1193 0094 8331A0E1 		mov	r3, r3, asl #3
 1194 0098 18201BE5 		ldr	r2, [fp, #-24]
 1195 009c 032082E0 		add	r2, r2, r3
 1196 00a0 14301BE5 		ldr	r3, [fp, #-20]
 1197 00a4 033082E0 		add	r3, r2, r3
 1198 00a8 0020A0E3 		mov	r2, #0
 1199 00ac 0020C3E5 		strb	r2, [r3, #0]
 133:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1200              		.loc 1 133 0 discriminator 2
 1201 00b0 14301BE5 		ldr	r3, [fp, #-20]
 1202 00b4 013083E2 		add	r3, r3, #1
 1203 00b8 14300BE5 		str	r3, [fp, #-20]
 1204              	.L6:
 133:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1205              		.loc 1 133 0 is_stmt 0 discriminator 1
 1206 00bc 14301BE5 		ldr	r3, [fp, #-20]
 1207 00c0 070053E3 		cmp	r3, #7
 1208 00c4 F1FFFFDA 		ble	.L7
 131:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1209              		.loc 1 131 0 is_stmt 1
 1210 00c8 10301BE5 		ldr	r3, [fp, #-16]
 1211 00cc 013083E2 		add	r3, r3, #1
 1212 00d0 10300BE5 		str	r3, [fp, #-16]
 1213              	.L5:
 131:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1214              		.loc 1 131 0 is_stmt 0 discriminator 1
 1215 00d4 10301BE5 		ldr	r3, [fp, #-16]
 1216 00d8 070053E3 		cmp	r3, #7
 1217 00dc E8FFFFDA 		ble	.L8
 135:../reversi8_2019.c ****     }
 136:../reversi8_2019.c **** #if 0
 137:../reversi8_2019.c ****     for (i = 3; i < 5; ++i) {
 138:../reversi8_2019.c **** 	for(j = 3; j < 5; ++j) {
 139:../reversi8_2019.c **** 	    tablero[i][j] = i == j ? FICHA_BLANCA : FICHA_NEGRA;
 140:../reversi8_2019.c **** 	}
 141:../reversi8_2019.c ****     }
 142:../reversi8_2019.c **** 
 143:../reversi8_2019.c ****     for (i = 2; i < 6; ++i) {
 144:../reversi8_2019.c **** 	for (j = 2; j < 6; ++j) {
 145:../reversi8_2019.c **** 	    if((i>=3) && (i < 5) && (j>=3) && (j<5)) {
 146:../reversi8_2019.c **** 		candidatas[i][j] = CASILLA_OCUPADA;
 147:../reversi8_2019.c **** 	    } else {
 148:../reversi8_2019.c **** 		candidatas[i][j] = SI; //CASILLA_LIBRE;
 149:../reversi8_2019.c **** 	    }
 150:../reversi8_2019.c **** 	}
 151:../reversi8_2019.c ****     }
 152:../reversi8_2019.c **** #endif
 153:../reversi8_2019.c ****     // arriba hay versión alternativa
 154:../reversi8_2019.c ****     tablero[3][3] = FICHA_BLANCA;
 1218              		.loc 1 154 0 is_stmt 1
 1219 00e0 18301BE5 		ldr	r3, [fp, #-24]
 1220 00e4 183083E2 		add	r3, r3, #24
 1221 00e8 0120A0E3 		mov	r2, #1
 1222 00ec 0320C3E5 		strb	r2, [r3, #3]
 155:../reversi8_2019.c ****     tablero[4][4] = FICHA_BLANCA;
 1223              		.loc 1 155 0
 1224 00f0 18301BE5 		ldr	r3, [fp, #-24]
 1225 00f4 203083E2 		add	r3, r3, #32
 1226 00f8 0120A0E3 		mov	r2, #1
 1227 00fc 0420C3E5 		strb	r2, [r3, #4]
 156:../reversi8_2019.c ****     tablero[3][4] = FICHA_NEGRA;
 1228              		.loc 1 156 0
 1229 0100 18301BE5 		ldr	r3, [fp, #-24]
 1230 0104 183083E2 		add	r3, r3, #24
 1231 0108 0220A0E3 		mov	r2, #2
 1232 010c 0420C3E5 		strb	r2, [r3, #4]
 157:../reversi8_2019.c ****     tablero[4][3] = FICHA_NEGRA;
 1233              		.loc 1 157 0
 1234 0110 18301BE5 		ldr	r3, [fp, #-24]
 1235 0114 203083E2 		add	r3, r3, #32
 1236 0118 0220A0E3 		mov	r2, #2
 1237 011c 0320C3E5 		strb	r2, [r3, #3]
 158:../reversi8_2019.c **** 
 159:../reversi8_2019.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 1238              		.loc 1 159 0
 1239 0120 1C301BE5 		ldr	r3, [fp, #-28]
 1240 0124 183083E2 		add	r3, r3, #24
 1241 0128 0220A0E3 		mov	r2, #2
 1242 012c 0320C3E5 		strb	r2, [r3, #3]
 160:../reversi8_2019.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 1243              		.loc 1 160 0
 1244 0130 1C301BE5 		ldr	r3, [fp, #-28]
 1245 0134 203083E2 		add	r3, r3, #32
 1246 0138 0220A0E3 		mov	r2, #2
 1247 013c 0420C3E5 		strb	r2, [r3, #4]
 161:../reversi8_2019.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 1248              		.loc 1 161 0
 1249 0140 1C301BE5 		ldr	r3, [fp, #-28]
 1250 0144 183083E2 		add	r3, r3, #24
 1251 0148 0220A0E3 		mov	r2, #2
 1252 014c 0420C3E5 		strb	r2, [r3, #4]
 162:../reversi8_2019.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 1253              		.loc 1 162 0
 1254 0150 1C301BE5 		ldr	r3, [fp, #-28]
 1255 0154 203083E2 		add	r3, r3, #32
 1256 0158 0220A0E3 		mov	r2, #2
 1257 015c 0320C3E5 		strb	r2, [r3, #3]
 163:../reversi8_2019.c **** 
 164:../reversi8_2019.c ****     // casillas a explorar:
 165:../reversi8_2019.c ****     candidatas[2][2] = SI;
 1258              		.loc 1 165 0
 1259 0160 1C301BE5 		ldr	r3, [fp, #-28]
 1260 0164 103083E2 		add	r3, r3, #16
 1261 0168 0120A0E3 		mov	r2, #1
 1262 016c 0220C3E5 		strb	r2, [r3, #2]
 166:../reversi8_2019.c ****     candidatas[2][3] = SI;
 1263              		.loc 1 166 0
 1264 0170 1C301BE5 		ldr	r3, [fp, #-28]
 1265 0174 103083E2 		add	r3, r3, #16
 1266 0178 0120A0E3 		mov	r2, #1
 1267 017c 0320C3E5 		strb	r2, [r3, #3]
 167:../reversi8_2019.c ****     candidatas[2][4] = SI;
 1268              		.loc 1 167 0
 1269 0180 1C301BE5 		ldr	r3, [fp, #-28]
 1270 0184 103083E2 		add	r3, r3, #16
 1271 0188 0120A0E3 		mov	r2, #1
 1272 018c 0420C3E5 		strb	r2, [r3, #4]
 168:../reversi8_2019.c ****     candidatas[2][5] = SI;
 1273              		.loc 1 168 0
 1274 0190 1C301BE5 		ldr	r3, [fp, #-28]
 1275 0194 103083E2 		add	r3, r3, #16
 1276 0198 0120A0E3 		mov	r2, #1
 1277 019c 0520C3E5 		strb	r2, [r3, #5]
 169:../reversi8_2019.c ****     candidatas[3][2] = SI;
 1278              		.loc 1 169 0
 1279 01a0 1C301BE5 		ldr	r3, [fp, #-28]
 1280 01a4 183083E2 		add	r3, r3, #24
 1281 01a8 0120A0E3 		mov	r2, #1
 1282 01ac 0220C3E5 		strb	r2, [r3, #2]
 170:../reversi8_2019.c ****     candidatas[3][5] = SI;
 1283              		.loc 1 170 0
 1284 01b0 1C301BE5 		ldr	r3, [fp, #-28]
 1285 01b4 183083E2 		add	r3, r3, #24
 1286 01b8 0120A0E3 		mov	r2, #1
 1287 01bc 0520C3E5 		strb	r2, [r3, #5]
 171:../reversi8_2019.c ****     candidatas[4][2] = SI;
 1288              		.loc 1 171 0
 1289 01c0 1C301BE5 		ldr	r3, [fp, #-28]
 1290 01c4 203083E2 		add	r3, r3, #32
 1291 01c8 0120A0E3 		mov	r2, #1
 1292 01cc 0220C3E5 		strb	r2, [r3, #2]
 172:../reversi8_2019.c ****     candidatas[4][5] = SI;
 1293              		.loc 1 172 0
 1294 01d0 1C301BE5 		ldr	r3, [fp, #-28]
 1295 01d4 203083E2 		add	r3, r3, #32
 1296 01d8 0120A0E3 		mov	r2, #1
 1297 01dc 0520C3E5 		strb	r2, [r3, #5]
 173:../reversi8_2019.c ****     candidatas[5][2] = SI;
 1298              		.loc 1 173 0
 1299 01e0 1C301BE5 		ldr	r3, [fp, #-28]
 1300 01e4 283083E2 		add	r3, r3, #40
 1301 01e8 0120A0E3 		mov	r2, #1
 1302 01ec 0220C3E5 		strb	r2, [r3, #2]
 174:../reversi8_2019.c ****     candidatas[5][3] = SI;
 1303              		.loc 1 174 0
 1304 01f0 1C301BE5 		ldr	r3, [fp, #-28]
 1305 01f4 283083E2 		add	r3, r3, #40
 1306 01f8 0120A0E3 		mov	r2, #1
 1307 01fc 0320C3E5 		strb	r2, [r3, #3]
 175:../reversi8_2019.c ****     candidatas[5][4] = SI;
 1308              		.loc 1 175 0
 1309 0200 1C301BE5 		ldr	r3, [fp, #-28]
 1310 0204 283083E2 		add	r3, r3, #40
 1311 0208 0120A0E3 		mov	r2, #1
 1312 020c 0420C3E5 		strb	r2, [r3, #4]
 176:../reversi8_2019.c ****     candidatas[5][5] = SI;
 1313              		.loc 1 176 0
 1314 0210 1C301BE5 		ldr	r3, [fp, #-28]
 1315 0214 283083E2 		add	r3, r3, #40
 1316 0218 0120A0E3 		mov	r2, #1
 1317 021c 0520C3E5 		strb	r2, [r3, #5]
 177:../reversi8_2019.c **** }
 1318              		.loc 1 177 0
 1319 0220 0CD04BE2 		sub	sp, fp, #12
 1320 0224 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1321 0228 1EFF2FE1 		bx	lr
 1322              		.cfi_endproc
 1323              	.LFE1:
 1325              		.align	2
 1326              		.global	ficha_valida
 1328              	ficha_valida:
 1329              	.LFB2:
 178:../reversi8_2019.c **** 
 179:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 180:../reversi8_2019.c **** // Espera a que ready valga 1.
 181:../reversi8_2019.c **** // CUIDADO: si el compilador coloca esta variable en un registro, no funcionará.
 182:../reversi8_2019.c **** // Hay que definirla como "volatile" para forzar a que antes de cada uso la cargue de memoria
 183:../reversi8_2019.c **** 
 184:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 185:../reversi8_2019.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 186:../reversi8_2019.c **** // IMPORTANTE: AL SUSTITUIR FICHA_VALIDA() Y PATRON_VOLTEO()
 187:../reversi8_2019.c **** // POR RUTINAS EN ENSAMBLADOR HAY QUE RESPETAR LA MODULARIDAD.
 188:../reversi8_2019.c **** // DEBEN SEGUIR SIENDO LLAMADAS A FUNCIONES Y DEBEN CUMPLIR CON EL ATPCS
 189:../reversi8_2019.c **** // (VER TRANSPARENCIAS Y MATERIAL DE PRACTICAS):
 190:../reversi8_2019.c **** //  - DEBEN PASAR LOS PARAMETROS POR LOS REGISTROS CORRESPONDIENTES
 191:../reversi8_2019.c **** //  - GUARDAR EN PILA SOLO LOS REGISTROS QUE TOCAN
 192:../reversi8_2019.c **** //  - CREAR UN MARCO DE PILA TAL Y COMO MUESTRAN LAS TRANSPARENCIAS
 193:../reversi8_2019.c **** //    DE LA ASIGNATURA (CON EL PC, FP, LR,....)
 194:../reversi8_2019.c **** //  - EN EL CASO DE LAS VARIABLES LOCALES, SOLO HAY QUE APILARLAS
 195:../reversi8_2019.c **** //    SI NO SE PUEDEN COLOCAR EN UN REGISTRO.
 196:../reversi8_2019.c **** //    SI SE COLOCAN EN UN REGISTRO NO HACE FALTA
 197:../reversi8_2019.c **** //    NI GUARDARLAS EN PILA NI RESERVAR UN ESPACIO EN LA PILA PARA ELLAS
 198:../reversi8_2019.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 199:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 200:../reversi8_2019.c **** // Devuelve el contenido de la posición indicadas por la fila y columna actual.
 201:../reversi8_2019.c **** // Además informa si la posición es válida y contiene alguna ficha.
 202:../reversi8_2019.c **** // Esto lo hace por referencia (en *posicion_valida)
 203:../reversi8_2019.c **** // Si devuelve un 0 no es válida o está vacia.
 204:../reversi8_2019.c **** char ficha_valida(char tablero[][DIM], char f, char c, int *posicion_valida)
 205:../reversi8_2019.c **** {
 1330              		.loc 1 205 0
 1331              		.cfi_startproc
 1332              		@ Function supports interworking.
 1333              		@ args = 0, pretend = 0, frame = 24
 1334              		@ frame_needed = 1, uses_anonymous_args = 0
 1335 022c 0DC0A0E1 		mov	ip, sp
 1336              	.LCFI4:
 1337              		.cfi_def_cfa_register 12
 1338 0230 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1339 0234 04B04CE2 		sub	fp, ip, #4
 1340              		.cfi_offset 14, -8
 1341              		.cfi_offset 13, -12
 1342              		.cfi_offset 11, -16
 1343              	.LCFI5:
 1344              		.cfi_def_cfa 11, 4
 1345 0238 18D04DE2 		sub	sp, sp, #24
 1346 023c 18000BE5 		str	r0, [fp, #-24]
 1347 0240 20300BE5 		str	r3, [fp, #-32]
 1348 0244 0130A0E1 		mov	r3, r1
 1349 0248 19304BE5 		strb	r3, [fp, #-25]
 1350 024c 0230A0E1 		mov	r3, r2
 1351 0250 1A304BE5 		strb	r3, [fp, #-26]
 206:../reversi8_2019.c ****     char ficha;
 207:../reversi8_2019.c **** 
 208:../reversi8_2019.c ****     // ficha = tablero[f][c];
 209:../reversi8_2019.c ****     // no puede accederse a tablero[f][c]
 210:../reversi8_2019.c ****     // ya que algún índice puede ser negativo
 211:../reversi8_2019.c ****     //TODO AAA
 212:../reversi8_2019.c ****     if ((f < DIM) /*&& (f >= 0)*/ && (c < DIM) /*&& (c >= 0)*/ && (tablero[f][c] != CASILLA_VACIA))
 1352              		.loc 1 212 0
 1353 0254 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1354 0258 070053E3 		cmp	r3, #7
 1355 025c 1500008A 		bhi	.L10
 1356              		.loc 1 212 0 is_stmt 0 discriminator 1
 1357 0260 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1358 0264 070053E3 		cmp	r3, #7
 1359 0268 1200008A 		bhi	.L10
 1360 026c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1361 0270 8331A0E1 		mov	r3, r3, asl #3
 1362 0274 18201BE5 		ldr	r2, [fp, #-24]
 1363 0278 032082E0 		add	r2, r2, r3
 1364 027c 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1365 0280 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1366 0284 000053E3 		cmp	r3, #0
 1367 0288 0A00000A 		beq	.L10
 213:../reversi8_2019.c ****     {
 214:../reversi8_2019.c ****         *posicion_valida = 1;
 1368              		.loc 1 214 0 is_stmt 1
 1369 028c 20301BE5 		ldr	r3, [fp, #-32]
 1370 0290 0120A0E3 		mov	r2, #1
 1371 0294 002083E5 		str	r2, [r3, #0]
 215:../reversi8_2019.c ****         ficha = tablero[f][c];
 1372              		.loc 1 215 0
 1373 0298 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1374 029c 8331A0E1 		mov	r3, r3, asl #3
 1375 02a0 18201BE5 		ldr	r2, [fp, #-24]
 1376 02a4 032082E0 		add	r2, r2, r3
 1377 02a8 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1378 02ac 0330D2E7 		ldrb	r3, [r2, r3]
 1379 02b0 0D304BE5 		strb	r3, [fp, #-13]
 1380 02b4 040000EA 		b	.L11
 1381              	.L10:
 216:../reversi8_2019.c ****     }
 217:../reversi8_2019.c ****     else
 218:../reversi8_2019.c ****     {
 219:../reversi8_2019.c ****         *posicion_valida = 0;
 1382              		.loc 1 219 0
 1383 02b8 20301BE5 		ldr	r3, [fp, #-32]
 1384 02bc 0020A0E3 		mov	r2, #0
 1385 02c0 002083E5 		str	r2, [r3, #0]
 220:../reversi8_2019.c ****         ficha = CASILLA_VACIA;
 1386              		.loc 1 220 0
 1387 02c4 0030A0E3 		mov	r3, #0
 1388 02c8 0D304BE5 		strb	r3, [fp, #-13]
 1389              	.L11:
 221:../reversi8_2019.c ****     }
 222:../reversi8_2019.c ****     return ficha;
 1390              		.loc 1 222 0
 1391 02cc 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 223:../reversi8_2019.c **** }
 1392              		.loc 1 223 0
 1393 02d0 0300A0E1 		mov	r0, r3
 1394 02d4 0CD04BE2 		sub	sp, fp, #12
 1395 02d8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1396 02dc 1EFF2FE1 		bx	lr
 1397              		.cfi_endproc
 1398              	.LFE2:
 1400              		.align	2
 1401              		.global	patron_volteo
 1403              	patron_volteo:
 1404              	.LFB3:
 224:../reversi8_2019.c **** 
 225:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 226:../reversi8_2019.c **** // La función patrón volteo comprueba si hay que actualizar una determinada direccion,
 227:../reversi8_2019.c **** // busca el patrón de volteo (n fichas del rival seguidas de una ficha del jugador actual)
 228:../reversi8_2019.c **** // en una dirección determinada
 229:../reversi8_2019.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 230:../reversi8_2019.c **** // color indica el color de la pieza que se acaba de colocar
 231:../reversi8_2019.c **** // la función devuelve PATRON_ENCONTRADO (1) si encuentra patrón y NO_HAY_PATRON (0) en caso contra
 232:../reversi8_2019.c **** // FA y CA son la fila y columna a analizar
 233:../reversi8_2019.c **** // longitud es un parámetro por referencia. Sirve para saber la longitud del patrón que se está ana
 234:../reversi8_2019.c **** //          Se usa para saber cuantas fichas habría que voltear
 235:../reversi8_2019.c **** int patron_volteo(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char colo
 236:../reversi8_2019.c **** {
 1405              		.loc 1 236 0
 1406              		.cfi_startproc
 1407              		@ Function supports interworking.
 1408              		@ args = 12, pretend = 0, frame = 24
 1409              		@ frame_needed = 1, uses_anonymous_args = 0
 1410 02e0 0DC0A0E1 		mov	ip, sp
 1411              	.LCFI6:
 1412              		.cfi_def_cfa_register 12
 1413 02e4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1414 02e8 04B04CE2 		sub	fp, ip, #4
 1415              		.cfi_offset 14, -8
 1416              		.cfi_offset 13, -12
 1417              		.cfi_offset 11, -16
 1418              	.LCFI7:
 1419              		.cfi_def_cfa 11, 4
 1420 02ec 18D04DE2 		sub	sp, sp, #24
 1421 02f0 18000BE5 		str	r0, [fp, #-24]
 1422 02f4 1C100BE5 		str	r1, [fp, #-28]
 1423 02f8 1D204BE5 		strb	r2, [fp, #-29]
 1424 02fc 1E304BE5 		strb	r3, [fp, #-30]
 237:../reversi8_2019.c **** 	int posicion_valida; // indica si la posición es valida y contiene una ficha de algún jugador
 238:../reversi8_2019.c **** 	char casilla;   // casilla es la casilla que se lee del tablero
 239:../reversi8_2019.c **** 
 240:../reversi8_2019.c **** 	FA = FA + SF;
 1425              		.loc 1 240 0
 1426 0300 1D205BE5 		ldrb	r2, [fp, #-29]
 1427 0304 0430DBE5 		ldrb	r3, [fp, #4]
 1428 0308 033082E0 		add	r3, r2, r3
 1429 030c 1D304BE5 		strb	r3, [fp, #-29]
 241:../reversi8_2019.c **** 	CA = CA + SC;
 1430              		.loc 1 241 0
 1431 0310 1E205BE5 		ldrb	r2, [fp, #-30]
 1432 0314 0830DBE5 		ldrb	r3, [fp, #8]
 1433 0318 033082E0 		add	r3, r2, r3
 1434 031c 1E304BE5 		strb	r3, [fp, #-30]
 242:../reversi8_2019.c **** 	casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 1435              		.loc 1 242 0
 1436 0320 1D105BE5 		ldrb	r1, [fp, #-29]	@ zero_extendqisi2
 1437 0324 1E205BE5 		ldrb	r2, [fp, #-30]	@ zero_extendqisi2
 1438 0328 14304BE2 		sub	r3, fp, #20
 1439 032c 18001BE5 		ldr	r0, [fp, #-24]
 1440 0330 FEFFFFEB 		bl	ficha_valida
 1441 0334 0030A0E1 		mov	r3, r0
 1442 0338 0D304BE5 		strb	r3, [fp, #-13]
 243:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1443              		.loc 1 243 0
 1444 033c 130000EA 		b	.L13
 1445              	.L15:
 244:../reversi8_2019.c **** 	// mientras la casilla está en el tablero, no está vací­a,
 245:../reversi8_2019.c **** 	// y es del color rival seguimos buscando el patron de volteo
 246:../reversi8_2019.c **** 	{
 247:../reversi8_2019.c **** 		FA = FA + SF;
 1446              		.loc 1 247 0
 1447 0340 1D205BE5 		ldrb	r2, [fp, #-29]
 1448 0344 0430DBE5 		ldrb	r3, [fp, #4]
 1449 0348 033082E0 		add	r3, r2, r3
 1450 034c 1D304BE5 		strb	r3, [fp, #-29]
 248:../reversi8_2019.c **** 		CA = CA + SC;
 1451              		.loc 1 248 0
 1452 0350 1E205BE5 		ldrb	r2, [fp, #-30]
 1453 0354 0830DBE5 		ldrb	r3, [fp, #8]
 1454 0358 033082E0 		add	r3, r2, r3
 1455 035c 1E304BE5 		strb	r3, [fp, #-30]
 249:../reversi8_2019.c **** 		*longitud = *longitud + 1;
 1456              		.loc 1 249 0
 1457 0360 1C301BE5 		ldr	r3, [fp, #-28]
 1458 0364 003093E5 		ldr	r3, [r3, #0]
 1459 0368 012083E2 		add	r2, r3, #1
 1460 036c 1C301BE5 		ldr	r3, [fp, #-28]
 1461 0370 002083E5 		str	r2, [r3, #0]
 250:../reversi8_2019.c **** 		casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 1462              		.loc 1 250 0
 1463 0374 1D105BE5 		ldrb	r1, [fp, #-29]	@ zero_extendqisi2
 1464 0378 1E205BE5 		ldrb	r2, [fp, #-30]	@ zero_extendqisi2
 1465 037c 14304BE2 		sub	r3, fp, #20
 1466 0380 18001BE5 		ldr	r0, [fp, #-24]
 1467 0384 FEFFFFEB 		bl	ficha_valida
 1468 0388 0030A0E1 		mov	r3, r0
 1469 038c 0D304BE5 		strb	r3, [fp, #-13]
 1470              	.L13:
 243:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1471              		.loc 1 243 0 discriminator 1
 1472 0390 14301BE5 		ldr	r3, [fp, #-20]
 1473 0394 010053E3 		cmp	r3, #1
 1474 0398 0300001A 		bne	.L14
 243:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1475              		.loc 1 243 0 is_stmt 0 discriminator 2
 1476 039c 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1477 03a0 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1478 03a4 030052E1 		cmp	r2, r3
 1479 03a8 E4FFFF1A 		bne	.L15
 1480              	.L14:
 251:../reversi8_2019.c **** 	}
 252:../reversi8_2019.c ****     // si la ultima posición era válida y la ficha es del jugador actual,
 253:../reversi8_2019.c ****     // entonces hemos encontrado el patrón
 254:../reversi8_2019.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0))
 1481              		.loc 1 254 0 is_stmt 1
 1482 03ac 14301BE5 		ldr	r3, [fp, #-20]
 1483 03b0 010053E3 		cmp	r3, #1
 1484 03b4 0900001A 		bne	.L16
 1485              		.loc 1 254 0 is_stmt 0 discriminator 1
 1486 03b8 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1487 03bc 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1488 03c0 030052E1 		cmp	r2, r3
 1489 03c4 0500001A 		bne	.L16
 1490 03c8 1C301BE5 		ldr	r3, [fp, #-28]
 1491 03cc 003093E5 		ldr	r3, [r3, #0]
 1492 03d0 000053E3 		cmp	r3, #0
 1493 03d4 010000DA 		ble	.L16
 255:../reversi8_2019.c **** 		return PATRON_ENCONTRADO; // si hay que voltear una ficha o más hemos encontrado el patrón
 1494              		.loc 1 255 0 is_stmt 1
 1495 03d8 0130A0E3 		mov	r3, #1
 1496 03dc 000000EA 		b	.L17
 1497              	.L16:
 256:../reversi8_2019.c **** 	else
 257:../reversi8_2019.c **** 		return NO_HAY_PATRON; // si no hay que voltear no hay patrón
 1498              		.loc 1 257 0
 1499 03e0 0030A0E3 		mov	r3, #0
 1500              	.L17:
 258:../reversi8_2019.c **** }
 1501              		.loc 1 258 0
 1502 03e4 0300A0E1 		mov	r0, r3
 1503 03e8 0CD04BE2 		sub	sp, fp, #12
 1504 03ec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1505 03f0 1EFF2FE1 		bx	lr
 1506              		.cfi_endproc
 1507              	.LFE3:
 1509              		.align	2
 1510              		.global	voltear
 1512              	voltear:
 1513              	.LFB4:
 259:../reversi8_2019.c **** 
 260:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 261:../reversi8_2019.c **** // voltea n fichas en la dirección que toque
 262:../reversi8_2019.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 263:../reversi8_2019.c **** // color indica el color de la pieza que se acaba de colocar
 264:../reversi8_2019.c **** // FA y CA son la fila y columna a analizar
 265:../reversi8_2019.c **** void voltear(char tablero[][DIM], char FA, char CA, char SF, char SC, int n, char color)
 266:../reversi8_2019.c **** {
 1514              		.loc 1 266 0
 1515              		.cfi_startproc
 1516              		@ Function supports interworking.
 1517              		@ args = 12, pretend = 0, frame = 16
 1518              		@ frame_needed = 1, uses_anonymous_args = 0
 1519 03f4 0DC0A0E1 		mov	ip, sp
 1520              	.LCFI8:
 1521              		.cfi_def_cfa_register 12
 1522 03f8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1523 03fc 04B04CE2 		sub	fp, ip, #4
 1524              		.cfi_offset 14, -8
 1525              		.cfi_offset 13, -12
 1526              		.cfi_offset 11, -16
 1527              	.LCFI9:
 1528              		.cfi_def_cfa 11, 4
 1529 0400 10D04DE2 		sub	sp, sp, #16
 1530 0404 18000BE5 		str	r0, [fp, #-24]
 1531 0408 19104BE5 		strb	r1, [fp, #-25]
 1532 040c 1A204BE5 		strb	r2, [fp, #-26]
 1533 0410 1B304BE5 		strb	r3, [fp, #-27]
 267:../reversi8_2019.c ****     int i;
 268:../reversi8_2019.c **** 
 269:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1534              		.loc 1 269 0
 1535 0414 0030A0E3 		mov	r3, #0
 1536 0418 10300BE5 		str	r3, [fp, #-16]
 1537 041c 110000EA 		b	.L19
 1538              	.L20:
 270:../reversi8_2019.c ****     {
 271:../reversi8_2019.c ****         FA = FA + SF;
 1539              		.loc 1 271 0 discriminator 2
 1540 0420 19205BE5 		ldrb	r2, [fp, #-25]
 1541 0424 1B305BE5 		ldrb	r3, [fp, #-27]
 1542 0428 033082E0 		add	r3, r2, r3
 1543 042c 19304BE5 		strb	r3, [fp, #-25]
 272:../reversi8_2019.c ****         CA = CA + SC;
 1544              		.loc 1 272 0 discriminator 2
 1545 0430 1A205BE5 		ldrb	r2, [fp, #-26]
 1546 0434 0430DBE5 		ldrb	r3, [fp, #4]
 1547 0438 033082E0 		add	r3, r2, r3
 1548 043c 1A304BE5 		strb	r3, [fp, #-26]
 273:../reversi8_2019.c ****         tablero[FA][CA] = color;
 1549              		.loc 1 273 0 discriminator 2
 1550 0440 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1551 0444 8331A0E1 		mov	r3, r3, asl #3
 1552 0448 18201BE5 		ldr	r2, [fp, #-24]
 1553 044c 032082E0 		add	r2, r2, r3
 1554 0450 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1555 0454 0C10DBE5 		ldrb	r1, [fp, #12]
 1556 0458 0310C2E7 		strb	r1, [r2, r3]
 269:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1557              		.loc 1 269 0 discriminator 2
 1558 045c 10301BE5 		ldr	r3, [fp, #-16]
 1559 0460 013083E2 		add	r3, r3, #1
 1560 0464 10300BE5 		str	r3, [fp, #-16]
 1561              	.L19:
 269:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1562              		.loc 1 269 0 is_stmt 0 discriminator 1
 1563 0468 10201BE5 		ldr	r2, [fp, #-16]
 1564 046c 08309BE5 		ldr	r3, [fp, #8]
 1565 0470 030052E1 		cmp	r2, r3
 1566 0474 E9FFFFBA 		blt	.L20
 274:../reversi8_2019.c ****     }
 275:../reversi8_2019.c **** }
 1567              		.loc 1 275 0 is_stmt 1
 1568 0478 0CD04BE2 		sub	sp, fp, #12
 1569 047c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1570 0480 1EFF2FE1 		bx	lr
 1571              		.cfi_endproc
 1572              	.LFE4:
 1574              		.align	2
 1575              		.global	actualizar_tablero
 1577              	actualizar_tablero:
 1578              	.LFB5:
 276:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 277:../reversi8_2019.c **** // comprueba si hay que actualizar alguna ficha
 278:../reversi8_2019.c **** // no comprueba que el movimiento realizado sea válido
 279:../reversi8_2019.c **** // f y c son la fila y columna a analizar
 280:../reversi8_2019.c **** // char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
 281:../reversi8_2019.c **** // char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
 282:../reversi8_2019.c **** int actualizar_tablero(char tablero[][DIM], char f, char c, char color)
 283:../reversi8_2019.c **** {
 1579              		.loc 1 283 0
 1580              		.cfi_startproc
 1581              		@ Function supports interworking.
 1582              		@ args = 0, pretend = 0, frame = 24
 1583              		@ frame_needed = 1, uses_anonymous_args = 0
 1584 0484 0DC0A0E1 		mov	ip, sp
 1585              	.LCFI10:
 1586              		.cfi_def_cfa_register 12
 1587 0488 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1588 048c 04B04CE2 		sub	fp, ip, #4
 1589              		.cfi_offset 14, -8
 1590              		.cfi_offset 13, -12
 1591              		.cfi_offset 11, -16
 1592              	.LCFI11:
 1593              		.cfi_def_cfa 11, 4
 1594 0490 28D04DE2 		sub	sp, sp, #40
 1595 0494 20000BE5 		str	r0, [fp, #-32]
 1596 0498 21104BE5 		strb	r1, [fp, #-33]
 1597 049c 22204BE5 		strb	r2, [fp, #-34]
 1598 04a0 23304BE5 		strb	r3, [fp, #-35]
 284:../reversi8_2019.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 285:../reversi8_2019.c ****     int i, flip, patron;
 286:../reversi8_2019.c **** 
 287:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1599              		.loc 1 287 0
 1600 04a4 0030A0E3 		mov	r3, #0
 1601 04a8 10300BE5 		str	r3, [fp, #-16]
 1602 04ac 280000EA 		b	.L22
 1603              	.L24:
 288:../reversi8_2019.c ****     {
 289:../reversi8_2019.c ****         SF = vSF[i];
 1604              		.loc 1 289 0
 1605 04b0 BC209FE5 		ldr	r2, .L25
 1606 04b4 10301BE5 		ldr	r3, [fp, #-16]
 1607 04b8 033082E0 		add	r3, r2, r3
 1608 04bc 0030D3E5 		ldrb	r3, [r3, #0]
 1609 04c0 11304BE5 		strb	r3, [fp, #-17]
 290:../reversi8_2019.c ****         SC = vSC[i];
 1610              		.loc 1 290 0
 1611 04c4 AC209FE5 		ldr	r2, .L25+4
 1612 04c8 10301BE5 		ldr	r3, [fp, #-16]
 1613 04cc 033082E0 		add	r3, r2, r3
 1614 04d0 0030D3E5 		ldrb	r3, [r3, #0]
 1615 04d4 12304BE5 		strb	r3, [fp, #-18]
 291:../reversi8_2019.c ****         // flip: numero de fichas a voltear
 292:../reversi8_2019.c ****         flip = 0;
 1616              		.loc 1 292 0
 1617 04d8 0030A0E3 		mov	r3, #0
 1618 04dc 1C300BE5 		str	r3, [fp, #-28]
 293:../reversi8_2019.c ****         patron = patron_volteo(tablero, &flip, f, c, SF, SC, color);
 1619              		.loc 1 293 0
 1620 04e0 1C104BE2 		sub	r1, fp, #28
 1621 04e4 21205BE5 		ldrb	r2, [fp, #-33]	@ zero_extendqisi2
 1622 04e8 22305BE5 		ldrb	r3, [fp, #-34]	@ zero_extendqisi2
 1623 04ec 11005BE5 		ldrb	r0, [fp, #-17]	@ zero_extendqisi2
 1624 04f0 00008DE5 		str	r0, [sp, #0]
 1625 04f4 12005BE5 		ldrb	r0, [fp, #-18]	@ zero_extendqisi2
 1626 04f8 04008DE5 		str	r0, [sp, #4]
 1627 04fc 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 1628 0500 08008DE5 		str	r0, [sp, #8]
 1629 0504 20001BE5 		ldr	r0, [fp, #-32]
 1630 0508 FEFFFFEB 		bl	patron_volteo
 1631 050c 18000BE5 		str	r0, [fp, #-24]
 294:../reversi8_2019.c ****         if (patron == PATRON_ENCONTRADO )
 1632              		.loc 1 294 0
 1633 0510 18301BE5 		ldr	r3, [fp, #-24]
 1634 0514 010053E3 		cmp	r3, #1
 1635 0518 0A00001A 		bne	.L23
 295:../reversi8_2019.c ****         {
 296:../reversi8_2019.c ****             voltear(tablero, f, c, SF, SC, flip, color);
 1636              		.loc 1 296 0
 1637 051c 1C001BE5 		ldr	r0, [fp, #-28]
 1638 0520 21105BE5 		ldrb	r1, [fp, #-33]	@ zero_extendqisi2
 1639 0524 22205BE5 		ldrb	r2, [fp, #-34]	@ zero_extendqisi2
 1640 0528 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1641 052c 12C05BE5 		ldrb	ip, [fp, #-18]	@ zero_extendqisi2
 1642 0530 00C08DE5 		str	ip, [sp, #0]
 1643 0534 04008DE5 		str	r0, [sp, #4]
 1644 0538 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 1645 053c 08008DE5 		str	r0, [sp, #8]
 1646 0540 20001BE5 		ldr	r0, [fp, #-32]
 1647 0544 FEFFFFEB 		bl	voltear
 1648              	.L23:
 287:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1649              		.loc 1 287 0
 1650 0548 10301BE5 		ldr	r3, [fp, #-16]
 1651 054c 013083E2 		add	r3, r3, #1
 1652 0550 10300BE5 		str	r3, [fp, #-16]
 1653              	.L22:
 287:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 1654              		.loc 1 287 0 is_stmt 0 discriminator 1
 1655 0554 10301BE5 		ldr	r3, [fp, #-16]
 1656 0558 070053E3 		cmp	r3, #7
 1657 055c D3FFFFDA 		ble	.L24
 297:../reversi8_2019.c ****         }
 298:../reversi8_2019.c ****     }
 299:../reversi8_2019.c ****     return 0;
 1658              		.loc 1 299 0 is_stmt 1
 1659 0560 0030A0E3 		mov	r3, #0
 300:../reversi8_2019.c **** }
 1660              		.loc 1 300 0
 1661 0564 0300A0E1 		mov	r0, r3
 1662 0568 0CD04BE2 		sub	sp, fp, #12
 1663 056c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1664 0570 1EFF2FE1 		bx	lr
 1665              	.L26:
 1666              		.align	2
 1667              	.L25:
 1668 0574 00000000 		.word	vSF
 1669 0578 00000000 		.word	vSC
 1670              		.cfi_endproc
 1671              	.LFE5:
 1673              		.align	2
 1674              		.global	elegir_mov
 1676              	elegir_mov:
 1677              	.LFB6:
 301:../reversi8_2019.c **** 
 302:../reversi8_2019.c **** /////////////////////////////////////////////////////////////////////////////////
 303:../reversi8_2019.c **** // Recorre todo el tablero comprobando en cada posición si se puede mover
 304:../reversi8_2019.c **** // En caso afirmativo, consulta la puntuación de la posición y si es la mejor
 305:../reversi8_2019.c **** // que se ha encontrado la guarda
 306:../reversi8_2019.c **** // Al acabar escribe el movimiento seleccionado en f y c
 307:../reversi8_2019.c **** 
 308:../reversi8_2019.c **** // Candidatas
 309:../reversi8_2019.c **** // NO    0
 310:../reversi8_2019.c **** // SI    1
 311:../reversi8_2019.c **** // CASILLA_OCUPADA 2
 312:../reversi8_2019.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 313:../reversi8_2019.c **** {
 1678              		.loc 1 313 0
 1679              		.cfi_startproc
 1680              		@ Function supports interworking.
 1681              		@ args = 0, pretend = 0, frame = 56
 1682              		@ frame_needed = 1, uses_anonymous_args = 0
 1683 057c 0DC0A0E1 		mov	ip, sp
 1684              	.LCFI12:
 1685              		.cfi_def_cfa_register 12
 1686 0580 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1687 0584 04B04CE2 		sub	fp, ip, #4
 1688              		.cfi_offset 14, -8
 1689              		.cfi_offset 13, -12
 1690              		.cfi_offset 11, -16
 1691              	.LCFI13:
 1692              		.cfi_def_cfa 11, 4
 1693 0588 48D04DE2 		sub	sp, sp, #72
 1694 058c 38000BE5 		str	r0, [fp, #-56]
 1695 0590 3C100BE5 		str	r1, [fp, #-60]
 1696 0594 40200BE5 		str	r2, [fp, #-64]
 1697 0598 44300BE5 		str	r3, [fp, #-68]
 314:../reversi8_2019.c ****     int i, j, k, found;
 315:../reversi8_2019.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 1698              		.loc 1 315 0
 1699 059c 0030E0E3 		mvn	r3, #0
 1700 05a0 20300BE5 		str	r3, [fp, #-32]
 316:../reversi8_2019.c ****     int mc;      // almacena la columna del mejor movimiento encontrado
 317:../reversi8_2019.c ****     char mejor = 0; // almacena el mejor valor encontrado
 1701              		.loc 1 317 0
 1702 05a4 0030A0E3 		mov	r3, #0
 1703 05a8 25304BE5 		strb	r3, [fp, #-37]
 318:../reversi8_2019.c ****     int patron, longitud;
 319:../reversi8_2019.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 320:../reversi8_2019.c **** 
 321:../reversi8_2019.c ****     // Recorremos todo el tablero comprobando dónde podemos mover
 322:../reversi8_2019.c ****     // Comparamos la puntuación de los movimientos encontrados y nos quedamos con el mejor
 323:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1704              		.loc 1 323 0
 1705 05ac 0030A0E3 		mov	r3, #0
 1706 05b0 10300BE5 		str	r3, [fp, #-16]
 1707 05b4 600000EA 		b	.L28
 1708              	.L35:
 324:../reversi8_2019.c ****     {
 325:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1709              		.loc 1 325 0
 1710 05b8 0030A0E3 		mov	r3, #0
 1711 05bc 14300BE5 		str	r3, [fp, #-20]
 1712 05c0 570000EA 		b	.L29
 1713              	.L34:
 326:../reversi8_2019.c ****         {   // indica en qué casillas quizá se pueda mover
 327:../reversi8_2019.c ****             if (candidatas[i][j] == SI)
 1714              		.loc 1 327 0
 1715 05c4 10301BE5 		ldr	r3, [fp, #-16]
 1716 05c8 8331A0E1 		mov	r3, r3, asl #3
 1717 05cc 38201BE5 		ldr	r2, [fp, #-56]
 1718 05d0 032082E0 		add	r2, r2, r3
 1719 05d4 14301BE5 		ldr	r3, [fp, #-20]
 1720 05d8 033082E0 		add	r3, r2, r3
 1721 05dc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1722 05e0 010053E3 		cmp	r3, #1
 1723 05e4 4B00001A 		bne	.L30
 328:../reversi8_2019.c ****             {
 329:../reversi8_2019.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 1724              		.loc 1 329 0
 1725 05e8 10301BE5 		ldr	r3, [fp, #-16]
 1726 05ec 8331A0E1 		mov	r3, r3, asl #3
 1727 05f0 3C201BE5 		ldr	r2, [fp, #-60]
 1728 05f4 032082E0 		add	r2, r2, r3
 1729 05f8 14301BE5 		ldr	r3, [fp, #-20]
 1730 05fc 033082E0 		add	r3, r2, r3
 1731 0600 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1732 0604 000053E3 		cmp	r3, #0
 1733 0608 4200001A 		bne	.L30
 330:../reversi8_2019.c ****                 {
 331:../reversi8_2019.c ****                     found = 0;
 1734              		.loc 1 331 0
 1735 060c 0030A0E3 		mov	r3, #0
 1736 0610 1C300BE5 		str	r3, [fp, #-28]
 332:../reversi8_2019.c ****                     k = 0;
 1737              		.loc 1 332 0
 1738 0614 0030A0E3 		mov	r3, #0
 1739 0618 18300BE5 		str	r3, [fp, #-24]
 333:../reversi8_2019.c **** 
 334:../reversi8_2019.c ****                     // en este bucle comprobamos si es un movimiento válido
 335:../reversi8_2019.c ****                     // (es decir si implica voltear en alguna dirección)
 336:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 1740              		.loc 1 336 0
 1741 061c 370000EA 		b	.L31
 1742              	.L33:
 337:../reversi8_2019.c ****                     {
 338:../reversi8_2019.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 1743              		.loc 1 338 0
 1744 0620 54219FE5 		ldr	r2, .L36
 1745 0624 18301BE5 		ldr	r3, [fp, #-24]
 1746 0628 033082E0 		add	r3, r2, r3
 1747 062c 0030D3E5 		ldrb	r3, [r3, #0]
 1748 0630 26304BE5 		strb	r3, [fp, #-38]
 339:../reversi8_2019.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 1749              		.loc 1 339 0
 1750 0634 44219FE5 		ldr	r2, .L36+4
 1751 0638 18301BE5 		ldr	r3, [fp, #-24]
 1752 063c 033082E0 		add	r3, r2, r3
 1753 0640 0030D3E5 		ldrb	r3, [r3, #0]
 1754 0644 27304BE5 		strb	r3, [fp, #-39]
 340:../reversi8_2019.c **** 
 341:../reversi8_2019.c ****                         // nos dice qué hay que voltear en cada dirección
 342:../reversi8_2019.c ****                         longitud = 0;
 1755              		.loc 1 342 0
 1756 0648 0030A0E3 		mov	r3, #0
 1757 064c 30300BE5 		str	r3, [fp, #-48]
 343:../reversi8_2019.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA);
 1758              		.loc 1 343 0
 1759 0650 10301BE5 		ldr	r3, [fp, #-16]
 1760 0654 FF2003E2 		and	r2, r3, #255
 1761 0658 14301BE5 		ldr	r3, [fp, #-20]
 1762 065c FF3003E2 		and	r3, r3, #255
 1763 0660 30104BE2 		sub	r1, fp, #48
 1764 0664 26005BE5 		ldrb	r0, [fp, #-38]	@ zero_extendqisi2
 1765 0668 00008DE5 		str	r0, [sp, #0]
 1766 066c 27005BE5 		ldrb	r0, [fp, #-39]	@ zero_extendqisi2
 1767 0670 04008DE5 		str	r0, [sp, #4]
 1768 0674 0100A0E3 		mov	r0, #1
 1769 0678 08008DE5 		str	r0, [sp, #8]
 1770 067c 3C001BE5 		ldr	r0, [fp, #-60]
 1771 0680 FEFFFFEB 		bl	patron_volteo
 1772 0684 2C000BE5 		str	r0, [fp, #-44]
 344:../reversi8_2019.c ****                         if (patron == PATRON_ENCONTRADO)
 1773              		.loc 1 344 0
 1774 0688 2C301BE5 		ldr	r3, [fp, #-44]
 1775 068c 010053E3 		cmp	r3, #1
 1776 0690 1700001A 		bne	.L32
 345:../reversi8_2019.c ****                         {
 346:../reversi8_2019.c ****                             found = 1;
 1777              		.loc 1 346 0
 1778 0694 0130A0E3 		mov	r3, #1
 1779 0698 1C300BE5 		str	r3, [fp, #-28]
 347:../reversi8_2019.c ****                             if (tabla_valor[i][j] > mejor)
 1780              		.loc 1 347 0
 1781 069c E0209FE5 		ldr	r2, .L36+8
 1782 06a0 10301BE5 		ldr	r3, [fp, #-16]
 1783 06a4 8311A0E1 		mov	r1, r3, asl #3
 1784 06a8 14301BE5 		ldr	r3, [fp, #-20]
 1785 06ac 033081E0 		add	r3, r1, r3
 1786 06b0 033082E0 		add	r3, r2, r3
 1787 06b4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1788 06b8 25205BE5 		ldrb	r2, [fp, #-37]	@ zero_extendqisi2
 1789 06bc 030052E1 		cmp	r2, r3
 1790 06c0 0B00002A 		bcs	.L32
 348:../reversi8_2019.c ****                             {
 349:../reversi8_2019.c ****                                 mf = i;
 1791              		.loc 1 349 0
 1792 06c4 10301BE5 		ldr	r3, [fp, #-16]
 1793 06c8 20300BE5 		str	r3, [fp, #-32]
 350:../reversi8_2019.c ****                                 mc = j;
 1794              		.loc 1 350 0
 1795 06cc 14301BE5 		ldr	r3, [fp, #-20]
 1796 06d0 24300BE5 		str	r3, [fp, #-36]
 351:../reversi8_2019.c ****                                 mejor = tabla_valor[i][j];
 1797              		.loc 1 351 0
 1798 06d4 A8209FE5 		ldr	r2, .L36+8
 1799 06d8 10301BE5 		ldr	r3, [fp, #-16]
 1800 06dc 8311A0E1 		mov	r1, r3, asl #3
 1801 06e0 14301BE5 		ldr	r3, [fp, #-20]
 1802 06e4 033081E0 		add	r3, r1, r3
 1803 06e8 033082E0 		add	r3, r2, r3
 1804 06ec 0030D3E5 		ldrb	r3, [r3, #0]
 1805 06f0 25304BE5 		strb	r3, [fp, #-37]
 1806              	.L32:
 352:../reversi8_2019.c ****                             }
 353:../reversi8_2019.c ****                         }
 354:../reversi8_2019.c ****                         k++;
 1807              		.loc 1 354 0
 1808 06f4 18301BE5 		ldr	r3, [fp, #-24]
 1809 06f8 013083E2 		add	r3, r3, #1
 1810 06fc 18300BE5 		str	r3, [fp, #-24]
 1811              	.L31:
 336:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 1812              		.loc 1 336 0 discriminator 1
 1813 0700 1C301BE5 		ldr	r3, [fp, #-28]
 1814 0704 000053E3 		cmp	r3, #0
 1815 0708 0200001A 		bne	.L30
 336:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 1816              		.loc 1 336 0 is_stmt 0 discriminator 2
 1817 070c 18301BE5 		ldr	r3, [fp, #-24]
 1818 0710 070053E3 		cmp	r3, #7
 1819 0714 C1FFFFDA 		ble	.L33
 1820              	.L30:
 325:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1821              		.loc 1 325 0 is_stmt 1
 1822 0718 14301BE5 		ldr	r3, [fp, #-20]
 1823 071c 013083E2 		add	r3, r3, #1
 1824 0720 14300BE5 		str	r3, [fp, #-20]
 1825              	.L29:
 325:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1826              		.loc 1 325 0 is_stmt 0 discriminator 1
 1827 0724 14301BE5 		ldr	r3, [fp, #-20]
 1828 0728 070053E3 		cmp	r3, #7
 1829 072c A4FFFFDA 		ble	.L34
 323:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1830              		.loc 1 323 0 is_stmt 1
 1831 0730 10301BE5 		ldr	r3, [fp, #-16]
 1832 0734 013083E2 		add	r3, r3, #1
 1833 0738 10300BE5 		str	r3, [fp, #-16]
 1834              	.L28:
 323:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1835              		.loc 1 323 0 is_stmt 0 discriminator 1
 1836 073c 10301BE5 		ldr	r3, [fp, #-16]
 1837 0740 070053E3 		cmp	r3, #7
 1838 0744 9BFFFFDA 		ble	.L35
 355:../reversi8_2019.c ****                         // si no hemos encontrado nada probamos con la siguiente dirección
 356:../reversi8_2019.c ****                     }
 357:../reversi8_2019.c ****                 }
 358:../reversi8_2019.c ****             }
 359:../reversi8_2019.c ****         }
 360:../reversi8_2019.c ****     }
 361:../reversi8_2019.c ****     *f = (char) mf;
 1839              		.loc 1 361 0 is_stmt 1
 1840 0748 20301BE5 		ldr	r3, [fp, #-32]
 1841 074c FF2003E2 		and	r2, r3, #255
 1842 0750 40301BE5 		ldr	r3, [fp, #-64]
 1843 0754 0020C3E5 		strb	r2, [r3, #0]
 362:../reversi8_2019.c ****     *c = (char) mc;
 1844              		.loc 1 362 0
 1845 0758 24301BE5 		ldr	r3, [fp, #-36]
 1846 075c FF2003E2 		and	r2, r3, #255
 1847 0760 44301BE5 		ldr	r3, [fp, #-68]
 1848 0764 0020C3E5 		strb	r2, [r3, #0]
 363:../reversi8_2019.c ****     // si no se ha encontrado una posición válida devuelve -1
 364:../reversi8_2019.c ****     return mf;
 1849              		.loc 1 364 0
 1850 0768 20301BE5 		ldr	r3, [fp, #-32]
 365:../reversi8_2019.c **** }
 1851              		.loc 1 365 0
 1852 076c 0300A0E1 		mov	r0, r3
 1853 0770 0CD04BE2 		sub	sp, fp, #12
 1854 0774 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1855 0778 1EFF2FE1 		bx	lr
 1856              	.L37:
 1857              		.align	2
 1858              	.L36:
 1859 077c 00000000 		.word	vSF
 1860 0780 00000000 		.word	vSC
 1861 0784 00000000 		.word	tabla_valor
 1862              		.cfi_endproc
 1863              	.LFE6:
 1865              		.align	2
 1866              		.global	contar
 1868              	contar:
 1869              	.LFB7:
 366:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 367:../reversi8_2019.c **** // Cuenta el número de fichas de cada color.
 368:../reversi8_2019.c **** // Los guarda en la dirección b (blancas) y n (negras)
 369:../reversi8_2019.c **** void contar(char tablero[][DIM], int *b, int *n)
 370:../reversi8_2019.c **** {
 1870              		.loc 1 370 0
 1871              		.cfi_startproc
 1872              		@ Function supports interworking.
 1873              		@ args = 0, pretend = 0, frame = 24
 1874              		@ frame_needed = 1, uses_anonymous_args = 0
 1875 0788 0DC0A0E1 		mov	ip, sp
 1876              	.LCFI14:
 1877              		.cfi_def_cfa_register 12
 1878 078c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1879 0790 04B04CE2 		sub	fp, ip, #4
 1880              		.cfi_offset 14, -8
 1881              		.cfi_offset 13, -12
 1882              		.cfi_offset 11, -16
 1883              	.LCFI15:
 1884              		.cfi_def_cfa 11, 4
 1885 0794 18D04DE2 		sub	sp, sp, #24
 1886 0798 18000BE5 		str	r0, [fp, #-24]
 1887 079c 1C100BE5 		str	r1, [fp, #-28]
 1888 07a0 20200BE5 		str	r2, [fp, #-32]
 371:../reversi8_2019.c ****     int i,j;
 372:../reversi8_2019.c **** 
 373:../reversi8_2019.c ****     *b = 0;
 1889              		.loc 1 373 0
 1890 07a4 1C301BE5 		ldr	r3, [fp, #-28]
 1891 07a8 0020A0E3 		mov	r2, #0
 1892 07ac 002083E5 		str	r2, [r3, #0]
 374:../reversi8_2019.c ****     *n = 0;
 1893              		.loc 1 374 0
 1894 07b0 20301BE5 		ldr	r3, [fp, #-32]
 1895 07b4 0020A0E3 		mov	r2, #0
 1896 07b8 002083E5 		str	r2, [r3, #0]
 375:../reversi8_2019.c **** 
 376:../reversi8_2019.c ****     // recorremos todo el tablero contando las fichas de cada color
 377:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1897              		.loc 1 377 0
 1898 07bc 0030A0E3 		mov	r3, #0
 1899 07c0 10300BE5 		str	r3, [fp, #-16]
 1900 07c4 280000EA 		b	.L39
 1901              	.L44:
 378:../reversi8_2019.c ****     {
 379:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1902              		.loc 1 379 0
 1903 07c8 0030A0E3 		mov	r3, #0
 1904 07cc 14300BE5 		str	r3, [fp, #-20]
 1905 07d0 1F0000EA 		b	.L40
 1906              	.L43:
 380:../reversi8_2019.c ****         {
 381:../reversi8_2019.c ****             if (tablero[i][j] == FICHA_BLANCA)
 1907              		.loc 1 381 0
 1908 07d4 10301BE5 		ldr	r3, [fp, #-16]
 1909 07d8 8331A0E1 		mov	r3, r3, asl #3
 1910 07dc 18201BE5 		ldr	r2, [fp, #-24]
 1911 07e0 032082E0 		add	r2, r2, r3
 1912 07e4 14301BE5 		ldr	r3, [fp, #-20]
 1913 07e8 033082E0 		add	r3, r2, r3
 1914 07ec 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1915 07f0 010053E3 		cmp	r3, #1
 1916 07f4 0500001A 		bne	.L41
 382:../reversi8_2019.c ****             {
 383:../reversi8_2019.c ****                 (*b)++;
 1917              		.loc 1 383 0
 1918 07f8 1C301BE5 		ldr	r3, [fp, #-28]
 1919 07fc 003093E5 		ldr	r3, [r3, #0]
 1920 0800 012083E2 		add	r2, r3, #1
 1921 0804 1C301BE5 		ldr	r3, [fp, #-28]
 1922 0808 002083E5 		str	r2, [r3, #0]
 1923 080c 0D0000EA 		b	.L42
 1924              	.L41:
 384:../reversi8_2019.c ****             }
 385:../reversi8_2019.c ****             else if (tablero[i][j] == FICHA_NEGRA)
 1925              		.loc 1 385 0
 1926 0810 10301BE5 		ldr	r3, [fp, #-16]
 1927 0814 8331A0E1 		mov	r3, r3, asl #3
 1928 0818 18201BE5 		ldr	r2, [fp, #-24]
 1929 081c 032082E0 		add	r2, r2, r3
 1930 0820 14301BE5 		ldr	r3, [fp, #-20]
 1931 0824 033082E0 		add	r3, r2, r3
 1932 0828 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 1933 082c 020053E3 		cmp	r3, #2
 1934 0830 0400001A 		bne	.L42
 386:../reversi8_2019.c ****             {
 387:../reversi8_2019.c ****                 (*n)++;
 1935              		.loc 1 387 0
 1936 0834 20301BE5 		ldr	r3, [fp, #-32]
 1937 0838 003093E5 		ldr	r3, [r3, #0]
 1938 083c 012083E2 		add	r2, r3, #1
 1939 0840 20301BE5 		ldr	r3, [fp, #-32]
 1940 0844 002083E5 		str	r2, [r3, #0]
 1941              	.L42:
 379:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1942              		.loc 1 379 0
 1943 0848 14301BE5 		ldr	r3, [fp, #-20]
 1944 084c 013083E2 		add	r3, r3, #1
 1945 0850 14300BE5 		str	r3, [fp, #-20]
 1946              	.L40:
 379:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 1947              		.loc 1 379 0 is_stmt 0 discriminator 1
 1948 0854 14301BE5 		ldr	r3, [fp, #-20]
 1949 0858 070053E3 		cmp	r3, #7
 1950 085c DCFFFFDA 		ble	.L43
 377:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1951              		.loc 1 377 0 is_stmt 1
 1952 0860 10301BE5 		ldr	r3, [fp, #-16]
 1953 0864 013083E2 		add	r3, r3, #1
 1954 0868 10300BE5 		str	r3, [fp, #-16]
 1955              	.L39:
 377:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 1956              		.loc 1 377 0 is_stmt 0 discriminator 1
 1957 086c 10301BE5 		ldr	r3, [fp, #-16]
 1958 0870 070053E3 		cmp	r3, #7
 1959 0874 D3FFFFDA 		ble	.L44
 388:../reversi8_2019.c ****             }
 389:../reversi8_2019.c ****         }
 390:../reversi8_2019.c ****     }
 391:../reversi8_2019.c **** }
 1960              		.loc 1 391 0 is_stmt 1
 1961 0878 0CD04BE2 		sub	sp, fp, #12
 1962 087c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1963 0880 1EFF2FE1 		bx	lr
 1964              		.cfi_endproc
 1965              	.LFE7:
 1967              		.align	2
 1968              		.global	actualizar_candidatas
 1970              	actualizar_candidatas:
 1971              	.LFB8:
 392:../reversi8_2019.c **** 
 393:../reversi8_2019.c **** void actualizar_candidatas(char candidatas[][DIM], char f, char c)
 394:../reversi8_2019.c **** {
 1972              		.loc 1 394 0
 1973              		.cfi_startproc
 1974              		@ Function supports interworking.
 1975              		@ args = 0, pretend = 0, frame = 8
 1976              		@ frame_needed = 1, uses_anonymous_args = 0
 1977 0884 0DC0A0E1 		mov	ip, sp
 1978              	.LCFI16:
 1979              		.cfi_def_cfa_register 12
 1980 0888 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1981 088c 04B04CE2 		sub	fp, ip, #4
 1982              		.cfi_offset 14, -8
 1983              		.cfi_offset 13, -12
 1984              		.cfi_offset 11, -16
 1985              	.LCFI17:
 1986              		.cfi_def_cfa 11, 4
 1987 0890 08D04DE2 		sub	sp, sp, #8
 1988 0894 10000BE5 		str	r0, [fp, #-16]
 1989 0898 0230A0E1 		mov	r3, r2
 1990 089c 0120A0E1 		mov	r2, r1
 1991 08a0 11204BE5 		strb	r2, [fp, #-17]
 1992 08a4 12304BE5 		strb	r3, [fp, #-18]
 395:../reversi8_2019.c ****     // donde ya se ha colocado no se puede volver a colocar
 396:../reversi8_2019.c ****     // En las posiciones alrededor sí
 397:../reversi8_2019.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 1993              		.loc 1 397 0
 1994 08a8 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1995 08ac 8331A0E1 		mov	r3, r3, asl #3
 1996 08b0 10201BE5 		ldr	r2, [fp, #-16]
 1997 08b4 032082E0 		add	r2, r2, r3
 1998 08b8 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 1999 08bc 0210A0E3 		mov	r1, #2
 2000 08c0 0310C2E7 		strb	r1, [r2, r3]
 398:../reversi8_2019.c ****     if (f > 0)
 2001              		.loc 1 398 0
 2002 08c4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2003 08c8 000053E3 		cmp	r3, #0
 2004 08cc 3C00000A 		beq	.L46
 399:../reversi8_2019.c ****     {
 400:../reversi8_2019.c ****         if (candidatas[f-1][c] != CASILLA_OCUPADA)
 2005              		.loc 1 400 0
 2006 08d0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2007 08d4 013043E2 		sub	r3, r3, #1
 2008 08d8 8331A0E1 		mov	r3, r3, asl #3
 2009 08dc 10201BE5 		ldr	r2, [fp, #-16]
 2010 08e0 032082E0 		add	r2, r2, r3
 2011 08e4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2012 08e8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2013 08ec 020053E3 		cmp	r3, #2
 2014 08f0 0700000A 		beq	.L47
 401:../reversi8_2019.c ****             candidatas[f-1][c] = SI;
 2015              		.loc 1 401 0
 2016 08f4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2017 08f8 013043E2 		sub	r3, r3, #1
 2018 08fc 8331A0E1 		mov	r3, r3, asl #3
 2019 0900 10201BE5 		ldr	r2, [fp, #-16]
 2020 0904 032082E0 		add	r2, r2, r3
 2021 0908 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2022 090c 0110A0E3 		mov	r1, #1
 2023 0910 0310C2E7 		strb	r1, [r2, r3]
 2024              	.L47:
 402:../reversi8_2019.c **** 
 403:../reversi8_2019.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2025              		.loc 1 403 0
 2026 0914 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2027 0918 000053E3 		cmp	r3, #0
 2028 091c 1200000A 		beq	.L48
 2029              		.loc 1 403 0 is_stmt 0 discriminator 1
 2030 0920 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2031 0924 013043E2 		sub	r3, r3, #1
 2032 0928 8331A0E1 		mov	r3, r3, asl #3
 2033 092c 10201BE5 		ldr	r2, [fp, #-16]
 2034 0930 032082E0 		add	r2, r2, r3
 2035 0934 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2036 0938 013043E2 		sub	r3, r3, #1
 2037 093c 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2038 0940 020053E3 		cmp	r3, #2
 2039 0944 0800000A 		beq	.L48
 404:../reversi8_2019.c ****             candidatas[f-1][c-1] = SI;
 2040              		.loc 1 404 0 is_stmt 1
 2041 0948 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2042 094c 013043E2 		sub	r3, r3, #1
 2043 0950 8331A0E1 		mov	r3, r3, asl #3
 2044 0954 10201BE5 		ldr	r2, [fp, #-16]
 2045 0958 032082E0 		add	r2, r2, r3
 2046 095c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2047 0960 013043E2 		sub	r3, r3, #1
 2048 0964 0110A0E3 		mov	r1, #1
 2049 0968 0310C2E7 		strb	r1, [r2, r3]
 2050              	.L48:
 405:../reversi8_2019.c **** 
 406:../reversi8_2019.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2051              		.loc 1 406 0
 2052 096c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2053 0970 060053E3 		cmp	r3, #6
 2054 0974 1200008A 		bhi	.L46
 2055              		.loc 1 406 0 is_stmt 0 discriminator 1
 2056 0978 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2057 097c 013043E2 		sub	r3, r3, #1
 2058 0980 8331A0E1 		mov	r3, r3, asl #3
 2059 0984 10201BE5 		ldr	r2, [fp, #-16]
 2060 0988 032082E0 		add	r2, r2, r3
 2061 098c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2062 0990 013083E2 		add	r3, r3, #1
 2063 0994 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2064 0998 020053E3 		cmp	r3, #2
 2065 099c 0800000A 		beq	.L46
 407:../reversi8_2019.c ****             candidatas[f-1][c+1] = SI;
 2066              		.loc 1 407 0 is_stmt 1
 2067 09a0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2068 09a4 013043E2 		sub	r3, r3, #1
 2069 09a8 8331A0E1 		mov	r3, r3, asl #3
 2070 09ac 10201BE5 		ldr	r2, [fp, #-16]
 2071 09b0 032082E0 		add	r2, r2, r3
 2072 09b4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2073 09b8 013083E2 		add	r3, r3, #1
 2074 09bc 0110A0E3 		mov	r1, #1
 2075 09c0 0310C2E7 		strb	r1, [r2, r3]
 2076              	.L46:
 408:../reversi8_2019.c ****     }
 409:../reversi8_2019.c ****     if (f < 7)
 2077              		.loc 1 409 0
 2078 09c4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2079 09c8 060053E3 		cmp	r3, #6
 2080 09cc 3C00008A 		bhi	.L49
 410:../reversi8_2019.c ****     {
 411:../reversi8_2019.c ****         if (candidatas[f+1][c] != CASILLA_OCUPADA)
 2081              		.loc 1 411 0
 2082 09d0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2083 09d4 013083E2 		add	r3, r3, #1
 2084 09d8 8331A0E1 		mov	r3, r3, asl #3
 2085 09dc 10201BE5 		ldr	r2, [fp, #-16]
 2086 09e0 032082E0 		add	r2, r2, r3
 2087 09e4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2088 09e8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2089 09ec 020053E3 		cmp	r3, #2
 2090 09f0 0700000A 		beq	.L50
 412:../reversi8_2019.c ****             candidatas[f+1][c] = SI;
 2091              		.loc 1 412 0
 2092 09f4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2093 09f8 013083E2 		add	r3, r3, #1
 2094 09fc 8331A0E1 		mov	r3, r3, asl #3
 2095 0a00 10201BE5 		ldr	r2, [fp, #-16]
 2096 0a04 032082E0 		add	r2, r2, r3
 2097 0a08 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2098 0a0c 0110A0E3 		mov	r1, #1
 2099 0a10 0310C2E7 		strb	r1, [r2, r3]
 2100              	.L50:
 413:../reversi8_2019.c **** 
 414:../reversi8_2019.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2101              		.loc 1 414 0
 2102 0a14 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2103 0a18 000053E3 		cmp	r3, #0
 2104 0a1c 1200000A 		beq	.L51
 2105              		.loc 1 414 0 is_stmt 0 discriminator 1
 2106 0a20 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2107 0a24 013083E2 		add	r3, r3, #1
 2108 0a28 8331A0E1 		mov	r3, r3, asl #3
 2109 0a2c 10201BE5 		ldr	r2, [fp, #-16]
 2110 0a30 032082E0 		add	r2, r2, r3
 2111 0a34 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2112 0a38 013043E2 		sub	r3, r3, #1
 2113 0a3c 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2114 0a40 020053E3 		cmp	r3, #2
 2115 0a44 0800000A 		beq	.L51
 415:../reversi8_2019.c ****             candidatas[f+1][c-1] = SI;
 2116              		.loc 1 415 0 is_stmt 1
 2117 0a48 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2118 0a4c 013083E2 		add	r3, r3, #1
 2119 0a50 8331A0E1 		mov	r3, r3, asl #3
 2120 0a54 10201BE5 		ldr	r2, [fp, #-16]
 2121 0a58 032082E0 		add	r2, r2, r3
 2122 0a5c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2123 0a60 013043E2 		sub	r3, r3, #1
 2124 0a64 0110A0E3 		mov	r1, #1
 2125 0a68 0310C2E7 		strb	r1, [r2, r3]
 2126              	.L51:
 416:../reversi8_2019.c **** 
 417:../reversi8_2019.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2127              		.loc 1 417 0
 2128 0a6c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2129 0a70 060053E3 		cmp	r3, #6
 2130 0a74 1200008A 		bhi	.L49
 2131              		.loc 1 417 0 is_stmt 0 discriminator 1
 2132 0a78 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2133 0a7c 013083E2 		add	r3, r3, #1
 2134 0a80 8331A0E1 		mov	r3, r3, asl #3
 2135 0a84 10201BE5 		ldr	r2, [fp, #-16]
 2136 0a88 032082E0 		add	r2, r2, r3
 2137 0a8c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2138 0a90 013083E2 		add	r3, r3, #1
 2139 0a94 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2140 0a98 020053E3 		cmp	r3, #2
 2141 0a9c 0800000A 		beq	.L49
 418:../reversi8_2019.c ****             candidatas[f+1][c+1] = SI;
 2142              		.loc 1 418 0 is_stmt 1
 2143 0aa0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2144 0aa4 013083E2 		add	r3, r3, #1
 2145 0aa8 8331A0E1 		mov	r3, r3, asl #3
 2146 0aac 10201BE5 		ldr	r2, [fp, #-16]
 2147 0ab0 032082E0 		add	r2, r2, r3
 2148 0ab4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2149 0ab8 013083E2 		add	r3, r3, #1
 2150 0abc 0110A0E3 		mov	r1, #1
 2151 0ac0 0310C2E7 		strb	r1, [r2, r3]
 2152              	.L49:
 419:../reversi8_2019.c ****     }
 420:../reversi8_2019.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2153              		.loc 1 420 0
 2154 0ac4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2155 0ac8 000053E3 		cmp	r3, #0
 2156 0acc 1000000A 		beq	.L52
 2157              		.loc 1 420 0 is_stmt 0 discriminator 1
 2158 0ad0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2159 0ad4 8331A0E1 		mov	r3, r3, asl #3
 2160 0ad8 10201BE5 		ldr	r2, [fp, #-16]
 2161 0adc 032082E0 		add	r2, r2, r3
 2162 0ae0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2163 0ae4 013043E2 		sub	r3, r3, #1
 2164 0ae8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2165 0aec 020053E3 		cmp	r3, #2
 2166 0af0 0700000A 		beq	.L52
 421:../reversi8_2019.c ****         candidatas[f][c-1] = SI;
 2167              		.loc 1 421 0 is_stmt 1
 2168 0af4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2169 0af8 8331A0E1 		mov	r3, r3, asl #3
 2170 0afc 10201BE5 		ldr	r2, [fp, #-16]
 2171 0b00 032082E0 		add	r2, r2, r3
 2172 0b04 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2173 0b08 013043E2 		sub	r3, r3, #1
 2174 0b0c 0110A0E3 		mov	r1, #1
 2175 0b10 0310C2E7 		strb	r1, [r2, r3]
 2176              	.L52:
 422:../reversi8_2019.c **** 
 423:../reversi8_2019.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2177              		.loc 1 423 0
 2178 0b14 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2179 0b18 060053E3 		cmp	r3, #6
 2180 0b1c 1000008A 		bhi	.L45
 2181              		.loc 1 423 0 is_stmt 0 discriminator 1
 2182 0b20 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2183 0b24 8331A0E1 		mov	r3, r3, asl #3
 2184 0b28 10201BE5 		ldr	r2, [fp, #-16]
 2185 0b2c 032082E0 		add	r2, r2, r3
 2186 0b30 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2187 0b34 013083E2 		add	r3, r3, #1
 2188 0b38 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2189 0b3c 020053E3 		cmp	r3, #2
 2190 0b40 0700000A 		beq	.L45
 424:../reversi8_2019.c ****         candidatas[f][c+1] = SI;
 2191              		.loc 1 424 0 is_stmt 1
 2192 0b44 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2193 0b48 8331A0E1 		mov	r3, r3, asl #3
 2194 0b4c 10201BE5 		ldr	r2, [fp, #-16]
 2195 0b50 032082E0 		add	r2, r2, r3
 2196 0b54 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2197 0b58 013083E2 		add	r3, r3, #1
 2198 0b5c 0110A0E3 		mov	r1, #1
 2199 0b60 0310C2E7 		strb	r1, [r2, r3]
 2200              	.L45:
 425:../reversi8_2019.c **** }
 2201              		.loc 1 425 0
 2202 0b64 0CD04BE2 		sub	sp, fp, #12
 2203 0b68 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2204 0b6c 1EFF2FE1 		bx	lr
 2205              		.cfi_endproc
 2206              	.LFE8:
 2208              		.align	2
 2209              		.global	reversi8_inicializar
 2211              	reversi8_inicializar:
 2212              	.LFB9:
 426:../reversi8_2019.c **** 
 427:../reversi8_2019.c **** 
 428:../reversi8_2019.c **** 
 429:../reversi8_2019.c **** 
 430:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 431:../reversi8_2019.c **** // Proceso principal del juego
 432:../reversi8_2019.c **** // Utiliza el tablero,
 433:../reversi8_2019.c **** // y las direcciones en las que indica el jugador la fila y la columna
 434:../reversi8_2019.c **** // y la señal de ready que indica que se han actualizado fila y columna
 435:../reversi8_2019.c **** // tablero, fila, columna y ready son variables globales aunque deberían ser locales de reversi8,
 436:../reversi8_2019.c **** // la razón es que al meterlas en la pila no las pone juntas, y así jugar es más complicado.
 437:../reversi8_2019.c **** // en esta versión el humano lleva negras y la máquina blancas
 438:../reversi8_2019.c **** // no se comprueba que el humano mueva correctamente.
 439:../reversi8_2019.c **** // Sólo que la máquina realice un movimiento correcto.
 440:../reversi8_2019.c **** 
 441:../reversi8_2019.c **** void reversi8_inicializar()
 442:../reversi8_2019.c **** {
 2213              		.loc 1 442 0
 2214              		.cfi_startproc
 2215              		@ Function supports interworking.
 2216              		@ args = 0, pretend = 0, frame = 0
 2217              		@ frame_needed = 1, uses_anonymous_args = 0
 2218 0b70 0DC0A0E1 		mov	ip, sp
 2219              	.LCFI18:
 2220              		.cfi_def_cfa_register 12
 2221 0b74 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2222 0b78 04B04CE2 		sub	fp, ip, #4
 2223              		.cfi_offset 14, -8
 2224              		.cfi_offset 13, -12
 2225              		.cfi_offset 11, -16
 2226              	.LCFI19:
 2227              		.cfi_def_cfa 11, 4
 443:../reversi8_2019.c **** 	init_table(tablero, candidatas);
 2228              		.loc 1 443 0
 2229 0b7c 10009FE5 		ldr	r0, .L55
 2230 0b80 10109FE5 		ldr	r1, .L55+4
 2231 0b84 FEFFFFEB 		bl	init_table
 444:../reversi8_2019.c **** }
 2232              		.loc 1 444 0
 2233 0b88 0CD04BE2 		sub	sp, fp, #12
 2234 0b8c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2235 0b90 1EFF2FE1 		bx	lr
 2236              	.L56:
 2237              		.align	2
 2238              	.L55:
 2239 0b94 00000000 		.word	tablero
 2240 0b98 40000000 		.word	candidatas
 2241              		.cfi_endproc
 2242              	.LFE9:
 2244              		.align	2
 2245              		.global	reversi8
 2247              	reversi8:
 2248              	.LFB10:
 445:../reversi8_2019.c **** 
 446:../reversi8_2019.c **** void reversi8()
 447:../reversi8_2019.c **** {
 2249              		.loc 1 447 0
 2250              		.cfi_startproc
 2251              		@ Function supports interworking.
 2252              		@ args = 0, pretend = 0, frame = 0
 2253              		@ frame_needed = 1, uses_anonymous_args = 0
 2254 0b9c 0DC0A0E1 		mov	ip, sp
 2255              	.LCFI20:
 2256              		.cfi_def_cfa_register 12
 2257 0ba0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2258 0ba4 04B04CE2 		sub	fp, ip, #4
 2259              		.cfi_offset 14, -8
 2260              		.cfi_offset 13, -12
 2261              		.cfi_offset 11, -16
 2262              	.LCFI21:
 2263              		.cfi_def_cfa 11, 4
 448:../reversi8_2019.c **** 	 ////////////////////////////////////////////////////////////////////
 449:../reversi8_2019.c **** 	 // Tablero candidatas: se usa para no explorar todas las posiciones del tablero
 450:../reversi8_2019.c **** 	// sólo se exploran las que están alrededor de las fichas colocadas
 451:../reversi8_2019.c **** 	 ////////////////////////////////////////////////////////////////////
 452:../reversi8_2019.c ****     if(fin == 0)
 2264              		.loc 1 452 0
 2265 0ba8 CC319FE5 		ldr	r3, .L61
 2266 0bac 003093E5 		ldr	r3, [r3, #0]
 2267 0bb0 000053E3 		cmp	r3, #0
 2268 0bb4 6900001A 		bne	.L58
 453:../reversi8_2019.c ****     {
 454:../reversi8_2019.c ****         move = 0;
 2269              		.loc 1 454 0
 2270 0bb8 C0319FE5 		ldr	r3, .L61+4
 2271 0bbc 0020A0E3 		mov	r2, #0
 2272 0bc0 002083E5 		str	r2, [r3, #0]
 455:../reversi8_2019.c ****         if(ready)
 2273              		.loc 1 455 0
 2274 0bc4 B8319FE5 		ldr	r3, .L61+8
 2275 0bc8 0030D3E5 		ldrb	r3, [r3, #0]
 2276 0bcc FF3003E2 		and	r3, r3, #255
 2277 0bd0 000053E3 		cmp	r3, #0
 2278 0bd4 6100000A 		beq	.L58
 456:../reversi8_2019.c ****         {
 457:../reversi8_2019.c ****         	ready = 0;
 2279              		.loc 1 457 0
 2280 0bd8 A4319FE5 		ldr	r3, .L61+8
 2281 0bdc 0020A0E3 		mov	r2, #0
 2282 0be0 0020C3E5 		strb	r2, [r3, #0]
 458:../reversi8_2019.c ****         	// si la fila o columna son 8 asumimos que el jugador no puede mover
 459:../reversi8_2019.c ****         	if (((fila) != DIM) && ((columna) != DIM))
 2283              		.loc 1 459 0
 2284 0be4 9C319FE5 		ldr	r3, .L61+12
 2285 0be8 0030D3E5 		ldrb	r3, [r3, #0]
 2286 0bec FF3003E2 		and	r3, r3, #255
 2287 0bf0 080053E3 		cmp	r3, #8
 2288 0bf4 2900000A 		beq	.L59
 2289              		.loc 1 459 0 is_stmt 0 discriminator 1
 2290 0bf8 8C319FE5 		ldr	r3, .L61+16
 2291 0bfc 0030D3E5 		ldrb	r3, [r3, #0]
 2292 0c00 FF3003E2 		and	r3, r3, #255
 2293 0c04 080053E3 		cmp	r3, #8
 2294 0c08 2400000A 		beq	.L59
 460:../reversi8_2019.c ****         	{
 461:../reversi8_2019.c ****         		tablero[fila][columna] = FICHA_NEGRA;
 2295              		.loc 1 461 0 is_stmt 1
 2296 0c0c 74319FE5 		ldr	r3, .L61+12
 2297 0c10 0030D3E5 		ldrb	r3, [r3, #0]
 2298 0c14 FF3003E2 		and	r3, r3, #255
 2299 0c18 0310A0E1 		mov	r1, r3
 2300 0c1c 68319FE5 		ldr	r3, .L61+16
 2301 0c20 0030D3E5 		ldrb	r3, [r3, #0]
 2302 0c24 FF3003E2 		and	r3, r3, #255
 2303 0c28 60219FE5 		ldr	r2, .L61+20
 2304 0c2c 8111A0E1 		mov	r1, r1, asl #3
 2305 0c30 033081E0 		add	r3, r1, r3
 2306 0c34 033082E0 		add	r3, r2, r3
 2307 0c38 0220A0E3 		mov	r2, #2
 2308 0c3c 0020C3E5 		strb	r2, [r3, #0]
 462:../reversi8_2019.c ****         		actualizar_tablero(tablero, fila, columna, FICHA_NEGRA);
 2309              		.loc 1 462 0
 2310 0c40 40319FE5 		ldr	r3, .L61+12
 2311 0c44 0030D3E5 		ldrb	r3, [r3, #0]
 2312 0c48 FF2003E2 		and	r2, r3, #255
 2313 0c4c 38319FE5 		ldr	r3, .L61+16
 2314 0c50 0030D3E5 		ldrb	r3, [r3, #0]
 2315 0c54 FF3003E2 		and	r3, r3, #255
 2316 0c58 30019FE5 		ldr	r0, .L61+20
 2317 0c5c 0210A0E1 		mov	r1, r2
 2318 0c60 0320A0E1 		mov	r2, r3
 2319 0c64 0230A0E3 		mov	r3, #2
 2320 0c68 FEFFFFEB 		bl	actualizar_tablero
 463:../reversi8_2019.c ****         		actualizar_candidatas(candidatas, fila, columna);
 2321              		.loc 1 463 0
 2322 0c6c 14319FE5 		ldr	r3, .L61+12
 2323 0c70 0030D3E5 		ldrb	r3, [r3, #0]
 2324 0c74 FF2003E2 		and	r2, r3, #255
 2325 0c78 0C319FE5 		ldr	r3, .L61+16
 2326 0c7c 0030D3E5 		ldrb	r3, [r3, #0]
 2327 0c80 FF3003E2 		and	r3, r3, #255
 2328 0c84 08019FE5 		ldr	r0, .L61+24
 2329 0c88 0210A0E1 		mov	r1, r2
 2330 0c8c 0320A0E1 		mov	r2, r3
 2331 0c90 FEFFFFEB 		bl	actualizar_candidatas
 464:../reversi8_2019.c ****         		move = 1;
 2332              		.loc 1 464 0
 2333 0c94 E4309FE5 		ldr	r3, .L61+4
 2334 0c98 0120A0E3 		mov	r2, #1
 2335 0c9c 002083E5 		str	r2, [r3, #0]
 2336              	.L59:
 465:../reversi8_2019.c ****         	}
 466:../reversi8_2019.c ****         	// escribe el movimiento en las variables globales fila columna
 467:../reversi8_2019.c ****         	done = elegir_mov(candidatas, tablero, &f, &c);
 2337              		.loc 1 467 0
 2338 0ca0 EC009FE5 		ldr	r0, .L61+24
 2339 0ca4 E4109FE5 		ldr	r1, .L61+20
 2340 0ca8 E8209FE5 		ldr	r2, .L61+28
 2341 0cac E8309FE5 		ldr	r3, .L61+32
 2342 0cb0 FEFFFFEB 		bl	elegir_mov
 2343 0cb4 0020A0E1 		mov	r2, r0
 2344 0cb8 E0309FE5 		ldr	r3, .L61+36
 2345 0cbc 002083E5 		str	r2, [r3, #0]
 468:../reversi8_2019.c ****         	if (done == -1)
 2346              		.loc 1 468 0
 2347 0cc0 D8309FE5 		ldr	r3, .L61+36
 2348 0cc4 003093E5 		ldr	r3, [r3, #0]
 2349 0cc8 010073E3 		cmn	r3, #1
 2350 0ccc 0700001A 		bne	.L60
 469:../reversi8_2019.c ****         	{
 470:../reversi8_2019.c ****         		if (move == 0)
 2351              		.loc 1 470 0
 2352 0cd0 A8309FE5 		ldr	r3, .L61+4
 2353 0cd4 003093E5 		ldr	r3, [r3, #0]
 2354 0cd8 000053E3 		cmp	r3, #0
 2355 0cdc 1F00001A 		bne	.L58
 471:../reversi8_2019.c ****         		fin = 1;
 2356              		.loc 1 471 0
 2357 0ce0 94309FE5 		ldr	r3, .L61
 2358 0ce4 0120A0E3 		mov	r2, #1
 2359 0ce8 002083E5 		str	r2, [r3, #0]
 2360 0cec 1B0000EA 		b	.L58
 2361              	.L60:
 472:../reversi8_2019.c ****         	}
 473:../reversi8_2019.c ****         	else
 474:../reversi8_2019.c ****         	{
 475:../reversi8_2019.c ****         		tablero[f][c] = FICHA_BLANCA;
 2362              		.loc 1 475 0
 2363 0cf0 A0309FE5 		ldr	r3, .L61+28
 2364 0cf4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2365 0cf8 0310A0E1 		mov	r1, r3
 2366 0cfc 98309FE5 		ldr	r3, .L61+32
 2367 0d00 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2368 0d04 84209FE5 		ldr	r2, .L61+20
 2369 0d08 8111A0E1 		mov	r1, r1, asl #3
 2370 0d0c 033081E0 		add	r3, r1, r3
 2371 0d10 033082E0 		add	r3, r2, r3
 2372 0d14 0120A0E3 		mov	r2, #1
 2373 0d18 0020C3E5 		strb	r2, [r3, #0]
 476:../reversi8_2019.c ****         		actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 2374              		.loc 1 476 0
 2375 0d1c 74309FE5 		ldr	r3, .L61+28
 2376 0d20 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2377 0d24 70309FE5 		ldr	r3, .L61+32
 2378 0d28 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2379 0d2c 5C009FE5 		ldr	r0, .L61+20
 2380 0d30 0210A0E1 		mov	r1, r2
 2381 0d34 0320A0E1 		mov	r2, r3
 2382 0d38 0130A0E3 		mov	r3, #1
 2383 0d3c FEFFFFEB 		bl	actualizar_tablero
 477:../reversi8_2019.c ****         		actualizar_candidatas(candidatas, f, c);
 2384              		.loc 1 477 0
 2385 0d40 50309FE5 		ldr	r3, .L61+28
 2386 0d44 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2387 0d48 4C309FE5 		ldr	r3, .L61+32
 2388 0d4c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2389 0d50 3C009FE5 		ldr	r0, .L61+24
 2390 0d54 0210A0E1 		mov	r1, r2
 2391 0d58 0320A0E1 		mov	r2, r3
 2392 0d5c FEFFFFEB 		bl	actualizar_candidatas
 2393              	.L58:
 478:../reversi8_2019.c ****         	}
 479:../reversi8_2019.c ****         }
 480:../reversi8_2019.c ****     }
 481:../reversi8_2019.c ****     contar(tablero, &blancas, &negras);
 2394              		.loc 1 481 0
 2395 0d60 28009FE5 		ldr	r0, .L61+20
 2396 0d64 38109FE5 		ldr	r1, .L61+40
 2397 0d68 38209FE5 		ldr	r2, .L61+44
 2398 0d6c FEFFFFEB 		bl	contar
 482:../reversi8_2019.c **** }
 2399              		.loc 1 482 0
 2400 0d70 0CD04BE2 		sub	sp, fp, #12
 2401 0d74 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2402 0d78 1EFF2FE1 		bx	lr
 2403              	.L62:
 2404              		.align	2
 2405              	.L61:
 2406 0d7c 00000000 		.word	fin
 2407 0d80 00000000 		.word	move
 2408 0d84 8A000000 		.word	ready
 2409 0d88 88000000 		.word	fila
 2410 0d8c 89000000 		.word	columna
 2411 0d90 00000000 		.word	tablero
 2412 0d94 40000000 		.word	candidatas
 2413 0d98 00000000 		.word	f
 2414 0d9c 00000000 		.word	c
 2415 0da0 00000000 		.word	done
 2416 0da4 00000000 		.word	blancas
 2417 0da8 00000000 		.word	negras
 2418              		.cfi_endproc
 2419              	.LFE10:
 2421              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 reversi8_2019.c
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:981    .rodata:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:984    .rodata:00000000 tabla_valor
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1053   .rodata:00000040 vSF
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1066   .rodata:00000048 vSC
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1076   .bss:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1077   .bss:00000000 tablero
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1080   .bss:00000040 candidatas
                            *COM*:00000004 done
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1087   .bss:00000080 move
                            *COM*:00000004 blancas
                            *COM*:00000004 negras
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1095   .bss:00000084 fin
                            *COM*:00000001 f
                            *COM*:00000001 c
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1099   .bss:00000088 fila
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1101   .bss:00000089 columna
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1103   .bss:0000008a ready
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1106   .text:00000000 $a
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1109   .text:00000000 reversi_procesar
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:2247   .text:00000b9c reversi8
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1152   .text:00000054 $d
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1158   .text:00000060 $a
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1161   .text:00000060 init_table
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1328   .text:0000022c ficha_valida
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1403   .text:000002e0 patron_volteo
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1512   .text:000003f4 voltear
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1577   .text:00000484 actualizar_tablero
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1668   .text:00000574 $d
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1673   .text:0000057c $a
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1676   .text:0000057c elegir_mov
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1859   .text:0000077c $d
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1865   .text:00000788 $a
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1868   .text:00000788 contar
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:1970   .text:00000884 actualizar_candidatas
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:2211   .text:00000b70 reversi8_inicializar
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:2239   .text:00000b94 $d
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:2244   .text:00000b9c $a
C:\Users\guest\AppData\Local\Temp\ccNHoZcp.s:2406   .text:00000d7c $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
