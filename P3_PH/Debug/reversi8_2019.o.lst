   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"reversi8_2019.c"
  21              	.Ltext0:
  22              		.file 1 "../reversi8_2019.c"
 997              		.align	3
 1000              	tabla_valor:
 1001 0000 08       		.byte	8
 1002 0001 02       		.byte	2
 1003 0002 07       		.byte	7
 1004 0003 03       		.byte	3
 1005 0004 03       		.byte	3
 1006 0005 07       		.byte	7
 1007 0006 02       		.byte	2
 1008 0007 08       		.byte	8
 1009 0008 02       		.byte	2
 1010 0009 01       		.byte	1
 1011 000a 04       		.byte	4
 1012 000b 04       		.byte	4
 1013 000c 04       		.byte	4
 1014 000d 04       		.byte	4
 1015 000e 01       		.byte	1
 1016 000f 02       		.byte	2
 1017 0010 07       		.byte	7
 1018 0011 04       		.byte	4
 1019 0012 06       		.byte	6
 1020 0013 05       		.byte	5
 1021 0014 05       		.byte	5
 1022 0015 06       		.byte	6
 1023 0016 04       		.byte	4
 1024 0017 07       		.byte	7
 1025 0018 03       		.byte	3
 1026 0019 04       		.byte	4
 1027 001a 05       		.byte	5
 1028 001b 00       		.byte	0
 1029 001c 00       		.byte	0
 1030 001d 05       		.byte	5
 1031 001e 04       		.byte	4
 1032 001f 03       		.byte	3
 1033 0020 03       		.byte	3
 1034 0021 04       		.byte	4
 1035 0022 05       		.byte	5
 1036 0023 00       		.byte	0
 1037 0024 00       		.byte	0
 1038 0025 05       		.byte	5
 1039 0026 04       		.byte	4
 1040 0027 03       		.byte	3
 1041 0028 07       		.byte	7
 1042 0029 04       		.byte	4
 1043 002a 06       		.byte	6
 1044 002b 05       		.byte	5
 1045 002c 05       		.byte	5
 1046 002d 06       		.byte	6
 1047 002e 04       		.byte	4
 1048 002f 07       		.byte	7
 1049 0030 02       		.byte	2
 1050 0031 01       		.byte	1
 1051 0032 04       		.byte	4
 1052 0033 04       		.byte	4
 1053 0034 04       		.byte	4
 1054 0035 04       		.byte	4
 1055 0036 01       		.byte	1
 1056 0037 02       		.byte	2
 1057 0038 08       		.byte	8
 1058 0039 02       		.byte	2
 1059 003a 07       		.byte	7
 1060 003b 03       		.byte	3
 1061 003c 03       		.byte	3
 1062 003d 07       		.byte	7
 1063 003e 02       		.byte	2
 1064 003f 08       		.byte	8
 1065              		.global	vSF
 1066              		.align	2
 1069              	vSF:
 1070 0040 FF       		.byte	-1
 1071 0041 FF       		.byte	-1
 1072 0042 00       		.byte	0
 1073 0043 01       		.byte	1
 1074 0044 01       		.byte	1
 1075 0045 01       		.byte	1
 1076 0046 00       		.byte	0
 1077 0047 FF       		.byte	-1
 1078              		.global	vSC
 1079              		.align	2
 1082              	vSC:
 1083 0048 00       		.byte	0
 1084 0049 01       		.byte	1
 1085 004a 01       		.byte	1
 1086 004b 01       		.byte	1
 1087 004c 00       		.byte	0
 1088 004d FF       		.byte	-1
 1089 004e FF       		.byte	-1
 1090 004f FF       		.byte	-1
 1091              		.bss
 1092              		.align	3
 1093              	tablero:
 1094 0000 00000000 		.space	64
 1094      00000000 
 1094      00000000 
 1094      00000000 
 1094      00000000 
 1095              		.align	3
 1096              	candidatas:
 1097 0040 00000000 		.space	64
 1097      00000000 
 1097      00000000 
 1097      00000000 
 1097      00000000 
 1098              		.align	2
 1099              	jugada_valida:
 1100 0080 00000000 		.space	4
 1101              		.align	2
 1102              	veces_pv:
 1103 0084 00000000 		.space	4
 1104              		.align	2
 1105              	t_pv:
 1106 0088 00000000 		.space	4
 1107              		.comm	done,4,4
 1108              		.global	move
 1109              		.align	2
 1112              	move:
 1113 008c 00000000 		.space	4
 1114              		.comm	blancas,4,4
 1115              		.comm	negras,4,4
 1116              		.global	fin
 1117              		.align	2
 1120              	fin:
 1121 0090 00000000 		.space	4
 1122              		.comm	f,1,1
 1123              		.comm	c,1,1
 1124              	fila:
 1125 0094 00       		.space	1
 1126              	columna:
 1127 0095 00       		.space	1
 1128              	ready:
 1129 0096 00       		.space	1
 1130 0097 00       		.text
 1131              		.align	2
 1132              		.global	obtener_jugada_valida
 1134              	obtener_jugada_valida:
 1135              	.LFB0:
   1:../reversi8_2019.c **** /*********************************************************************************************
   2:../reversi8_2019.c **** * Fichero:	reversi8_2019.c
   3:../reversi8_2019.c **** * Autor:	Profesores de la asignatura
   4:../reversi8_2019.c **** 			Fernando Peña Bes (NIA: 756012)
   5:../reversi8_2019.c **** 			Pedro José Pérez García (NIA: 756642)
   6:../reversi8_2019.c **** * Descrip:	Implementación del juego reversi8.
   7:../reversi8_2019.c **** * Version:
   8:../reversi8_2019.c **** *********************************************************************************************/
   9:../reversi8_2019.c **** #include "reversi8_2019.h"
  10:../reversi8_2019.c **** #include "elementos_pantalla.h"
  11:../reversi8_2019.c **** 
  12:../reversi8_2019.c **** // Tamaño del tablero
  13:../reversi8_2019.c **** enum { DIM=8 };
  14:../reversi8_2019.c **** 
  15:../reversi8_2019.c **** // Valores que puede devolver la función patron_volteo())
  16:../reversi8_2019.c **** enum {
  17:../reversi8_2019.c **** 	NO_HAY_PATRON = 0,
  18:../reversi8_2019.c ****   PATRON_ENCONTRADO = 1
  19:../reversi8_2019.c **** };
  20:../reversi8_2019.c **** 
  21:../reversi8_2019.c **** // Estados de las casillas del tablero
  22:../reversi8_2019.c **** // deberia ser enum, lo dejamos como const para usar char...
  23:../reversi8_2019.c **** //const char CASILLA_VACIA = 0;
  24:../reversi8_2019.c **** //const char FICHA_BLANCA  = 1;
  25:../reversi8_2019.c **** //const char FICHA_NEGRA   = 2;
  26:../reversi8_2019.c **** 
  27:../reversi8_2019.c **** //El enum que debería estar aquí ha sido movido a definiciones_juego.h
  28:../reversi8_2019.c **** //	para que las funciones de elementos_pantalla, jugada_por_botones y reversi8
  29:../reversi8_2019.c **** //	puedan tener definiciones comunes en vez ed hacer una chapuza redefiniendo todo
  30:../reversi8_2019.c **** //	en cada uno de los sitios donde lo necesite
  31:../reversi8_2019.c **** 
  32:../reversi8_2019.c **** // candidatas: indica las posiciones a explorar
  33:../reversi8_2019.c **** // Se usa para no explorar todo el tablero innecesariamente
  34:../reversi8_2019.c **** // Sus posibles valores son NO, SI, CASILLA_OCUPADA
  35:../reversi8_2019.c **** enum {NO=0,SI=1,CASILLA_OCUPADA=2};
  36:../reversi8_2019.c **** /*
  37:../reversi8_2019.c **** const char  NO              = 0;
  38:../reversi8_2019.c **** const char  SI              = 1;
  39:../reversi8_2019.c **** const char  CASILLA_OCUPADA = 2;*/
  40:../reversi8_2019.c **** 
  41:../reversi8_2019.c **** /////////////////////////////////////////////////////////////////////////////
  42:../reversi8_2019.c **** // TABLAS AUXILIARES
  43:../reversi8_2019.c **** // declaramos las siguientes tablas como globales para que sean más fáciles visualizarlas en el sim
  44:../reversi8_2019.c **** // __attribute__ ((aligned (8))): specifies a minimum alignment for the variable or structure field
  45:../reversi8_2019.c **** 
  46:../reversi8_2019.c **** static const char __attribute__ ((aligned (8))) tabla_valor[DIM][DIM] =
  47:../reversi8_2019.c **** {
  48:../reversi8_2019.c ****     {8,2,7,3,3,7,2,8},
  49:../reversi8_2019.c ****     {2,1,4,4,4,4,1,2},
  50:../reversi8_2019.c ****     {7,4,6,5,5,6,4,7},
  51:../reversi8_2019.c ****     {3,4,5,0,0,5,4,3},
  52:../reversi8_2019.c ****     {3,4,5,0,0,5,4,3},
  53:../reversi8_2019.c ****     {7,4,6,5,5,6,4,7},
  54:../reversi8_2019.c ****     {2,1,4,4,4,4,1,2},
  55:../reversi8_2019.c ****     {8,2,7,3,3,7,2,8}
  56:../reversi8_2019.c **** };
  57:../reversi8_2019.c **** 
  58:../reversi8_2019.c **** 
  59:../reversi8_2019.c **** // Tabla de direcciones. Contiene los desplazamientos de las 8 direcciones posibles
  60:../reversi8_2019.c **** const char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
  61:../reversi8_2019.c **** const char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
  62:../reversi8_2019.c **** 
  63:../reversi8_2019.c **** //////////////////////////////////////////////////////////////////////////////////////
  64:../reversi8_2019.c **** // Variables globales que no deberían serlo
  65:../reversi8_2019.c **** // tablero, fila, columna y ready son varibles que se deberían definir como locales dentro de rever
  66:../reversi8_2019.c **** // Sin embargo, las hemos definido como globales para que sea más fácil visualizar el tablero y las
  67:../reversi8_2019.c **** //////////////////////////////////////////////////////////////////////////////////////
  68:../reversi8_2019.c **** 
  69:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////
  70:../reversi8_2019.c **** // Tablero sin inicializar
  71:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////
  72:../reversi8_2019.c **** static char __attribute__ ((aligned (8))) tablero[DIM][DIM] = {
  73:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  74:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  75:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  76:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  77:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  78:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  79:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  80:../reversi8_2019.c **** 	        {CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASILLA_VACIA,CASIL
  81:../reversi8_2019.c **** 	    };
  82:../reversi8_2019.c **** 
  83:../reversi8_2019.c **** 	static char __attribute__ ((aligned (8))) candidatas[DIM][DIM] =
  84:../reversi8_2019.c ****     {
  85:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  86:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  87:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  88:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  89:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  90:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  91:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO},
  92:../reversi8_2019.c ****         {NO,NO,NO,NO,NO,NO,NO,NO}
  93:../reversi8_2019.c ****     };
  94:../reversi8_2019.c ****     static int jugada_valida = 0;
  95:../reversi8_2019.c **** 	static int veces_pv = 0;
  96:../reversi8_2019.c **** 	static int t_pv = 0;
  97:../reversi8_2019.c **** 	int done;     // la máquina ha conseguido mover o no
  98:../reversi8_2019.c ****     int move = 0; // el humano ha conseguido mover o no
  99:../reversi8_2019.c ****     int blancas, negras; // número de fichas de cada color
 100:../reversi8_2019.c ****     volatile int fin = 0;  // fin vale 1 si el humano no ha podido mover
 101:../reversi8_2019.c ****                   // (ha introducido un valor de movimiento con algún 8)
 102:../reversi8_2019.c ****                   // y luego la máquina tampoco puede
 103:../reversi8_2019.c ****     char f, c;    // fila y columna elegidas por la máquina para su movimiento
 104:../reversi8_2019.c **** 
 105:../reversi8_2019.c ****   ////////////////////////////////////////////////////////////////////
 106:../reversi8_2019.c ****      // VARIABLES PARA INTERACCIONAR CON LA ENTRADA SALIDA
 107:../reversi8_2019.c ****      // Pregunta: ¿hay que hacer algo con ellas para que esto funcione bien?
 108:../reversi8_2019.c ****      // (por ejemplo añadir alguna palabra clave para garantizar que la sincronización a través de 
 109:../reversi8_2019.c **** static volatile char fila=0, columna=0, ready=0;
 110:../reversi8_2019.c **** 
 111:../reversi8_2019.c **** int obtener_jugada_valida()
 112:../reversi8_2019.c **** {
 1136              		.loc 1 112 0
 1137              		.cfi_startproc
 1138              		@ Function supports interworking.
 1139              		@ args = 0, pretend = 0, frame = 0
 1140              		@ frame_needed = 1, uses_anonymous_args = 0
 1141 0000 0DC0A0E1 		mov	ip, sp
 1142              	.LCFI0:
 1143              		.cfi_def_cfa_register 12
 1144 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1145 0008 04B04CE2 		sub	fp, ip, #4
 1146              		.cfi_offset 14, -8
 1147              		.cfi_offset 13, -12
 1148              		.cfi_offset 11, -16
 1149              	.LCFI1:
 1150              		.cfi_def_cfa 11, 4
 113:../reversi8_2019.c ****     return jugada_valida;
 1151              		.loc 1 113 0
 1152 000c 10309FE5 		ldr	r3, .L2
 1153 0010 003093E5 		ldr	r3, [r3, #0]
 114:../reversi8_2019.c **** }
 1154              		.loc 1 114 0
 1155 0014 0300A0E1 		mov	r0, r3
 1156 0018 0CD04BE2 		sub	sp, fp, #12
 1157 001c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1158 0020 1EFF2FE1 		bx	lr
 1159              	.L3:
 1160              		.align	2
 1161              	.L2:
 1162 0024 80000000 		.word	jugada_valida
 1163              		.cfi_endproc
 1164              	.LFE0:
 1166              		.align	2
 1167              		.global	obtener_fin
 1169              	obtener_fin:
 1170              	.LFB1:
 115:../reversi8_2019.c **** 
 116:../reversi8_2019.c **** enum final_partida obtener_fin()
 117:../reversi8_2019.c **** {
 1171              		.loc 1 117 0
 1172              		.cfi_startproc
 1173              		@ Function supports interworking.
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 1, uses_anonymous_args = 0
 1176 0028 0DC0A0E1 		mov	ip, sp
 1177              	.LCFI2:
 1178              		.cfi_def_cfa_register 12
 1179 002c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1180 0030 04B04CE2 		sub	fp, ip, #4
 1181              		.cfi_offset 14, -8
 1182              		.cfi_offset 13, -12
 1183              		.cfi_offset 11, -16
 1184              	.LCFI3:
 1185              		.cfi_def_cfa 11, 4
 118:../reversi8_2019.c **** 	if(fin == 0)
 1186              		.loc 1 118 0
 1187 0034 64309FE5 		ldr	r3, .L9
 1188 0038 003093E5 		ldr	r3, [r3, #0]
 1189 003c 000053E3 		cmp	r3, #0
 1190 0040 0100001A 		bne	.L5
 119:../reversi8_2019.c **** 	{
 120:../reversi8_2019.c **** 		return no_fin;
 1191              		.loc 1 120 0
 1192 0044 0030A0E3 		mov	r3, #0
 1193 0048 100000EA 		b	.L6
 1194              	.L5:
 121:../reversi8_2019.c **** 	}
 122:../reversi8_2019.c **** 	else
 123:../reversi8_2019.c **** 	{
 124:../reversi8_2019.c **** 		if(blancas > negras)
 1195              		.loc 1 124 0
 1196 004c 50309FE5 		ldr	r3, .L9+4
 1197 0050 002093E5 		ldr	r2, [r3, #0]
 1198 0054 4C309FE5 		ldr	r3, .L9+8
 1199 0058 003093E5 		ldr	r3, [r3, #0]
 1200 005c 030052E1 		cmp	r2, r3
 1201 0060 010000DA 		ble	.L7
 125:../reversi8_2019.c **** 		{
 126:../reversi8_2019.c **** 			return cpu_gana;
 1202              		.loc 1 126 0
 1203 0064 0230A0E3 		mov	r3, #2
 1204 0068 080000EA 		b	.L6
 1205              	.L7:
 127:../reversi8_2019.c **** 		}
 128:../reversi8_2019.c **** 		else if(negras > blancas)
 1206              		.loc 1 128 0
 1207 006c 34309FE5 		ldr	r3, .L9+8
 1208 0070 002093E5 		ldr	r2, [r3, #0]
 1209 0074 28309FE5 		ldr	r3, .L9+4
 1210 0078 003093E5 		ldr	r3, [r3, #0]
 1211 007c 030052E1 		cmp	r2, r3
 1212 0080 010000DA 		ble	.L8
 129:../reversi8_2019.c **** 		{
 130:../reversi8_2019.c **** 			return jugador_gana;
 1213              		.loc 1 130 0
 1214 0084 0130A0E3 		mov	r3, #1
 1215 0088 000000EA 		b	.L6
 1216              	.L8:
 131:../reversi8_2019.c **** 		}
 132:../reversi8_2019.c **** 	}
 133:../reversi8_2019.c **** 	//blancas == negras
 134:../reversi8_2019.c **** 	return empate;
 1217              		.loc 1 134 0
 1218 008c 0330A0E3 		mov	r3, #3
 1219              	.L6:
 135:../reversi8_2019.c **** }
 1220              		.loc 1 135 0
 1221 0090 0300A0E1 		mov	r0, r3
 1222 0094 0CD04BE2 		sub	sp, fp, #12
 1223 0098 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1224 009c 1EFF2FE1 		bx	lr
 1225              	.L10:
 1226              		.align	2
 1227              	.L9:
 1228 00a0 00000000 		.word	fin
 1229 00a4 00000000 		.word	blancas
 1230 00a8 00000000 		.word	negras
 1231              		.cfi_endproc
 1232              	.LFE1:
 1234              		.align	2
 1235              		.global	obtener_tablero
 1237              	obtener_tablero:
 1238              	.LFB2:
 136:../reversi8_2019.c **** 
 137:../reversi8_2019.c **** //Copia tablero de la partida a donde se le diga
 138:../reversi8_2019.c **** void obtener_tablero(char tab[][num_columnas])
 139:../reversi8_2019.c **** {
 1239              		.loc 1 139 0
 1240              		.cfi_startproc
 1241              		@ Function supports interworking.
 1242              		@ args = 0, pretend = 0, frame = 16
 1243              		@ frame_needed = 1, uses_anonymous_args = 0
 1244 00ac 0DC0A0E1 		mov	ip, sp
 1245              	.LCFI4:
 1246              		.cfi_def_cfa_register 12
 1247 00b0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1248 00b4 04B04CE2 		sub	fp, ip, #4
 1249              		.cfi_offset 14, -8
 1250              		.cfi_offset 13, -12
 1251              		.cfi_offset 11, -16
 1252              	.LCFI5:
 1253              		.cfi_def_cfa 11, 4
 1254 00b8 10D04DE2 		sub	sp, sp, #16
 1255 00bc 18000BE5 		str	r0, [fp, #-24]
 140:../reversi8_2019.c **** 	int i,j;
 141:../reversi8_2019.c **** 	for(i = 0; i < num_filas; i++)
 1256              		.loc 1 141 0
 1257 00c0 0030A0E3 		mov	r3, #0
 1258 00c4 10300BE5 		str	r3, [fp, #-16]
 1259 00c8 190000EA 		b	.L12
 1260              	.L15:
 142:../reversi8_2019.c **** 	{
 143:../reversi8_2019.c **** 		for(j = 0; j < num_columnas; j++)
 1261              		.loc 1 143 0
 1262 00cc 0030A0E3 		mov	r3, #0
 1263 00d0 14300BE5 		str	r3, [fp, #-20]
 1264 00d4 100000EA 		b	.L13
 1265              	.L14:
 144:../reversi8_2019.c **** 		{
 145:../reversi8_2019.c **** 			tab[i][j] = tablero[i][j];
 1266              		.loc 1 145 0 discriminator 2
 1267 00d8 10301BE5 		ldr	r3, [fp, #-16]
 1268 00dc 8331A0E1 		mov	r3, r3, asl #3
 1269 00e0 18201BE5 		ldr	r2, [fp, #-24]
 1270 00e4 031082E0 		add	r1, r2, r3
 1271 00e8 5C209FE5 		ldr	r2, .L16
 1272 00ec 10301BE5 		ldr	r3, [fp, #-16]
 1273 00f0 8301A0E1 		mov	r0, r3, asl #3
 1274 00f4 14301BE5 		ldr	r3, [fp, #-20]
 1275 00f8 033080E0 		add	r3, r0, r3
 1276 00fc 033082E0 		add	r3, r2, r3
 1277 0100 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 1278 0104 14301BE5 		ldr	r3, [fp, #-20]
 1279 0108 033081E0 		add	r3, r1, r3
 1280 010c 0020C3E5 		strb	r2, [r3, #0]
 143:../reversi8_2019.c **** 		for(j = 0; j < num_columnas; j++)
 1281              		.loc 1 143 0 discriminator 2
 1282 0110 14301BE5 		ldr	r3, [fp, #-20]
 1283 0114 013083E2 		add	r3, r3, #1
 1284 0118 14300BE5 		str	r3, [fp, #-20]
 1285              	.L13:
 143:../reversi8_2019.c **** 		for(j = 0; j < num_columnas; j++)
 1286              		.loc 1 143 0 is_stmt 0 discriminator 1
 1287 011c 14301BE5 		ldr	r3, [fp, #-20]
 1288 0120 070053E3 		cmp	r3, #7
 1289 0124 EBFFFFDA 		ble	.L14
 141:../reversi8_2019.c **** 	for(i = 0; i < num_filas; i++)
 1290              		.loc 1 141 0 is_stmt 1
 1291 0128 10301BE5 		ldr	r3, [fp, #-16]
 1292 012c 013083E2 		add	r3, r3, #1
 1293 0130 10300BE5 		str	r3, [fp, #-16]
 1294              	.L12:
 141:../reversi8_2019.c **** 	for(i = 0; i < num_filas; i++)
 1295              		.loc 1 141 0 is_stmt 0 discriminator 1
 1296 0134 10301BE5 		ldr	r3, [fp, #-16]
 1297 0138 070053E3 		cmp	r3, #7
 1298 013c E2FFFFDA 		ble	.L15
 146:../reversi8_2019.c **** 		}
 147:../reversi8_2019.c **** 	}
 148:../reversi8_2019.c **** }
 1299              		.loc 1 148 0 is_stmt 1
 1300 0140 0CD04BE2 		sub	sp, fp, #12
 1301 0144 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1302 0148 1EFF2FE1 		bx	lr
 1303              	.L17:
 1304              		.align	2
 1305              	.L16:
 1306 014c 00000000 		.word	tablero
 1307              		.cfi_endproc
 1308              	.LFE2:
 1310              		.align	2
 1311              		.global	contar_blancas
 1313              	contar_blancas:
 1314              	.LFB3:
 149:../reversi8_2019.c **** 
 150:../reversi8_2019.c **** //Devuelven el número de fichas de cada color al final de la partida
 151:../reversi8_2019.c **** //	y solo se cuenta al final, por tanto no hace falta volver a contar
 152:../reversi8_2019.c **** //	Si se quiere contar a mitad de partida, se tendría que contar antes
 153:../reversi8_2019.c **** //	de devolver el número.
 154:../reversi8_2019.c **** int contar_blancas(void){return blancas;}
 1315              		.loc 1 154 0
 1316              		.cfi_startproc
 1317              		@ Function supports interworking.
 1318              		@ args = 0, pretend = 0, frame = 0
 1319              		@ frame_needed = 1, uses_anonymous_args = 0
 1320 0150 0DC0A0E1 		mov	ip, sp
 1321              	.LCFI6:
 1322              		.cfi_def_cfa_register 12
 1323 0154 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1324 0158 04B04CE2 		sub	fp, ip, #4
 1325              		.cfi_offset 14, -8
 1326              		.cfi_offset 13, -12
 1327              		.cfi_offset 11, -16
 1328              	.LCFI7:
 1329              		.cfi_def_cfa 11, 4
 1330              		.loc 1 154 0
 1331 015c 10309FE5 		ldr	r3, .L19
 1332 0160 003093E5 		ldr	r3, [r3, #0]
 1333 0164 0300A0E1 		mov	r0, r3
 1334 0168 0CD04BE2 		sub	sp, fp, #12
 1335 016c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1336 0170 1EFF2FE1 		bx	lr
 1337              	.L20:
 1338              		.align	2
 1339              	.L19:
 1340 0174 00000000 		.word	blancas
 1341              		.cfi_endproc
 1342              	.LFE3:
 1344              		.align	2
 1345              		.global	contar_negras
 1347              	contar_negras:
 1348              	.LFB4:
 155:../reversi8_2019.c **** int contar_negras(void){return negras;}
 1349              		.loc 1 155 0
 1350              		.cfi_startproc
 1351              		@ Function supports interworking.
 1352              		@ args = 0, pretend = 0, frame = 0
 1353              		@ frame_needed = 1, uses_anonymous_args = 0
 1354 0178 0DC0A0E1 		mov	ip, sp
 1355              	.LCFI8:
 1356              		.cfi_def_cfa_register 12
 1357 017c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1358 0180 04B04CE2 		sub	fp, ip, #4
 1359              		.cfi_offset 14, -8
 1360              		.cfi_offset 13, -12
 1361              		.cfi_offset 11, -16
 1362              	.LCFI9:
 1363              		.cfi_def_cfa 11, 4
 1364              		.loc 1 155 0
 1365 0184 10309FE5 		ldr	r3, .L22
 1366 0188 003093E5 		ldr	r3, [r3, #0]
 1367 018c 0300A0E1 		mov	r0, r3
 1368 0190 0CD04BE2 		sub	sp, fp, #12
 1369 0194 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1370 0198 1EFF2FE1 		bx	lr
 1371              	.L23:
 1372              		.align	2
 1373              	.L22:
 1374 019c 00000000 		.word	negras
 1375              		.cfi_endproc
 1376              	.LFE4:
 1378              		.align	2
 1379              		.global	reversi_t_pv
 1381              	reversi_t_pv:
 1382              	.LFB5:
 156:../reversi8_2019.c **** 
 157:../reversi8_2019.c **** int reversi_t_pv(void)
 158:../reversi8_2019.c **** {
 1383              		.loc 1 158 0
 1384              		.cfi_startproc
 1385              		@ Function supports interworking.
 1386              		@ args = 0, pretend = 0, frame = 0
 1387              		@ frame_needed = 1, uses_anonymous_args = 0
 1388 01a0 0DC0A0E1 		mov	ip, sp
 1389              	.LCFI10:
 1390              		.cfi_def_cfa_register 12
 1391 01a4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1392 01a8 04B04CE2 		sub	fp, ip, #4
 1393              		.cfi_offset 14, -8
 1394              		.cfi_offset 13, -12
 1395              		.cfi_offset 11, -16
 1396              	.LCFI11:
 1397              		.cfi_def_cfa 11, 4
 159:../reversi8_2019.c **** 	return veces_pv;
 1398              		.loc 1 159 0
 1399 01ac 10309FE5 		ldr	r3, .L25
 1400 01b0 003093E5 		ldr	r3, [r3, #0]
 160:../reversi8_2019.c **** }
 1401              		.loc 1 160 0
 1402 01b4 0300A0E1 		mov	r0, r3
 1403 01b8 0CD04BE2 		sub	sp, fp, #12
 1404 01bc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1405 01c0 1EFF2FE1 		bx	lr
 1406              	.L26:
 1407              		.align	2
 1408              	.L25:
 1409 01c4 84000000 		.word	veces_pv
 1410              		.cfi_endproc
 1411              	.LFE5:
 1413              		.align	2
 1414              		.global	reversi_veces_pv
 1416              	reversi_veces_pv:
 1417              	.LFB6:
 161:../reversi8_2019.c **** 
 162:../reversi8_2019.c **** int reversi_veces_pv(void)
 163:../reversi8_2019.c **** {
 1418              		.loc 1 163 0
 1419              		.cfi_startproc
 1420              		@ Function supports interworking.
 1421              		@ args = 0, pretend = 0, frame = 0
 1422              		@ frame_needed = 1, uses_anonymous_args = 0
 1423 01c8 0DC0A0E1 		mov	ip, sp
 1424              	.LCFI12:
 1425              		.cfi_def_cfa_register 12
 1426 01cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1427 01d0 04B04CE2 		sub	fp, ip, #4
 1428              		.cfi_offset 14, -8
 1429              		.cfi_offset 13, -12
 1430              		.cfi_offset 11, -16
 1431              	.LCFI13:
 1432              		.cfi_def_cfa 11, 4
 164:../reversi8_2019.c **** 	return t_pv;
 1433              		.loc 1 164 0
 1434 01d4 10309FE5 		ldr	r3, .L28
 1435 01d8 003093E5 		ldr	r3, [r3, #0]
 165:../reversi8_2019.c **** }
 1436              		.loc 1 165 0
 1437 01dc 0300A0E1 		mov	r0, r3
 1438 01e0 0CD04BE2 		sub	sp, fp, #12
 1439 01e4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1440 01e8 1EFF2FE1 		bx	lr
 1441              	.L29:
 1442              		.align	2
 1443              	.L28:
 1444 01ec 88000000 		.word	t_pv
 1445              		.cfi_endproc
 1446              	.LFE6:
 1448              		.align	2
 1449              		.global	reversi_procesar
 1451              	reversi_procesar:
 1452              	.LFB7:
 166:../reversi8_2019.c **** 
 167:../reversi8_2019.c **** void reversi_procesar(char f, char c)
 168:../reversi8_2019.c **** {
 1453              		.loc 1 168 0
 1454              		.cfi_startproc
 1455              		@ Function supports interworking.
 1456              		@ args = 0, pretend = 0, frame = 8
 1457              		@ frame_needed = 1, uses_anonymous_args = 0
 1458 01f0 0DC0A0E1 		mov	ip, sp
 1459              	.LCFI14:
 1460              		.cfi_def_cfa_register 12
 1461 01f4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1462 01f8 04B04CE2 		sub	fp, ip, #4
 1463              		.cfi_offset 14, -8
 1464              		.cfi_offset 13, -12
 1465              		.cfi_offset 11, -16
 1466              	.LCFI15:
 1467              		.cfi_def_cfa 11, 4
 1468 01fc 08D04DE2 		sub	sp, sp, #8
 1469 0200 0020A0E1 		mov	r2, r0
 1470 0204 0130A0E1 		mov	r3, r1
 1471 0208 0D204BE5 		strb	r2, [fp, #-13]
 1472 020c 0E304BE5 		strb	r3, [fp, #-14]
 169:../reversi8_2019.c **** 	fila = f;
 1473              		.loc 1 169 0
 1474 0210 2C309FE5 		ldr	r3, .L31
 1475 0214 0D205BE5 		ldrb	r2, [fp, #-13]
 1476 0218 0020C3E5 		strb	r2, [r3, #0]
 170:../reversi8_2019.c **** 	columna = c;
 1477              		.loc 1 170 0
 1478 021c 24309FE5 		ldr	r3, .L31+4
 1479 0220 0E205BE5 		ldrb	r2, [fp, #-14]
 1480 0224 0020C3E5 		strb	r2, [r3, #0]
 171:../reversi8_2019.c **** 	ready = 1;
 1481              		.loc 1 171 0
 1482 0228 1C309FE5 		ldr	r3, .L31+8
 1483 022c 0120A0E3 		mov	r2, #1
 1484 0230 0020C3E5 		strb	r2, [r3, #0]
 172:../reversi8_2019.c **** 	reversi8();
 1485              		.loc 1 172 0
 1486 0234 FEFFFFEB 		bl	reversi8
 173:../reversi8_2019.c **** }
 1487              		.loc 1 173 0
 1488 0238 0CD04BE2 		sub	sp, fp, #12
 1489 023c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1490 0240 1EFF2FE1 		bx	lr
 1491              	.L32:
 1492              		.align	2
 1493              	.L31:
 1494 0244 94000000 		.word	fila
 1495 0248 95000000 		.word	columna
 1496 024c 96000000 		.word	ready
 1497              		.cfi_endproc
 1498              	.LFE7:
 1500              		.align	2
 1501              		.global	obtener_ficha_en
 1503              	obtener_ficha_en:
 1504              	.LFB8:
 174:../reversi8_2019.c **** 
 175:../reversi8_2019.c **** enum estado_casilla obtener_ficha_en(int f, int c)
 176:../reversi8_2019.c **** {
 1505              		.loc 1 176 0
 1506              		.cfi_startproc
 1507              		@ Function supports interworking.
 1508              		@ args = 0, pretend = 0, frame = 8
 1509              		@ frame_needed = 1, uses_anonymous_args = 0
 1510 0250 0DC0A0E1 		mov	ip, sp
 1511              	.LCFI16:
 1512              		.cfi_def_cfa_register 12
 1513 0254 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1514 0258 04B04CE2 		sub	fp, ip, #4
 1515              		.cfi_offset 14, -8
 1516              		.cfi_offset 13, -12
 1517              		.cfi_offset 11, -16
 1518              	.LCFI17:
 1519              		.cfi_def_cfa 11, 4
 1520 025c 08D04DE2 		sub	sp, sp, #8
 1521 0260 10000BE5 		str	r0, [fp, #-16]
 1522 0264 14100BE5 		str	r1, [fp, #-20]
 177:../reversi8_2019.c **** 	return tablero[f][c];
 1523              		.loc 1 177 0
 1524 0268 24209FE5 		ldr	r2, .L34
 1525 026c 10301BE5 		ldr	r3, [fp, #-16]
 1526 0270 8311A0E1 		mov	r1, r3, asl #3
 1527 0274 14301BE5 		ldr	r3, [fp, #-20]
 1528 0278 033081E0 		add	r3, r1, r3
 1529 027c 033082E0 		add	r3, r2, r3
 1530 0280 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 178:../reversi8_2019.c **** }
 1531              		.loc 1 178 0
 1532 0284 0300A0E1 		mov	r0, r3
 1533 0288 0CD04BE2 		sub	sp, fp, #12
 1534 028c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1535 0290 1EFF2FE1 		bx	lr
 1536              	.L35:
 1537              		.align	2
 1538              	.L34:
 1539 0294 00000000 		.word	tablero
 1540              		.cfi_endproc
 1541              	.LFE8:
 1543              		.align	2
 1544              		.global	init_table
 1546              	init_table:
 1547              	.LFB9:
 179:../reversi8_2019.c **** 
 180:../reversi8_2019.c **** //extern int patron_volteo_arm_c(char tablero[][DIM], int *longitud,char FA, char CA, char SF, char
 181:../reversi8_2019.c **** //extern int patron_volteo_arm_arm(char tablero[][DIM], int *longitud,char FA, char CA, char SF, ch
 182:../reversi8_2019.c **** //extern int patron_volteo_arm_arm_opt(char tablero[][DIM], int *longitud,char FA, char CA, char SF
 183:../reversi8_2019.c **** 
 184:../reversi8_2019.c **** ///////////////////////////////////////////////////////////////////////////////////////////////////
 185:../reversi8_2019.c **** // 0 indica CASILLA_VACIA, 1 indica FICHA_BLANCA y 2 indica FICHA_NEGRA
 186:../reversi8_2019.c **** // pone el tablero a cero y luego coloca las fichas centrales.
 187:../reversi8_2019.c **** void init_table(char tablero[][DIM], char candidatas[][DIM])
 188:../reversi8_2019.c **** {
 1548              		.loc 1 188 0
 1549              		.cfi_startproc
 1550              		@ Function supports interworking.
 1551              		@ args = 0, pretend = 0, frame = 16
 1552              		@ frame_needed = 1, uses_anonymous_args = 0
 1553 0298 0DC0A0E1 		mov	ip, sp
 1554              	.LCFI18:
 1555              		.cfi_def_cfa_register 12
 1556 029c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1557 02a0 04B04CE2 		sub	fp, ip, #4
 1558              		.cfi_offset 14, -8
 1559              		.cfi_offset 13, -12
 1560              		.cfi_offset 11, -16
 1561              	.LCFI19:
 1562              		.cfi_def_cfa 11, 4
 1563 02a4 10D04DE2 		sub	sp, sp, #16
 1564 02a8 18000BE5 		str	r0, [fp, #-24]
 1565 02ac 1C100BE5 		str	r1, [fp, #-28]
 189:../reversi8_2019.c ****     int i, j;
 190:../reversi8_2019.c **** 
 191:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1566              		.loc 1 191 0
 1567 02b0 0030A0E3 		mov	r3, #0
 1568 02b4 10300BE5 		str	r3, [fp, #-16]
 1569 02b8 130000EA 		b	.L37
 1570              	.L40:
 192:../reversi8_2019.c ****     {
 193:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1571              		.loc 1 193 0
 1572 02bc 0030A0E3 		mov	r3, #0
 1573 02c0 14300BE5 		str	r3, [fp, #-20]
 1574 02c4 0A0000EA 		b	.L38
 1575              	.L39:
 194:../reversi8_2019.c ****             tablero[i][j] = CASILLA_VACIA;
 1576              		.loc 1 194 0 discriminator 2
 1577 02c8 10301BE5 		ldr	r3, [fp, #-16]
 1578 02cc 8331A0E1 		mov	r3, r3, asl #3
 1579 02d0 18201BE5 		ldr	r2, [fp, #-24]
 1580 02d4 032082E0 		add	r2, r2, r3
 1581 02d8 14301BE5 		ldr	r3, [fp, #-20]
 1582 02dc 033082E0 		add	r3, r2, r3
 1583 02e0 0020A0E3 		mov	r2, #0
 1584 02e4 0020C3E5 		strb	r2, [r3, #0]
 193:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1585              		.loc 1 193 0 discriminator 2
 1586 02e8 14301BE5 		ldr	r3, [fp, #-20]
 1587 02ec 013083E2 		add	r3, r3, #1
 1588 02f0 14300BE5 		str	r3, [fp, #-20]
 1589              	.L38:
 193:../reversi8_2019.c ****         for (j = 0; j < DIM; j++)
 1590              		.loc 1 193 0 is_stmt 0 discriminator 1
 1591 02f4 14301BE5 		ldr	r3, [fp, #-20]
 1592 02f8 070053E3 		cmp	r3, #7
 1593 02fc F1FFFFDA 		ble	.L39
 191:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1594              		.loc 1 191 0 is_stmt 1
 1595 0300 10301BE5 		ldr	r3, [fp, #-16]
 1596 0304 013083E2 		add	r3, r3, #1
 1597 0308 10300BE5 		str	r3, [fp, #-16]
 1598              	.L37:
 191:../reversi8_2019.c ****     for (i = 0; i < DIM; i++)
 1599              		.loc 1 191 0 is_stmt 0 discriminator 1
 1600 030c 10301BE5 		ldr	r3, [fp, #-16]
 1601 0310 070053E3 		cmp	r3, #7
 1602 0314 E8FFFFDA 		ble	.L40
 195:../reversi8_2019.c ****     }
 196:../reversi8_2019.c **** #if 0
 197:../reversi8_2019.c ****     for (i = 3; i < 5; ++i) {
 198:../reversi8_2019.c **** 	for(j = 3; j < 5; ++j) {
 199:../reversi8_2019.c **** 	    tablero[i][j] = i == j ? FICHA_BLANCA : FICHA_NEGRA;
 200:../reversi8_2019.c **** 	}
 201:../reversi8_2019.c ****     }
 202:../reversi8_2019.c **** 
 203:../reversi8_2019.c ****     for (i = 2; i < 6; ++i) {
 204:../reversi8_2019.c **** 	for (j = 2; j < 6; ++j) {
 205:../reversi8_2019.c **** 	    if((i>=3) && (i < 5) && (j>=3) && (j<5)) {
 206:../reversi8_2019.c **** 		candidatas[i][j] = CASILLA_OCUPADA;
 207:../reversi8_2019.c **** 	    } else {
 208:../reversi8_2019.c **** 		candidatas[i][j] = SI; //CASILLA_LIBRE;
 209:../reversi8_2019.c **** 	    }
 210:../reversi8_2019.c **** 	}
 211:../reversi8_2019.c ****     }
 212:../reversi8_2019.c **** #endif
 213:../reversi8_2019.c ****     // arriba hay versión alternativa
 214:../reversi8_2019.c ****     tablero[3][3] = FICHA_BLANCA;
 1603              		.loc 1 214 0 is_stmt 1
 1604 0318 18301BE5 		ldr	r3, [fp, #-24]
 1605 031c 183083E2 		add	r3, r3, #24
 1606 0320 0120A0E3 		mov	r2, #1
 1607 0324 0320C3E5 		strb	r2, [r3, #3]
 215:../reversi8_2019.c ****     tablero[4][4] = FICHA_BLANCA;
 1608              		.loc 1 215 0
 1609 0328 18301BE5 		ldr	r3, [fp, #-24]
 1610 032c 203083E2 		add	r3, r3, #32
 1611 0330 0120A0E3 		mov	r2, #1
 1612 0334 0420C3E5 		strb	r2, [r3, #4]
 216:../reversi8_2019.c ****     tablero[3][4] = FICHA_NEGRA;
 1613              		.loc 1 216 0
 1614 0338 18301BE5 		ldr	r3, [fp, #-24]
 1615 033c 183083E2 		add	r3, r3, #24
 1616 0340 0220A0E3 		mov	r2, #2
 1617 0344 0420C3E5 		strb	r2, [r3, #4]
 217:../reversi8_2019.c ****     tablero[4][3] = FICHA_NEGRA;
 1618              		.loc 1 217 0
 1619 0348 18301BE5 		ldr	r3, [fp, #-24]
 1620 034c 203083E2 		add	r3, r3, #32
 1621 0350 0220A0E3 		mov	r2, #2
 1622 0354 0320C3E5 		strb	r2, [r3, #3]
 218:../reversi8_2019.c **** 
 219:../reversi8_2019.c ****     candidatas[3][3] = CASILLA_OCUPADA;
 1623              		.loc 1 219 0
 1624 0358 1C301BE5 		ldr	r3, [fp, #-28]
 1625 035c 183083E2 		add	r3, r3, #24
 1626 0360 0220A0E3 		mov	r2, #2
 1627 0364 0320C3E5 		strb	r2, [r3, #3]
 220:../reversi8_2019.c ****     candidatas[4][4] = CASILLA_OCUPADA;
 1628              		.loc 1 220 0
 1629 0368 1C301BE5 		ldr	r3, [fp, #-28]
 1630 036c 203083E2 		add	r3, r3, #32
 1631 0370 0220A0E3 		mov	r2, #2
 1632 0374 0420C3E5 		strb	r2, [r3, #4]
 221:../reversi8_2019.c ****     candidatas[3][4] = CASILLA_OCUPADA;
 1633              		.loc 1 221 0
 1634 0378 1C301BE5 		ldr	r3, [fp, #-28]
 1635 037c 183083E2 		add	r3, r3, #24
 1636 0380 0220A0E3 		mov	r2, #2
 1637 0384 0420C3E5 		strb	r2, [r3, #4]
 222:../reversi8_2019.c ****     candidatas[4][3] = CASILLA_OCUPADA;
 1638              		.loc 1 222 0
 1639 0388 1C301BE5 		ldr	r3, [fp, #-28]
 1640 038c 203083E2 		add	r3, r3, #32
 1641 0390 0220A0E3 		mov	r2, #2
 1642 0394 0320C3E5 		strb	r2, [r3, #3]
 223:../reversi8_2019.c **** 
 224:../reversi8_2019.c ****     // casillas a explorar:
 225:../reversi8_2019.c ****     candidatas[2][2] = SI;
 1643              		.loc 1 225 0
 1644 0398 1C301BE5 		ldr	r3, [fp, #-28]
 1645 039c 103083E2 		add	r3, r3, #16
 1646 03a0 0120A0E3 		mov	r2, #1
 1647 03a4 0220C3E5 		strb	r2, [r3, #2]
 226:../reversi8_2019.c ****     candidatas[2][3] = SI;
 1648              		.loc 1 226 0
 1649 03a8 1C301BE5 		ldr	r3, [fp, #-28]
 1650 03ac 103083E2 		add	r3, r3, #16
 1651 03b0 0120A0E3 		mov	r2, #1
 1652 03b4 0320C3E5 		strb	r2, [r3, #3]
 227:../reversi8_2019.c ****     candidatas[2][4] = SI;
 1653              		.loc 1 227 0
 1654 03b8 1C301BE5 		ldr	r3, [fp, #-28]
 1655 03bc 103083E2 		add	r3, r3, #16
 1656 03c0 0120A0E3 		mov	r2, #1
 1657 03c4 0420C3E5 		strb	r2, [r3, #4]
 228:../reversi8_2019.c ****     candidatas[2][5] = SI;
 1658              		.loc 1 228 0
 1659 03c8 1C301BE5 		ldr	r3, [fp, #-28]
 1660 03cc 103083E2 		add	r3, r3, #16
 1661 03d0 0120A0E3 		mov	r2, #1
 1662 03d4 0520C3E5 		strb	r2, [r3, #5]
 229:../reversi8_2019.c ****     candidatas[3][2] = SI;
 1663              		.loc 1 229 0
 1664 03d8 1C301BE5 		ldr	r3, [fp, #-28]
 1665 03dc 183083E2 		add	r3, r3, #24
 1666 03e0 0120A0E3 		mov	r2, #1
 1667 03e4 0220C3E5 		strb	r2, [r3, #2]
 230:../reversi8_2019.c ****     candidatas[3][5] = SI;
 1668              		.loc 1 230 0
 1669 03e8 1C301BE5 		ldr	r3, [fp, #-28]
 1670 03ec 183083E2 		add	r3, r3, #24
 1671 03f0 0120A0E3 		mov	r2, #1
 1672 03f4 0520C3E5 		strb	r2, [r3, #5]
 231:../reversi8_2019.c ****     candidatas[4][2] = SI;
 1673              		.loc 1 231 0
 1674 03f8 1C301BE5 		ldr	r3, [fp, #-28]
 1675 03fc 203083E2 		add	r3, r3, #32
 1676 0400 0120A0E3 		mov	r2, #1
 1677 0404 0220C3E5 		strb	r2, [r3, #2]
 232:../reversi8_2019.c ****     candidatas[4][5] = SI;
 1678              		.loc 1 232 0
 1679 0408 1C301BE5 		ldr	r3, [fp, #-28]
 1680 040c 203083E2 		add	r3, r3, #32
 1681 0410 0120A0E3 		mov	r2, #1
 1682 0414 0520C3E5 		strb	r2, [r3, #5]
 233:../reversi8_2019.c ****     candidatas[5][2] = SI;
 1683              		.loc 1 233 0
 1684 0418 1C301BE5 		ldr	r3, [fp, #-28]
 1685 041c 283083E2 		add	r3, r3, #40
 1686 0420 0120A0E3 		mov	r2, #1
 1687 0424 0220C3E5 		strb	r2, [r3, #2]
 234:../reversi8_2019.c ****     candidatas[5][3] = SI;
 1688              		.loc 1 234 0
 1689 0428 1C301BE5 		ldr	r3, [fp, #-28]
 1690 042c 283083E2 		add	r3, r3, #40
 1691 0430 0120A0E3 		mov	r2, #1
 1692 0434 0320C3E5 		strb	r2, [r3, #3]
 235:../reversi8_2019.c ****     candidatas[5][4] = SI;
 1693              		.loc 1 235 0
 1694 0438 1C301BE5 		ldr	r3, [fp, #-28]
 1695 043c 283083E2 		add	r3, r3, #40
 1696 0440 0120A0E3 		mov	r2, #1
 1697 0444 0420C3E5 		strb	r2, [r3, #4]
 236:../reversi8_2019.c ****     candidatas[5][5] = SI;
 1698              		.loc 1 236 0
 1699 0448 1C301BE5 		ldr	r3, [fp, #-28]
 1700 044c 283083E2 		add	r3, r3, #40
 1701 0450 0120A0E3 		mov	r2, #1
 1702 0454 0520C3E5 		strb	r2, [r3, #5]
 237:../reversi8_2019.c **** }
 1703              		.loc 1 237 0
 1704 0458 0CD04BE2 		sub	sp, fp, #12
 1705 045c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1706 0460 1EFF2FE1 		bx	lr
 1707              		.cfi_endproc
 1708              	.LFE9:
 1710              		.align	2
 1711              		.global	ficha_valida
 1713              	ficha_valida:
 1714              	.LFB10:
 238:../reversi8_2019.c **** 
 239:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 240:../reversi8_2019.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 241:../reversi8_2019.c **** // IMPORTANTE: AL SUSTITUIR FICHA_VALIDA() Y PATRON_VOLTEO()
 242:../reversi8_2019.c **** // POR RUTINAS EN ENSAMBLADOR HAY QUE RESPETAR LA MODULARIDAD.
 243:../reversi8_2019.c **** // DEBEN SEGUIR SIENDO LLAMADAS A FUNCIONES Y DEBEN CUMPLIR CON EL ATPCS
 244:../reversi8_2019.c **** // (VER TRANSPARENCIAS Y MATERIAL DE PRACTICAS):
 245:../reversi8_2019.c **** //  - DEBEN PASAR LOS PARAMETROS POR LOS REGISTROS CORRESPONDIENTES
 246:../reversi8_2019.c **** //  - GUARDAR EN PILA SOLO LOS REGISTROS QUE TOCAN
 247:../reversi8_2019.c **** //  - CREAR UN MARCO DE PILA TAL Y COMO MUESTRAN LAS TRANSPARENCIAS
 248:../reversi8_2019.c **** //    DE LA ASIGNATURA (CON EL PC, FP, LR,....)
 249:../reversi8_2019.c **** //  - EN EL CASO DE LAS VARIABLES LOCALES, SOLO HAY QUE APILARLAS
 250:../reversi8_2019.c **** //    SI NO SE PUEDEN COLOCAR EN UN REGISTRO.
 251:../reversi8_2019.c **** //    SI SE COLOCAN EN UN REGISTRO NO HACE FALTA
 252:../reversi8_2019.c **** //    NI GUARDARLAS EN PILA NI RESERVAR UN ESPACIO EN LA PILA PARA ELLAS
 253:../reversi8_2019.c **** //++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 254:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 255:../reversi8_2019.c **** // Devuelve el contenido de la posición indicadas por la fila y columna actual.
 256:../reversi8_2019.c **** // Además informa si la posición es válida y contiene alguna ficha.
 257:../reversi8_2019.c **** // Esto lo hace por referencia (en *posicion_valida)
 258:../reversi8_2019.c **** // Si devuelve un 0 no es válida o está vacia.
 259:../reversi8_2019.c **** char ficha_valida(char tablero[][DIM], char f, char c, int *posicion_valida)
 260:../reversi8_2019.c **** {
 1715              		.loc 1 260 0
 1716              		.cfi_startproc
 1717              		@ Function supports interworking.
 1718              		@ args = 0, pretend = 0, frame = 24
 1719              		@ frame_needed = 1, uses_anonymous_args = 0
 1720 0464 0DC0A0E1 		mov	ip, sp
 1721              	.LCFI20:
 1722              		.cfi_def_cfa_register 12
 1723 0468 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1724 046c 04B04CE2 		sub	fp, ip, #4
 1725              		.cfi_offset 14, -8
 1726              		.cfi_offset 13, -12
 1727              		.cfi_offset 11, -16
 1728              	.LCFI21:
 1729              		.cfi_def_cfa 11, 4
 1730 0470 18D04DE2 		sub	sp, sp, #24
 1731 0474 18000BE5 		str	r0, [fp, #-24]
 1732 0478 20300BE5 		str	r3, [fp, #-32]
 1733 047c 0130A0E1 		mov	r3, r1
 1734 0480 19304BE5 		strb	r3, [fp, #-25]
 1735 0484 0230A0E1 		mov	r3, r2
 1736 0488 1A304BE5 		strb	r3, [fp, #-26]
 261:../reversi8_2019.c ****     char ficha;
 262:../reversi8_2019.c ****     if ((f < DIM) && (c < DIM) && (tablero[f][c] != CASILLA_VACIA))
 1737              		.loc 1 262 0
 1738 048c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1739 0490 070053E3 		cmp	r3, #7
 1740 0494 1500008A 		bhi	.L42
 1741              		.loc 1 262 0 is_stmt 0 discriminator 1
 1742 0498 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1743 049c 070053E3 		cmp	r3, #7
 1744 04a0 1200008A 		bhi	.L42
 1745 04a4 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1746 04a8 8331A0E1 		mov	r3, r3, asl #3
 1747 04ac 18201BE5 		ldr	r2, [fp, #-24]
 1748 04b0 032082E0 		add	r2, r2, r3
 1749 04b4 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1750 04b8 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1751 04bc 000053E3 		cmp	r3, #0
 1752 04c0 0A00000A 		beq	.L42
 263:../reversi8_2019.c ****     {
 264:../reversi8_2019.c ****         *posicion_valida = 1;
 1753              		.loc 1 264 0 is_stmt 1
 1754 04c4 20301BE5 		ldr	r3, [fp, #-32]
 1755 04c8 0120A0E3 		mov	r2, #1
 1756 04cc 002083E5 		str	r2, [r3, #0]
 265:../reversi8_2019.c ****         ficha = tablero[f][c];
 1757              		.loc 1 265 0
 1758 04d0 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1759 04d4 8331A0E1 		mov	r3, r3, asl #3
 1760 04d8 18201BE5 		ldr	r2, [fp, #-24]
 1761 04dc 032082E0 		add	r2, r2, r3
 1762 04e0 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1763 04e4 0330D2E7 		ldrb	r3, [r2, r3]
 1764 04e8 0D304BE5 		strb	r3, [fp, #-13]
 1765 04ec 040000EA 		b	.L43
 1766              	.L42:
 266:../reversi8_2019.c ****     }
 267:../reversi8_2019.c ****     else
 268:../reversi8_2019.c ****     {
 269:../reversi8_2019.c ****         *posicion_valida = 0;
 1767              		.loc 1 269 0
 1768 04f0 20301BE5 		ldr	r3, [fp, #-32]
 1769 04f4 0020A0E3 		mov	r2, #0
 1770 04f8 002083E5 		str	r2, [r3, #0]
 270:../reversi8_2019.c ****         ficha = CASILLA_VACIA;
 1771              		.loc 1 270 0
 1772 04fc 0030A0E3 		mov	r3, #0
 1773 0500 0D304BE5 		strb	r3, [fp, #-13]
 1774              	.L43:
 271:../reversi8_2019.c ****     }
 272:../reversi8_2019.c ****     return ficha;
 1775              		.loc 1 272 0
 1776 0504 0D305BE5 		ldrb	r3, [fp, #-13]	@ zero_extendqisi2
 273:../reversi8_2019.c **** }
 1777              		.loc 1 273 0
 1778 0508 0300A0E1 		mov	r0, r3
 1779 050c 0CD04BE2 		sub	sp, fp, #12
 1780 0510 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1781 0514 1EFF2FE1 		bx	lr
 1782              		.cfi_endproc
 1783              	.LFE10:
 1785              		.align	2
 1786              		.global	patron_volteo
 1788              	patron_volteo:
 1789              	.LFB11:
 274:../reversi8_2019.c **** 
 275:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 276:../reversi8_2019.c **** // La función patrón volteo comprueba si hay que actualizar una determinada direccion,
 277:../reversi8_2019.c **** // busca el patrón de volteo (n fichas del rival seguidas de una ficha del jugador actual)
 278:../reversi8_2019.c **** // en una dirección determinada
 279:../reversi8_2019.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 280:../reversi8_2019.c **** // color indica el color de la pieza que se acaba de colocar
 281:../reversi8_2019.c **** // la función devuelve PATRON_ENCONTRADO (1) si encuentra patrón y NO_HAY_PATRON (0) en caso contra
 282:../reversi8_2019.c **** // FA y CA son la fila y columna a analizar
 283:../reversi8_2019.c **** // longitud es un parámetro por referencia. Sirve para saber la longitud del patrón que se está ana
 284:../reversi8_2019.c **** //          Se usa para saber cuantas fichas habría que voltear
 285:../reversi8_2019.c **** int patron_volteo(char tablero[][DIM], int *longitud, char FA, char CA, char SF, char SC, char colo
 286:../reversi8_2019.c **** {
 1790              		.loc 1 286 0
 1791              		.cfi_startproc
 1792              		@ Function supports interworking.
 1793              		@ args = 12, pretend = 0, frame = 32
 1794              		@ frame_needed = 1, uses_anonymous_args = 0
 1795 0518 0DC0A0E1 		mov	ip, sp
 1796              	.LCFI22:
 1797              		.cfi_def_cfa_register 12
 1798 051c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1799 0520 04B04CE2 		sub	fp, ip, #4
 1800              		.cfi_offset 14, -8
 1801              		.cfi_offset 13, -12
 1802              		.cfi_offset 11, -16
 1803              	.LCFI23:
 1804              		.cfi_def_cfa 11, 4
 1805 0524 20D04DE2 		sub	sp, sp, #32
 1806 0528 20000BE5 		str	r0, [fp, #-32]
 1807 052c 24100BE5 		str	r1, [fp, #-36]
 1808 0530 25204BE5 		strb	r2, [fp, #-37]
 1809 0534 26304BE5 		strb	r3, [fp, #-38]
 287:../reversi8_2019.c **** 	int t_inicio = timer2_leer();
 1810              		.loc 1 287 0
 1811 0538 FEFFFFEB 		bl	timer2_leer
 1812 053c 0030A0E1 		mov	r3, r0
 1813 0540 14300BE5 		str	r3, [fp, #-20]
 288:../reversi8_2019.c **** 	int t_final;
 289:../reversi8_2019.c **** 	int posicion_valida; // indica si la posición es valida y contiene una ficha de algún jugador
 290:../reversi8_2019.c **** 	char casilla;   // casilla es la casilla que se lee del tablero
 291:../reversi8_2019.c **** 
 292:../reversi8_2019.c **** 	FA = FA + SF;
 1814              		.loc 1 292 0
 1815 0544 25205BE5 		ldrb	r2, [fp, #-37]
 1816 0548 0430DBE5 		ldrb	r3, [fp, #4]
 1817 054c 033082E0 		add	r3, r2, r3
 1818 0550 25304BE5 		strb	r3, [fp, #-37]
 293:../reversi8_2019.c **** 	CA = CA + SC;
 1819              		.loc 1 293 0
 1820 0554 26205BE5 		ldrb	r2, [fp, #-38]
 1821 0558 0830DBE5 		ldrb	r3, [fp, #8]
 1822 055c 033082E0 		add	r3, r2, r3
 1823 0560 26304BE5 		strb	r3, [fp, #-38]
 294:../reversi8_2019.c **** 	casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 1824              		.loc 1 294 0
 1825 0564 25105BE5 		ldrb	r1, [fp, #-37]	@ zero_extendqisi2
 1826 0568 26205BE5 		ldrb	r2, [fp, #-38]	@ zero_extendqisi2
 1827 056c 1C304BE2 		sub	r3, fp, #28
 1828 0570 20001BE5 		ldr	r0, [fp, #-32]
 1829 0574 FEFFFFEB 		bl	ficha_valida
 1830 0578 0030A0E1 		mov	r3, r0
 1831 057c 0D304BE5 		strb	r3, [fp, #-13]
 295:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1832              		.loc 1 295 0
 1833 0580 130000EA 		b	.L45
 1834              	.L47:
 296:../reversi8_2019.c **** 	// mientras la casilla está en el tablero, no está vací­a,
 297:../reversi8_2019.c **** 	// y es del color rival seguimos buscando el patron de volteo
 298:../reversi8_2019.c **** 	{
 299:../reversi8_2019.c **** 		FA = FA + SF;
 1835              		.loc 1 299 0
 1836 0584 25205BE5 		ldrb	r2, [fp, #-37]
 1837 0588 0430DBE5 		ldrb	r3, [fp, #4]
 1838 058c 033082E0 		add	r3, r2, r3
 1839 0590 25304BE5 		strb	r3, [fp, #-37]
 300:../reversi8_2019.c **** 		CA = CA + SC;
 1840              		.loc 1 300 0
 1841 0594 26205BE5 		ldrb	r2, [fp, #-38]
 1842 0598 0830DBE5 		ldrb	r3, [fp, #8]
 1843 059c 033082E0 		add	r3, r2, r3
 1844 05a0 26304BE5 		strb	r3, [fp, #-38]
 301:../reversi8_2019.c **** 		*longitud = *longitud + 1;
 1845              		.loc 1 301 0
 1846 05a4 24301BE5 		ldr	r3, [fp, #-36]
 1847 05a8 003093E5 		ldr	r3, [r3, #0]
 1848 05ac 012083E2 		add	r2, r3, #1
 1849 05b0 24301BE5 		ldr	r3, [fp, #-36]
 1850 05b4 002083E5 		str	r2, [r3, #0]
 302:../reversi8_2019.c **** 		casilla = ficha_valida(tablero, FA, CA, &posicion_valida);
 1851              		.loc 1 302 0
 1852 05b8 25105BE5 		ldrb	r1, [fp, #-37]	@ zero_extendqisi2
 1853 05bc 26205BE5 		ldrb	r2, [fp, #-38]	@ zero_extendqisi2
 1854 05c0 1C304BE2 		sub	r3, fp, #28
 1855 05c4 20001BE5 		ldr	r0, [fp, #-32]
 1856 05c8 FEFFFFEB 		bl	ficha_valida
 1857 05cc 0030A0E1 		mov	r3, r0
 1858 05d0 0D304BE5 		strb	r3, [fp, #-13]
 1859              	.L45:
 295:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1860              		.loc 1 295 0 discriminator 1
 1861 05d4 1C301BE5 		ldr	r3, [fp, #-28]
 1862 05d8 010053E3 		cmp	r3, #1
 1863 05dc 0300001A 		bne	.L46
 295:../reversi8_2019.c **** 	while ((posicion_valida == 1) && (casilla != color))
 1864              		.loc 1 295 0 is_stmt 0 discriminator 2
 1865 05e0 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1866 05e4 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1867 05e8 030052E1 		cmp	r2, r3
 1868 05ec E4FFFF1A 		bne	.L47
 1869              	.L46:
 303:../reversi8_2019.c **** 	}
 304:../reversi8_2019.c ****     // si la ultima posición era válida y la ficha es del jugador actual,
 305:../reversi8_2019.c ****     // entonces hemos encontrado el patrón
 306:../reversi8_2019.c **** 	if ((posicion_valida == 1) && (casilla == color) && (*longitud >0))
 1870              		.loc 1 306 0 is_stmt 1
 1871 05f0 1C301BE5 		ldr	r3, [fp, #-28]
 1872 05f4 010053E3 		cmp	r3, #1
 1873 05f8 1900001A 		bne	.L48
 1874              		.loc 1 306 0 is_stmt 0 discriminator 1
 1875 05fc 0D205BE5 		ldrb	r2, [fp, #-13]	@ zero_extendqisi2
 1876 0600 0C30DBE5 		ldrb	r3, [fp, #12]	@ zero_extendqisi2
 1877 0604 030052E1 		cmp	r2, r3
 1878 0608 1500001A 		bne	.L48
 1879 060c 24301BE5 		ldr	r3, [fp, #-36]
 1880 0610 003093E5 		ldr	r3, [r3, #0]
 1881 0614 000053E3 		cmp	r3, #0
 1882 0618 110000DA 		ble	.L48
 307:../reversi8_2019.c **** 	{
 308:../reversi8_2019.c **** 		t_final = timer2_leer();
 1883              		.loc 1 308 0 is_stmt 1
 1884 061c FEFFFFEB 		bl	timer2_leer
 1885 0620 0030A0E1 		mov	r3, r0
 1886 0624 18300BE5 		str	r3, [fp, #-24]
 309:../reversi8_2019.c **** 		t_pv += (t_final - t_inicio);
 1887              		.loc 1 309 0
 1888 0628 18201BE5 		ldr	r2, [fp, #-24]
 1889 062c 14301BE5 		ldr	r3, [fp, #-20]
 1890 0630 022063E0 		rsb	r2, r3, r2
 1891 0634 7C309FE5 		ldr	r3, .L50
 1892 0638 003093E5 		ldr	r3, [r3, #0]
 1893 063c 032082E0 		add	r2, r2, r3
 1894 0640 70309FE5 		ldr	r3, .L50
 1895 0644 002083E5 		str	r2, [r3, #0]
 310:../reversi8_2019.c **** 		veces_pv++;
 1896              		.loc 1 310 0
 1897 0648 6C309FE5 		ldr	r3, .L50+4
 1898 064c 003093E5 		ldr	r3, [r3, #0]
 1899 0650 012083E2 		add	r2, r3, #1
 1900 0654 60309FE5 		ldr	r3, .L50+4
 1901 0658 002083E5 		str	r2, [r3, #0]
 311:../reversi8_2019.c **** 		return PATRON_ENCONTRADO; // si hay que voltear una ficha o más hemos encontrado el patrón
 1902              		.loc 1 311 0
 1903 065c 0130A0E3 		mov	r3, #1
 1904 0660 100000EA 		b	.L49
 1905              	.L48:
 312:../reversi8_2019.c **** 	}
 313:../reversi8_2019.c **** 	else
 314:../reversi8_2019.c **** 	{
 315:../reversi8_2019.c **** 		t_final = timer2_leer();
 1906              		.loc 1 315 0
 1907 0664 FEFFFFEB 		bl	timer2_leer
 1908 0668 0030A0E1 		mov	r3, r0
 1909 066c 18300BE5 		str	r3, [fp, #-24]
 316:../reversi8_2019.c **** 		t_pv += (t_final - t_inicio);
 1910              		.loc 1 316 0
 1911 0670 18201BE5 		ldr	r2, [fp, #-24]
 1912 0674 14301BE5 		ldr	r3, [fp, #-20]
 1913 0678 022063E0 		rsb	r2, r3, r2
 1914 067c 34309FE5 		ldr	r3, .L50
 1915 0680 003093E5 		ldr	r3, [r3, #0]
 1916 0684 032082E0 		add	r2, r2, r3
 1917 0688 28309FE5 		ldr	r3, .L50
 1918 068c 002083E5 		str	r2, [r3, #0]
 317:../reversi8_2019.c **** 		veces_pv++;
 1919              		.loc 1 317 0
 1920 0690 24309FE5 		ldr	r3, .L50+4
 1921 0694 003093E5 		ldr	r3, [r3, #0]
 1922 0698 012083E2 		add	r2, r3, #1
 1923 069c 18309FE5 		ldr	r3, .L50+4
 1924 06a0 002083E5 		str	r2, [r3, #0]
 318:../reversi8_2019.c **** 		return NO_HAY_PATRON; // si no hay que voltear no hay patrón
 1925              		.loc 1 318 0
 1926 06a4 0030A0E3 		mov	r3, #0
 1927              	.L49:
 319:../reversi8_2019.c **** 	}
 320:../reversi8_2019.c **** }
 1928              		.loc 1 320 0
 1929 06a8 0300A0E1 		mov	r0, r3
 1930 06ac 0CD04BE2 		sub	sp, fp, #12
 1931 06b0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1932 06b4 1EFF2FE1 		bx	lr
 1933              	.L51:
 1934              		.align	2
 1935              	.L50:
 1936 06b8 88000000 		.word	t_pv
 1937 06bc 84000000 		.word	veces_pv
 1938              		.cfi_endproc
 1939              	.LFE11:
 1941              		.align	2
 1942              		.global	voltear
 1944              	voltear:
 1945              	.LFB12:
 321:../reversi8_2019.c **** 
 322:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 323:../reversi8_2019.c **** // voltea n fichas en la dirección que toque
 324:../reversi8_2019.c **** // SF y SC son las cantidades a sumar para movernos en la dirección que toque
 325:../reversi8_2019.c **** // color indica el color de la pieza que se acaba de colocar
 326:../reversi8_2019.c **** // FA y CA son la fila y columna a analizar
 327:../reversi8_2019.c **** void voltear(char tablero[][DIM], char FA, char CA, char SF, char SC, int n, char color)
 328:../reversi8_2019.c **** {
 1946              		.loc 1 328 0
 1947              		.cfi_startproc
 1948              		@ Function supports interworking.
 1949              		@ args = 12, pretend = 0, frame = 16
 1950              		@ frame_needed = 1, uses_anonymous_args = 0
 1951 06c0 0DC0A0E1 		mov	ip, sp
 1952              	.LCFI24:
 1953              		.cfi_def_cfa_register 12
 1954 06c4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1955 06c8 04B04CE2 		sub	fp, ip, #4
 1956              		.cfi_offset 14, -8
 1957              		.cfi_offset 13, -12
 1958              		.cfi_offset 11, -16
 1959              	.LCFI25:
 1960              		.cfi_def_cfa 11, 4
 1961 06cc 10D04DE2 		sub	sp, sp, #16
 1962 06d0 18000BE5 		str	r0, [fp, #-24]
 1963 06d4 19104BE5 		strb	r1, [fp, #-25]
 1964 06d8 1A204BE5 		strb	r2, [fp, #-26]
 1965 06dc 1B304BE5 		strb	r3, [fp, #-27]
 329:../reversi8_2019.c ****     int i;
 330:../reversi8_2019.c **** 
 331:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1966              		.loc 1 331 0
 1967 06e0 0030A0E3 		mov	r3, #0
 1968 06e4 10300BE5 		str	r3, [fp, #-16]
 1969 06e8 110000EA 		b	.L53
 1970              	.L54:
 332:../reversi8_2019.c ****     {
 333:../reversi8_2019.c ****         FA = FA + SF;
 1971              		.loc 1 333 0 discriminator 2
 1972 06ec 19205BE5 		ldrb	r2, [fp, #-25]
 1973 06f0 1B305BE5 		ldrb	r3, [fp, #-27]
 1974 06f4 033082E0 		add	r3, r2, r3
 1975 06f8 19304BE5 		strb	r3, [fp, #-25]
 334:../reversi8_2019.c ****         CA = CA + SC;
 1976              		.loc 1 334 0 discriminator 2
 1977 06fc 1A205BE5 		ldrb	r2, [fp, #-26]
 1978 0700 0430DBE5 		ldrb	r3, [fp, #4]
 1979 0704 033082E0 		add	r3, r2, r3
 1980 0708 1A304BE5 		strb	r3, [fp, #-26]
 335:../reversi8_2019.c ****         tablero[FA][CA] = color;
 1981              		.loc 1 335 0 discriminator 2
 1982 070c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1983 0710 8331A0E1 		mov	r3, r3, asl #3
 1984 0714 18201BE5 		ldr	r2, [fp, #-24]
 1985 0718 032082E0 		add	r2, r2, r3
 1986 071c 1A305BE5 		ldrb	r3, [fp, #-26]	@ zero_extendqisi2
 1987 0720 0C10DBE5 		ldrb	r1, [fp, #12]
 1988 0724 0310C2E7 		strb	r1, [r2, r3]
 331:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1989              		.loc 1 331 0 discriminator 2
 1990 0728 10301BE5 		ldr	r3, [fp, #-16]
 1991 072c 013083E2 		add	r3, r3, #1
 1992 0730 10300BE5 		str	r3, [fp, #-16]
 1993              	.L53:
 331:../reversi8_2019.c ****     for (i = 0; i < n; i++)
 1994              		.loc 1 331 0 is_stmt 0 discriminator 1
 1995 0734 10201BE5 		ldr	r2, [fp, #-16]
 1996 0738 08309BE5 		ldr	r3, [fp, #8]
 1997 073c 030052E1 		cmp	r2, r3
 1998 0740 E9FFFFBA 		blt	.L54
 336:../reversi8_2019.c ****     }
 337:../reversi8_2019.c **** }
 1999              		.loc 1 337 0 is_stmt 1
 2000 0744 0CD04BE2 		sub	sp, fp, #12
 2001 0748 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2002 074c 1EFF2FE1 		bx	lr
 2003              		.cfi_endproc
 2004              	.LFE12:
 2006              		.align	2
 2007              		.global	actualizar_tablero
 2009              	actualizar_tablero:
 2010              	.LFB13:
 338:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 339:../reversi8_2019.c **** // comprueba si hay que actualizar alguna ficha
 340:../reversi8_2019.c **** // no comprueba que el movimiento realizado sea válido
 341:../reversi8_2019.c **** // f y c son la fila y columna a analizar
 342:../reversi8_2019.c **** // char vSF[DIM] = {-1,-1, 0, 1, 1, 1, 0,-1};
 343:../reversi8_2019.c **** // char vSC[DIM] = { 0, 1, 1, 1, 0,-1,-1,-1};
 344:../reversi8_2019.c **** int actualizar_tablero(char tablero[][DIM], char f, char c, char color)
 345:../reversi8_2019.c **** {
 2011              		.loc 1 345 0
 2012              		.cfi_startproc
 2013              		@ Function supports interworking.
 2014              		@ args = 0, pretend = 0, frame = 24
 2015              		@ frame_needed = 1, uses_anonymous_args = 0
 2016 0750 0DC0A0E1 		mov	ip, sp
 2017              	.LCFI26:
 2018              		.cfi_def_cfa_register 12
 2019 0754 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2020 0758 04B04CE2 		sub	fp, ip, #4
 2021              		.cfi_offset 14, -8
 2022              		.cfi_offset 13, -12
 2023              		.cfi_offset 11, -16
 2024              	.LCFI27:
 2025              		.cfi_def_cfa 11, 4
 2026 075c 28D04DE2 		sub	sp, sp, #40
 2027 0760 20000BE5 		str	r0, [fp, #-32]
 2028 0764 21104BE5 		strb	r1, [fp, #-33]
 2029 0768 22204BE5 		strb	r2, [fp, #-34]
 2030 076c 23304BE5 		strb	r3, [fp, #-35]
 346:../reversi8_2019.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 347:../reversi8_2019.c ****     int i, flip, patron;
 348:../reversi8_2019.c **** 
 349:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 2031              		.loc 1 349 0
 2032 0770 0030A0E3 		mov	r3, #0
 2033 0774 10300BE5 		str	r3, [fp, #-16]
 2034 0778 2B0000EA 		b	.L56
 2035              	.L58:
 350:../reversi8_2019.c ****     {
 351:../reversi8_2019.c ****         SF = vSF[i];
 2036              		.loc 1 351 0
 2037 077c C8209FE5 		ldr	r2, .L59
 2038 0780 10301BE5 		ldr	r3, [fp, #-16]
 2039 0784 033082E0 		add	r3, r2, r3
 2040 0788 0030D3E5 		ldrb	r3, [r3, #0]
 2041 078c 11304BE5 		strb	r3, [fp, #-17]
 352:../reversi8_2019.c ****         SC = vSC[i];
 2042              		.loc 1 352 0
 2043 0790 B8209FE5 		ldr	r2, .L59+4
 2044 0794 10301BE5 		ldr	r3, [fp, #-16]
 2045 0798 033082E0 		add	r3, r2, r3
 2046 079c 0030D3E5 		ldrb	r3, [r3, #0]
 2047 07a0 12304BE5 		strb	r3, [fp, #-18]
 353:../reversi8_2019.c ****         // flip: numero de fichas a voltear
 354:../reversi8_2019.c ****         flip = 0;
 2048              		.loc 1 354 0
 2049 07a4 0030A0E3 		mov	r3, #0
 2050 07a8 1C300BE5 		str	r3, [fp, #-28]
 355:../reversi8_2019.c ****         patron = patron_volteo(tablero, &flip, f, c, SF, SC, color);
 2051              		.loc 1 355 0
 2052 07ac 1C104BE2 		sub	r1, fp, #28
 2053 07b0 21205BE5 		ldrb	r2, [fp, #-33]	@ zero_extendqisi2
 2054 07b4 22305BE5 		ldrb	r3, [fp, #-34]	@ zero_extendqisi2
 2055 07b8 11005BE5 		ldrb	r0, [fp, #-17]	@ zero_extendqisi2
 2056 07bc 00008DE5 		str	r0, [sp, #0]
 2057 07c0 12005BE5 		ldrb	r0, [fp, #-18]	@ zero_extendqisi2
 2058 07c4 04008DE5 		str	r0, [sp, #4]
 2059 07c8 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 2060 07cc 08008DE5 		str	r0, [sp, #8]
 2061 07d0 20001BE5 		ldr	r0, [fp, #-32]
 2062 07d4 FEFFFFEB 		bl	patron_volteo
 2063 07d8 18000BE5 		str	r0, [fp, #-24]
 356:../reversi8_2019.c ****         if (patron == PATRON_ENCONTRADO )
 2064              		.loc 1 356 0
 2065 07dc 18301BE5 		ldr	r3, [fp, #-24]
 2066 07e0 010053E3 		cmp	r3, #1
 2067 07e4 0D00001A 		bne	.L57
 357:../reversi8_2019.c ****         {
 358:../reversi8_2019.c ****             voltear(tablero, f, c, SF, SC, flip, color);
 2068              		.loc 1 358 0
 2069 07e8 1C001BE5 		ldr	r0, [fp, #-28]
 2070 07ec 21105BE5 		ldrb	r1, [fp, #-33]	@ zero_extendqisi2
 2071 07f0 22205BE5 		ldrb	r2, [fp, #-34]	@ zero_extendqisi2
 2072 07f4 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2073 07f8 12C05BE5 		ldrb	ip, [fp, #-18]	@ zero_extendqisi2
 2074 07fc 00C08DE5 		str	ip, [sp, #0]
 2075 0800 04008DE5 		str	r0, [sp, #4]
 2076 0804 23005BE5 		ldrb	r0, [fp, #-35]	@ zero_extendqisi2
 2077 0808 08008DE5 		str	r0, [sp, #8]
 2078 080c 20001BE5 		ldr	r0, [fp, #-32]
 2079 0810 FEFFFFEB 		bl	voltear
 359:../reversi8_2019.c ****             jugada_valida = 1;          //TODO explicar
 2080              		.loc 1 359 0
 2081 0814 38309FE5 		ldr	r3, .L59+8
 2082 0818 0120A0E3 		mov	r2, #1
 2083 081c 002083E5 		str	r2, [r3, #0]
 2084              	.L57:
 349:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 2085              		.loc 1 349 0
 2086 0820 10301BE5 		ldr	r3, [fp, #-16]
 2087 0824 013083E2 		add	r3, r3, #1
 2088 0828 10300BE5 		str	r3, [fp, #-16]
 2089              	.L56:
 349:../reversi8_2019.c ****     for (i = 0; i < DIM; i++) // 0 es Norte, 1 NE, 2 E ...
 2090              		.loc 1 349 0 is_stmt 0 discriminator 1
 2091 082c 10301BE5 		ldr	r3, [fp, #-16]
 2092 0830 070053E3 		cmp	r3, #7
 2093 0834 D0FFFFDA 		ble	.L58
 360:../reversi8_2019.c ****         }
 361:../reversi8_2019.c ****     }
 362:../reversi8_2019.c ****     return 0;
 2094              		.loc 1 362 0 is_stmt 1
 2095 0838 0030A0E3 		mov	r3, #0
 363:../reversi8_2019.c **** }
 2096              		.loc 1 363 0
 2097 083c 0300A0E1 		mov	r0, r3
 2098 0840 0CD04BE2 		sub	sp, fp, #12
 2099 0844 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2100 0848 1EFF2FE1 		bx	lr
 2101              	.L60:
 2102              		.align	2
 2103              	.L59:
 2104 084c 00000000 		.word	vSF
 2105 0850 00000000 		.word	vSC
 2106 0854 80000000 		.word	jugada_valida
 2107              		.cfi_endproc
 2108              	.LFE13:
 2110              		.align	2
 2111              		.global	elegir_mov
 2113              	elegir_mov:
 2114              	.LFB14:
 364:../reversi8_2019.c **** 
 365:../reversi8_2019.c **** /////////////////////////////////////////////////////////////////////////////////
 366:../reversi8_2019.c **** // Recorre todo el tablero comprobando en cada posición si se puede mover
 367:../reversi8_2019.c **** // En caso afirmativo, consulta la puntuación de la posición y si es la mejor
 368:../reversi8_2019.c **** // que se ha encontrado la guarda
 369:../reversi8_2019.c **** // Al acabar escribe el movimiento seleccionado en f y c
 370:../reversi8_2019.c **** 
 371:../reversi8_2019.c **** // Candidatas
 372:../reversi8_2019.c **** // NO    0
 373:../reversi8_2019.c **** // SI    1
 374:../reversi8_2019.c **** // CASILLA_OCUPADA 2
 375:../reversi8_2019.c **** int elegir_mov(char candidatas[][DIM], char tablero[][DIM], char *f, char *c)
 376:../reversi8_2019.c **** {
 2115              		.loc 1 376 0
 2116              		.cfi_startproc
 2117              		@ Function supports interworking.
 2118              		@ args = 0, pretend = 0, frame = 56
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120 0858 0DC0A0E1 		mov	ip, sp
 2121              	.LCFI28:
 2122              		.cfi_def_cfa_register 12
 2123 085c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2124 0860 04B04CE2 		sub	fp, ip, #4
 2125              		.cfi_offset 14, -8
 2126              		.cfi_offset 13, -12
 2127              		.cfi_offset 11, -16
 2128              	.LCFI29:
 2129              		.cfi_def_cfa 11, 4
 2130 0864 48D04DE2 		sub	sp, sp, #72
 2131 0868 38000BE5 		str	r0, [fp, #-56]
 2132 086c 3C100BE5 		str	r1, [fp, #-60]
 2133 0870 40200BE5 		str	r2, [fp, #-64]
 2134 0874 44300BE5 		str	r3, [fp, #-68]
 377:../reversi8_2019.c ****     int i, j, k, found;
 378:../reversi8_2019.c ****     int mf = -1; // almacena la fila del mejor movimiento encontrado
 2135              		.loc 1 378 0
 2136 0878 0030E0E3 		mvn	r3, #0
 2137 087c 20300BE5 		str	r3, [fp, #-32]
 379:../reversi8_2019.c ****     int mc;      // almacena la columna del mejor movimiento encontrado
 380:../reversi8_2019.c ****     char mejor = 0; // almacena el mejor valor encontrado
 2138              		.loc 1 380 0
 2139 0880 0030A0E3 		mov	r3, #0
 2140 0884 25304BE5 		strb	r3, [fp, #-37]
 381:../reversi8_2019.c ****     int patron, longitud;
 382:../reversi8_2019.c ****     char SF, SC; // cantidades a sumar para movernos en la dirección que toque
 383:../reversi8_2019.c **** 
 384:../reversi8_2019.c ****     // Recorremos todo el tablero comprobando dónde podemos mover
 385:../reversi8_2019.c ****     // Comparamos la puntuación de los movimientos encontrados y nos quedamos con el mejor
 386:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 2141              		.loc 1 386 0
 2142 0888 0030A0E3 		mov	r3, #0
 2143 088c 10300BE5 		str	r3, [fp, #-16]
 2144 0890 600000EA 		b	.L62
 2145              	.L69:
 387:../reversi8_2019.c ****     {
 388:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 2146              		.loc 1 388 0
 2147 0894 0030A0E3 		mov	r3, #0
 2148 0898 14300BE5 		str	r3, [fp, #-20]
 2149 089c 570000EA 		b	.L63
 2150              	.L68:
 389:../reversi8_2019.c ****         {   // indica en qué casillas quizá se pueda mover
 390:../reversi8_2019.c ****             if (candidatas[i][j] == SI)
 2151              		.loc 1 390 0
 2152 08a0 10301BE5 		ldr	r3, [fp, #-16]
 2153 08a4 8331A0E1 		mov	r3, r3, asl #3
 2154 08a8 38201BE5 		ldr	r2, [fp, #-56]
 2155 08ac 032082E0 		add	r2, r2, r3
 2156 08b0 14301BE5 		ldr	r3, [fp, #-20]
 2157 08b4 033082E0 		add	r3, r2, r3
 2158 08b8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2159 08bc 010053E3 		cmp	r3, #1
 2160 08c0 4B00001A 		bne	.L64
 391:../reversi8_2019.c ****             {
 392:../reversi8_2019.c ****                 if (tablero[i][j] == CASILLA_VACIA)
 2161              		.loc 1 392 0
 2162 08c4 10301BE5 		ldr	r3, [fp, #-16]
 2163 08c8 8331A0E1 		mov	r3, r3, asl #3
 2164 08cc 3C201BE5 		ldr	r2, [fp, #-60]
 2165 08d0 032082E0 		add	r2, r2, r3
 2166 08d4 14301BE5 		ldr	r3, [fp, #-20]
 2167 08d8 033082E0 		add	r3, r2, r3
 2168 08dc 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2169 08e0 000053E3 		cmp	r3, #0
 2170 08e4 4200001A 		bne	.L64
 393:../reversi8_2019.c ****                 {
 394:../reversi8_2019.c ****                     found = 0;
 2171              		.loc 1 394 0
 2172 08e8 0030A0E3 		mov	r3, #0
 2173 08ec 1C300BE5 		str	r3, [fp, #-28]
 395:../reversi8_2019.c ****                     k = 0;
 2174              		.loc 1 395 0
 2175 08f0 0030A0E3 		mov	r3, #0
 2176 08f4 18300BE5 		str	r3, [fp, #-24]
 396:../reversi8_2019.c **** 
 397:../reversi8_2019.c ****                     // en este bucle comprobamos si es un movimiento válido
 398:../reversi8_2019.c ****                     // (es decir si implica voltear en alguna dirección)
 399:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 2177              		.loc 1 399 0
 2178 08f8 370000EA 		b	.L65
 2179              	.L67:
 400:../reversi8_2019.c ****                     {
 401:../reversi8_2019.c ****                         SF = vSF[k];    // k representa la dirección que miramos
 2180              		.loc 1 401 0
 2181 08fc 54219FE5 		ldr	r2, .L70
 2182 0900 18301BE5 		ldr	r3, [fp, #-24]
 2183 0904 033082E0 		add	r3, r2, r3
 2184 0908 0030D3E5 		ldrb	r3, [r3, #0]
 2185 090c 26304BE5 		strb	r3, [fp, #-38]
 402:../reversi8_2019.c ****                         SC = vSC[k];    // 1 es norte, 2 NE, 3 E ...
 2186              		.loc 1 402 0
 2187 0910 44219FE5 		ldr	r2, .L70+4
 2188 0914 18301BE5 		ldr	r3, [fp, #-24]
 2189 0918 033082E0 		add	r3, r2, r3
 2190 091c 0030D3E5 		ldrb	r3, [r3, #0]
 2191 0920 27304BE5 		strb	r3, [fp, #-39]
 403:../reversi8_2019.c **** 
 404:../reversi8_2019.c ****                         // nos dice qué hay que voltear en cada dirección
 405:../reversi8_2019.c ****                         longitud = 0;
 2192              		.loc 1 405 0
 2193 0924 0030A0E3 		mov	r3, #0
 2194 0928 30300BE5 		str	r3, [fp, #-48]
 406:../reversi8_2019.c ****                         patron = patron_volteo(tablero, &longitud, i, j, SF, SC, FICHA_BLANCA);
 2195              		.loc 1 406 0
 2196 092c 10301BE5 		ldr	r3, [fp, #-16]
 2197 0930 FF2003E2 		and	r2, r3, #255
 2198 0934 14301BE5 		ldr	r3, [fp, #-20]
 2199 0938 FF3003E2 		and	r3, r3, #255
 2200 093c 30104BE2 		sub	r1, fp, #48
 2201 0940 26005BE5 		ldrb	r0, [fp, #-38]	@ zero_extendqisi2
 2202 0944 00008DE5 		str	r0, [sp, #0]
 2203 0948 27005BE5 		ldrb	r0, [fp, #-39]	@ zero_extendqisi2
 2204 094c 04008DE5 		str	r0, [sp, #4]
 2205 0950 0100A0E3 		mov	r0, #1
 2206 0954 08008DE5 		str	r0, [sp, #8]
 2207 0958 3C001BE5 		ldr	r0, [fp, #-60]
 2208 095c FEFFFFEB 		bl	patron_volteo
 2209 0960 2C000BE5 		str	r0, [fp, #-44]
 407:../reversi8_2019.c ****                         if (patron == PATRON_ENCONTRADO)
 2210              		.loc 1 407 0
 2211 0964 2C301BE5 		ldr	r3, [fp, #-44]
 2212 0968 010053E3 		cmp	r3, #1
 2213 096c 1700001A 		bne	.L66
 408:../reversi8_2019.c ****                         {
 409:../reversi8_2019.c ****                             found = 1;
 2214              		.loc 1 409 0
 2215 0970 0130A0E3 		mov	r3, #1
 2216 0974 1C300BE5 		str	r3, [fp, #-28]
 410:../reversi8_2019.c ****                             if (tabla_valor[i][j] > mejor)
 2217              		.loc 1 410 0
 2218 0978 E0209FE5 		ldr	r2, .L70+8
 2219 097c 10301BE5 		ldr	r3, [fp, #-16]
 2220 0980 8311A0E1 		mov	r1, r3, asl #3
 2221 0984 14301BE5 		ldr	r3, [fp, #-20]
 2222 0988 033081E0 		add	r3, r1, r3
 2223 098c 033082E0 		add	r3, r2, r3
 2224 0990 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2225 0994 25205BE5 		ldrb	r2, [fp, #-37]	@ zero_extendqisi2
 2226 0998 030052E1 		cmp	r2, r3
 2227 099c 0B00002A 		bcs	.L66
 411:../reversi8_2019.c ****                             {
 412:../reversi8_2019.c ****                                 mf = i;
 2228              		.loc 1 412 0
 2229 09a0 10301BE5 		ldr	r3, [fp, #-16]
 2230 09a4 20300BE5 		str	r3, [fp, #-32]
 413:../reversi8_2019.c ****                                 mc = j;
 2231              		.loc 1 413 0
 2232 09a8 14301BE5 		ldr	r3, [fp, #-20]
 2233 09ac 24300BE5 		str	r3, [fp, #-36]
 414:../reversi8_2019.c ****                                 mejor = tabla_valor[i][j];
 2234              		.loc 1 414 0
 2235 09b0 A8209FE5 		ldr	r2, .L70+8
 2236 09b4 10301BE5 		ldr	r3, [fp, #-16]
 2237 09b8 8311A0E1 		mov	r1, r3, asl #3
 2238 09bc 14301BE5 		ldr	r3, [fp, #-20]
 2239 09c0 033081E0 		add	r3, r1, r3
 2240 09c4 033082E0 		add	r3, r2, r3
 2241 09c8 0030D3E5 		ldrb	r3, [r3, #0]
 2242 09cc 25304BE5 		strb	r3, [fp, #-37]
 2243              	.L66:
 415:../reversi8_2019.c ****                             }
 416:../reversi8_2019.c ****                         }
 417:../reversi8_2019.c ****                         k++;
 2244              		.loc 1 417 0
 2245 09d0 18301BE5 		ldr	r3, [fp, #-24]
 2246 09d4 013083E2 		add	r3, r3, #1
 2247 09d8 18300BE5 		str	r3, [fp, #-24]
 2248              	.L65:
 399:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 2249              		.loc 1 399 0 discriminator 1
 2250 09dc 1C301BE5 		ldr	r3, [fp, #-28]
 2251 09e0 000053E3 		cmp	r3, #0
 2252 09e4 0200001A 		bne	.L64
 399:../reversi8_2019.c ****                     while ((found == 0) && (k < DIM))
 2253              		.loc 1 399 0 is_stmt 0 discriminator 2
 2254 09e8 18301BE5 		ldr	r3, [fp, #-24]
 2255 09ec 070053E3 		cmp	r3, #7
 2256 09f0 C1FFFFDA 		ble	.L67
 2257              	.L64:
 388:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 2258              		.loc 1 388 0 is_stmt 1
 2259 09f4 14301BE5 		ldr	r3, [fp, #-20]
 2260 09f8 013083E2 		add	r3, r3, #1
 2261 09fc 14300BE5 		str	r3, [fp, #-20]
 2262              	.L63:
 388:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 2263              		.loc 1 388 0 is_stmt 0 discriminator 1
 2264 0a00 14301BE5 		ldr	r3, [fp, #-20]
 2265 0a04 070053E3 		cmp	r3, #7
 2266 0a08 A4FFFFDA 		ble	.L68
 386:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 2267              		.loc 1 386 0 is_stmt 1
 2268 0a0c 10301BE5 		ldr	r3, [fp, #-16]
 2269 0a10 013083E2 		add	r3, r3, #1
 2270 0a14 10300BE5 		str	r3, [fp, #-16]
 2271              	.L62:
 386:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 2272              		.loc 1 386 0 is_stmt 0 discriminator 1
 2273 0a18 10301BE5 		ldr	r3, [fp, #-16]
 2274 0a1c 070053E3 		cmp	r3, #7
 2275 0a20 9BFFFFDA 		ble	.L69
 418:../reversi8_2019.c ****                         // si no hemos encontrado nada probamos con la siguiente dirección
 419:../reversi8_2019.c ****                     }
 420:../reversi8_2019.c ****                 }
 421:../reversi8_2019.c ****             }
 422:../reversi8_2019.c ****         }
 423:../reversi8_2019.c ****     }
 424:../reversi8_2019.c ****     *f = (char) mf;
 2276              		.loc 1 424 0 is_stmt 1
 2277 0a24 20301BE5 		ldr	r3, [fp, #-32]
 2278 0a28 FF2003E2 		and	r2, r3, #255
 2279 0a2c 40301BE5 		ldr	r3, [fp, #-64]
 2280 0a30 0020C3E5 		strb	r2, [r3, #0]
 425:../reversi8_2019.c ****     *c = (char) mc;
 2281              		.loc 1 425 0
 2282 0a34 24301BE5 		ldr	r3, [fp, #-36]
 2283 0a38 FF2003E2 		and	r2, r3, #255
 2284 0a3c 44301BE5 		ldr	r3, [fp, #-68]
 2285 0a40 0020C3E5 		strb	r2, [r3, #0]
 426:../reversi8_2019.c ****     // si no se ha encontrado una posición válida devuelve -1
 427:../reversi8_2019.c ****     return mf;
 2286              		.loc 1 427 0
 2287 0a44 20301BE5 		ldr	r3, [fp, #-32]
 428:../reversi8_2019.c **** }
 2288              		.loc 1 428 0
 2289 0a48 0300A0E1 		mov	r0, r3
 2290 0a4c 0CD04BE2 		sub	sp, fp, #12
 2291 0a50 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2292 0a54 1EFF2FE1 		bx	lr
 2293              	.L71:
 2294              		.align	2
 2295              	.L70:
 2296 0a58 00000000 		.word	vSF
 2297 0a5c 00000000 		.word	vSC
 2298 0a60 00000000 		.word	tabla_valor
 2299              		.cfi_endproc
 2300              	.LFE14:
 2302              		.align	2
 2303              		.global	contar
 2305              	contar:
 2306              	.LFB15:
 429:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 430:../reversi8_2019.c **** // Cuenta el número de fichas de cada color.
 431:../reversi8_2019.c **** // Los guarda en la dirección b (blancas) y n (negras)
 432:../reversi8_2019.c **** void contar(char tablero[][DIM], int *b, int *n)
 433:../reversi8_2019.c **** {
 2307              		.loc 1 433 0
 2308              		.cfi_startproc
 2309              		@ Function supports interworking.
 2310              		@ args = 0, pretend = 0, frame = 24
 2311              		@ frame_needed = 1, uses_anonymous_args = 0
 2312 0a64 0DC0A0E1 		mov	ip, sp
 2313              	.LCFI30:
 2314              		.cfi_def_cfa_register 12
 2315 0a68 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2316 0a6c 04B04CE2 		sub	fp, ip, #4
 2317              		.cfi_offset 14, -8
 2318              		.cfi_offset 13, -12
 2319              		.cfi_offset 11, -16
 2320              	.LCFI31:
 2321              		.cfi_def_cfa 11, 4
 2322 0a70 18D04DE2 		sub	sp, sp, #24
 2323 0a74 18000BE5 		str	r0, [fp, #-24]
 2324 0a78 1C100BE5 		str	r1, [fp, #-28]
 2325 0a7c 20200BE5 		str	r2, [fp, #-32]
 434:../reversi8_2019.c ****     int i,j;
 435:../reversi8_2019.c **** 
 436:../reversi8_2019.c ****     *b = 0;
 2326              		.loc 1 436 0
 2327 0a80 1C301BE5 		ldr	r3, [fp, #-28]
 2328 0a84 0020A0E3 		mov	r2, #0
 2329 0a88 002083E5 		str	r2, [r3, #0]
 437:../reversi8_2019.c ****     *n = 0;
 2330              		.loc 1 437 0
 2331 0a8c 20301BE5 		ldr	r3, [fp, #-32]
 2332 0a90 0020A0E3 		mov	r2, #0
 2333 0a94 002083E5 		str	r2, [r3, #0]
 438:../reversi8_2019.c **** 
 439:../reversi8_2019.c ****     // recorremos todo el tablero contando las fichas de cada color
 440:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 2334              		.loc 1 440 0
 2335 0a98 0030A0E3 		mov	r3, #0
 2336 0a9c 10300BE5 		str	r3, [fp, #-16]
 2337 0aa0 280000EA 		b	.L73
 2338              	.L78:
 441:../reversi8_2019.c ****     {
 442:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 2339              		.loc 1 442 0
 2340 0aa4 0030A0E3 		mov	r3, #0
 2341 0aa8 14300BE5 		str	r3, [fp, #-20]
 2342 0aac 1F0000EA 		b	.L74
 2343              	.L77:
 443:../reversi8_2019.c ****         {
 444:../reversi8_2019.c ****             if (tablero[i][j] == FICHA_BLANCA)
 2344              		.loc 1 444 0
 2345 0ab0 10301BE5 		ldr	r3, [fp, #-16]
 2346 0ab4 8331A0E1 		mov	r3, r3, asl #3
 2347 0ab8 18201BE5 		ldr	r2, [fp, #-24]
 2348 0abc 032082E0 		add	r2, r2, r3
 2349 0ac0 14301BE5 		ldr	r3, [fp, #-20]
 2350 0ac4 033082E0 		add	r3, r2, r3
 2351 0ac8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2352 0acc 010053E3 		cmp	r3, #1
 2353 0ad0 0500001A 		bne	.L75
 445:../reversi8_2019.c ****             {
 446:../reversi8_2019.c ****                 (*b)++;
 2354              		.loc 1 446 0
 2355 0ad4 1C301BE5 		ldr	r3, [fp, #-28]
 2356 0ad8 003093E5 		ldr	r3, [r3, #0]
 2357 0adc 012083E2 		add	r2, r3, #1
 2358 0ae0 1C301BE5 		ldr	r3, [fp, #-28]
 2359 0ae4 002083E5 		str	r2, [r3, #0]
 2360 0ae8 0D0000EA 		b	.L76
 2361              	.L75:
 447:../reversi8_2019.c ****             }
 448:../reversi8_2019.c ****             else if (tablero[i][j] == FICHA_NEGRA)
 2362              		.loc 1 448 0
 2363 0aec 10301BE5 		ldr	r3, [fp, #-16]
 2364 0af0 8331A0E1 		mov	r3, r3, asl #3
 2365 0af4 18201BE5 		ldr	r2, [fp, #-24]
 2366 0af8 032082E0 		add	r2, r2, r3
 2367 0afc 14301BE5 		ldr	r3, [fp, #-20]
 2368 0b00 033082E0 		add	r3, r2, r3
 2369 0b04 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2370 0b08 020053E3 		cmp	r3, #2
 2371 0b0c 0400001A 		bne	.L76
 449:../reversi8_2019.c ****             {
 450:../reversi8_2019.c ****                 (*n)++;
 2372              		.loc 1 450 0
 2373 0b10 20301BE5 		ldr	r3, [fp, #-32]
 2374 0b14 003093E5 		ldr	r3, [r3, #0]
 2375 0b18 012083E2 		add	r2, r3, #1
 2376 0b1c 20301BE5 		ldr	r3, [fp, #-32]
 2377 0b20 002083E5 		str	r2, [r3, #0]
 2378              	.L76:
 442:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 2379              		.loc 1 442 0
 2380 0b24 14301BE5 		ldr	r3, [fp, #-20]
 2381 0b28 013083E2 		add	r3, r3, #1
 2382 0b2c 14300BE5 		str	r3, [fp, #-20]
 2383              	.L74:
 442:../reversi8_2019.c ****         for (j=0; j<DIM; j++)
 2384              		.loc 1 442 0 is_stmt 0 discriminator 1
 2385 0b30 14301BE5 		ldr	r3, [fp, #-20]
 2386 0b34 070053E3 		cmp	r3, #7
 2387 0b38 DCFFFFDA 		ble	.L77
 440:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 2388              		.loc 1 440 0 is_stmt 1
 2389 0b3c 10301BE5 		ldr	r3, [fp, #-16]
 2390 0b40 013083E2 		add	r3, r3, #1
 2391 0b44 10300BE5 		str	r3, [fp, #-16]
 2392              	.L73:
 440:../reversi8_2019.c ****     for (i=0; i<DIM; i++)
 2393              		.loc 1 440 0 is_stmt 0 discriminator 1
 2394 0b48 10301BE5 		ldr	r3, [fp, #-16]
 2395 0b4c 070053E3 		cmp	r3, #7
 2396 0b50 D3FFFFDA 		ble	.L78
 451:../reversi8_2019.c ****             }
 452:../reversi8_2019.c ****         }
 453:../reversi8_2019.c ****     }
 454:../reversi8_2019.c **** }
 2397              		.loc 1 454 0 is_stmt 1
 2398 0b54 0CD04BE2 		sub	sp, fp, #12
 2399 0b58 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2400 0b5c 1EFF2FE1 		bx	lr
 2401              		.cfi_endproc
 2402              	.LFE15:
 2404              		.align	2
 2405              		.global	actualizar_candidatas
 2407              	actualizar_candidatas:
 2408              	.LFB16:
 455:../reversi8_2019.c **** 
 456:../reversi8_2019.c **** void actualizar_candidatas(char candidatas[][DIM], char f, char c)
 457:../reversi8_2019.c **** {
 2409              		.loc 1 457 0
 2410              		.cfi_startproc
 2411              		@ Function supports interworking.
 2412              		@ args = 0, pretend = 0, frame = 8
 2413              		@ frame_needed = 1, uses_anonymous_args = 0
 2414 0b60 0DC0A0E1 		mov	ip, sp
 2415              	.LCFI32:
 2416              		.cfi_def_cfa_register 12
 2417 0b64 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2418 0b68 04B04CE2 		sub	fp, ip, #4
 2419              		.cfi_offset 14, -8
 2420              		.cfi_offset 13, -12
 2421              		.cfi_offset 11, -16
 2422              	.LCFI33:
 2423              		.cfi_def_cfa 11, 4
 2424 0b6c 08D04DE2 		sub	sp, sp, #8
 2425 0b70 10000BE5 		str	r0, [fp, #-16]
 2426 0b74 0230A0E1 		mov	r3, r2
 2427 0b78 0120A0E1 		mov	r2, r1
 2428 0b7c 11204BE5 		strb	r2, [fp, #-17]
 2429 0b80 12304BE5 		strb	r3, [fp, #-18]
 458:../reversi8_2019.c ****     // donde ya se ha colocado no se puede volver a colocar
 459:../reversi8_2019.c ****     // En las posiciones alrededor sí
 460:../reversi8_2019.c ****     candidatas[f][c] = CASILLA_OCUPADA;
 2430              		.loc 1 460 0
 2431 0b84 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2432 0b88 8331A0E1 		mov	r3, r3, asl #3
 2433 0b8c 10201BE5 		ldr	r2, [fp, #-16]
 2434 0b90 032082E0 		add	r2, r2, r3
 2435 0b94 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2436 0b98 0210A0E3 		mov	r1, #2
 2437 0b9c 0310C2E7 		strb	r1, [r2, r3]
 461:../reversi8_2019.c ****     if (f > 0)
 2438              		.loc 1 461 0
 2439 0ba0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2440 0ba4 000053E3 		cmp	r3, #0
 2441 0ba8 3C00000A 		beq	.L80
 462:../reversi8_2019.c ****     {
 463:../reversi8_2019.c ****         if (candidatas[f-1][c] != CASILLA_OCUPADA)
 2442              		.loc 1 463 0
 2443 0bac 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2444 0bb0 013043E2 		sub	r3, r3, #1
 2445 0bb4 8331A0E1 		mov	r3, r3, asl #3
 2446 0bb8 10201BE5 		ldr	r2, [fp, #-16]
 2447 0bbc 032082E0 		add	r2, r2, r3
 2448 0bc0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2449 0bc4 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2450 0bc8 020053E3 		cmp	r3, #2
 2451 0bcc 0700000A 		beq	.L81
 464:../reversi8_2019.c ****             candidatas[f-1][c] = SI;
 2452              		.loc 1 464 0
 2453 0bd0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2454 0bd4 013043E2 		sub	r3, r3, #1
 2455 0bd8 8331A0E1 		mov	r3, r3, asl #3
 2456 0bdc 10201BE5 		ldr	r2, [fp, #-16]
 2457 0be0 032082E0 		add	r2, r2, r3
 2458 0be4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2459 0be8 0110A0E3 		mov	r1, #1
 2460 0bec 0310C2E7 		strb	r1, [r2, r3]
 2461              	.L81:
 465:../reversi8_2019.c **** 
 466:../reversi8_2019.c ****         if ((c > 0) && (candidatas[f-1][c-1] != CASILLA_OCUPADA))
 2462              		.loc 1 466 0
 2463 0bf0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2464 0bf4 000053E3 		cmp	r3, #0
 2465 0bf8 1200000A 		beq	.L82
 2466              		.loc 1 466 0 is_stmt 0 discriminator 1
 2467 0bfc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2468 0c00 013043E2 		sub	r3, r3, #1
 2469 0c04 8331A0E1 		mov	r3, r3, asl #3
 2470 0c08 10201BE5 		ldr	r2, [fp, #-16]
 2471 0c0c 032082E0 		add	r2, r2, r3
 2472 0c10 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2473 0c14 013043E2 		sub	r3, r3, #1
 2474 0c18 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2475 0c1c 020053E3 		cmp	r3, #2
 2476 0c20 0800000A 		beq	.L82
 467:../reversi8_2019.c ****             candidatas[f-1][c-1] = SI;
 2477              		.loc 1 467 0 is_stmt 1
 2478 0c24 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2479 0c28 013043E2 		sub	r3, r3, #1
 2480 0c2c 8331A0E1 		mov	r3, r3, asl #3
 2481 0c30 10201BE5 		ldr	r2, [fp, #-16]
 2482 0c34 032082E0 		add	r2, r2, r3
 2483 0c38 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2484 0c3c 013043E2 		sub	r3, r3, #1
 2485 0c40 0110A0E3 		mov	r1, #1
 2486 0c44 0310C2E7 		strb	r1, [r2, r3]
 2487              	.L82:
 468:../reversi8_2019.c **** 
 469:../reversi8_2019.c ****         if ((c < 7) && (candidatas[f-1][c+1] != CASILLA_OCUPADA))
 2488              		.loc 1 469 0
 2489 0c48 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2490 0c4c 060053E3 		cmp	r3, #6
 2491 0c50 1200008A 		bhi	.L80
 2492              		.loc 1 469 0 is_stmt 0 discriminator 1
 2493 0c54 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2494 0c58 013043E2 		sub	r3, r3, #1
 2495 0c5c 8331A0E1 		mov	r3, r3, asl #3
 2496 0c60 10201BE5 		ldr	r2, [fp, #-16]
 2497 0c64 032082E0 		add	r2, r2, r3
 2498 0c68 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2499 0c6c 013083E2 		add	r3, r3, #1
 2500 0c70 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2501 0c74 020053E3 		cmp	r3, #2
 2502 0c78 0800000A 		beq	.L80
 470:../reversi8_2019.c ****             candidatas[f-1][c+1] = SI;
 2503              		.loc 1 470 0 is_stmt 1
 2504 0c7c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2505 0c80 013043E2 		sub	r3, r3, #1
 2506 0c84 8331A0E1 		mov	r3, r3, asl #3
 2507 0c88 10201BE5 		ldr	r2, [fp, #-16]
 2508 0c8c 032082E0 		add	r2, r2, r3
 2509 0c90 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2510 0c94 013083E2 		add	r3, r3, #1
 2511 0c98 0110A0E3 		mov	r1, #1
 2512 0c9c 0310C2E7 		strb	r1, [r2, r3]
 2513              	.L80:
 471:../reversi8_2019.c ****     }
 472:../reversi8_2019.c ****     if (f < 7)
 2514              		.loc 1 472 0
 2515 0ca0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2516 0ca4 060053E3 		cmp	r3, #6
 2517 0ca8 3C00008A 		bhi	.L83
 473:../reversi8_2019.c ****     {
 474:../reversi8_2019.c ****         if (candidatas[f+1][c] != CASILLA_OCUPADA)
 2518              		.loc 1 474 0
 2519 0cac 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2520 0cb0 013083E2 		add	r3, r3, #1
 2521 0cb4 8331A0E1 		mov	r3, r3, asl #3
 2522 0cb8 10201BE5 		ldr	r2, [fp, #-16]
 2523 0cbc 032082E0 		add	r2, r2, r3
 2524 0cc0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2525 0cc4 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2526 0cc8 020053E3 		cmp	r3, #2
 2527 0ccc 0700000A 		beq	.L84
 475:../reversi8_2019.c ****             candidatas[f+1][c] = SI;
 2528              		.loc 1 475 0
 2529 0cd0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2530 0cd4 013083E2 		add	r3, r3, #1
 2531 0cd8 8331A0E1 		mov	r3, r3, asl #3
 2532 0cdc 10201BE5 		ldr	r2, [fp, #-16]
 2533 0ce0 032082E0 		add	r2, r2, r3
 2534 0ce4 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2535 0ce8 0110A0E3 		mov	r1, #1
 2536 0cec 0310C2E7 		strb	r1, [r2, r3]
 2537              	.L84:
 476:../reversi8_2019.c **** 
 477:../reversi8_2019.c ****         if ((c > 0) && (candidatas[f+1][c-1] != CASILLA_OCUPADA))
 2538              		.loc 1 477 0
 2539 0cf0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2540 0cf4 000053E3 		cmp	r3, #0
 2541 0cf8 1200000A 		beq	.L85
 2542              		.loc 1 477 0 is_stmt 0 discriminator 1
 2543 0cfc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2544 0d00 013083E2 		add	r3, r3, #1
 2545 0d04 8331A0E1 		mov	r3, r3, asl #3
 2546 0d08 10201BE5 		ldr	r2, [fp, #-16]
 2547 0d0c 032082E0 		add	r2, r2, r3
 2548 0d10 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2549 0d14 013043E2 		sub	r3, r3, #1
 2550 0d18 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2551 0d1c 020053E3 		cmp	r3, #2
 2552 0d20 0800000A 		beq	.L85
 478:../reversi8_2019.c ****             candidatas[f+1][c-1] = SI;
 2553              		.loc 1 478 0 is_stmt 1
 2554 0d24 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2555 0d28 013083E2 		add	r3, r3, #1
 2556 0d2c 8331A0E1 		mov	r3, r3, asl #3
 2557 0d30 10201BE5 		ldr	r2, [fp, #-16]
 2558 0d34 032082E0 		add	r2, r2, r3
 2559 0d38 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2560 0d3c 013043E2 		sub	r3, r3, #1
 2561 0d40 0110A0E3 		mov	r1, #1
 2562 0d44 0310C2E7 		strb	r1, [r2, r3]
 2563              	.L85:
 479:../reversi8_2019.c **** 
 480:../reversi8_2019.c ****         if ((c < 7) && (candidatas[f+1][c+1] != CASILLA_OCUPADA))
 2564              		.loc 1 480 0
 2565 0d48 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2566 0d4c 060053E3 		cmp	r3, #6
 2567 0d50 1200008A 		bhi	.L83
 2568              		.loc 1 480 0 is_stmt 0 discriminator 1
 2569 0d54 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2570 0d58 013083E2 		add	r3, r3, #1
 2571 0d5c 8331A0E1 		mov	r3, r3, asl #3
 2572 0d60 10201BE5 		ldr	r2, [fp, #-16]
 2573 0d64 032082E0 		add	r2, r2, r3
 2574 0d68 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2575 0d6c 013083E2 		add	r3, r3, #1
 2576 0d70 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2577 0d74 020053E3 		cmp	r3, #2
 2578 0d78 0800000A 		beq	.L83
 481:../reversi8_2019.c ****             candidatas[f+1][c+1] = SI;
 2579              		.loc 1 481 0 is_stmt 1
 2580 0d7c 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2581 0d80 013083E2 		add	r3, r3, #1
 2582 0d84 8331A0E1 		mov	r3, r3, asl #3
 2583 0d88 10201BE5 		ldr	r2, [fp, #-16]
 2584 0d8c 032082E0 		add	r2, r2, r3
 2585 0d90 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2586 0d94 013083E2 		add	r3, r3, #1
 2587 0d98 0110A0E3 		mov	r1, #1
 2588 0d9c 0310C2E7 		strb	r1, [r2, r3]
 2589              	.L83:
 482:../reversi8_2019.c ****     }
 483:../reversi8_2019.c ****     if ((c > 0) && (candidatas[f][c-1] != CASILLA_OCUPADA))
 2590              		.loc 1 483 0
 2591 0da0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2592 0da4 000053E3 		cmp	r3, #0
 2593 0da8 1000000A 		beq	.L86
 2594              		.loc 1 483 0 is_stmt 0 discriminator 1
 2595 0dac 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2596 0db0 8331A0E1 		mov	r3, r3, asl #3
 2597 0db4 10201BE5 		ldr	r2, [fp, #-16]
 2598 0db8 032082E0 		add	r2, r2, r3
 2599 0dbc 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2600 0dc0 013043E2 		sub	r3, r3, #1
 2601 0dc4 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2602 0dc8 020053E3 		cmp	r3, #2
 2603 0dcc 0700000A 		beq	.L86
 484:../reversi8_2019.c ****         candidatas[f][c-1] = SI;
 2604              		.loc 1 484 0 is_stmt 1
 2605 0dd0 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2606 0dd4 8331A0E1 		mov	r3, r3, asl #3
 2607 0dd8 10201BE5 		ldr	r2, [fp, #-16]
 2608 0ddc 032082E0 		add	r2, r2, r3
 2609 0de0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2610 0de4 013043E2 		sub	r3, r3, #1
 2611 0de8 0110A0E3 		mov	r1, #1
 2612 0dec 0310C2E7 		strb	r1, [r2, r3]
 2613              	.L86:
 485:../reversi8_2019.c **** 
 486:../reversi8_2019.c ****     if ((c < 7) && (candidatas[f][c+1] != CASILLA_OCUPADA))
 2614              		.loc 1 486 0
 2615 0df0 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2616 0df4 060053E3 		cmp	r3, #6
 2617 0df8 1000008A 		bhi	.L79
 2618              		.loc 1 486 0 is_stmt 0 discriminator 1
 2619 0dfc 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2620 0e00 8331A0E1 		mov	r3, r3, asl #3
 2621 0e04 10201BE5 		ldr	r2, [fp, #-16]
 2622 0e08 032082E0 		add	r2, r2, r3
 2623 0e0c 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2624 0e10 013083E2 		add	r3, r3, #1
 2625 0e14 0330D2E7 		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2626 0e18 020053E3 		cmp	r3, #2
 2627 0e1c 0700000A 		beq	.L79
 487:../reversi8_2019.c ****         candidatas[f][c+1] = SI;
 2628              		.loc 1 487 0 is_stmt 1
 2629 0e20 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2630 0e24 8331A0E1 		mov	r3, r3, asl #3
 2631 0e28 10201BE5 		ldr	r2, [fp, #-16]
 2632 0e2c 032082E0 		add	r2, r2, r3
 2633 0e30 12305BE5 		ldrb	r3, [fp, #-18]	@ zero_extendqisi2
 2634 0e34 013083E2 		add	r3, r3, #1
 2635 0e38 0110A0E3 		mov	r1, #1
 2636 0e3c 0310C2E7 		strb	r1, [r2, r3]
 2637              	.L79:
 488:../reversi8_2019.c **** }
 2638              		.loc 1 488 0
 2639 0e40 0CD04BE2 		sub	sp, fp, #12
 2640 0e44 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2641 0e48 1EFF2FE1 		bx	lr
 2642              		.cfi_endproc
 2643              	.LFE16:
 2645              		.align	2
 2646              		.global	reversi8_inicializar
 2648              	reversi8_inicializar:
 2649              	.LFB17:
 489:../reversi8_2019.c **** 
 490:../reversi8_2019.c **** 
 491:../reversi8_2019.c **** 
 492:../reversi8_2019.c **** 
 493:../reversi8_2019.c **** ////////////////////////////////////////////////////////////////////////////////
 494:../reversi8_2019.c **** // Proceso principal del juego
 495:../reversi8_2019.c **** // Utiliza el tablero,
 496:../reversi8_2019.c **** // y las direcciones en las que indica el jugador la fila y la columna
 497:../reversi8_2019.c **** // y la señal de ready que indica que se han actualizado fila y columna
 498:../reversi8_2019.c **** // tablero, fila, columna y ready son variables globales aunque deberían ser locales de reversi8,
 499:../reversi8_2019.c **** // la razón es que al meterlas en la pila no las pone juntas, y así jugar es más complicado.
 500:../reversi8_2019.c **** // en esta versión el humano lleva negras y la máquina blancas
 501:../reversi8_2019.c **** // no se comprueba que el humano mueva correctamente.
 502:../reversi8_2019.c **** // Sólo que la máquina realice un movimiento correcto.
 503:../reversi8_2019.c **** 
 504:../reversi8_2019.c **** void reversi8_inicializar()
 505:../reversi8_2019.c **** {
 2650              		.loc 1 505 0
 2651              		.cfi_startproc
 2652              		@ Function supports interworking.
 2653              		@ args = 0, pretend = 0, frame = 0
 2654              		@ frame_needed = 1, uses_anonymous_args = 0
 2655 0e4c 0DC0A0E1 		mov	ip, sp
 2656              	.LCFI34:
 2657              		.cfi_def_cfa_register 12
 2658 0e50 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2659 0e54 04B04CE2 		sub	fp, ip, #4
 2660              		.cfi_offset 14, -8
 2661              		.cfi_offset 13, -12
 2662              		.cfi_offset 11, -16
 2663              	.LCFI35:
 2664              		.cfi_def_cfa 11, 4
 506:../reversi8_2019.c **** 	init_table(tablero, candidatas);
 2665              		.loc 1 506 0
 2666 0e58 1C009FE5 		ldr	r0, .L89
 2667 0e5c 1C109FE5 		ldr	r1, .L89+4
 2668 0e60 FEFFFFEB 		bl	init_table
 507:../reversi8_2019.c **** 	fin = 0;
 2669              		.loc 1 507 0
 2670 0e64 18309FE5 		ldr	r3, .L89+8
 2671 0e68 0020A0E3 		mov	r2, #0
 2672 0e6c 002083E5 		str	r2, [r3, #0]
 508:../reversi8_2019.c **** }
 2673              		.loc 1 508 0
 2674 0e70 0CD04BE2 		sub	sp, fp, #12
 2675 0e74 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2676 0e78 1EFF2FE1 		bx	lr
 2677              	.L90:
 2678              		.align	2
 2679              	.L89:
 2680 0e7c 00000000 		.word	tablero
 2681 0e80 40000000 		.word	candidatas
 2682 0e84 00000000 		.word	fin
 2683              		.cfi_endproc
 2684              	.LFE17:
 2686              		.align	2
 2687              		.global	mover_IA
 2689              	mover_IA:
 2690              	.LFB18:
 509:../reversi8_2019.c **** 
 510:../reversi8_2019.c **** void mover_IA()		//TODO Probar
 511:../reversi8_2019.c **** {
 2691              		.loc 1 511 0
 2692              		.cfi_startproc
 2693              		@ Function supports interworking.
 2694              		@ args = 0, pretend = 0, frame = 0
 2695              		@ frame_needed = 1, uses_anonymous_args = 0
 2696 0e88 0DC0A0E1 		mov	ip, sp
 2697              	.LCFI36:
 2698              		.cfi_def_cfa_register 12
 2699 0e8c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2700 0e90 04B04CE2 		sub	fp, ip, #4
 2701              		.cfi_offset 14, -8
 2702              		.cfi_offset 13, -12
 2703              		.cfi_offset 11, -16
 2704              	.LCFI37:
 2705              		.cfi_def_cfa 11, 4
 512:../reversi8_2019.c ****     // escribe el movimiento en las variables globales fila columna
 513:../reversi8_2019.c ****     done = elegir_mov(candidatas, tablero, &f, &c);
 2706              		.loc 1 513 0
 2707 0e94 C4009FE5 		ldr	r0, .L94
 2708 0e98 C4109FE5 		ldr	r1, .L94+4
 2709 0e9c C4209FE5 		ldr	r2, .L94+8
 2710 0ea0 C4309FE5 		ldr	r3, .L94+12
 2711 0ea4 FEFFFFEB 		bl	elegir_mov
 2712 0ea8 0020A0E1 		mov	r2, r0
 2713 0eac BC309FE5 		ldr	r3, .L94+16
 2714 0eb0 002083E5 		str	r2, [r3, #0]
 514:../reversi8_2019.c ****     if (done == -1)
 2715              		.loc 1 514 0
 2716 0eb4 B4309FE5 		ldr	r3, .L94+16
 2717 0eb8 003093E5 		ldr	r3, [r3, #0]
 2718 0ebc 010073E3 		cmn	r3, #1
 2719 0ec0 0300001A 		bne	.L92
 515:../reversi8_2019.c ****     {
 516:../reversi8_2019.c ****          fin = 1;
 2720              		.loc 1 516 0
 2721 0ec4 A8309FE5 		ldr	r3, .L94+20
 2722 0ec8 0120A0E3 		mov	r2, #1
 2723 0ecc 002083E5 		str	r2, [r3, #0]
 2724 0ed0 1B0000EA 		b	.L93
 2725              	.L92:
 517:../reversi8_2019.c ****     }
 518:../reversi8_2019.c ****     else
 519:../reversi8_2019.c ****     {
 520:../reversi8_2019.c ****         tablero[f][c] = FICHA_BLANCA;
 2726              		.loc 1 520 0
 2727 0ed4 8C309FE5 		ldr	r3, .L94+8
 2728 0ed8 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2729 0edc 0310A0E1 		mov	r1, r3
 2730 0ee0 84309FE5 		ldr	r3, .L94+12
 2731 0ee4 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2732 0ee8 74209FE5 		ldr	r2, .L94+4
 2733 0eec 8111A0E1 		mov	r1, r1, asl #3
 2734 0ef0 033081E0 		add	r3, r1, r3
 2735 0ef4 033082E0 		add	r3, r2, r3
 2736 0ef8 0120A0E3 		mov	r2, #1
 2737 0efc 0020C3E5 		strb	r2, [r3, #0]
 521:../reversi8_2019.c ****         actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 2738              		.loc 1 521 0
 2739 0f00 60309FE5 		ldr	r3, .L94+8
 2740 0f04 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2741 0f08 5C309FE5 		ldr	r3, .L94+12
 2742 0f0c 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2743 0f10 4C009FE5 		ldr	r0, .L94+4
 2744 0f14 0210A0E1 		mov	r1, r2
 2745 0f18 0320A0E1 		mov	r2, r3
 2746 0f1c 0130A0E3 		mov	r3, #1
 2747 0f20 FEFFFFEB 		bl	actualizar_tablero
 522:../reversi8_2019.c ****         actualizar_candidatas(candidatas, f, c);
 2748              		.loc 1 522 0
 2749 0f24 3C309FE5 		ldr	r3, .L94+8
 2750 0f28 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2751 0f2c 38309FE5 		ldr	r3, .L94+12
 2752 0f30 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2753 0f34 24009FE5 		ldr	r0, .L94
 2754 0f38 0210A0E1 		mov	r1, r2
 2755 0f3c 0320A0E1 		mov	r2, r3
 2756 0f40 FEFFFFEB 		bl	actualizar_candidatas
 2757              	.L93:
 523:../reversi8_2019.c ****     }
 524:../reversi8_2019.c ****     contar(tablero, &blancas, &negras);
 2758              		.loc 1 524 0
 2759 0f44 18009FE5 		ldr	r0, .L94+4
 2760 0f48 28109FE5 		ldr	r1, .L94+24
 2761 0f4c 28209FE5 		ldr	r2, .L94+28
 2762 0f50 FEFFFFEB 		bl	contar
 525:../reversi8_2019.c **** }
 2763              		.loc 1 525 0
 2764 0f54 0CD04BE2 		sub	sp, fp, #12
 2765 0f58 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2766 0f5c 1EFF2FE1 		bx	lr
 2767              	.L95:
 2768              		.align	2
 2769              	.L94:
 2770 0f60 40000000 		.word	candidatas
 2771 0f64 00000000 		.word	tablero
 2772 0f68 00000000 		.word	f
 2773 0f6c 00000000 		.word	c
 2774 0f70 00000000 		.word	done
 2775 0f74 00000000 		.word	fin
 2776 0f78 00000000 		.word	blancas
 2777 0f7c 00000000 		.word	negras
 2778              		.cfi_endproc
 2779              	.LFE18:
 2781              		.align	2
 2782              		.global	reversi8
 2784              	reversi8:
 2785              	.LFB19:
 526:../reversi8_2019.c **** 
 527:../reversi8_2019.c **** void reversi8()
 528:../reversi8_2019.c **** {
 2786              		.loc 1 528 0
 2787              		.cfi_startproc
 2788              		@ Function supports interworking.
 2789              		@ args = 0, pretend = 0, frame = 0
 2790              		@ frame_needed = 1, uses_anonymous_args = 0
 2791 0f80 0DC0A0E1 		mov	ip, sp
 2792              	.LCFI38:
 2793              		.cfi_def_cfa_register 12
 2794 0f84 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2795 0f88 04B04CE2 		sub	fp, ip, #4
 2796              		.cfi_offset 14, -8
 2797              		.cfi_offset 13, -12
 2798              		.cfi_offset 11, -16
 2799              	.LCFI39:
 2800              		.cfi_def_cfa 11, 4
 529:../reversi8_2019.c **** 	 ////////////////////////////////////////////////////////////////////
 530:../reversi8_2019.c **** 	 // Tablero candidatas: se usa para no explorar todas las posiciones del tablero
 531:../reversi8_2019.c **** 	// sólo se exploran las que están alrededor de las fichas colocadas
 532:../reversi8_2019.c **** 	 ////////////////////////////////////////////////////////////////////
 533:../reversi8_2019.c ****     jugada_valida = 0;
 2801              		.loc 1 533 0
 2802 0f8c 48329FE5 		ldr	r3, .L101
 2803 0f90 0020A0E3 		mov	r2, #0
 2804 0f94 002083E5 		str	r2, [r3, #0]
 534:../reversi8_2019.c **** 	veces_pv = 0;
 2805              		.loc 1 534 0
 2806 0f98 40329FE5 		ldr	r3, .L101+4
 2807 0f9c 0020A0E3 		mov	r2, #0
 2808 0fa0 002083E5 		str	r2, [r3, #0]
 535:../reversi8_2019.c **** 	t_pv = 0;
 2809              		.loc 1 535 0
 2810 0fa4 38329FE5 		ldr	r3, .L101+8
 2811 0fa8 0020A0E3 		mov	r2, #0
 2812 0fac 002083E5 		str	r2, [r3, #0]
 536:../reversi8_2019.c ****     if(fin == 0)
 2813              		.loc 1 536 0
 2814 0fb0 30329FE5 		ldr	r3, .L101+12
 2815 0fb4 003093E5 		ldr	r3, [r3, #0]
 2816 0fb8 000053E3 		cmp	r3, #0
 2817 0fbc 7F00001A 		bne	.L97
 537:../reversi8_2019.c ****     {
 538:../reversi8_2019.c ****         move = 0;
 2818              		.loc 1 538 0
 2819 0fc0 24329FE5 		ldr	r3, .L101+16
 2820 0fc4 0020A0E3 		mov	r2, #0
 2821 0fc8 002083E5 		str	r2, [r3, #0]
 539:../reversi8_2019.c ****         if(ready)
 2822              		.loc 1 539 0
 2823 0fcc 1C329FE5 		ldr	r3, .L101+20
 2824 0fd0 0030D3E5 		ldrb	r3, [r3, #0]
 2825 0fd4 FF3003E2 		and	r3, r3, #255
 2826 0fd8 000053E3 		cmp	r3, #0
 2827 0fdc 7700000A 		beq	.L97
 540:../reversi8_2019.c ****         {
 541:../reversi8_2019.c ****         	ready = 0;
 2828              		.loc 1 541 0
 2829 0fe0 08329FE5 		ldr	r3, .L101+20
 2830 0fe4 0020A0E3 		mov	r2, #0
 2831 0fe8 0020C3E5 		strb	r2, [r3, #0]
 542:../reversi8_2019.c ****         	// si la fila o columna son 8 asumimos que el jugador no puede mover
 543:../reversi8_2019.c ****         	if (((fila) != DIM) && ((columna) != DIM))
 2832              		.loc 1 543 0
 2833 0fec 00329FE5 		ldr	r3, .L101+24
 2834 0ff0 0030D3E5 		ldrb	r3, [r3, #0]
 2835 0ff4 FF3003E2 		and	r3, r3, #255
 2836 0ff8 080053E3 		cmp	r3, #8
 2837 0ffc 3B00000A 		beq	.L98
 2838              		.loc 1 543 0 is_stmt 0 discriminator 1
 2839 1000 F0319FE5 		ldr	r3, .L101+28
 2840 1004 0030D3E5 		ldrb	r3, [r3, #0]
 2841 1008 FF3003E2 		and	r3, r3, #255
 2842 100c 080053E3 		cmp	r3, #8
 2843 1010 3600000A 		beq	.L98
 544:../reversi8_2019.c ****         	{
 545:../reversi8_2019.c ****         		tablero[fila][columna] = FICHA_NEGRA;
 2844              		.loc 1 545 0 is_stmt 1
 2845 1014 D8319FE5 		ldr	r3, .L101+24
 2846 1018 0030D3E5 		ldrb	r3, [r3, #0]
 2847 101c FF3003E2 		and	r3, r3, #255
 2848 1020 0310A0E1 		mov	r1, r3
 2849 1024 CC319FE5 		ldr	r3, .L101+28
 2850 1028 0030D3E5 		ldrb	r3, [r3, #0]
 2851 102c FF3003E2 		and	r3, r3, #255
 2852 1030 C4219FE5 		ldr	r2, .L101+32
 2853 1034 8111A0E1 		mov	r1, r1, asl #3
 2854 1038 033081E0 		add	r3, r1, r3
 2855 103c 033082E0 		add	r3, r2, r3
 2856 1040 0220A0E3 		mov	r2, #2
 2857 1044 0020C3E5 		strb	r2, [r3, #0]
 546:../reversi8_2019.c ****         		actualizar_tablero(tablero, fila, columna, FICHA_NEGRA);
 2858              		.loc 1 546 0
 2859 1048 A4319FE5 		ldr	r3, .L101+24
 2860 104c 0030D3E5 		ldrb	r3, [r3, #0]
 2861 1050 FF2003E2 		and	r2, r3, #255
 2862 1054 9C319FE5 		ldr	r3, .L101+28
 2863 1058 0030D3E5 		ldrb	r3, [r3, #0]
 2864 105c FF3003E2 		and	r3, r3, #255
 2865 1060 94019FE5 		ldr	r0, .L101+32
 2866 1064 0210A0E1 		mov	r1, r2
 2867 1068 0320A0E1 		mov	r2, r3
 2868 106c 0230A0E3 		mov	r3, #2
 2869 1070 FEFFFFEB 		bl	actualizar_tablero
 547:../reversi8_2019.c ****                 if(jugada_valida != 1)
 2870              		.loc 1 547 0
 2871 1074 60319FE5 		ldr	r3, .L101
 2872 1078 003093E5 		ldr	r3, [r3, #0]
 2873 107c 010053E3 		cmp	r3, #1
 2874 1080 0D00000A 		beq	.L99
 548:../reversi8_2019.c ****                 {
 549:../reversi8_2019.c ****                     tablero[fila][columna] = CASILLA_VACIA;
 2875              		.loc 1 549 0
 2876 1084 68319FE5 		ldr	r3, .L101+24
 2877 1088 0030D3E5 		ldrb	r3, [r3, #0]
 2878 108c FF3003E2 		and	r3, r3, #255
 2879 1090 0310A0E1 		mov	r1, r3
 2880 1094 5C319FE5 		ldr	r3, .L101+28
 2881 1098 0030D3E5 		ldrb	r3, [r3, #0]
 2882 109c FF3003E2 		and	r3, r3, #255
 2883 10a0 54219FE5 		ldr	r2, .L101+32
 2884 10a4 8111A0E1 		mov	r1, r1, asl #3
 2885 10a8 033081E0 		add	r3, r1, r3
 2886 10ac 033082E0 		add	r3, r2, r3
 2887 10b0 0020A0E3 		mov	r2, #0
 2888 10b4 0020C3E5 		strb	r2, [r3, #0]
 2889 10b8 0C0000EA 		b	.L98
 2890              	.L99:
 550:../reversi8_2019.c ****                 }
 551:../reversi8_2019.c ****                 else
 552:../reversi8_2019.c ****                 {
 553:../reversi8_2019.c ****                     actualizar_candidatas(candidatas, fila, columna);
 2891              		.loc 1 553 0
 2892 10bc 30319FE5 		ldr	r3, .L101+24
 2893 10c0 0030D3E5 		ldrb	r3, [r3, #0]
 2894 10c4 FF2003E2 		and	r2, r3, #255
 2895 10c8 28319FE5 		ldr	r3, .L101+28
 2896 10cc 0030D3E5 		ldrb	r3, [r3, #0]
 2897 10d0 FF3003E2 		and	r3, r3, #255
 2898 10d4 24019FE5 		ldr	r0, .L101+36
 2899 10d8 0210A0E1 		mov	r1, r2
 2900 10dc 0320A0E1 		mov	r2, r3
 2901 10e0 FEFFFFEB 		bl	actualizar_candidatas
 554:../reversi8_2019.c ****                     move = 1;
 2902              		.loc 1 554 0
 2903 10e4 00319FE5 		ldr	r3, .L101+16
 2904 10e8 0120A0E3 		mov	r2, #1
 2905 10ec 002083E5 		str	r2, [r3, #0]
 2906              	.L98:
 555:../reversi8_2019.c ****                 }
 556:../reversi8_2019.c ****         	}
 557:../reversi8_2019.c ****         	if(jugada_valida == 1)
 2907              		.loc 1 557 0
 2908 10f0 E4309FE5 		ldr	r3, .L101
 2909 10f4 003093E5 		ldr	r3, [r3, #0]
 2910 10f8 010053E3 		cmp	r3, #1
 2911 10fc 2F00001A 		bne	.L97
 558:../reversi8_2019.c ****         	{
 559:../reversi8_2019.c ****         		// escribe el movimiento en las variables globales fila columna
 560:../reversi8_2019.c ****         		done = elegir_mov(candidatas, tablero, &f, &c);
 2912              		.loc 1 560 0
 2913 1100 F8009FE5 		ldr	r0, .L101+36
 2914 1104 F0109FE5 		ldr	r1, .L101+32
 2915 1108 F4209FE5 		ldr	r2, .L101+40
 2916 110c F4309FE5 		ldr	r3, .L101+44
 2917 1110 FEFFFFEB 		bl	elegir_mov
 2918 1114 0020A0E1 		mov	r2, r0
 2919 1118 EC309FE5 		ldr	r3, .L101+48
 2920 111c 002083E5 		str	r2, [r3, #0]
 561:../reversi8_2019.c ****         		if (done == -1)
 2921              		.loc 1 561 0
 2922 1120 E4309FE5 		ldr	r3, .L101+48
 2923 1124 003093E5 		ldr	r3, [r3, #0]
 2924 1128 010073E3 		cmn	r3, #1
 2925 112c 0700001A 		bne	.L100
 562:../reversi8_2019.c ****         		{
 563:../reversi8_2019.c ****         			if (move == 0)
 2926              		.loc 1 563 0
 2927 1130 B4309FE5 		ldr	r3, .L101+16
 2928 1134 003093E5 		ldr	r3, [r3, #0]
 2929 1138 000053E3 		cmp	r3, #0
 2930 113c 1F00001A 		bne	.L97
 564:../reversi8_2019.c ****         			{
 565:../reversi8_2019.c ****         				fin = 1;
 2931              		.loc 1 565 0
 2932 1140 A0309FE5 		ldr	r3, .L101+12
 2933 1144 0120A0E3 		mov	r2, #1
 2934 1148 002083E5 		str	r2, [r3, #0]
 2935 114c 1B0000EA 		b	.L97
 2936              	.L100:
 566:../reversi8_2019.c ****         			}
 567:../reversi8_2019.c ****         		}
 568:../reversi8_2019.c ****         		else
 569:../reversi8_2019.c ****         		{
 570:../reversi8_2019.c ****         			tablero[f][c] = FICHA_BLANCA;
 2937              		.loc 1 570 0
 2938 1150 AC309FE5 		ldr	r3, .L101+40
 2939 1154 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2940 1158 0310A0E1 		mov	r1, r3
 2941 115c A4309FE5 		ldr	r3, .L101+44
 2942 1160 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2943 1164 90209FE5 		ldr	r2, .L101+32
 2944 1168 8111A0E1 		mov	r1, r1, asl #3
 2945 116c 033081E0 		add	r3, r1, r3
 2946 1170 033082E0 		add	r3, r2, r3
 2947 1174 0120A0E3 		mov	r2, #1
 2948 1178 0020C3E5 		strb	r2, [r3, #0]
 571:../reversi8_2019.c ****         			actualizar_tablero(tablero, f, c, FICHA_BLANCA);
 2949              		.loc 1 571 0
 2950 117c 80309FE5 		ldr	r3, .L101+40
 2951 1180 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2952 1184 7C309FE5 		ldr	r3, .L101+44
 2953 1188 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2954 118c 68009FE5 		ldr	r0, .L101+32
 2955 1190 0210A0E1 		mov	r1, r2
 2956 1194 0320A0E1 		mov	r2, r3
 2957 1198 0130A0E3 		mov	r3, #1
 2958 119c FEFFFFEB 		bl	actualizar_tablero
 572:../reversi8_2019.c ****         			actualizar_candidatas(candidatas, f, c);
 2959              		.loc 1 572 0
 2960 11a0 5C309FE5 		ldr	r3, .L101+40
 2961 11a4 0020D3E5 		ldrb	r2, [r3, #0]	@ zero_extendqisi2
 2962 11a8 58309FE5 		ldr	r3, .L101+44
 2963 11ac 0030D3E5 		ldrb	r3, [r3, #0]	@ zero_extendqisi2
 2964 11b0 48009FE5 		ldr	r0, .L101+36
 2965 11b4 0210A0E1 		mov	r1, r2
 2966 11b8 0320A0E1 		mov	r2, r3
 2967 11bc FEFFFFEB 		bl	actualizar_candidatas
 2968              	.L97:
 573:../reversi8_2019.c ****         		}
 574:../reversi8_2019.c ****         	}
 575:../reversi8_2019.c ****         }
 576:../reversi8_2019.c ****     }
 577:../reversi8_2019.c ****     contar(tablero, &blancas, &negras);
 2969              		.loc 1 577 0
 2970 11c0 34009FE5 		ldr	r0, .L101+32
 2971 11c4 44109FE5 		ldr	r1, .L101+52
 2972 11c8 44209FE5 		ldr	r2, .L101+56
 2973 11cc FEFFFFEB 		bl	contar
 578:../reversi8_2019.c **** }
 2974              		.loc 1 578 0
 2975 11d0 0CD04BE2 		sub	sp, fp, #12
 2976 11d4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2977 11d8 1EFF2FE1 		bx	lr
 2978              	.L102:
 2979              		.align	2
 2980              	.L101:
 2981 11dc 80000000 		.word	jugada_valida
 2982 11e0 84000000 		.word	veces_pv
 2983 11e4 88000000 		.word	t_pv
 2984 11e8 00000000 		.word	fin
 2985 11ec 00000000 		.word	move
 2986 11f0 96000000 		.word	ready
 2987 11f4 94000000 		.word	fila
 2988 11f8 95000000 		.word	columna
 2989 11fc 00000000 		.word	tablero
 2990 1200 40000000 		.word	candidatas
 2991 1204 00000000 		.word	f
 2992 1208 00000000 		.word	c
 2993 120c 00000000 		.word	done
 2994 1210 00000000 		.word	blancas
 2995 1214 00000000 		.word	negras
 2996              		.cfi_endproc
 2997              	.LFE19:
 2999              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 reversi8_2019.c
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:997    .rodata:00000000 $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1000   .rodata:00000000 tabla_valor
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1069   .rodata:00000040 vSF
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1082   .rodata:00000048 vSC
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1092   .bss:00000000 $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1093   .bss:00000000 tablero
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1096   .bss:00000040 candidatas
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1099   .bss:00000080 jugada_valida
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1102   .bss:00000084 veces_pv
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1105   .bss:00000088 t_pv
                            *COM*:00000004 done
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1112   .bss:0000008c move
                            *COM*:00000004 blancas
                            *COM*:00000004 negras
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1120   .bss:00000090 fin
                            *COM*:00000001 f
                            *COM*:00000001 c
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1124   .bss:00000094 fila
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1126   .bss:00000095 columna
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1128   .bss:00000096 ready
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1131   .text:00000000 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1134   .text:00000000 obtener_jugada_valida
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1162   .text:00000024 $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1166   .text:00000028 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1169   .text:00000028 obtener_fin
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1228   .text:000000a0 $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1234   .text:000000ac $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1237   .text:000000ac obtener_tablero
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1306   .text:0000014c $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1310   .text:00000150 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1313   .text:00000150 contar_blancas
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1340   .text:00000174 $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1344   .text:00000178 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1347   .text:00000178 contar_negras
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1374   .text:0000019c $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1378   .text:000001a0 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1381   .text:000001a0 reversi_t_pv
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1409   .text:000001c4 $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1413   .text:000001c8 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1416   .text:000001c8 reversi_veces_pv
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1444   .text:000001ec $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1448   .text:000001f0 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1451   .text:000001f0 reversi_procesar
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2784   .text:00000f80 reversi8
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1494   .text:00000244 $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1500   .text:00000250 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1503   .text:00000250 obtener_ficha_en
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1539   .text:00000294 $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1543   .text:00000298 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1546   .text:00000298 init_table
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1713   .text:00000464 ficha_valida
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1788   .text:00000518 patron_volteo
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1936   .text:000006b8 $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1941   .text:000006c0 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:1944   .text:000006c0 voltear
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2009   .text:00000750 actualizar_tablero
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2104   .text:0000084c $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2110   .text:00000858 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2113   .text:00000858 elegir_mov
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2296   .text:00000a58 $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2302   .text:00000a64 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2305   .text:00000a64 contar
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2407   .text:00000b60 actualizar_candidatas
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2648   .text:00000e4c reversi8_inicializar
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2680   .text:00000e7c $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2686   .text:00000e88 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2689   .text:00000e88 mover_IA
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2770   .text:00000f60 $d
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2781   .text:00000f80 $a
C:\Users\pjper\AppData\Local\Temp\cckrznAs.s:2981   .text:000011dc $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
timer2_leer
