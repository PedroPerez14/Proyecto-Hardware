   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"elementos_pantalla.c"
  21              	.Ltext0:
  22              		.file 1 "../elementos_pantalla.c"
 1209              		.align	2
 1210              		.global	pintar_cuadricula
 1212              	pintar_cuadricula:
 1213              	.LFB0:
   1:../elementos_pantalla.c **** /*********************************************************************************************
   2:../elementos_pantalla.c **** * File£º	elementos_pantalla.h
   3:../elementos_pantalla.c **** * Author:	Fernando Peña Bes (756012) y Pedro José Pérez García (756642)
   4:../elementos_pantalla.c **** * Descrip:	Colección de funciones y variables que permiten dibujar en el LCD las pantallas
   5:../elementos_pantalla.c **** * 			que corresponden a la ejecución del juego reversi8 en la placa.
   6:../elementos_pantalla.c **** * History:	A long time ago, in galaxy a far away...
   7:../elementos_pantalla.c **** *********************************************************************************************/
   8:../elementos_pantalla.c **** #include "lcd.h"
   9:../elementos_pantalla.c **** #include "elementos_pantalla.h"
  10:../elementos_pantalla.c **** #include "funciones_itoa.h"
  11:../elementos_pantalla.c **** 
  12:../elementos_pantalla.c **** void pintar_cuadricula()
  13:../elementos_pantalla.c **** {
 1214              		.loc 1 13 0
 1215              		.cfi_startproc
 1216              		@ Function supports interworking.
 1217              		@ args = 0, pretend = 0, frame = 8
 1218              		@ frame_needed = 1, uses_anonymous_args = 0
 1219 0000 0DC0A0E1 		mov	ip, sp
 1220              	.LCFI0:
 1221              		.cfi_def_cfa_register 12
 1222 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1223 0008 04B04CE2 		sub	fp, ip, #4
 1224              		.cfi_offset 14, -8
 1225              		.cfi_offset 13, -12
 1226              		.cfi_offset 11, -16
 1227              	.LCFI1:
 1228              		.cfi_def_cfa 11, 4
 1229 000c 10D04DE2 		sub	sp, sp, #16
  14:../elementos_pantalla.c **** 	volatile int i;
  15:../elementos_pantalla.c **** 	volatile int j;
  16:../elementos_pantalla.c **** 	for(i = 0; i < num_filas; i++)
 1230              		.loc 1 16 0
 1231 0010 0030A0E3 		mov	r3, #0
 1232 0014 10300BE5 		str	r3, [fp, #-16]
 1233 0018 5E0000EA 		b	.L2
 1234              	.L5:
  17:../elementos_pantalla.c **** 	{
  18:../elementos_pantalla.c **** 		for(j = 0; j < num_columnas; j++)
 1235              		.loc 1 18 0
 1236 001c 0030A0E3 		mov	r3, #0
 1237 0020 14300BE5 		str	r3, [fp, #-20]
 1238 0024 550000EA 		b	.L3
 1239              	.L4:
  19:../elementos_pantalla.c **** 		{
  20:../elementos_pantalla.c **** 			Lcd_Draw_Box(100+25*j,20+25*i,125+25*j,45+25*i,BLACK);
 1240              		.loc 1 20 0 discriminator 2
 1241 0028 14301BE5 		ldr	r3, [fp, #-20]
 1242 002c 0338A0E1 		mov	r3, r3, asl #16
 1243 0030 2338A0E1 		mov	r3, r3, lsr #16
 1244 0034 0320A0E1 		mov	r2, r3	@ movhi
 1245 0038 0221A0E1 		mov	r2, r2, asl #2
 1246 003c 033082E0 		add	r3, r2, r3
 1247 0040 0320A0E1 		mov	r2, r3	@ movhi
 1248 0044 0211A0E1 		mov	r1, r2, asl #2
 1249 0048 0320A0E1 		mov	r2, r3	@ movhi
 1250 004c 0130A0E1 		mov	r3, r1	@ movhi
 1251 0050 033082E0 		add	r3, r2, r3
 1252 0054 0338A0E1 		mov	r3, r3, asl #16
 1253 0058 2338A0E1 		mov	r3, r3, lsr #16
 1254 005c 643083E2 		add	r3, r3, #100
 1255 0060 0338A0E1 		mov	r3, r3, asl #16
 1256 0064 2338A0E1 		mov	r3, r3, lsr #16
 1257 0068 0338A0E1 		mov	r3, r3, asl #16
 1258 006c 2308A0E1 		mov	r0, r3, lsr #16
 1259 0070 10301BE5 		ldr	r3, [fp, #-16]
 1260 0074 0338A0E1 		mov	r3, r3, asl #16
 1261 0078 2338A0E1 		mov	r3, r3, lsr #16
 1262 007c 0320A0E1 		mov	r2, r3	@ movhi
 1263 0080 0221A0E1 		mov	r2, r2, asl #2
 1264 0084 033082E0 		add	r3, r2, r3
 1265 0088 0320A0E1 		mov	r2, r3	@ movhi
 1266 008c 0211A0E1 		mov	r1, r2, asl #2
 1267 0090 0320A0E1 		mov	r2, r3	@ movhi
 1268 0094 0130A0E1 		mov	r3, r1	@ movhi
 1269 0098 033082E0 		add	r3, r2, r3
 1270 009c 0338A0E1 		mov	r3, r3, asl #16
 1271 00a0 2338A0E1 		mov	r3, r3, lsr #16
 1272 00a4 143083E2 		add	r3, r3, #20
 1273 00a8 0338A0E1 		mov	r3, r3, asl #16
 1274 00ac 2338A0E1 		mov	r3, r3, lsr #16
 1275 00b0 0338A0E1 		mov	r3, r3, asl #16
 1276 00b4 2318A0E1 		mov	r1, r3, lsr #16
 1277 00b8 14301BE5 		ldr	r3, [fp, #-20]
 1278 00bc 0338A0E1 		mov	r3, r3, asl #16
 1279 00c0 2338A0E1 		mov	r3, r3, lsr #16
 1280 00c4 0320A0E1 		mov	r2, r3	@ movhi
 1281 00c8 0221A0E1 		mov	r2, r2, asl #2
 1282 00cc 033082E0 		add	r3, r2, r3
 1283 00d0 0320A0E1 		mov	r2, r3	@ movhi
 1284 00d4 02C1A0E1 		mov	ip, r2, asl #2
 1285 00d8 0320A0E1 		mov	r2, r3	@ movhi
 1286 00dc 0C30A0E1 		mov	r3, ip	@ movhi
 1287 00e0 033082E0 		add	r3, r2, r3
 1288 00e4 0338A0E1 		mov	r3, r3, asl #16
 1289 00e8 2338A0E1 		mov	r3, r3, lsr #16
 1290 00ec 7D3083E2 		add	r3, r3, #125
 1291 00f0 0338A0E1 		mov	r3, r3, asl #16
 1292 00f4 2338A0E1 		mov	r3, r3, lsr #16
 1293 00f8 0338A0E1 		mov	r3, r3, asl #16
 1294 00fc 2328A0E1 		mov	r2, r3, lsr #16
 1295 0100 10301BE5 		ldr	r3, [fp, #-16]
 1296 0104 0338A0E1 		mov	r3, r3, asl #16
 1297 0108 2338A0E1 		mov	r3, r3, lsr #16
 1298 010c 03C0A0E1 		mov	ip, r3	@ movhi
 1299 0110 0CC1A0E1 		mov	ip, ip, asl #2
 1300 0114 03308CE0 		add	r3, ip, r3
 1301 0118 03C0A0E1 		mov	ip, r3	@ movhi
 1302 011c 0CE1A0E1 		mov	lr, ip, asl #2
 1303 0120 03C0A0E1 		mov	ip, r3	@ movhi
 1304 0124 0E30A0E1 		mov	r3, lr	@ movhi
 1305 0128 03308CE0 		add	r3, ip, r3
 1306 012c 0338A0E1 		mov	r3, r3, asl #16
 1307 0130 2338A0E1 		mov	r3, r3, lsr #16
 1308 0134 2D3083E2 		add	r3, r3, #45
 1309 0138 0338A0E1 		mov	r3, r3, asl #16
 1310 013c 2338A0E1 		mov	r3, r3, lsr #16
 1311 0140 0338A0E1 		mov	r3, r3, asl #16
 1312 0144 2338A0E1 		mov	r3, r3, lsr #16
 1313 0148 0008A0E1 		mov	r0, r0, asl #16
 1314 014c 4008A0E1 		mov	r0, r0, asr #16
 1315 0150 0118A0E1 		mov	r1, r1, asl #16
 1316 0154 4118A0E1 		mov	r1, r1, asr #16
 1317 0158 0228A0E1 		mov	r2, r2, asl #16
 1318 015c 4228A0E1 		mov	r2, r2, asr #16
 1319 0160 0338A0E1 		mov	r3, r3, asl #16
 1320 0164 4338A0E1 		mov	r3, r3, asr #16
 1321 0168 0FC0A0E3 		mov	ip, #15
 1322 016c 00C08DE5 		str	ip, [sp, #0]
 1323 0170 FEFFFFEB 		bl	Lcd_Draw_Box
  18:../elementos_pantalla.c **** 		for(j = 0; j < num_columnas; j++)
 1324              		.loc 1 18 0 discriminator 2
 1325 0174 14301BE5 		ldr	r3, [fp, #-20]
 1326 0178 013083E2 		add	r3, r3, #1
 1327 017c 14300BE5 		str	r3, [fp, #-20]
 1328              	.L3:
  18:../elementos_pantalla.c **** 		for(j = 0; j < num_columnas; j++)
 1329              		.loc 1 18 0 is_stmt 0 discriminator 1
 1330 0180 14301BE5 		ldr	r3, [fp, #-20]
 1331 0184 070053E3 		cmp	r3, #7
 1332 0188 A6FFFFDA 		ble	.L4
  16:../elementos_pantalla.c **** 	for(i = 0; i < num_filas; i++)
 1333              		.loc 1 16 0 is_stmt 1
 1334 018c 10301BE5 		ldr	r3, [fp, #-16]
 1335 0190 013083E2 		add	r3, r3, #1
 1336 0194 10300BE5 		str	r3, [fp, #-16]
 1337              	.L2:
  16:../elementos_pantalla.c **** 	for(i = 0; i < num_filas; i++)
 1338              		.loc 1 16 0 is_stmt 0 discriminator 1
 1339 0198 10301BE5 		ldr	r3, [fp, #-16]
 1340 019c 070053E3 		cmp	r3, #7
 1341 01a0 9DFFFFDA 		ble	.L5
  21:../elementos_pantalla.c **** 		}
  22:../elementos_pantalla.c **** 	}
  23:../elementos_pantalla.c **** }
 1342              		.loc 1 23 0 is_stmt 1
 1343 01a4 0CD04BE2 		sub	sp, fp, #12
 1344 01a8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1345 01ac 1EFF2FE1 		bx	lr
 1346              		.cfi_endproc
 1347              	.LFE0:
 1349              		.align	2
 1350              		.global	pintar_numeros_tablero
 1352              	pintar_numeros_tablero:
 1353              	.LFB1:
  24:../elementos_pantalla.c **** 
  25:../elementos_pantalla.c **** void pintar_numeros_tablero()
  26:../elementos_pantalla.c **** {
 1354              		.loc 1 26 0
 1355              		.cfi_startproc
 1356              		@ Function supports interworking.
 1357              		@ args = 0, pretend = 0, frame = 24
 1358              		@ frame_needed = 1, uses_anonymous_args = 0
 1359 01b0 0DC0A0E1 		mov	ip, sp
 1360              	.LCFI2:
 1361              		.cfi_def_cfa_register 12
 1362 01b4 10D82DE9 		stmfd	sp!, {r4, fp, ip, lr, pc}
 1363 01b8 04B04CE2 		sub	fp, ip, #4
 1364              		.cfi_offset 14, -8
 1365              		.cfi_offset 13, -12
 1366              		.cfi_offset 11, -16
 1367              		.cfi_offset 4, -20
 1368              	.LCFI3:
 1369              		.cfi_def_cfa 11, 4
 1370 01bc 1CD04DE2 		sub	sp, sp, #28
  27:../elementos_pantalla.c **** 	int i;
  28:../elementos_pantalla.c **** 	char buffer[15];
  29:../elementos_pantalla.c **** 	for(i = 0; i < num_filas; i++)
 1371              		.loc 1 29 0
 1372 01c0 0030A0E3 		mov	r3, #0
 1373 01c4 18300BE5 		str	r3, [fp, #-24]
 1374 01c8 380000EA 		b	.L7
 1375              	.L8:
  30:../elementos_pantalla.c **** 	{
  31:../elementos_pantalla.c **** 		Lcd_DspAscII8x16(110 + 25*i, 0,BLACK,itoa(i+1, buffer,10));	//10 para pasar a decimal
 1376              		.loc 1 31 0 discriminator 2
 1377 01cc 18301BE5 		ldr	r3, [fp, #-24]
 1378 01d0 0338A0E1 		mov	r3, r3, asl #16
 1379 01d4 2338A0E1 		mov	r3, r3, lsr #16
 1380 01d8 0320A0E1 		mov	r2, r3	@ movhi
 1381 01dc 0221A0E1 		mov	r2, r2, asl #2
 1382 01e0 033082E0 		add	r3, r2, r3
 1383 01e4 0320A0E1 		mov	r2, r3	@ movhi
 1384 01e8 0211A0E1 		mov	r1, r2, asl #2
 1385 01ec 0320A0E1 		mov	r2, r3	@ movhi
 1386 01f0 0130A0E1 		mov	r3, r1	@ movhi
 1387 01f4 033082E0 		add	r3, r2, r3
 1388 01f8 0338A0E1 		mov	r3, r3, asl #16
 1389 01fc 2338A0E1 		mov	r3, r3, lsr #16
 1390 0200 6E3083E2 		add	r3, r3, #110
 1391 0204 0338A0E1 		mov	r3, r3, asl #16
 1392 0208 2348A0E1 		mov	r4, r3, lsr #16
 1393 020c 18301BE5 		ldr	r3, [fp, #-24]
 1394 0210 012083E2 		add	r2, r3, #1
 1395 0214 28304BE2 		sub	r3, fp, #40
 1396 0218 0200A0E1 		mov	r0, r2
 1397 021c 0310A0E1 		mov	r1, r3
 1398 0220 0A20A0E3 		mov	r2, #10
 1399 0224 FEFFFFEB 		bl	itoa
 1400 0228 0030A0E1 		mov	r3, r0
 1401 022c 0400A0E1 		mov	r0, r4
 1402 0230 0010A0E3 		mov	r1, #0
 1403 0234 0F20A0E3 		mov	r2, #15
 1404 0238 FEFFFFEB 		bl	Lcd_DspAscII8x16
  32:../elementos_pantalla.c **** 		Lcd_DspAscII8x16(310,25 + 25*i,BLACK,itoa(i+1, buffer,10));
 1405              		.loc 1 32 0 discriminator 2
 1406 023c 18301BE5 		ldr	r3, [fp, #-24]
 1407 0240 013083E2 		add	r3, r3, #1
 1408 0244 0338A0E1 		mov	r3, r3, asl #16
 1409 0248 2338A0E1 		mov	r3, r3, lsr #16
 1410 024c 0320A0E1 		mov	r2, r3	@ movhi
 1411 0250 0221A0E1 		mov	r2, r2, asl #2
 1412 0254 033082E0 		add	r3, r2, r3
 1413 0258 0320A0E1 		mov	r2, r3	@ movhi
 1414 025c 0211A0E1 		mov	r1, r2, asl #2
 1415 0260 0320A0E1 		mov	r2, r3	@ movhi
 1416 0264 0130A0E1 		mov	r3, r1	@ movhi
 1417 0268 033082E0 		add	r3, r2, r3
 1418 026c 0338A0E1 		mov	r3, r3, asl #16
 1419 0270 2348A0E1 		mov	r4, r3, lsr #16
 1420 0274 18301BE5 		ldr	r3, [fp, #-24]
 1421 0278 012083E2 		add	r2, r3, #1
 1422 027c 28304BE2 		sub	r3, fp, #40
 1423 0280 0200A0E1 		mov	r0, r2
 1424 0284 0310A0E1 		mov	r1, r3
 1425 0288 0A20A0E3 		mov	r2, #10
 1426 028c FEFFFFEB 		bl	itoa
 1427 0290 0030A0E1 		mov	r3, r0
 1428 0294 2C009FE5 		ldr	r0, .L9
 1429 0298 0410A0E1 		mov	r1, r4
 1430 029c 0F20A0E3 		mov	r2, #15
 1431 02a0 FEFFFFEB 		bl	Lcd_DspAscII8x16
  29:../elementos_pantalla.c **** 	for(i = 0; i < num_filas; i++)
 1432              		.loc 1 29 0 discriminator 2
 1433 02a4 18301BE5 		ldr	r3, [fp, #-24]
 1434 02a8 013083E2 		add	r3, r3, #1
 1435 02ac 18300BE5 		str	r3, [fp, #-24]
 1436              	.L7:
  29:../elementos_pantalla.c **** 	for(i = 0; i < num_filas; i++)
 1437              		.loc 1 29 0 is_stmt 0 discriminator 1
 1438 02b0 18301BE5 		ldr	r3, [fp, #-24]
 1439 02b4 070053E3 		cmp	r3, #7
 1440 02b8 C3FFFFDA 		ble	.L8
  33:../elementos_pantalla.c **** 	}
  34:../elementos_pantalla.c **** }
 1441              		.loc 1 34 0 is_stmt 1
 1442 02bc 10D04BE2 		sub	sp, fp, #16
 1443 02c0 10689DE8 		ldmfd	sp, {r4, fp, sp, lr}
 1444 02c4 1EFF2FE1 		bx	lr
 1445              	.L10:
 1446              		.align	2
 1447              	.L9:
 1448 02c8 36010000 		.word	310
 1449              		.cfi_endproc
 1450              	.LFE1:
 1452              		.section	.rodata
 1453              		.align	2
 1454              	.LC0:
 1455 0000 5469656D 		.ascii	"Tiempo total\000"
 1455      706F2074 
 1455      6F74616C 
 1455      00
 1456 000d 000000   		.align	2
 1457              	.LC1:
 1458 0010 6465206A 		.ascii	"de juego:\000"
 1458      7565676F 
 1458      3A00
 1459 001a 0000     		.align	2
 1460              	.LC2:
 1461 001c 5469656D 		.ascii	"Tiempo para\000"
 1461      706F2070 
 1461      61726100 
 1462              		.align	2
 1463              	.LC3:
 1464 0028 63616C63 		.ascii	"calculos:\000"
 1464      756C6F73 
 1464      3A00
 1465 0032 0000     		.align	2
 1466              	.LC4:
 1467 0034 702E766F 		.ascii	"p.volteo:\000"
 1467      6C74656F 
 1467      3A00
 1468 003e 0000     		.align	2
 1469              	.LC5:
 1470 0040 4E756D65 		.ascii	"Numero inv.\000"
 1470      726F2069 
 1470      6E762E00 
 1471              		.align	2
 1472              	.LC6:
 1473 004c 2D3E2054 		.ascii	"-> TOCA LA PANTALLA PARA HACER TU JUGADA\000"
 1473      4F434120 
 1473      4C412050 
 1473      414E5441 
 1473      4C4C4120 
 1474              		.text
 1475              		.align	2
 1476              		.global	pintar_textos
 1478              	pintar_textos:
 1479              	.LFB2:
  35:../elementos_pantalla.c **** 
  36:../elementos_pantalla.c **** void pintar_textos()
  37:../elementos_pantalla.c **** {
 1480              		.loc 1 37 0
 1481              		.cfi_startproc
 1482              		@ Function supports interworking.
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 1, uses_anonymous_args = 0
 1485 02cc 0DC0A0E1 		mov	ip, sp
 1486              	.LCFI4:
 1487              		.cfi_def_cfa_register 12
 1488 02d0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1489 02d4 04B04CE2 		sub	fp, ip, #4
 1490              		.cfi_offset 14, -8
 1491              		.cfi_offset 13, -12
 1492              		.cfi_offset 11, -16
 1493              	.LCFI5:
 1494              		.cfi_def_cfa 11, 4
  38:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(5,10,BLACK,"Tiempo total");
 1495              		.loc 1 38 0
 1496 02d8 0500A0E3 		mov	r0, #5
 1497 02dc 0A10A0E3 		mov	r1, #10
 1498 02e0 0F20A0E3 		mov	r2, #15
 1499 02e4 AC309FE5 		ldr	r3, .L12
 1500 02e8 FEFFFFEB 		bl	Lcd_DspAscII8x16
  39:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,20,BLACK,"de juego:");
 1501              		.loc 1 39 0
 1502 02ec 1400A0E3 		mov	r0, #20
 1503 02f0 1410A0E3 		mov	r1, #20
 1504 02f4 0F20A0E3 		mov	r2, #15
 1505 02f8 9C309FE5 		ldr	r3, .L12+4
 1506 02fc FEFFFFEB 		bl	Lcd_DspAscII8x16
  40:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(5,60,BLACK,"Tiempo para");
 1507              		.loc 1 40 0
 1508 0300 0500A0E3 		mov	r0, #5
 1509 0304 3C10A0E3 		mov	r1, #60
 1510 0308 0F20A0E3 		mov	r2, #15
 1511 030c 8C309FE5 		ldr	r3, .L12+8
 1512 0310 FEFFFFEB 		bl	Lcd_DspAscII8x16
  41:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,70,BLACK,"calculos:");
 1513              		.loc 1 41 0
 1514 0314 1400A0E3 		mov	r0, #20
 1515 0318 4610A0E3 		mov	r1, #70
 1516 031c 0F20A0E3 		mov	r2, #15
 1517 0320 7C309FE5 		ldr	r3, .L12+12
 1518 0324 FEFFFFEB 		bl	Lcd_DspAscII8x16
  42:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(5,110,BLACK,"Tiempo para");
 1519              		.loc 1 42 0
 1520 0328 0500A0E3 		mov	r0, #5
 1521 032c 6E10A0E3 		mov	r1, #110
 1522 0330 0F20A0E3 		mov	r2, #15
 1523 0334 64309FE5 		ldr	r3, .L12+8
 1524 0338 FEFFFFEB 		bl	Lcd_DspAscII8x16
  43:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,120,BLACK,"p.volteo:");
 1525              		.loc 1 43 0
 1526 033c 1400A0E3 		mov	r0, #20
 1527 0340 7810A0E3 		mov	r1, #120
 1528 0344 0F20A0E3 		mov	r2, #15
 1529 0348 58309FE5 		ldr	r3, .L12+16
 1530 034c FEFFFFEB 		bl	Lcd_DspAscII8x16
  44:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(5,160,BLACK,"Numero inv.");
 1531              		.loc 1 44 0
 1532 0350 0500A0E3 		mov	r0, #5
 1533 0354 A010A0E3 		mov	r1, #160
 1534 0358 0F20A0E3 		mov	r2, #15
 1535 035c 48309FE5 		ldr	r3, .L12+20
 1536 0360 FEFFFFEB 		bl	Lcd_DspAscII8x16
  45:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,170,BLACK,"p.volteo:");
 1537              		.loc 1 45 0
 1538 0364 1400A0E3 		mov	r0, #20
 1539 0368 AA10A0E3 		mov	r1, #170
 1540 036c 0F20A0E3 		mov	r2, #15
 1541 0370 30309FE5 		ldr	r3, .L12+16
 1542 0374 FEFFFFEB 		bl	Lcd_DspAscII8x16
  46:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(0,220,BLACK,"-> TOCA LA PANTALLA PARA HACER TU JUGADA");
 1543              		.loc 1 46 0
 1544 0378 0000A0E3 		mov	r0, #0
 1545 037c DC10A0E3 		mov	r1, #220
 1546 0380 0F20A0E3 		mov	r2, #15
 1547 0384 24309FE5 		ldr	r3, .L12+24
 1548 0388 FEFFFFEB 		bl	Lcd_DspAscII8x16
  47:../elementos_pantalla.c **** }
 1549              		.loc 1 47 0
 1550 038c 0CD04BE2 		sub	sp, fp, #12
 1551 0390 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1552 0394 1EFF2FE1 		bx	lr
 1553              	.L13:
 1554              		.align	2
 1555              	.L12:
 1556 0398 00000000 		.word	.LC0
 1557 039c 10000000 		.word	.LC1
 1558 03a0 1C000000 		.word	.LC2
 1559 03a4 28000000 		.word	.LC3
 1560 03a8 34000000 		.word	.LC4
 1561 03ac 40000000 		.word	.LC5
 1562 03b0 4C000000 		.word	.LC6
 1563              		.cfi_endproc
 1564              	.LFE2:
 1566              		.section	.rodata
 1567 0075 000000   		.align	2
 1568              	.LC7:
 1569 0078 4F00     		.ascii	"O\000"
 1570 007a 0000     		.align	2
 1571              	.LC8:
 1572 007c 5800     		.ascii	"X\000"
 1573 007e 0000     		.align	2
 1574              	.LC9:
 1575 0080 4000     		.ascii	"@\000"
 1576              		.text
 1577              		.align	2
 1578              		.global	pintar_ficha
 1580              	pintar_ficha:
 1581              	.LFB3:
  48:../elementos_pantalla.c **** 
  49:../elementos_pantalla.c **** void pintar_ficha(int fila, int col, enum estado_casilla color)
  50:../elementos_pantalla.c **** {
 1582              		.loc 1 50 0
 1583              		.cfi_startproc
 1584              		@ Function supports interworking.
 1585              		@ args = 0, pretend = 0, frame = 16
 1586              		@ frame_needed = 1, uses_anonymous_args = 0
 1587 03b4 0DC0A0E1 		mov	ip, sp
 1588              	.LCFI6:
 1589              		.cfi_def_cfa_register 12
 1590 03b8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1591 03bc 04B04CE2 		sub	fp, ip, #4
 1592              		.cfi_offset 14, -8
 1593              		.cfi_offset 13, -12
 1594              		.cfi_offset 11, -16
 1595              	.LCFI7:
 1596              		.cfi_def_cfa 11, 4
 1597 03c0 10D04DE2 		sub	sp, sp, #16
 1598 03c4 10000BE5 		str	r0, [fp, #-16]
 1599 03c8 14100BE5 		str	r1, [fp, #-20]
 1600 03cc 0230A0E1 		mov	r3, r2
 1601 03d0 15304BE5 		strb	r3, [fp, #-21]
  51:../elementos_pantalla.c **** 	switch(color)
 1602              		.loc 1 51 0
 1603 03d4 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 1604 03d8 020053E3 		cmp	r3, #2
 1605 03dc 2700000A 		beq	.L17
 1606 03e0 030053E3 		cmp	r3, #3
 1607 03e4 4900000A 		beq	.L18
 1608 03e8 010053E3 		cmp	r3, #1
 1609 03ec 6B00001A 		bne	.L14
 1610              	.L16:
  52:../elementos_pantalla.c **** 	{
  53:../elementos_pantalla.c **** 		case FICHA_BLANCA:
  54:../elementos_pantalla.c **** 			Lcd_DspAscII8x16(110+25*col, 25+25*fila,0xa, "O");
 1611              		.loc 1 54 0
 1612 03f0 14301BE5 		ldr	r3, [fp, #-20]
 1613 03f4 0338A0E1 		mov	r3, r3, asl #16
 1614 03f8 2338A0E1 		mov	r3, r3, lsr #16
 1615 03fc 0320A0E1 		mov	r2, r3	@ movhi
 1616 0400 0221A0E1 		mov	r2, r2, asl #2
 1617 0404 033082E0 		add	r3, r2, r3
 1618 0408 0320A0E1 		mov	r2, r3	@ movhi
 1619 040c 0211A0E1 		mov	r1, r2, asl #2
 1620 0410 0320A0E1 		mov	r2, r3	@ movhi
 1621 0414 0130A0E1 		mov	r3, r1	@ movhi
 1622 0418 033082E0 		add	r3, r2, r3
 1623 041c 0338A0E1 		mov	r3, r3, asl #16
 1624 0420 2338A0E1 		mov	r3, r3, lsr #16
 1625 0424 6E3083E2 		add	r3, r3, #110
 1626 0428 0338A0E1 		mov	r3, r3, asl #16
 1627 042c 2328A0E1 		mov	r2, r3, lsr #16
 1628 0430 10301BE5 		ldr	r3, [fp, #-16]
 1629 0434 013083E2 		add	r3, r3, #1
 1630 0438 0338A0E1 		mov	r3, r3, asl #16
 1631 043c 2338A0E1 		mov	r3, r3, lsr #16
 1632 0440 0310A0E1 		mov	r1, r3	@ movhi
 1633 0444 0111A0E1 		mov	r1, r1, asl #2
 1634 0448 033081E0 		add	r3, r1, r3
 1635 044c 0310A0E1 		mov	r1, r3	@ movhi
 1636 0450 0101A0E1 		mov	r0, r1, asl #2
 1637 0454 0310A0E1 		mov	r1, r3	@ movhi
 1638 0458 0030A0E1 		mov	r3, r0	@ movhi
 1639 045c 033081E0 		add	r3, r1, r3
 1640 0460 0338A0E1 		mov	r3, r3, asl #16
 1641 0464 2338A0E1 		mov	r3, r3, lsr #16
 1642 0468 0200A0E1 		mov	r0, r2
 1643 046c 0310A0E1 		mov	r1, r3
 1644 0470 0A20A0E3 		mov	r2, #10
 1645 0474 30319FE5 		ldr	r3, .L19
 1646 0478 FEFFFFEB 		bl	Lcd_DspAscII8x16
  55:../elementos_pantalla.c **** 			break;
 1647              		.loc 1 55 0
 1648 047c 470000EA 		b	.L14
 1649              	.L17:
  56:../elementos_pantalla.c **** 		case FICHA_NEGRA:
  57:../elementos_pantalla.c **** 			Lcd_DspAscII8x16(110+25*col, 25+25*fila,BLACK, "X");
 1650              		.loc 1 57 0
 1651 0480 14301BE5 		ldr	r3, [fp, #-20]
 1652 0484 0338A0E1 		mov	r3, r3, asl #16
 1653 0488 2338A0E1 		mov	r3, r3, lsr #16
 1654 048c 0320A0E1 		mov	r2, r3	@ movhi
 1655 0490 0221A0E1 		mov	r2, r2, asl #2
 1656 0494 033082E0 		add	r3, r2, r3
 1657 0498 0320A0E1 		mov	r2, r3	@ movhi
 1658 049c 0211A0E1 		mov	r1, r2, asl #2
 1659 04a0 0320A0E1 		mov	r2, r3	@ movhi
 1660 04a4 0130A0E1 		mov	r3, r1	@ movhi
 1661 04a8 033082E0 		add	r3, r2, r3
 1662 04ac 0338A0E1 		mov	r3, r3, asl #16
 1663 04b0 2338A0E1 		mov	r3, r3, lsr #16
 1664 04b4 6E3083E2 		add	r3, r3, #110
 1665 04b8 0338A0E1 		mov	r3, r3, asl #16
 1666 04bc 2328A0E1 		mov	r2, r3, lsr #16
 1667 04c0 10301BE5 		ldr	r3, [fp, #-16]
 1668 04c4 013083E2 		add	r3, r3, #1
 1669 04c8 0338A0E1 		mov	r3, r3, asl #16
 1670 04cc 2338A0E1 		mov	r3, r3, lsr #16
 1671 04d0 0310A0E1 		mov	r1, r3	@ movhi
 1672 04d4 0111A0E1 		mov	r1, r1, asl #2
 1673 04d8 033081E0 		add	r3, r1, r3
 1674 04dc 0310A0E1 		mov	r1, r3	@ movhi
 1675 04e0 0101A0E1 		mov	r0, r1, asl #2
 1676 04e4 0310A0E1 		mov	r1, r3	@ movhi
 1677 04e8 0030A0E1 		mov	r3, r0	@ movhi
 1678 04ec 033081E0 		add	r3, r1, r3
 1679 04f0 0338A0E1 		mov	r3, r3, asl #16
 1680 04f4 2338A0E1 		mov	r3, r3, lsr #16
 1681 04f8 0200A0E1 		mov	r0, r2
 1682 04fc 0310A0E1 		mov	r1, r3
 1683 0500 0F20A0E3 		mov	r2, #15
 1684 0504 A4309FE5 		ldr	r3, .L19+4
 1685 0508 FEFFFFEB 		bl	Lcd_DspAscII8x16
  58:../elementos_pantalla.c **** 			break;
 1686              		.loc 1 58 0
 1687 050c 230000EA 		b	.L14
 1688              	.L18:
  59:../elementos_pantalla.c **** 		case FICHA_GRIS:
  60:../elementos_pantalla.c **** 			Lcd_DspAscII8x16(110+25*col, 25+25*fila,0xd, "@");
 1689              		.loc 1 60 0
 1690 0510 14301BE5 		ldr	r3, [fp, #-20]
 1691 0514 0338A0E1 		mov	r3, r3, asl #16
 1692 0518 2338A0E1 		mov	r3, r3, lsr #16
 1693 051c 0320A0E1 		mov	r2, r3	@ movhi
 1694 0520 0221A0E1 		mov	r2, r2, asl #2
 1695 0524 033082E0 		add	r3, r2, r3
 1696 0528 0320A0E1 		mov	r2, r3	@ movhi
 1697 052c 0211A0E1 		mov	r1, r2, asl #2
 1698 0530 0320A0E1 		mov	r2, r3	@ movhi
 1699 0534 0130A0E1 		mov	r3, r1	@ movhi
 1700 0538 033082E0 		add	r3, r2, r3
 1701 053c 0338A0E1 		mov	r3, r3, asl #16
 1702 0540 2338A0E1 		mov	r3, r3, lsr #16
 1703 0544 6E3083E2 		add	r3, r3, #110
 1704 0548 0338A0E1 		mov	r3, r3, asl #16
 1705 054c 2328A0E1 		mov	r2, r3, lsr #16
 1706 0550 10301BE5 		ldr	r3, [fp, #-16]
 1707 0554 013083E2 		add	r3, r3, #1
 1708 0558 0338A0E1 		mov	r3, r3, asl #16
 1709 055c 2338A0E1 		mov	r3, r3, lsr #16
 1710 0560 0310A0E1 		mov	r1, r3	@ movhi
 1711 0564 0111A0E1 		mov	r1, r1, asl #2
 1712 0568 033081E0 		add	r3, r1, r3
 1713 056c 0310A0E1 		mov	r1, r3	@ movhi
 1714 0570 0101A0E1 		mov	r0, r1, asl #2
 1715 0574 0310A0E1 		mov	r1, r3	@ movhi
 1716 0578 0030A0E1 		mov	r3, r0	@ movhi
 1717 057c 033081E0 		add	r3, r1, r3
 1718 0580 0338A0E1 		mov	r3, r3, asl #16
 1719 0584 2338A0E1 		mov	r3, r3, lsr #16
 1720 0588 0200A0E1 		mov	r0, r2
 1721 058c 0310A0E1 		mov	r1, r3
 1722 0590 0D20A0E3 		mov	r2, #13
 1723 0594 18309FE5 		ldr	r3, .L19+8
 1724 0598 FEFFFFEB 		bl	Lcd_DspAscII8x16
  61:../elementos_pantalla.c **** 			break;
 1725              		.loc 1 61 0
 1726 059c 0000A0E1 		mov	r0, r0	@ nop
 1727              	.L14:
  62:../elementos_pantalla.c **** 	}
  63:../elementos_pantalla.c **** }
 1728              		.loc 1 63 0
 1729 05a0 0CD04BE2 		sub	sp, fp, #12
 1730 05a4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1731 05a8 1EFF2FE1 		bx	lr
 1732              	.L20:
 1733              		.align	2
 1734              	.L19:
 1735 05ac 78000000 		.word	.LC7
 1736 05b0 7C000000 		.word	.LC8
 1737 05b4 80000000 		.word	.LC9
 1738              		.cfi_endproc
 1739              	.LFE3:
 1741              		.align	2
 1742              		.global	borrar_ficha
 1744              	borrar_ficha:
 1745              	.LFB4:
  64:../elementos_pantalla.c **** 
  65:../elementos_pantalla.c **** void borrar_ficha(int f, int c)		//TODO acabar
  66:../elementos_pantalla.c **** {
 1746              		.loc 1 66 0
 1747              		.cfi_startproc
 1748              		@ Function supports interworking.
 1749              		@ args = 0, pretend = 0, frame = 8
 1750              		@ frame_needed = 1, uses_anonymous_args = 0
 1751 05b8 0DC0A0E1 		mov	ip, sp
 1752              	.LCFI8:
 1753              		.cfi_def_cfa_register 12
 1754 05bc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1755 05c0 04B04CE2 		sub	fp, ip, #4
 1756              		.cfi_offset 14, -8
 1757              		.cfi_offset 13, -12
 1758              		.cfi_offset 11, -16
 1759              	.LCFI9:
 1760              		.cfi_def_cfa 11, 4
 1761 05c4 10D04DE2 		sub	sp, sp, #16
 1762 05c8 10000BE5 		str	r0, [fp, #-16]
 1763 05cc 14100BE5 		str	r1, [fp, #-20]
  67:../elementos_pantalla.c **** 	LcdClrRect((100+25*c) + 1, (20+25*f) + 1, (125+25*c) - 1, (45+25*f) - 1, 0x0);
 1764              		.loc 1 67 0
 1765 05d0 14301BE5 		ldr	r3, [fp, #-20]
 1766 05d4 0338A0E1 		mov	r3, r3, asl #16
 1767 05d8 2338A0E1 		mov	r3, r3, lsr #16
 1768 05dc 0320A0E1 		mov	r2, r3	@ movhi
 1769 05e0 0221A0E1 		mov	r2, r2, asl #2
 1770 05e4 033082E0 		add	r3, r2, r3
 1771 05e8 0320A0E1 		mov	r2, r3	@ movhi
 1772 05ec 0211A0E1 		mov	r1, r2, asl #2
 1773 05f0 0320A0E1 		mov	r2, r3	@ movhi
 1774 05f4 0130A0E1 		mov	r3, r1	@ movhi
 1775 05f8 033082E0 		add	r3, r2, r3
 1776 05fc 0338A0E1 		mov	r3, r3, asl #16
 1777 0600 2338A0E1 		mov	r3, r3, lsr #16
 1778 0604 653083E2 		add	r3, r3, #101
 1779 0608 0338A0E1 		mov	r3, r3, asl #16
 1780 060c 2338A0E1 		mov	r3, r3, lsr #16
 1781 0610 0338A0E1 		mov	r3, r3, asl #16
 1782 0614 2308A0E1 		mov	r0, r3, lsr #16
 1783 0618 10301BE5 		ldr	r3, [fp, #-16]
 1784 061c 0338A0E1 		mov	r3, r3, asl #16
 1785 0620 2338A0E1 		mov	r3, r3, lsr #16
 1786 0624 0320A0E1 		mov	r2, r3	@ movhi
 1787 0628 0221A0E1 		mov	r2, r2, asl #2
 1788 062c 033082E0 		add	r3, r2, r3
 1789 0630 0320A0E1 		mov	r2, r3	@ movhi
 1790 0634 0211A0E1 		mov	r1, r2, asl #2
 1791 0638 0320A0E1 		mov	r2, r3	@ movhi
 1792 063c 0130A0E1 		mov	r3, r1	@ movhi
 1793 0640 033082E0 		add	r3, r2, r3
 1794 0644 0338A0E1 		mov	r3, r3, asl #16
 1795 0648 2338A0E1 		mov	r3, r3, lsr #16
 1796 064c 153083E2 		add	r3, r3, #21
 1797 0650 0338A0E1 		mov	r3, r3, asl #16
 1798 0654 2338A0E1 		mov	r3, r3, lsr #16
 1799 0658 0338A0E1 		mov	r3, r3, asl #16
 1800 065c 2318A0E1 		mov	r1, r3, lsr #16
 1801 0660 14301BE5 		ldr	r3, [fp, #-20]
 1802 0664 0338A0E1 		mov	r3, r3, asl #16
 1803 0668 2338A0E1 		mov	r3, r3, lsr #16
 1804 066c 0320A0E1 		mov	r2, r3	@ movhi
 1805 0670 0221A0E1 		mov	r2, r2, asl #2
 1806 0674 033082E0 		add	r3, r2, r3
 1807 0678 0320A0E1 		mov	r2, r3	@ movhi
 1808 067c 02C1A0E1 		mov	ip, r2, asl #2
 1809 0680 0320A0E1 		mov	r2, r3	@ movhi
 1810 0684 0C30A0E1 		mov	r3, ip	@ movhi
 1811 0688 033082E0 		add	r3, r2, r3
 1812 068c 0338A0E1 		mov	r3, r3, asl #16
 1813 0690 2338A0E1 		mov	r3, r3, lsr #16
 1814 0694 7C3083E2 		add	r3, r3, #124
 1815 0698 0338A0E1 		mov	r3, r3, asl #16
 1816 069c 2338A0E1 		mov	r3, r3, lsr #16
 1817 06a0 0338A0E1 		mov	r3, r3, asl #16
 1818 06a4 2328A0E1 		mov	r2, r3, lsr #16
 1819 06a8 10301BE5 		ldr	r3, [fp, #-16]
 1820 06ac 0338A0E1 		mov	r3, r3, asl #16
 1821 06b0 2338A0E1 		mov	r3, r3, lsr #16
 1822 06b4 03C0A0E1 		mov	ip, r3	@ movhi
 1823 06b8 0CC1A0E1 		mov	ip, ip, asl #2
 1824 06bc 03308CE0 		add	r3, ip, r3
 1825 06c0 03C0A0E1 		mov	ip, r3	@ movhi
 1826 06c4 0CE1A0E1 		mov	lr, ip, asl #2
 1827 06c8 03C0A0E1 		mov	ip, r3	@ movhi
 1828 06cc 0E30A0E1 		mov	r3, lr	@ movhi
 1829 06d0 03308CE0 		add	r3, ip, r3
 1830 06d4 0338A0E1 		mov	r3, r3, asl #16
 1831 06d8 2338A0E1 		mov	r3, r3, lsr #16
 1832 06dc 2C3083E2 		add	r3, r3, #44
 1833 06e0 0338A0E1 		mov	r3, r3, asl #16
 1834 06e4 2338A0E1 		mov	r3, r3, lsr #16
 1835 06e8 0338A0E1 		mov	r3, r3, asl #16
 1836 06ec 2338A0E1 		mov	r3, r3, lsr #16
 1837 06f0 0008A0E1 		mov	r0, r0, asl #16
 1838 06f4 4008A0E1 		mov	r0, r0, asr #16
 1839 06f8 0118A0E1 		mov	r1, r1, asl #16
 1840 06fc 4118A0E1 		mov	r1, r1, asr #16
 1841 0700 0228A0E1 		mov	r2, r2, asl #16
 1842 0704 4228A0E1 		mov	r2, r2, asr #16
 1843 0708 0338A0E1 		mov	r3, r3, asl #16
 1844 070c 4338A0E1 		mov	r3, r3, asr #16
 1845 0710 00C0A0E3 		mov	ip, #0
 1846 0714 00C08DE5 		str	ip, [sp, #0]
 1847 0718 FEFFFFEB 		bl	LcdClrRect
  68:../elementos_pantalla.c **** }
 1848              		.loc 1 68 0
 1849 071c 0CD04BE2 		sub	sp, fp, #12
 1850 0720 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1851 0724 1EFF2FE1 		bx	lr
 1852              		.cfi_endproc
 1853              	.LFE4:
 1855              		.align	2
 1856              		.global	mover_gris_abajo
 1858              	mover_gris_abajo:
 1859              	.LFB5:
  69:../elementos_pantalla.c **** 
  70:../elementos_pantalla.c **** //Mueve hacia abajo en el LCD la ficha gris a partir de la fila y columna en la que está (0-7),
  71:../elementos_pantalla.c **** //	teniendo en cuenta lo que hubiera en la casilla donde está actualmente, porque lo restaura
  72:../elementos_pantalla.c **** void mover_gris_abajo(int fila, int columna, int fila_anterior_gris)		//TODO testear
  73:../elementos_pantalla.c **** {
 1860              		.loc 1 73 0
 1861              		.cfi_startproc
 1862              		@ Function supports interworking.
 1863              		@ args = 0, pretend = 0, frame = 16
 1864              		@ frame_needed = 1, uses_anonymous_args = 0
 1865 0728 0DC0A0E1 		mov	ip, sp
 1866              	.LCFI10:
 1867              		.cfi_def_cfa_register 12
 1868 072c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1869 0730 04B04CE2 		sub	fp, ip, #4
 1870              		.cfi_offset 14, -8
 1871              		.cfi_offset 13, -12
 1872              		.cfi_offset 11, -16
 1873              	.LCFI11:
 1874              		.cfi_def_cfa 11, 4
 1875 0734 10D04DE2 		sub	sp, sp, #16
 1876 0738 10000BE5 		str	r0, [fp, #-16]
 1877 073c 14100BE5 		str	r1, [fp, #-20]
 1878 0740 18200BE5 		str	r2, [fp, #-24]
  74:../elementos_pantalla.c **** 	pintar_ficha(fila, columna, FICHA_GRIS);
 1879              		.loc 1 74 0
 1880 0744 10001BE5 		ldr	r0, [fp, #-16]
 1881 0748 14101BE5 		ldr	r1, [fp, #-20]
 1882 074c 0320A0E3 		mov	r2, #3
 1883 0750 FEFFFFEB 		bl	pintar_ficha
  75:../elementos_pantalla.c **** 	borrar_ficha(fila_anterior_gris, columna);
 1884              		.loc 1 75 0
 1885 0754 18001BE5 		ldr	r0, [fp, #-24]
 1886 0758 14101BE5 		ldr	r1, [fp, #-20]
 1887 075c FEFFFFEB 		bl	borrar_ficha
  76:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 1888              		.loc 1 76 0
 1889 0760 FEFFFFEB 		bl	Lcd_Dma_Trans
  77:../elementos_pantalla.c **** }
 1890              		.loc 1 77 0
 1891 0764 0CD04BE2 		sub	sp, fp, #12
 1892 0768 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1893 076c 1EFF2FE1 		bx	lr
 1894              		.cfi_endproc
 1895              	.LFE5:
 1897              		.align	2
 1898              		.global	mover_gris_derecha
 1900              	mover_gris_derecha:
 1901              	.LFB6:
  78:../elementos_pantalla.c **** 
  79:../elementos_pantalla.c **** //Mueve hacia la derecha en el LCD la ficha gris a partir de la fila y columna en la que está (0-7)
  80:../elementos_pantalla.c **** //	teniendo en cuenta lo que hubiera en la casilla donde estaba antes de actualizar el movimiento, 
  81:../elementos_pantalla.c **** void mover_gris_derecha(int fila, int columna, int columna_anterior_gris)	//TODO testear y medir ti
  82:../elementos_pantalla.c **** {
 1902              		.loc 1 82 0
 1903              		.cfi_startproc
 1904              		@ Function supports interworking.
 1905              		@ args = 0, pretend = 0, frame = 16
 1906              		@ frame_needed = 1, uses_anonymous_args = 0
 1907 0770 0DC0A0E1 		mov	ip, sp
 1908              	.LCFI12:
 1909              		.cfi_def_cfa_register 12
 1910 0774 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1911 0778 04B04CE2 		sub	fp, ip, #4
 1912              		.cfi_offset 14, -8
 1913              		.cfi_offset 13, -12
 1914              		.cfi_offset 11, -16
 1915              	.LCFI13:
 1916              		.cfi_def_cfa 11, 4
 1917 077c 10D04DE2 		sub	sp, sp, #16
 1918 0780 10000BE5 		str	r0, [fp, #-16]
 1919 0784 14100BE5 		str	r1, [fp, #-20]
 1920 0788 18200BE5 		str	r2, [fp, #-24]
  83:../elementos_pantalla.c **** 	pintar_ficha(fila, columna, FICHA_GRIS);
 1921              		.loc 1 83 0
 1922 078c 10001BE5 		ldr	r0, [fp, #-16]
 1923 0790 14101BE5 		ldr	r1, [fp, #-20]
 1924 0794 0320A0E3 		mov	r2, #3
 1925 0798 FEFFFFEB 		bl	pintar_ficha
  84:../elementos_pantalla.c **** 	borrar_ficha(fila, columna_anterior_gris);
 1926              		.loc 1 84 0
 1927 079c 10001BE5 		ldr	r0, [fp, #-16]
 1928 07a0 18101BE5 		ldr	r1, [fp, #-24]
 1929 07a4 FEFFFFEB 		bl	borrar_ficha
  85:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 1930              		.loc 1 85 0
 1931 07a8 FEFFFFEB 		bl	Lcd_Dma_Trans
  86:../elementos_pantalla.c **** }
 1932              		.loc 1 86 0
 1933 07ac 0CD04BE2 		sub	sp, fp, #12
 1934 07b0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1935 07b4 1EFF2FE1 		bx	lr
 1936              		.cfi_endproc
 1937              	.LFE6:
 1939              		.align	2
 1940              		.global	pintar_profiling
 1942              	pintar_profiling:
 1943              	.LFB7:
  87:../elementos_pantalla.c **** 
  88:../elementos_pantalla.c **** void pintar_profiling(int t_total, int t_calc, int t_pvolteo, int veces_pvolteo)
  89:../elementos_pantalla.c **** {
 1944              		.loc 1 89 0
 1945              		.cfi_startproc
 1946              		@ Function supports interworking.
 1947              		@ args = 0, pretend = 0, frame = 32
 1948              		@ frame_needed = 1, uses_anonymous_args = 0
 1949 07b8 0DC0A0E1 		mov	ip, sp
 1950              	.LCFI14:
 1951              		.cfi_def_cfa_register 12
 1952 07bc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1953 07c0 04B04CE2 		sub	fp, ip, #4
 1954              		.cfi_offset 14, -8
 1955              		.cfi_offset 13, -12
 1956              		.cfi_offset 11, -16
 1957              	.LCFI15:
 1958              		.cfi_def_cfa 11, 4
 1959 07c4 28D04DE2 		sub	sp, sp, #40
 1960 07c8 20000BE5 		str	r0, [fp, #-32]
 1961 07cc 24100BE5 		str	r1, [fp, #-36]
 1962 07d0 28200BE5 		str	r2, [fp, #-40]
 1963 07d4 2C300BE5 		str	r3, [fp, #-44]
  90:../elementos_pantalla.c **** 	char buffer[15];						//15 por darle un tamaño decente
  91:../elementos_pantalla.c **** 
  92:../elementos_pantalla.c **** 	//Se borra la zona de pantalla virtual donde están los numeritos del profiling que si no no funcio
  93:../elementos_pantalla.c **** 	LcdClrRect(20, 35, 75, 50, 0x0000);
 1964              		.loc 1 93 0
 1965 07d8 0030A0E3 		mov	r3, #0
 1966 07dc 00308DE5 		str	r3, [sp, #0]
 1967 07e0 1400A0E3 		mov	r0, #20
 1968 07e4 2310A0E3 		mov	r1, #35
 1969 07e8 4B20A0E3 		mov	r2, #75
 1970 07ec 3230A0E3 		mov	r3, #50
 1971 07f0 FEFFFFEB 		bl	LcdClrRect
  94:../elementos_pantalla.c **** 	LcdClrRect(20, 85, 95, 100, 0x0000);
 1972              		.loc 1 94 0
 1973 07f4 0030A0E3 		mov	r3, #0
 1974 07f8 00308DE5 		str	r3, [sp, #0]
 1975 07fc 1400A0E3 		mov	r0, #20
 1976 0800 5510A0E3 		mov	r1, #85
 1977 0804 5F20A0E3 		mov	r2, #95
 1978 0808 6430A0E3 		mov	r3, #100
 1979 080c FEFFFFEB 		bl	LcdClrRect
  95:../elementos_pantalla.c **** 	LcdClrRect(20, 135, 95, 150, 0x0000);
 1980              		.loc 1 95 0
 1981 0810 0030A0E3 		mov	r3, #0
 1982 0814 00308DE5 		str	r3, [sp, #0]
 1983 0818 1400A0E3 		mov	r0, #20
 1984 081c 8710A0E3 		mov	r1, #135
 1985 0820 5F20A0E3 		mov	r2, #95
 1986 0824 9630A0E3 		mov	r3, #150
 1987 0828 FEFFFFEB 		bl	LcdClrRect
  96:../elementos_pantalla.c **** 	LcdClrRect(20, 185, 75, 200, 0x0000);
 1988              		.loc 1 96 0
 1989 082c 0030A0E3 		mov	r3, #0
 1990 0830 00308DE5 		str	r3, [sp, #0]
 1991 0834 1400A0E3 		mov	r0, #20
 1992 0838 B910A0E3 		mov	r1, #185
 1993 083c 4B20A0E3 		mov	r2, #75
 1994 0840 C830A0E3 		mov	r3, #200
 1995 0844 FEFFFFEB 		bl	LcdClrRect
  97:../elementos_pantalla.c **** 
  98:../elementos_pantalla.c **** 	itoa(t_total, buffer, 10);				//10 es para indicar que pasamos a números decimales
 1996              		.loc 1 98 0
 1997 0848 1C304BE2 		sub	r3, fp, #28
 1998 084c 20001BE5 		ldr	r0, [fp, #-32]
 1999 0850 0310A0E1 		mov	r1, r3
 2000 0854 0A20A0E3 		mov	r2, #10
 2001 0858 FEFFFFEB 		bl	itoa
  99:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,35,BLACK,buffer);
 2002              		.loc 1 99 0
 2003 085c 1C304BE2 		sub	r3, fp, #28
 2004 0860 1400A0E3 		mov	r0, #20
 2005 0864 2310A0E3 		mov	r1, #35
 2006 0868 0F20A0E3 		mov	r2, #15
 2007 086c FEFFFFEB 		bl	Lcd_DspAscII8x16
 100:../elementos_pantalla.c **** 	itoa(t_calc, buffer, 10);
 2008              		.loc 1 100 0
 2009 0870 1C304BE2 		sub	r3, fp, #28
 2010 0874 24001BE5 		ldr	r0, [fp, #-36]
 2011 0878 0310A0E1 		mov	r1, r3
 2012 087c 0A20A0E3 		mov	r2, #10
 2013 0880 FEFFFFEB 		bl	itoa
 101:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,85,BLACK,buffer);
 2014              		.loc 1 101 0
 2015 0884 1C304BE2 		sub	r3, fp, #28
 2016 0888 1400A0E3 		mov	r0, #20
 2017 088c 5510A0E3 		mov	r1, #85
 2018 0890 0F20A0E3 		mov	r2, #15
 2019 0894 FEFFFFEB 		bl	Lcd_DspAscII8x16
 102:../elementos_pantalla.c **** 	itoa(t_pvolteo, buffer, 10);
 2020              		.loc 1 102 0
 2021 0898 1C304BE2 		sub	r3, fp, #28
 2022 089c 28001BE5 		ldr	r0, [fp, #-40]
 2023 08a0 0310A0E1 		mov	r1, r3
 2024 08a4 0A20A0E3 		mov	r2, #10
 2025 08a8 FEFFFFEB 		bl	itoa
 103:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,135,BLACK,buffer);
 2026              		.loc 1 103 0
 2027 08ac 1C304BE2 		sub	r3, fp, #28
 2028 08b0 1400A0E3 		mov	r0, #20
 2029 08b4 8710A0E3 		mov	r1, #135
 2030 08b8 0F20A0E3 		mov	r2, #15
 2031 08bc FEFFFFEB 		bl	Lcd_DspAscII8x16
 104:../elementos_pantalla.c **** 	itoa(veces_pvolteo, buffer, 10);
 2032              		.loc 1 104 0
 2033 08c0 1C304BE2 		sub	r3, fp, #28
 2034 08c4 2C001BE5 		ldr	r0, [fp, #-44]
 2035 08c8 0310A0E1 		mov	r1, r3
 2036 08cc 0A20A0E3 		mov	r2, #10
 2037 08d0 FEFFFFEB 		bl	itoa
 105:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,185,BLACK,buffer);
 2038              		.loc 1 105 0
 2039 08d4 1C304BE2 		sub	r3, fp, #28
 2040 08d8 1400A0E3 		mov	r0, #20
 2041 08dc B910A0E3 		mov	r1, #185
 2042 08e0 0F20A0E3 		mov	r2, #15
 2043 08e4 FEFFFFEB 		bl	Lcd_DspAscII8x16
 106:../elementos_pantalla.c **** }
 2044              		.loc 1 106 0
 2045 08e8 0CD04BE2 		sub	sp, fp, #12
 2046 08ec 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2047 08f0 1EFF2FE1 		bx	lr
 2048              		.cfi_endproc
 2049              	.LFE7:
 2051              		.align	2
 2052              		.global	pintar_jugando
 2054              	pintar_jugando:
 2055              	.LFB8:
 107:../elementos_pantalla.c **** 
 108:../elementos_pantalla.c **** void pintar_jugando()
 109:../elementos_pantalla.c **** {
 2056              		.loc 1 109 0
 2057              		.cfi_startproc
 2058              		@ Function supports interworking.
 2059              		@ args = 0, pretend = 0, frame = 0
 2060              		@ frame_needed = 1, uses_anonymous_args = 0
 2061 08f4 0DC0A0E1 		mov	ip, sp
 2062              	.LCFI16:
 2063              		.cfi_def_cfa_register 12
 2064 08f8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2065 08fc 04B04CE2 		sub	fp, ip, #4
 2066              		.cfi_offset 14, -8
 2067              		.cfi_offset 13, -12
 2068              		.cfi_offset 11, -16
 2069              	.LCFI17:
 2070              		.cfi_def_cfa 11, 4
 110:../elementos_pantalla.c **** 	Lcd_Clr();
 2071              		.loc 1 110 0
 2072 0900 FEFFFFEB 		bl	Lcd_Clr
 111:../elementos_pantalla.c **** 	pintar_cuadricula();
 2073              		.loc 1 111 0
 2074 0904 FEFFFFEB 		bl	pintar_cuadricula
 112:../elementos_pantalla.c **** 	pintar_numeros_tablero();
 2075              		.loc 1 112 0
 2076 0908 FEFFFFEB 		bl	pintar_numeros_tablero
 113:../elementos_pantalla.c **** 	pintar_textos();
 2077              		.loc 1 113 0
 2078 090c FEFFFFEB 		bl	pintar_textos
 114:../elementos_pantalla.c **** 	pintar_profiling(0,0,0,0);
 2079              		.loc 1 114 0
 2080 0910 0000A0E3 		mov	r0, #0
 2081 0914 0010A0E3 		mov	r1, #0
 2082 0918 0020A0E3 		mov	r2, #0
 2083 091c 0030A0E3 		mov	r3, #0
 2084 0920 FEFFFFEB 		bl	pintar_profiling
 115:../elementos_pantalla.c **** 	pintar_ficha(0,0,3);	//Pintar la ficha gris en 0,0
 2085              		.loc 1 115 0
 2086 0924 0000A0E3 		mov	r0, #0
 2087 0928 0010A0E3 		mov	r1, #0
 2088 092c 0320A0E3 		mov	r2, #3
 2089 0930 FEFFFFEB 		bl	pintar_ficha
 116:../elementos_pantalla.c **** 	pintar_ficha(3,3,FICHA_BLANCA);	//Pintar las fichas blancas iniciales en 3,3 y 4,4
 2090              		.loc 1 116 0
 2091 0934 0300A0E3 		mov	r0, #3
 2092 0938 0310A0E3 		mov	r1, #3
 2093 093c 0120A0E3 		mov	r2, #1
 2094 0940 FEFFFFEB 		bl	pintar_ficha
 117:../elementos_pantalla.c **** 	pintar_ficha(4,4,FICHA_BLANCA);
 2095              		.loc 1 117 0
 2096 0944 0400A0E3 		mov	r0, #4
 2097 0948 0410A0E3 		mov	r1, #4
 2098 094c 0120A0E3 		mov	r2, #1
 2099 0950 FEFFFFEB 		bl	pintar_ficha
 118:../elementos_pantalla.c **** 	pintar_ficha(3,4,FICHA_NEGRA);	//Pintar las fichas negras en 3,4 y 4,3
 2100              		.loc 1 118 0
 2101 0954 0300A0E3 		mov	r0, #3
 2102 0958 0410A0E3 		mov	r1, #4
 2103 095c 0220A0E3 		mov	r2, #2
 2104 0960 FEFFFFEB 		bl	pintar_ficha
 119:../elementos_pantalla.c **** 	pintar_ficha(4,3,FICHA_NEGRA);
 2105              		.loc 1 119 0
 2106 0964 0400A0E3 		mov	r0, #4
 2107 0968 0310A0E3 		mov	r1, #3
 2108 096c 0220A0E3 		mov	r2, #2
 2109 0970 FEFFFFEB 		bl	pintar_ficha
 120:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2110              		.loc 1 120 0
 2111 0974 FEFFFFEB 		bl	Lcd_Dma_Trans
 121:../elementos_pantalla.c **** }
 2112              		.loc 1 121 0
 2113 0978 0CD04BE2 		sub	sp, fp, #12
 2114 097c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2115 0980 1EFF2FE1 		bx	lr
 2116              		.cfi_endproc
 2117              	.LFE8:
 2119              		.align	2
 2120              		.global	pintar_prueba
 2122              	pintar_prueba:
 2123              	.LFB9:
 122:../elementos_pantalla.c **** 
 123:../elementos_pantalla.c **** void pintar_prueba()
 124:../elementos_pantalla.c **** {
 2124              		.loc 1 124 0
 2125              		.cfi_startproc
 2126              		@ Function supports interworking.
 2127              		@ args = 0, pretend = 0, frame = 0
 2128              		@ frame_needed = 1, uses_anonymous_args = 0
 2129 0984 0DC0A0E1 		mov	ip, sp
 2130              	.LCFI18:
 2131              		.cfi_def_cfa_register 12
 2132 0988 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2133 098c 04B04CE2 		sub	fp, ip, #4
 2134              		.cfi_offset 14, -8
 2135              		.cfi_offset 13, -12
 2136              		.cfi_offset 11, -16
 2137              	.LCFI19:
 2138              		.cfi_def_cfa 11, 4
 125:../elementos_pantalla.c **** 	pintar_cuadricula();
 2139              		.loc 1 125 0
 2140 0990 FEFFFFEB 		bl	pintar_cuadricula
 126:../elementos_pantalla.c **** 	/*pintar_numeros_tablero();
 127:../elementos_pantalla.c **** 	pintar_textos();
 128:../elementos_pantalla.c **** 	pintar_ficha(0,0,1);
 129:../elementos_pantalla.c **** 	pintar_ficha(7,7,2);
 130:../elementos_pantalla.c **** 	pintar_ficha(3,3,3);
 131:../elementos_pantalla.c **** 	pintar_profiling(451245, 84512, 56456, 469352);*/
 132:../elementos_pantalla.c **** 	//Lcd_DspAscII8x16(0,0,BLACK,",,,,,,%#########%%%%%#####################################((/*******
 133:../elementos_pantalla.c **** 	//Lcd_DspAscII8x16(8,16,BLACK,",,,,%###########%%%%%%####################################((/******
 134:../elementos_pantalla.c **** 	//Lcd_DspAscII8x16(16,32,BLACK,"################%%%%%%%###################################((/*****
 135:../elementos_pantalla.c **** 	//Lcd_DspAscII8x16(24,48,BLACK,"REGLAS");
 136:../elementos_pantalla.c **** 	pintar_ficha(7, 0, FICHA_BLANCA);
 2141              		.loc 1 136 0
 2142 0994 0700A0E3 		mov	r0, #7
 2143 0998 0010A0E3 		mov	r1, #0
 2144 099c 0120A0E3 		mov	r2, #1
 2145 09a0 FEFFFFEB 		bl	pintar_ficha
 137:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2146              		.loc 1 137 0
 2147 09a4 FEFFFFEB 		bl	Lcd_Dma_Trans
 138:../elementos_pantalla.c **** 	Delay(250);
 2148              		.loc 1 138 0
 2149 09a8 FA00A0E3 		mov	r0, #250
 2150 09ac FEFFFFEB 		bl	Delay
 139:../elementos_pantalla.c **** 	borrar_ficha(7, 0);
 2151              		.loc 1 139 0
 2152 09b0 0700A0E3 		mov	r0, #7
 2153 09b4 0010A0E3 		mov	r1, #0
 2154 09b8 FEFFFFEB 		bl	borrar_ficha
 140:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2155              		.loc 1 140 0
 2156 09bc FEFFFFEB 		bl	Lcd_Dma_Trans
 141:../elementos_pantalla.c **** 	Delay(250);
 2157              		.loc 1 141 0
 2158 09c0 FA00A0E3 		mov	r0, #250
 2159 09c4 FEFFFFEB 		bl	Delay
 142:../elementos_pantalla.c **** 	pintar_ficha(7, 0, FICHA_BLANCA);
 2160              		.loc 1 142 0
 2161 09c8 0700A0E3 		mov	r0, #7
 2162 09cc 0010A0E3 		mov	r1, #0
 2163 09d0 0120A0E3 		mov	r2, #1
 2164 09d4 FEFFFFEB 		bl	pintar_ficha
 143:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2165              		.loc 1 143 0
 2166 09d8 FEFFFFEB 		bl	Lcd_Dma_Trans
 144:../elementos_pantalla.c **** 	Delay(250);
 2167              		.loc 1 144 0
 2168 09dc FA00A0E3 		mov	r0, #250
 2169 09e0 FEFFFFEB 		bl	Delay
 145:../elementos_pantalla.c **** 	pintar_ficha(7, 0, 4);
 2170              		.loc 1 145 0
 2171 09e4 0700A0E3 		mov	r0, #7
 2172 09e8 0010A0E3 		mov	r1, #0
 2173 09ec 0420A0E3 		mov	r2, #4
 2174 09f0 FEFFFFEB 		bl	pintar_ficha
 146:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2175              		.loc 1 146 0
 2176 09f4 FEFFFFEB 		bl	Lcd_Dma_Trans
 147:../elementos_pantalla.c **** 	Delay(250);
 2177              		.loc 1 147 0
 2178 09f8 FA00A0E3 		mov	r0, #250
 2179 09fc FEFFFFEB 		bl	Delay
 148:../elementos_pantalla.c **** }
 2180              		.loc 1 148 0
 2181 0a00 0CD04BE2 		sub	sp, fp, #12
 2182 0a04 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2183 0a08 1EFF2FE1 		bx	lr
 2184              		.cfi_endproc
 2185              	.LFE9:
 2187              		.section	.rodata
 2188 0082 0000     		.align	2
 2189              	.LC10:
 2190 0084 5245474C 		.ascii	"REGLAS\000"
 2190      415300
 2191              		.text
 2192              		.align	2
 2193              		.global	pintar_reglas
 2195              	pintar_reglas:
 2196              	.LFB10:
 149:../elementos_pantalla.c **** 
 150:../elementos_pantalla.c **** void pintar_reglas()
 151:../elementos_pantalla.c **** {
 2197              		.loc 1 151 0
 2198              		.cfi_startproc
 2199              		@ Function supports interworking.
 2200              		@ args = 0, pretend = 0, frame = 0
 2201              		@ frame_needed = 1, uses_anonymous_args = 0
 2202 0a0c 0DC0A0E1 		mov	ip, sp
 2203              	.LCFI20:
 2204              		.cfi_def_cfa_register 12
 2205 0a10 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2206 0a14 04B04CE2 		sub	fp, ip, #4
 2207              		.cfi_offset 14, -8
 2208              		.cfi_offset 13, -12
 2209              		.cfi_offset 11, -16
 2210              	.LCFI21:
 2211              		.cfi_def_cfa 11, 4
 152:../elementos_pantalla.c **** 	Lcd_Active_Clr();
 2212              		.loc 1 152 0
 2213 0a18 FEFFFFEB 		bl	Lcd_Active_Clr
 153:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(1,30,BLACK,"REGLAS");
 2214              		.loc 1 153 0
 2215 0a1c 0100A0E3 		mov	r0, #1
 2216 0a20 1E10A0E3 		mov	r1, #30
 2217 0a24 0F20A0E3 		mov	r2, #15
 2218 0a28 10309FE5 		ldr	r3, .L28
 2219 0a2c FEFFFFEB 		bl	Lcd_DspAscII8x16
 154:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2220              		.loc 1 154 0
 2221 0a30 FEFFFFEB 		bl	Lcd_Dma_Trans
 155:../elementos_pantalla.c **** }
 2222              		.loc 1 155 0
 2223 0a34 0CD04BE2 		sub	sp, fp, #12
 2224 0a38 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2225 0a3c 1EFF2FE1 		bx	lr
 2226              	.L29:
 2227              		.align	2
 2228              	.L28:
 2229 0a40 84000000 		.word	.LC10
 2230              		.cfi_endproc
 2231              	.LFE10:
 2233              		.section	.rodata
 2234 008b 00       		.align	2
 2235              	.LC11:
 2236 008c 48415320 		.ascii	"HAS GANADO!\000"
 2236      47414E41 
 2236      444F2100 
 2237              		.text
 2238              		.align	2
 2239              		.global	pintar_fin_victoria
 2241              	pintar_fin_victoria:
 2242              	.LFB11:
 156:../elementos_pantalla.c **** 
 157:../elementos_pantalla.c **** void pintar_fin_victoria(int blancas, int negras)
 158:../elementos_pantalla.c **** {
 2243              		.loc 1 158 0
 2244              		.cfi_startproc
 2245              		@ Function supports interworking.
 2246              		@ args = 0, pretend = 0, frame = 8
 2247              		@ frame_needed = 1, uses_anonymous_args = 0
 2248 0a44 0DC0A0E1 		mov	ip, sp
 2249              	.LCFI22:
 2250              		.cfi_def_cfa_register 12
 2251 0a48 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2252 0a4c 04B04CE2 		sub	fp, ip, #4
 2253              		.cfi_offset 14, -8
 2254              		.cfi_offset 13, -12
 2255              		.cfi_offset 11, -16
 2256              	.LCFI23:
 2257              		.cfi_def_cfa 11, 4
 2258 0a50 08D04DE2 		sub	sp, sp, #8
 2259 0a54 10000BE5 		str	r0, [fp, #-16]
 2260 0a58 14100BE5 		str	r1, [fp, #-20]
 159:../elementos_pantalla.c **** 	Lcd_Active_Clr();
 2261              		.loc 1 159 0
 2262 0a5c FEFFFFEB 		bl	Lcd_Active_Clr
 160:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(1,30,BLACK,"HAS GANADO!");
 2263              		.loc 1 160 0
 2264 0a60 0100A0E3 		mov	r0, #1
 2265 0a64 1E10A0E3 		mov	r1, #30
 2266 0a68 0F20A0E3 		mov	r2, #15
 2267 0a6c 10309FE5 		ldr	r3, .L31
 2268 0a70 FEFFFFEB 		bl	Lcd_DspAscII8x16
 161:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2269              		.loc 1 161 0
 2270 0a74 FEFFFFEB 		bl	Lcd_Dma_Trans
 162:../elementos_pantalla.c **** }
 2271              		.loc 1 162 0
 2272 0a78 0CD04BE2 		sub	sp, fp, #12
 2273 0a7c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2274 0a80 1EFF2FE1 		bx	lr
 2275              	.L32:
 2276              		.align	2
 2277              	.L31:
 2278 0a84 8C000000 		.word	.LC11
 2279              		.cfi_endproc
 2280              	.LFE11:
 2282              		.section	.rodata
 2283              		.align	2
 2284              	.LC12:
 2285 0098 48415320 		.ascii	"HAS PERDIDO, TROZO DE ESCORIA!\000"
 2285      50455244 
 2285      49444F2C 
 2285      2054524F 
 2285      5A4F2044 
 2286              		.text
 2287              		.align	2
 2288              		.global	pintar_fin_derrota
 2290              	pintar_fin_derrota:
 2291              	.LFB12:
 163:../elementos_pantalla.c **** 
 164:../elementos_pantalla.c **** void pintar_fin_derrota(int blancas, int negas)
 165:../elementos_pantalla.c **** {
 2292              		.loc 1 165 0
 2293              		.cfi_startproc
 2294              		@ Function supports interworking.
 2295              		@ args = 0, pretend = 0, frame = 8
 2296              		@ frame_needed = 1, uses_anonymous_args = 0
 2297 0a88 0DC0A0E1 		mov	ip, sp
 2298              	.LCFI24:
 2299              		.cfi_def_cfa_register 12
 2300 0a8c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2301 0a90 04B04CE2 		sub	fp, ip, #4
 2302              		.cfi_offset 14, -8
 2303              		.cfi_offset 13, -12
 2304              		.cfi_offset 11, -16
 2305              	.LCFI25:
 2306              		.cfi_def_cfa 11, 4
 2307 0a94 08D04DE2 		sub	sp, sp, #8
 2308 0a98 10000BE5 		str	r0, [fp, #-16]
 2309 0a9c 14100BE5 		str	r1, [fp, #-20]
 166:../elementos_pantalla.c **** 	Lcd_Active_Clr();
 2310              		.loc 1 166 0
 2311 0aa0 FEFFFFEB 		bl	Lcd_Active_Clr
 167:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(1,30,BLACK,"HAS PERDIDO, TROZO DE ESCORIA!");
 2312              		.loc 1 167 0
 2313 0aa4 0100A0E3 		mov	r0, #1
 2314 0aa8 1E10A0E3 		mov	r1, #30
 2315 0aac 0F20A0E3 		mov	r2, #15
 2316 0ab0 10309FE5 		ldr	r3, .L34
 2317 0ab4 FEFFFFEB 		bl	Lcd_DspAscII8x16
 168:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2318              		.loc 1 168 0
 2319 0ab8 FEFFFFEB 		bl	Lcd_Dma_Trans
 169:../elementos_pantalla.c **** }
 2320              		.loc 1 169 0
 2321 0abc 0CD04BE2 		sub	sp, fp, #12
 2322 0ac0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2323 0ac4 1EFF2FE1 		bx	lr
 2324              	.L35:
 2325              		.align	2
 2326              	.L34:
 2327 0ac8 98000000 		.word	.LC12
 2328              		.cfi_endproc
 2329              	.LFE12:
 2331              		.section	.rodata
 2332 00b7 00       		.align	2
 2333              	.LC13:
 2334 00b8 45524553 		.ascii	"ERES TAN IN\332TIL QUE NO GANAS PERO\000"
 2334      2054414E 
 2334      20494EDA 
 2334      54494C20 
 2334      51554520 
 2335 00da 0000     		.align	2
 2336              	.LC14:
 2337 00dc 54414D50 		.ascii	"TAMPOCO PIERDES CON UNA PUTA CPU!\000"
 2337      4F434F20 
 2337      50494552 
 2337      44455320 
 2337      434F4E20 
 2338 00fe 0000     		.text
 2339              		.align	2
 2340              		.global	pintar_fin_empate
 2342              	pintar_fin_empate:
 2343              	.LFB13:
 170:../elementos_pantalla.c **** 
 171:../elementos_pantalla.c **** void pintar_fin_empate(int blancas, int negas)
 172:../elementos_pantalla.c **** {
 2344              		.loc 1 172 0
 2345              		.cfi_startproc
 2346              		@ Function supports interworking.
 2347              		@ args = 0, pretend = 0, frame = 8
 2348              		@ frame_needed = 1, uses_anonymous_args = 0
 2349 0acc 0DC0A0E1 		mov	ip, sp
 2350              	.LCFI26:
 2351              		.cfi_def_cfa_register 12
 2352 0ad0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2353 0ad4 04B04CE2 		sub	fp, ip, #4
 2354              		.cfi_offset 14, -8
 2355              		.cfi_offset 13, -12
 2356              		.cfi_offset 11, -16
 2357              	.LCFI27:
 2358              		.cfi_def_cfa 11, 4
 2359 0ad8 08D04DE2 		sub	sp, sp, #8
 2360 0adc 10000BE5 		str	r0, [fp, #-16]
 2361 0ae0 14100BE5 		str	r1, [fp, #-20]
 173:../elementos_pantalla.c **** 	Lcd_Active_Clr();
 2362              		.loc 1 173 0
 2363 0ae4 FEFFFFEB 		bl	Lcd_Active_Clr
 174:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(1,30,BLACK,"ERES TAN INÚTIL QUE NO GANAS PERO");
 2364              		.loc 1 174 0
 2365 0ae8 0100A0E3 		mov	r0, #1
 2366 0aec 1E10A0E3 		mov	r1, #30
 2367 0af0 0F20A0E3 		mov	r2, #15
 2368 0af4 24309FE5 		ldr	r3, .L37
 2369 0af8 FEFFFFEB 		bl	Lcd_DspAscII8x16
 175:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(1,50,BLACK,"TAMPOCO PIERDES CON UNA PUTA CPU!");
 2370              		.loc 1 175 0
 2371 0afc 0100A0E3 		mov	r0, #1
 2372 0b00 3210A0E3 		mov	r1, #50
 2373 0b04 0F20A0E3 		mov	r2, #15
 2374 0b08 14309FE5 		ldr	r3, .L37+4
 2375 0b0c FEFFFFEB 		bl	Lcd_DspAscII8x16
 176:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2376              		.loc 1 176 0
 2377 0b10 FEFFFFEB 		bl	Lcd_Dma_Trans
 177:../elementos_pantalla.c **** }
 2378              		.loc 1 177 0
 2379 0b14 0CD04BE2 		sub	sp, fp, #12
 2380 0b18 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2381 0b1c 1EFF2FE1 		bx	lr
 2382              	.L38:
 2383              		.align	2
 2384              	.L37:
 2385 0b20 B8000000 		.word	.LC13
 2386 0b24 DC000000 		.word	.LC14
 2387              		.cfi_endproc
 2388              	.LFE13:
 2390              		.align	2
 2391              		.global	iniciar_DMA
 2393              	iniciar_DMA:
 2394              	.LFB14:
 178:../elementos_pantalla.c **** 
 179:../elementos_pantalla.c **** void iniciar_DMA()
 180:../elementos_pantalla.c **** {
 2395              		.loc 1 180 0
 2396              		.cfi_startproc
 2397              		@ Function supports interworking.
 2398              		@ args = 0, pretend = 0, frame = 0
 2399              		@ frame_needed = 1, uses_anonymous_args = 0
 2400 0b28 0DC0A0E1 		mov	ip, sp
 2401              	.LCFI28:
 2402              		.cfi_def_cfa_register 12
 2403 0b2c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2404 0b30 04B04CE2 		sub	fp, ip, #4
 2405              		.cfi_offset 14, -8
 2406              		.cfi_offset 13, -12
 2407              		.cfi_offset 11, -16
 2408              	.LCFI29:
 2409              		.cfi_def_cfa 11, 4
 181:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2410              		.loc 1 181 0
 2411 0b34 FEFFFFEB 		bl	Lcd_Dma_Trans
 182:../elementos_pantalla.c **** }
 2412              		.loc 1 182 0
 2413 0b38 0CD04BE2 		sub	sp, fp, #12
 2414 0b3c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2415 0b40 1EFF2FE1 		bx	lr
 2416              		.cfi_endproc
 2417              	.LFE14:
 2419              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 elementos_pantalla.c
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1209   .text:00000000 $a
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1212   .text:00000000 pintar_cuadricula
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1352   .text:000001b0 pintar_numeros_tablero
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1448   .text:000002c8 $d
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1453   .rodata:00000000 $d
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1475   .text:000002cc $a
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1478   .text:000002cc pintar_textos
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1556   .text:00000398 $d
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1577   .text:000003b4 $a
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1580   .text:000003b4 pintar_ficha
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1735   .text:000005ac $d
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1741   .text:000005b8 $a
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1744   .text:000005b8 borrar_ficha
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1858   .text:00000728 mover_gris_abajo
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1900   .text:00000770 mover_gris_derecha
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:1942   .text:000007b8 pintar_profiling
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2054   .text:000008f4 pintar_jugando
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2122   .text:00000984 pintar_prueba
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2195   .text:00000a0c pintar_reglas
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2229   .text:00000a40 $d
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2238   .text:00000a44 $a
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2241   .text:00000a44 pintar_fin_victoria
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2278   .text:00000a84 $d
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2287   .text:00000a88 $a
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2290   .text:00000a88 pintar_fin_derrota
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2327   .text:00000ac8 $d
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2339   .text:00000acc $a
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2342   .text:00000acc pintar_fin_empate
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2385   .text:00000b20 $d
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2390   .text:00000b28 $a
C:\Users\guest\AppData\Local\Temp\ccFRo0Ho.s:2393   .text:00000b28 iniciar_DMA
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
Lcd_Draw_Box
itoa
Lcd_DspAscII8x16
LcdClrRect
Lcd_Dma_Trans
Lcd_Clr
Delay
Lcd_Active_Clr
