   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"elementos_pantalla.c"
  21              	.Ltext0:
  22              		.file 1 "../elementos_pantalla.c"
 1209              		.align	2
 1210              		.global	pintar_cuadricula
 1212              	pintar_cuadricula:
 1213              	.LFB0:
   1:../elementos_pantalla.c **** /*********************************************************************************************
   2:../elementos_pantalla.c **** * File£º	elementos_pantalla.h
   3:../elementos_pantalla.c **** * Author:	Fernando Peña Bes (756012) y Pedro José Pérez García (756642)
   4:../elementos_pantalla.c **** * Descrip:	Colección de funciones que permiten dibujar en la pantalla las pantallas
   5:../elementos_pantalla.c **** * 			que corresponden a la ejecución del reversi8 en la placa
   6:../elementos_pantalla.c **** * History:	A long time ago, in galaxy a far away...
   7:../elementos_pantalla.c **** *********************************************************************************************/
   8:../elementos_pantalla.c **** #include "lcd.h"
   9:../elementos_pantalla.c **** #include "elementos_pantalla.h"
  10:../elementos_pantalla.c **** #include "funciones_itoa.h"
  11:../elementos_pantalla.c **** 
  12:../elementos_pantalla.c **** void pintar_cuadricula()
  13:../elementos_pantalla.c **** {
 1214              		.loc 1 13 0
 1215              		.cfi_startproc
 1216              		@ Function supports interworking.
 1217              		@ args = 0, pretend = 0, frame = 8
 1218              		@ frame_needed = 1, uses_anonymous_args = 0
 1219 0000 0DC0A0E1 		mov	ip, sp
 1220              	.LCFI0:
 1221              		.cfi_def_cfa_register 12
 1222 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1223 0008 04B04CE2 		sub	fp, ip, #4
 1224              		.cfi_offset 14, -8
 1225              		.cfi_offset 13, -12
 1226              		.cfi_offset 11, -16
 1227              	.LCFI1:
 1228              		.cfi_def_cfa 11, 4
 1229 000c 10D04DE2 		sub	sp, sp, #16
  14:../elementos_pantalla.c **** 	volatile int i;
  15:../elementos_pantalla.c **** 	volatile int j;
  16:../elementos_pantalla.c **** 	for(i = 0; i < num_filas; i++)
 1230              		.loc 1 16 0
 1231 0010 0030A0E3 		mov	r3, #0
 1232 0014 10300BE5 		str	r3, [fp, #-16]
 1233 0018 5E0000EA 		b	.L2
 1234              	.L5:
  17:../elementos_pantalla.c **** 	{
  18:../elementos_pantalla.c **** 		for(j = 0; j < num_columnas; j++)
 1235              		.loc 1 18 0
 1236 001c 0030A0E3 		mov	r3, #0
 1237 0020 14300BE5 		str	r3, [fp, #-20]
 1238 0024 550000EA 		b	.L3
 1239              	.L4:
  19:../elementos_pantalla.c **** 		{
  20:../elementos_pantalla.c **** 			Lcd_Draw_Box(100+25*j,20+25*i,125+25*j,45+25*i,BLACK);
 1240              		.loc 1 20 0 discriminator 2
 1241 0028 14301BE5 		ldr	r3, [fp, #-20]
 1242 002c 0338A0E1 		mov	r3, r3, asl #16
 1243 0030 2338A0E1 		mov	r3, r3, lsr #16
 1244 0034 0320A0E1 		mov	r2, r3	@ movhi
 1245 0038 0221A0E1 		mov	r2, r2, asl #2
 1246 003c 033082E0 		add	r3, r2, r3
 1247 0040 0320A0E1 		mov	r2, r3	@ movhi
 1248 0044 0211A0E1 		mov	r1, r2, asl #2
 1249 0048 0320A0E1 		mov	r2, r3	@ movhi
 1250 004c 0130A0E1 		mov	r3, r1	@ movhi
 1251 0050 033082E0 		add	r3, r2, r3
 1252 0054 0338A0E1 		mov	r3, r3, asl #16
 1253 0058 2338A0E1 		mov	r3, r3, lsr #16
 1254 005c 643083E2 		add	r3, r3, #100
 1255 0060 0338A0E1 		mov	r3, r3, asl #16
 1256 0064 2338A0E1 		mov	r3, r3, lsr #16
 1257 0068 0338A0E1 		mov	r3, r3, asl #16
 1258 006c 2308A0E1 		mov	r0, r3, lsr #16
 1259 0070 10301BE5 		ldr	r3, [fp, #-16]
 1260 0074 0338A0E1 		mov	r3, r3, asl #16
 1261 0078 2338A0E1 		mov	r3, r3, lsr #16
 1262 007c 0320A0E1 		mov	r2, r3	@ movhi
 1263 0080 0221A0E1 		mov	r2, r2, asl #2
 1264 0084 033082E0 		add	r3, r2, r3
 1265 0088 0320A0E1 		mov	r2, r3	@ movhi
 1266 008c 0211A0E1 		mov	r1, r2, asl #2
 1267 0090 0320A0E1 		mov	r2, r3	@ movhi
 1268 0094 0130A0E1 		mov	r3, r1	@ movhi
 1269 0098 033082E0 		add	r3, r2, r3
 1270 009c 0338A0E1 		mov	r3, r3, asl #16
 1271 00a0 2338A0E1 		mov	r3, r3, lsr #16
 1272 00a4 143083E2 		add	r3, r3, #20
 1273 00a8 0338A0E1 		mov	r3, r3, asl #16
 1274 00ac 2338A0E1 		mov	r3, r3, lsr #16
 1275 00b0 0338A0E1 		mov	r3, r3, asl #16
 1276 00b4 2318A0E1 		mov	r1, r3, lsr #16
 1277 00b8 14301BE5 		ldr	r3, [fp, #-20]
 1278 00bc 0338A0E1 		mov	r3, r3, asl #16
 1279 00c0 2338A0E1 		mov	r3, r3, lsr #16
 1280 00c4 0320A0E1 		mov	r2, r3	@ movhi
 1281 00c8 0221A0E1 		mov	r2, r2, asl #2
 1282 00cc 033082E0 		add	r3, r2, r3
 1283 00d0 0320A0E1 		mov	r2, r3	@ movhi
 1284 00d4 02C1A0E1 		mov	ip, r2, asl #2
 1285 00d8 0320A0E1 		mov	r2, r3	@ movhi
 1286 00dc 0C30A0E1 		mov	r3, ip	@ movhi
 1287 00e0 033082E0 		add	r3, r2, r3
 1288 00e4 0338A0E1 		mov	r3, r3, asl #16
 1289 00e8 2338A0E1 		mov	r3, r3, lsr #16
 1290 00ec 7D3083E2 		add	r3, r3, #125
 1291 00f0 0338A0E1 		mov	r3, r3, asl #16
 1292 00f4 2338A0E1 		mov	r3, r3, lsr #16
 1293 00f8 0338A0E1 		mov	r3, r3, asl #16
 1294 00fc 2328A0E1 		mov	r2, r3, lsr #16
 1295 0100 10301BE5 		ldr	r3, [fp, #-16]
 1296 0104 0338A0E1 		mov	r3, r3, asl #16
 1297 0108 2338A0E1 		mov	r3, r3, lsr #16
 1298 010c 03C0A0E1 		mov	ip, r3	@ movhi
 1299 0110 0CC1A0E1 		mov	ip, ip, asl #2
 1300 0114 03308CE0 		add	r3, ip, r3
 1301 0118 03C0A0E1 		mov	ip, r3	@ movhi
 1302 011c 0CE1A0E1 		mov	lr, ip, asl #2
 1303 0120 03C0A0E1 		mov	ip, r3	@ movhi
 1304 0124 0E30A0E1 		mov	r3, lr	@ movhi
 1305 0128 03308CE0 		add	r3, ip, r3
 1306 012c 0338A0E1 		mov	r3, r3, asl #16
 1307 0130 2338A0E1 		mov	r3, r3, lsr #16
 1308 0134 2D3083E2 		add	r3, r3, #45
 1309 0138 0338A0E1 		mov	r3, r3, asl #16
 1310 013c 2338A0E1 		mov	r3, r3, lsr #16
 1311 0140 0338A0E1 		mov	r3, r3, asl #16
 1312 0144 2338A0E1 		mov	r3, r3, lsr #16
 1313 0148 0008A0E1 		mov	r0, r0, asl #16
 1314 014c 4008A0E1 		mov	r0, r0, asr #16
 1315 0150 0118A0E1 		mov	r1, r1, asl #16
 1316 0154 4118A0E1 		mov	r1, r1, asr #16
 1317 0158 0228A0E1 		mov	r2, r2, asl #16
 1318 015c 4228A0E1 		mov	r2, r2, asr #16
 1319 0160 0338A0E1 		mov	r3, r3, asl #16
 1320 0164 4338A0E1 		mov	r3, r3, asr #16
 1321 0168 0FC0A0E3 		mov	ip, #15
 1322 016c 00C08DE5 		str	ip, [sp, #0]
 1323 0170 FEFFFFEB 		bl	Lcd_Draw_Box
  18:../elementos_pantalla.c **** 		for(j = 0; j < num_columnas; j++)
 1324              		.loc 1 18 0 discriminator 2
 1325 0174 14301BE5 		ldr	r3, [fp, #-20]
 1326 0178 013083E2 		add	r3, r3, #1
 1327 017c 14300BE5 		str	r3, [fp, #-20]
 1328              	.L3:
  18:../elementos_pantalla.c **** 		for(j = 0; j < num_columnas; j++)
 1329              		.loc 1 18 0 is_stmt 0 discriminator 1
 1330 0180 14301BE5 		ldr	r3, [fp, #-20]
 1331 0184 070053E3 		cmp	r3, #7
 1332 0188 A6FFFFDA 		ble	.L4
  16:../elementos_pantalla.c **** 	for(i = 0; i < num_filas; i++)
 1333              		.loc 1 16 0 is_stmt 1
 1334 018c 10301BE5 		ldr	r3, [fp, #-16]
 1335 0190 013083E2 		add	r3, r3, #1
 1336 0194 10300BE5 		str	r3, [fp, #-16]
 1337              	.L2:
  16:../elementos_pantalla.c **** 	for(i = 0; i < num_filas; i++)
 1338              		.loc 1 16 0 is_stmt 0 discriminator 1
 1339 0198 10301BE5 		ldr	r3, [fp, #-16]
 1340 019c 070053E3 		cmp	r3, #7
 1341 01a0 9DFFFFDA 		ble	.L5
  21:../elementos_pantalla.c **** 		}
  22:../elementos_pantalla.c **** 	}
  23:../elementos_pantalla.c **** }
 1342              		.loc 1 23 0 is_stmt 1
 1343 01a4 0CD04BE2 		sub	sp, fp, #12
 1344 01a8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1345 01ac 1EFF2FE1 		bx	lr
 1346              		.cfi_endproc
 1347              	.LFE0:
 1349              		.align	2
 1350              		.global	pintar_numeros_tablero
 1352              	pintar_numeros_tablero:
 1353              	.LFB1:
  24:../elementos_pantalla.c **** 
  25:../elementos_pantalla.c **** void pintar_numeros_tablero()
  26:../elementos_pantalla.c **** {
 1354              		.loc 1 26 0
 1355              		.cfi_startproc
 1356              		@ Function supports interworking.
 1357              		@ args = 0, pretend = 0, frame = 24
 1358              		@ frame_needed = 1, uses_anonymous_args = 0
 1359 01b0 0DC0A0E1 		mov	ip, sp
 1360              	.LCFI2:
 1361              		.cfi_def_cfa_register 12
 1362 01b4 10D82DE9 		stmfd	sp!, {r4, fp, ip, lr, pc}
 1363 01b8 04B04CE2 		sub	fp, ip, #4
 1364              		.cfi_offset 14, -8
 1365              		.cfi_offset 13, -12
 1366              		.cfi_offset 11, -16
 1367              		.cfi_offset 4, -20
 1368              	.LCFI3:
 1369              		.cfi_def_cfa 11, 4
 1370 01bc 1CD04DE2 		sub	sp, sp, #28
  27:../elementos_pantalla.c **** 	int i;
  28:../elementos_pantalla.c **** 	char buffer[15];
  29:../elementos_pantalla.c **** 	for(i = 0; i < num_filas; i++)
 1371              		.loc 1 29 0
 1372 01c0 0030A0E3 		mov	r3, #0
 1373 01c4 18300BE5 		str	r3, [fp, #-24]
 1374 01c8 380000EA 		b	.L7
 1375              	.L8:
  30:../elementos_pantalla.c **** 	{
  31:../elementos_pantalla.c **** 		Lcd_DspAscII8x16(110 + 25*i, 0,BLACK,itoa(i+1, buffer,10));	//10 para pasar a decimal
 1376              		.loc 1 31 0 discriminator 2
 1377 01cc 18301BE5 		ldr	r3, [fp, #-24]
 1378 01d0 0338A0E1 		mov	r3, r3, asl #16
 1379 01d4 2338A0E1 		mov	r3, r3, lsr #16
 1380 01d8 0320A0E1 		mov	r2, r3	@ movhi
 1381 01dc 0221A0E1 		mov	r2, r2, asl #2
 1382 01e0 033082E0 		add	r3, r2, r3
 1383 01e4 0320A0E1 		mov	r2, r3	@ movhi
 1384 01e8 0211A0E1 		mov	r1, r2, asl #2
 1385 01ec 0320A0E1 		mov	r2, r3	@ movhi
 1386 01f0 0130A0E1 		mov	r3, r1	@ movhi
 1387 01f4 033082E0 		add	r3, r2, r3
 1388 01f8 0338A0E1 		mov	r3, r3, asl #16
 1389 01fc 2338A0E1 		mov	r3, r3, lsr #16
 1390 0200 6E3083E2 		add	r3, r3, #110
 1391 0204 0338A0E1 		mov	r3, r3, asl #16
 1392 0208 2348A0E1 		mov	r4, r3, lsr #16
 1393 020c 18301BE5 		ldr	r3, [fp, #-24]
 1394 0210 012083E2 		add	r2, r3, #1
 1395 0214 28304BE2 		sub	r3, fp, #40
 1396 0218 0200A0E1 		mov	r0, r2
 1397 021c 0310A0E1 		mov	r1, r3
 1398 0220 0A20A0E3 		mov	r2, #10
 1399 0224 FEFFFFEB 		bl	itoa
 1400 0228 0030A0E1 		mov	r3, r0
 1401 022c 0400A0E1 		mov	r0, r4
 1402 0230 0010A0E3 		mov	r1, #0
 1403 0234 0F20A0E3 		mov	r2, #15
 1404 0238 FEFFFFEB 		bl	Lcd_DspAscII8x16
  32:../elementos_pantalla.c **** 		Lcd_DspAscII8x16(310,25 + 25*i,BLACK,itoa(i+1, buffer,10));
 1405              		.loc 1 32 0 discriminator 2
 1406 023c 18301BE5 		ldr	r3, [fp, #-24]
 1407 0240 013083E2 		add	r3, r3, #1
 1408 0244 0338A0E1 		mov	r3, r3, asl #16
 1409 0248 2338A0E1 		mov	r3, r3, lsr #16
 1410 024c 0320A0E1 		mov	r2, r3	@ movhi
 1411 0250 0221A0E1 		mov	r2, r2, asl #2
 1412 0254 033082E0 		add	r3, r2, r3
 1413 0258 0320A0E1 		mov	r2, r3	@ movhi
 1414 025c 0211A0E1 		mov	r1, r2, asl #2
 1415 0260 0320A0E1 		mov	r2, r3	@ movhi
 1416 0264 0130A0E1 		mov	r3, r1	@ movhi
 1417 0268 033082E0 		add	r3, r2, r3
 1418 026c 0338A0E1 		mov	r3, r3, asl #16
 1419 0270 2348A0E1 		mov	r4, r3, lsr #16
 1420 0274 18301BE5 		ldr	r3, [fp, #-24]
 1421 0278 012083E2 		add	r2, r3, #1
 1422 027c 28304BE2 		sub	r3, fp, #40
 1423 0280 0200A0E1 		mov	r0, r2
 1424 0284 0310A0E1 		mov	r1, r3
 1425 0288 0A20A0E3 		mov	r2, #10
 1426 028c FEFFFFEB 		bl	itoa
 1427 0290 0030A0E1 		mov	r3, r0
 1428 0294 2C009FE5 		ldr	r0, .L9
 1429 0298 0410A0E1 		mov	r1, r4
 1430 029c 0F20A0E3 		mov	r2, #15
 1431 02a0 FEFFFFEB 		bl	Lcd_DspAscII8x16
  29:../elementos_pantalla.c **** 	for(i = 0; i < num_filas; i++)
 1432              		.loc 1 29 0 discriminator 2
 1433 02a4 18301BE5 		ldr	r3, [fp, #-24]
 1434 02a8 013083E2 		add	r3, r3, #1
 1435 02ac 18300BE5 		str	r3, [fp, #-24]
 1436              	.L7:
  29:../elementos_pantalla.c **** 	for(i = 0; i < num_filas; i++)
 1437              		.loc 1 29 0 is_stmt 0 discriminator 1
 1438 02b0 18301BE5 		ldr	r3, [fp, #-24]
 1439 02b4 070053E3 		cmp	r3, #7
 1440 02b8 C3FFFFDA 		ble	.L8
  33:../elementos_pantalla.c **** 	}
  34:../elementos_pantalla.c **** }
 1441              		.loc 1 34 0 is_stmt 1
 1442 02bc 10D04BE2 		sub	sp, fp, #16
 1443 02c0 10689DE8 		ldmfd	sp, {r4, fp, sp, lr}
 1444 02c4 1EFF2FE1 		bx	lr
 1445              	.L10:
 1446              		.align	2
 1447              	.L9:
 1448 02c8 36010000 		.word	310
 1449              		.cfi_endproc
 1450              	.LFE1:
 1452              		.section	.rodata
 1453              		.align	2
 1454              	.LC0:
 1455 0000 5469656D 		.ascii	"Tiempo total\000"
 1455      706F2074 
 1455      6F74616C 
 1455      00
 1456 000d 000000   		.align	2
 1457              	.LC1:
 1458 0010 6465206A 		.ascii	"de juego:\000"
 1458      7565676F 
 1458      3A00
 1459 001a 0000     		.align	2
 1460              	.LC2:
 1461 001c 5469656D 		.ascii	"Tiempo para\000"
 1461      706F2070 
 1461      61726100 
 1462              		.align	2
 1463              	.LC3:
 1464 0028 63616C63 		.ascii	"calculos:\000"
 1464      756C6F73 
 1464      3A00
 1465 0032 0000     		.align	2
 1466              	.LC4:
 1467 0034 702E766F 		.ascii	"p.volteo:\000"
 1467      6C74656F 
 1467      3A00
 1468 003e 0000     		.align	2
 1469              	.LC5:
 1470 0040 4E756D65 		.ascii	"Numero inv.\000"
 1470      726F2069 
 1470      6E762E00 
 1471              		.align	2
 1472              	.LC6:
 1473 004c 2D3E2054 		.ascii	"-> TOCA LA PANTALLA PARA HACER TU JUGADA\000"
 1473      4F434120 
 1473      4C412050 
 1473      414E5441 
 1473      4C4C4120 
 1474              		.text
 1475              		.align	2
 1476              		.global	pintar_textos
 1478              	pintar_textos:
 1479              	.LFB2:
  35:../elementos_pantalla.c **** 
  36:../elementos_pantalla.c **** void pintar_textos()
  37:../elementos_pantalla.c **** {
 1480              		.loc 1 37 0
 1481              		.cfi_startproc
 1482              		@ Function supports interworking.
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 1, uses_anonymous_args = 0
 1485 02cc 0DC0A0E1 		mov	ip, sp
 1486              	.LCFI4:
 1487              		.cfi_def_cfa_register 12
 1488 02d0 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1489 02d4 04B04CE2 		sub	fp, ip, #4
 1490              		.cfi_offset 14, -8
 1491              		.cfi_offset 13, -12
 1492              		.cfi_offset 11, -16
 1493              	.LCFI5:
 1494              		.cfi_def_cfa 11, 4
  38:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(5,10,BLACK,"Tiempo total");
 1495              		.loc 1 38 0
 1496 02d8 0500A0E3 		mov	r0, #5
 1497 02dc 0A10A0E3 		mov	r1, #10
 1498 02e0 0F20A0E3 		mov	r2, #15
 1499 02e4 AC309FE5 		ldr	r3, .L12
 1500 02e8 FEFFFFEB 		bl	Lcd_DspAscII8x16
  39:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,20,BLACK,"de juego:");
 1501              		.loc 1 39 0
 1502 02ec 1400A0E3 		mov	r0, #20
 1503 02f0 1410A0E3 		mov	r1, #20
 1504 02f4 0F20A0E3 		mov	r2, #15
 1505 02f8 9C309FE5 		ldr	r3, .L12+4
 1506 02fc FEFFFFEB 		bl	Lcd_DspAscII8x16
  40:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(5,60,BLACK,"Tiempo para");
 1507              		.loc 1 40 0
 1508 0300 0500A0E3 		mov	r0, #5
 1509 0304 3C10A0E3 		mov	r1, #60
 1510 0308 0F20A0E3 		mov	r2, #15
 1511 030c 8C309FE5 		ldr	r3, .L12+8
 1512 0310 FEFFFFEB 		bl	Lcd_DspAscII8x16
  41:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,70,BLACK,"calculos:");
 1513              		.loc 1 41 0
 1514 0314 1400A0E3 		mov	r0, #20
 1515 0318 4610A0E3 		mov	r1, #70
 1516 031c 0F20A0E3 		mov	r2, #15
 1517 0320 7C309FE5 		ldr	r3, .L12+12
 1518 0324 FEFFFFEB 		bl	Lcd_DspAscII8x16
  42:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(5,110,BLACK,"Tiempo para");
 1519              		.loc 1 42 0
 1520 0328 0500A0E3 		mov	r0, #5
 1521 032c 6E10A0E3 		mov	r1, #110
 1522 0330 0F20A0E3 		mov	r2, #15
 1523 0334 64309FE5 		ldr	r3, .L12+8
 1524 0338 FEFFFFEB 		bl	Lcd_DspAscII8x16
  43:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,120,BLACK,"p.volteo:");
 1525              		.loc 1 43 0
 1526 033c 1400A0E3 		mov	r0, #20
 1527 0340 7810A0E3 		mov	r1, #120
 1528 0344 0F20A0E3 		mov	r2, #15
 1529 0348 58309FE5 		ldr	r3, .L12+16
 1530 034c FEFFFFEB 		bl	Lcd_DspAscII8x16
  44:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(5,160,BLACK,"Numero inv.");
 1531              		.loc 1 44 0
 1532 0350 0500A0E3 		mov	r0, #5
 1533 0354 A010A0E3 		mov	r1, #160
 1534 0358 0F20A0E3 		mov	r2, #15
 1535 035c 48309FE5 		ldr	r3, .L12+20
 1536 0360 FEFFFFEB 		bl	Lcd_DspAscII8x16
  45:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,170,BLACK,"p.volteo:");
 1537              		.loc 1 45 0
 1538 0364 1400A0E3 		mov	r0, #20
 1539 0368 AA10A0E3 		mov	r1, #170
 1540 036c 0F20A0E3 		mov	r2, #15
 1541 0370 30309FE5 		ldr	r3, .L12+16
 1542 0374 FEFFFFEB 		bl	Lcd_DspAscII8x16
  46:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(0,220,BLACK,"-> TOCA LA PANTALLA PARA HACER TU JUGADA");
 1543              		.loc 1 46 0
 1544 0378 0000A0E3 		mov	r0, #0
 1545 037c DC10A0E3 		mov	r1, #220
 1546 0380 0F20A0E3 		mov	r2, #15
 1547 0384 24309FE5 		ldr	r3, .L12+24
 1548 0388 FEFFFFEB 		bl	Lcd_DspAscII8x16
  47:../elementos_pantalla.c **** }
 1549              		.loc 1 47 0
 1550 038c 0CD04BE2 		sub	sp, fp, #12
 1551 0390 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1552 0394 1EFF2FE1 		bx	lr
 1553              	.L13:
 1554              		.align	2
 1555              	.L12:
 1556 0398 00000000 		.word	.LC0
 1557 039c 10000000 		.word	.LC1
 1558 03a0 1C000000 		.word	.LC2
 1559 03a4 28000000 		.word	.LC3
 1560 03a8 34000000 		.word	.LC4
 1561 03ac 40000000 		.word	.LC5
 1562 03b0 4C000000 		.word	.LC6
 1563              		.cfi_endproc
 1564              	.LFE2:
 1566              		.section	.rodata
 1567 0075 000000   		.align	2
 1568              	.LC7:
 1569 0078 4F00     		.ascii	"O\000"
 1570 007a 0000     		.align	2
 1571              	.LC8:
 1572 007c 5800     		.ascii	"X\000"
 1573 007e 0000     		.align	2
 1574              	.LC9:
 1575 0080 4000     		.ascii	"@\000"
 1576              		.text
 1577              		.align	2
 1578              		.global	pintar_ficha
 1580              	pintar_ficha:
 1581              	.LFB3:
  48:../elementos_pantalla.c **** 
  49:../elementos_pantalla.c **** void pintar_ficha(int fila, int col, enum estado_casilla color)	//1 -> blanco 2-> negro 3-> gris
  50:../elementos_pantalla.c **** {
 1582              		.loc 1 50 0
 1583              		.cfi_startproc
 1584              		@ Function supports interworking.
 1585              		@ args = 0, pretend = 0, frame = 16
 1586              		@ frame_needed = 1, uses_anonymous_args = 0
 1587 03b4 0DC0A0E1 		mov	ip, sp
 1588              	.LCFI6:
 1589              		.cfi_def_cfa_register 12
 1590 03b8 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1591 03bc 04B04CE2 		sub	fp, ip, #4
 1592              		.cfi_offset 14, -8
 1593              		.cfi_offset 13, -12
 1594              		.cfi_offset 11, -16
 1595              	.LCFI7:
 1596              		.cfi_def_cfa 11, 4
 1597 03c0 10D04DE2 		sub	sp, sp, #16
 1598 03c4 10000BE5 		str	r0, [fp, #-16]
 1599 03c8 14100BE5 		str	r1, [fp, #-20]
 1600 03cc 0230A0E1 		mov	r3, r2
 1601 03d0 15304BE5 		strb	r3, [fp, #-21]
  51:../elementos_pantalla.c **** 	switch(color)
 1602              		.loc 1 51 0
 1603 03d4 15305BE5 		ldrb	r3, [fp, #-21]	@ zero_extendqisi2
 1604 03d8 020053E3 		cmp	r3, #2
 1605 03dc 2700000A 		beq	.L17
 1606 03e0 030053E3 		cmp	r3, #3
 1607 03e4 4900000A 		beq	.L18
 1608 03e8 010053E3 		cmp	r3, #1
 1609 03ec 6C00001A 		bne	.L20
 1610              	.L16:
  52:../elementos_pantalla.c **** 	{
  53:../elementos_pantalla.c **** 		case FICHA_BLANCA:
  54:../elementos_pantalla.c **** 			Lcd_DspAscII8x16(110+25*col, 25+25*fila,0xa, "O");
 1611              		.loc 1 54 0
 1612 03f0 14301BE5 		ldr	r3, [fp, #-20]
 1613 03f4 0338A0E1 		mov	r3, r3, asl #16
 1614 03f8 2338A0E1 		mov	r3, r3, lsr #16
 1615 03fc 0320A0E1 		mov	r2, r3	@ movhi
 1616 0400 0221A0E1 		mov	r2, r2, asl #2
 1617 0404 033082E0 		add	r3, r2, r3
 1618 0408 0320A0E1 		mov	r2, r3	@ movhi
 1619 040c 0211A0E1 		mov	r1, r2, asl #2
 1620 0410 0320A0E1 		mov	r2, r3	@ movhi
 1621 0414 0130A0E1 		mov	r3, r1	@ movhi
 1622 0418 033082E0 		add	r3, r2, r3
 1623 041c 0338A0E1 		mov	r3, r3, asl #16
 1624 0420 2338A0E1 		mov	r3, r3, lsr #16
 1625 0424 6E3083E2 		add	r3, r3, #110
 1626 0428 0338A0E1 		mov	r3, r3, asl #16
 1627 042c 2328A0E1 		mov	r2, r3, lsr #16
 1628 0430 10301BE5 		ldr	r3, [fp, #-16]
 1629 0434 013083E2 		add	r3, r3, #1
 1630 0438 0338A0E1 		mov	r3, r3, asl #16
 1631 043c 2338A0E1 		mov	r3, r3, lsr #16
 1632 0440 0310A0E1 		mov	r1, r3	@ movhi
 1633 0444 0111A0E1 		mov	r1, r1, asl #2
 1634 0448 033081E0 		add	r3, r1, r3
 1635 044c 0310A0E1 		mov	r1, r3	@ movhi
 1636 0450 0101A0E1 		mov	r0, r1, asl #2
 1637 0454 0310A0E1 		mov	r1, r3	@ movhi
 1638 0458 0030A0E1 		mov	r3, r0	@ movhi
 1639 045c 033081E0 		add	r3, r1, r3
 1640 0460 0338A0E1 		mov	r3, r3, asl #16
 1641 0464 2338A0E1 		mov	r3, r3, lsr #16
 1642 0468 0200A0E1 		mov	r0, r2
 1643 046c 0310A0E1 		mov	r1, r3
 1644 0470 0A20A0E3 		mov	r2, #10
 1645 0474 38319FE5 		ldr	r3, .L21
 1646 0478 FEFFFFEB 		bl	Lcd_DspAscII8x16
  55:../elementos_pantalla.c **** 			break;
 1647              		.loc 1 55 0
 1648 047c 490000EA 		b	.L14
 1649              	.L17:
  56:../elementos_pantalla.c **** 		case FICHA_NEGRA:
  57:../elementos_pantalla.c **** 			Lcd_DspAscII8x16(110+25*col, 25+25*fila,BLACK, "X");
 1650              		.loc 1 57 0
 1651 0480 14301BE5 		ldr	r3, [fp, #-20]
 1652 0484 0338A0E1 		mov	r3, r3, asl #16
 1653 0488 2338A0E1 		mov	r3, r3, lsr #16
 1654 048c 0320A0E1 		mov	r2, r3	@ movhi
 1655 0490 0221A0E1 		mov	r2, r2, asl #2
 1656 0494 033082E0 		add	r3, r2, r3
 1657 0498 0320A0E1 		mov	r2, r3	@ movhi
 1658 049c 0211A0E1 		mov	r1, r2, asl #2
 1659 04a0 0320A0E1 		mov	r2, r3	@ movhi
 1660 04a4 0130A0E1 		mov	r3, r1	@ movhi
 1661 04a8 033082E0 		add	r3, r2, r3
 1662 04ac 0338A0E1 		mov	r3, r3, asl #16
 1663 04b0 2338A0E1 		mov	r3, r3, lsr #16
 1664 04b4 6E3083E2 		add	r3, r3, #110
 1665 04b8 0338A0E1 		mov	r3, r3, asl #16
 1666 04bc 2328A0E1 		mov	r2, r3, lsr #16
 1667 04c0 10301BE5 		ldr	r3, [fp, #-16]
 1668 04c4 013083E2 		add	r3, r3, #1
 1669 04c8 0338A0E1 		mov	r3, r3, asl #16
 1670 04cc 2338A0E1 		mov	r3, r3, lsr #16
 1671 04d0 0310A0E1 		mov	r1, r3	@ movhi
 1672 04d4 0111A0E1 		mov	r1, r1, asl #2
 1673 04d8 033081E0 		add	r3, r1, r3
 1674 04dc 0310A0E1 		mov	r1, r3	@ movhi
 1675 04e0 0101A0E1 		mov	r0, r1, asl #2
 1676 04e4 0310A0E1 		mov	r1, r3	@ movhi
 1677 04e8 0030A0E1 		mov	r3, r0	@ movhi
 1678 04ec 033081E0 		add	r3, r1, r3
 1679 04f0 0338A0E1 		mov	r3, r3, asl #16
 1680 04f4 2338A0E1 		mov	r3, r3, lsr #16
 1681 04f8 0200A0E1 		mov	r0, r2
 1682 04fc 0310A0E1 		mov	r1, r3
 1683 0500 0F20A0E3 		mov	r2, #15
 1684 0504 AC309FE5 		ldr	r3, .L21+4
 1685 0508 FEFFFFEB 		bl	Lcd_DspAscII8x16
  58:../elementos_pantalla.c **** 			break;
 1686              		.loc 1 58 0
 1687 050c 250000EA 		b	.L14
 1688              	.L18:
  59:../elementos_pantalla.c **** 		case FICHA_GRIS:
  60:../elementos_pantalla.c **** 			Lcd_DspAscII8x16(110+25*col, 25+25*fila,0xd, "@");
 1689              		.loc 1 60 0
 1690 0510 14301BE5 		ldr	r3, [fp, #-20]
 1691 0514 0338A0E1 		mov	r3, r3, asl #16
 1692 0518 2338A0E1 		mov	r3, r3, lsr #16
 1693 051c 0320A0E1 		mov	r2, r3	@ movhi
 1694 0520 0221A0E1 		mov	r2, r2, asl #2
 1695 0524 033082E0 		add	r3, r2, r3
 1696 0528 0320A0E1 		mov	r2, r3	@ movhi
 1697 052c 0211A0E1 		mov	r1, r2, asl #2
 1698 0530 0320A0E1 		mov	r2, r3	@ movhi
 1699 0534 0130A0E1 		mov	r3, r1	@ movhi
 1700 0538 033082E0 		add	r3, r2, r3
 1701 053c 0338A0E1 		mov	r3, r3, asl #16
 1702 0540 2338A0E1 		mov	r3, r3, lsr #16
 1703 0544 6E3083E2 		add	r3, r3, #110
 1704 0548 0338A0E1 		mov	r3, r3, asl #16
 1705 054c 2328A0E1 		mov	r2, r3, lsr #16
 1706 0550 10301BE5 		ldr	r3, [fp, #-16]
 1707 0554 013083E2 		add	r3, r3, #1
 1708 0558 0338A0E1 		mov	r3, r3, asl #16
 1709 055c 2338A0E1 		mov	r3, r3, lsr #16
 1710 0560 0310A0E1 		mov	r1, r3	@ movhi
 1711 0564 0111A0E1 		mov	r1, r1, asl #2
 1712 0568 033081E0 		add	r3, r1, r3
 1713 056c 0310A0E1 		mov	r1, r3	@ movhi
 1714 0570 0101A0E1 		mov	r0, r1, asl #2
 1715 0574 0310A0E1 		mov	r1, r3	@ movhi
 1716 0578 0030A0E1 		mov	r3, r0	@ movhi
 1717 057c 033081E0 		add	r3, r1, r3
 1718 0580 0338A0E1 		mov	r3, r3, asl #16
 1719 0584 2338A0E1 		mov	r3, r3, lsr #16
 1720 0588 0200A0E1 		mov	r0, r2
 1721 058c 0310A0E1 		mov	r1, r3
 1722 0590 0D20A0E3 		mov	r2, #13
 1723 0594 20309FE5 		ldr	r3, .L21+8
 1724 0598 FEFFFFEB 		bl	Lcd_DspAscII8x16
  61:../elementos_pantalla.c **** 			break;
 1725              		.loc 1 61 0
 1726 059c 0000A0E1 		mov	r0, r0	@ nop
 1727 05a0 000000EA 		b	.L14
 1728              	.L20:
  62:../elementos_pantalla.c **** 		default:	//Casilla en blanco, no hacemos nada
  63:../elementos_pantalla.c **** 			break;
 1729              		.loc 1 63 0
 1730 05a4 0000A0E1 		mov	r0, r0	@ nop
 1731              	.L14:
  64:../elementos_pantalla.c **** 	}
  65:../elementos_pantalla.c **** }
 1732              		.loc 1 65 0
 1733 05a8 0CD04BE2 		sub	sp, fp, #12
 1734 05ac 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1735 05b0 1EFF2FE1 		bx	lr
 1736              	.L22:
 1737              		.align	2
 1738              	.L21:
 1739 05b4 78000000 		.word	.LC7
 1740 05b8 7C000000 		.word	.LC8
 1741 05bc 80000000 		.word	.LC9
 1742              		.cfi_endproc
 1743              	.LFE3:
 1745              		.align	2
 1746              		.global	borrar_ficha
 1748              	borrar_ficha:
 1749              	.LFB4:
  66:../elementos_pantalla.c **** 
  67:../elementos_pantalla.c **** void borrar_ficha(int f, int c)		//TODO acabar
  68:../elementos_pantalla.c **** {
 1750              		.loc 1 68 0
 1751              		.cfi_startproc
 1752              		@ Function supports interworking.
 1753              		@ args = 0, pretend = 0, frame = 8
 1754              		@ frame_needed = 1, uses_anonymous_args = 0
 1755 05c0 0DC0A0E1 		mov	ip, sp
 1756              	.LCFI8:
 1757              		.cfi_def_cfa_register 12
 1758 05c4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1759 05c8 04B04CE2 		sub	fp, ip, #4
 1760              		.cfi_offset 14, -8
 1761              		.cfi_offset 13, -12
 1762              		.cfi_offset 11, -16
 1763              	.LCFI9:
 1764              		.cfi_def_cfa 11, 4
 1765 05cc 10D04DE2 		sub	sp, sp, #16
 1766 05d0 10000BE5 		str	r0, [fp, #-16]
 1767 05d4 14100BE5 		str	r1, [fp, #-20]
  69:../elementos_pantalla.c **** 	LcdClrRect((100+25*c) + 1, (20+25*f) + 1, (125+25*c) - 1, (45+25*f) - 1, 0x0);
 1768              		.loc 1 69 0
 1769 05d8 14301BE5 		ldr	r3, [fp, #-20]
 1770 05dc 0338A0E1 		mov	r3, r3, asl #16
 1771 05e0 2338A0E1 		mov	r3, r3, lsr #16
 1772 05e4 0320A0E1 		mov	r2, r3	@ movhi
 1773 05e8 0221A0E1 		mov	r2, r2, asl #2
 1774 05ec 033082E0 		add	r3, r2, r3
 1775 05f0 0320A0E1 		mov	r2, r3	@ movhi
 1776 05f4 0211A0E1 		mov	r1, r2, asl #2
 1777 05f8 0320A0E1 		mov	r2, r3	@ movhi
 1778 05fc 0130A0E1 		mov	r3, r1	@ movhi
 1779 0600 033082E0 		add	r3, r2, r3
 1780 0604 0338A0E1 		mov	r3, r3, asl #16
 1781 0608 2338A0E1 		mov	r3, r3, lsr #16
 1782 060c 653083E2 		add	r3, r3, #101
 1783 0610 0338A0E1 		mov	r3, r3, asl #16
 1784 0614 2338A0E1 		mov	r3, r3, lsr #16
 1785 0618 0338A0E1 		mov	r3, r3, asl #16
 1786 061c 2308A0E1 		mov	r0, r3, lsr #16
 1787 0620 10301BE5 		ldr	r3, [fp, #-16]
 1788 0624 0338A0E1 		mov	r3, r3, asl #16
 1789 0628 2338A0E1 		mov	r3, r3, lsr #16
 1790 062c 0320A0E1 		mov	r2, r3	@ movhi
 1791 0630 0221A0E1 		mov	r2, r2, asl #2
 1792 0634 033082E0 		add	r3, r2, r3
 1793 0638 0320A0E1 		mov	r2, r3	@ movhi
 1794 063c 0211A0E1 		mov	r1, r2, asl #2
 1795 0640 0320A0E1 		mov	r2, r3	@ movhi
 1796 0644 0130A0E1 		mov	r3, r1	@ movhi
 1797 0648 033082E0 		add	r3, r2, r3
 1798 064c 0338A0E1 		mov	r3, r3, asl #16
 1799 0650 2338A0E1 		mov	r3, r3, lsr #16
 1800 0654 153083E2 		add	r3, r3, #21
 1801 0658 0338A0E1 		mov	r3, r3, asl #16
 1802 065c 2338A0E1 		mov	r3, r3, lsr #16
 1803 0660 0338A0E1 		mov	r3, r3, asl #16
 1804 0664 2318A0E1 		mov	r1, r3, lsr #16
 1805 0668 14301BE5 		ldr	r3, [fp, #-20]
 1806 066c 0338A0E1 		mov	r3, r3, asl #16
 1807 0670 2338A0E1 		mov	r3, r3, lsr #16
 1808 0674 0320A0E1 		mov	r2, r3	@ movhi
 1809 0678 0221A0E1 		mov	r2, r2, asl #2
 1810 067c 033082E0 		add	r3, r2, r3
 1811 0680 0320A0E1 		mov	r2, r3	@ movhi
 1812 0684 02C1A0E1 		mov	ip, r2, asl #2
 1813 0688 0320A0E1 		mov	r2, r3	@ movhi
 1814 068c 0C30A0E1 		mov	r3, ip	@ movhi
 1815 0690 033082E0 		add	r3, r2, r3
 1816 0694 0338A0E1 		mov	r3, r3, asl #16
 1817 0698 2338A0E1 		mov	r3, r3, lsr #16
 1818 069c 7C3083E2 		add	r3, r3, #124
 1819 06a0 0338A0E1 		mov	r3, r3, asl #16
 1820 06a4 2338A0E1 		mov	r3, r3, lsr #16
 1821 06a8 0338A0E1 		mov	r3, r3, asl #16
 1822 06ac 2328A0E1 		mov	r2, r3, lsr #16
 1823 06b0 10301BE5 		ldr	r3, [fp, #-16]
 1824 06b4 0338A0E1 		mov	r3, r3, asl #16
 1825 06b8 2338A0E1 		mov	r3, r3, lsr #16
 1826 06bc 03C0A0E1 		mov	ip, r3	@ movhi
 1827 06c0 0CC1A0E1 		mov	ip, ip, asl #2
 1828 06c4 03308CE0 		add	r3, ip, r3
 1829 06c8 03C0A0E1 		mov	ip, r3	@ movhi
 1830 06cc 0CE1A0E1 		mov	lr, ip, asl #2
 1831 06d0 03C0A0E1 		mov	ip, r3	@ movhi
 1832 06d4 0E30A0E1 		mov	r3, lr	@ movhi
 1833 06d8 03308CE0 		add	r3, ip, r3
 1834 06dc 0338A0E1 		mov	r3, r3, asl #16
 1835 06e0 2338A0E1 		mov	r3, r3, lsr #16
 1836 06e4 2C3083E2 		add	r3, r3, #44
 1837 06e8 0338A0E1 		mov	r3, r3, asl #16
 1838 06ec 2338A0E1 		mov	r3, r3, lsr #16
 1839 06f0 0338A0E1 		mov	r3, r3, asl #16
 1840 06f4 2338A0E1 		mov	r3, r3, lsr #16
 1841 06f8 0008A0E1 		mov	r0, r0, asl #16
 1842 06fc 4008A0E1 		mov	r0, r0, asr #16
 1843 0700 0118A0E1 		mov	r1, r1, asl #16
 1844 0704 4118A0E1 		mov	r1, r1, asr #16
 1845 0708 0228A0E1 		mov	r2, r2, asl #16
 1846 070c 4228A0E1 		mov	r2, r2, asr #16
 1847 0710 0338A0E1 		mov	r3, r3, asl #16
 1848 0714 4338A0E1 		mov	r3, r3, asr #16
 1849 0718 00C0A0E3 		mov	ip, #0
 1850 071c 00C08DE5 		str	ip, [sp, #0]
 1851 0720 FEFFFFEB 		bl	LcdClrRect
  70:../elementos_pantalla.c **** }
 1852              		.loc 1 70 0
 1853 0724 0CD04BE2 		sub	sp, fp, #12
 1854 0728 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1855 072c 1EFF2FE1 		bx	lr
 1856              		.cfi_endproc
 1857              	.LFE4:
 1859              		.align	2
 1860              		.global	mover_gris_abajo
 1862              	mover_gris_abajo:
 1863              	.LFB5:
  71:../elementos_pantalla.c **** 
  72:../elementos_pantalla.c **** //Mueve hacia abajo en el LCD la ficha gris a partir de la fila y columna en la que está (0-7),
  73:../elementos_pantalla.c **** //	teniendo en cuenta lo que hubiera en la casilla donde está actualmente, porque lo restaura
  74:../elementos_pantalla.c **** void mover_gris_abajo(int fila, int columna, int fila_anterior_gris)		//TODO testear
  75:../elementos_pantalla.c **** {
 1864              		.loc 1 75 0
 1865              		.cfi_startproc
 1866              		@ Function supports interworking.
 1867              		@ args = 0, pretend = 0, frame = 16
 1868              		@ frame_needed = 1, uses_anonymous_args = 0
 1869 0730 0DC0A0E1 		mov	ip, sp
 1870              	.LCFI10:
 1871              		.cfi_def_cfa_register 12
 1872 0734 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1873 0738 04B04CE2 		sub	fp, ip, #4
 1874              		.cfi_offset 14, -8
 1875              		.cfi_offset 13, -12
 1876              		.cfi_offset 11, -16
 1877              	.LCFI11:
 1878              		.cfi_def_cfa 11, 4
 1879 073c 10D04DE2 		sub	sp, sp, #16
 1880 0740 10000BE5 		str	r0, [fp, #-16]
 1881 0744 14100BE5 		str	r1, [fp, #-20]
 1882 0748 18200BE5 		str	r2, [fp, #-24]
  76:../elementos_pantalla.c **** 	pintar_ficha(fila, columna, FICHA_GRIS);
 1883              		.loc 1 76 0
 1884 074c 10001BE5 		ldr	r0, [fp, #-16]
 1885 0750 14101BE5 		ldr	r1, [fp, #-20]
 1886 0754 0320A0E3 		mov	r2, #3
 1887 0758 FEFFFFEB 		bl	pintar_ficha
  77:../elementos_pantalla.c **** 	borrar_ficha(fila_anterior_gris, columna);
 1888              		.loc 1 77 0
 1889 075c 18001BE5 		ldr	r0, [fp, #-24]
 1890 0760 14101BE5 		ldr	r1, [fp, #-20]
 1891 0764 FEFFFFEB 		bl	borrar_ficha
  78:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 1892              		.loc 1 78 0
 1893 0768 FEFFFFEB 		bl	Lcd_Dma_Trans
  79:../elementos_pantalla.c **** }
 1894              		.loc 1 79 0
 1895 076c 0CD04BE2 		sub	sp, fp, #12
 1896 0770 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1897 0774 1EFF2FE1 		bx	lr
 1898              		.cfi_endproc
 1899              	.LFE5:
 1901              		.align	2
 1902              		.global	mover_gris_derecha
 1904              	mover_gris_derecha:
 1905              	.LFB6:
  80:../elementos_pantalla.c **** 
  81:../elementos_pantalla.c **** //Mueve hacia la derecha en el LCD la ficha gris a partir de la fila y columna en la que está (0-7)
  82:../elementos_pantalla.c **** //	teniendo en cuenta lo que hubiera en la casilla donde estaba antes de actualizar el movimiento, 
  83:../elementos_pantalla.c **** void mover_gris_derecha(int fila, int columna, int columna_anterior_gris)	//TODO testear y medir ti
  84:../elementos_pantalla.c **** {
 1906              		.loc 1 84 0
 1907              		.cfi_startproc
 1908              		@ Function supports interworking.
 1909              		@ args = 0, pretend = 0, frame = 16
 1910              		@ frame_needed = 1, uses_anonymous_args = 0
 1911 0778 0DC0A0E1 		mov	ip, sp
 1912              	.LCFI12:
 1913              		.cfi_def_cfa_register 12
 1914 077c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1915 0780 04B04CE2 		sub	fp, ip, #4
 1916              		.cfi_offset 14, -8
 1917              		.cfi_offset 13, -12
 1918              		.cfi_offset 11, -16
 1919              	.LCFI13:
 1920              		.cfi_def_cfa 11, 4
 1921 0784 10D04DE2 		sub	sp, sp, #16
 1922 0788 10000BE5 		str	r0, [fp, #-16]
 1923 078c 14100BE5 		str	r1, [fp, #-20]
 1924 0790 18200BE5 		str	r2, [fp, #-24]
  85:../elementos_pantalla.c **** 	pintar_ficha(fila, columna, FICHA_GRIS);
 1925              		.loc 1 85 0
 1926 0794 10001BE5 		ldr	r0, [fp, #-16]
 1927 0798 14101BE5 		ldr	r1, [fp, #-20]
 1928 079c 0320A0E3 		mov	r2, #3
 1929 07a0 FEFFFFEB 		bl	pintar_ficha
  86:../elementos_pantalla.c **** 	borrar_ficha(fila, columna_anterior_gris);
 1930              		.loc 1 86 0
 1931 07a4 10001BE5 		ldr	r0, [fp, #-16]
 1932 07a8 18101BE5 		ldr	r1, [fp, #-24]
 1933 07ac FEFFFFEB 		bl	borrar_ficha
  87:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 1934              		.loc 1 87 0
 1935 07b0 FEFFFFEB 		bl	Lcd_Dma_Trans
  88:../elementos_pantalla.c **** }
 1936              		.loc 1 88 0
 1937 07b4 0CD04BE2 		sub	sp, fp, #12
 1938 07b8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1939 07bc 1EFF2FE1 		bx	lr
 1940              		.cfi_endproc
 1941              	.LFE6:
 1943              		.align	2
 1944              		.global	pintar_profiling
 1946              	pintar_profiling:
 1947              	.LFB7:
  89:../elementos_pantalla.c **** 
  90:../elementos_pantalla.c **** void pintar_profiling(int t_total, int t_calc, int t_pvolteo, int veces_pvolteo)
  91:../elementos_pantalla.c **** {
 1948              		.loc 1 91 0
 1949              		.cfi_startproc
 1950              		@ Function supports interworking.
 1951              		@ args = 0, pretend = 0, frame = 32
 1952              		@ frame_needed = 1, uses_anonymous_args = 0
 1953 07c0 0DC0A0E1 		mov	ip, sp
 1954              	.LCFI14:
 1955              		.cfi_def_cfa_register 12
 1956 07c4 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1957 07c8 04B04CE2 		sub	fp, ip, #4
 1958              		.cfi_offset 14, -8
 1959              		.cfi_offset 13, -12
 1960              		.cfi_offset 11, -16
 1961              	.LCFI15:
 1962              		.cfi_def_cfa 11, 4
 1963 07cc 28D04DE2 		sub	sp, sp, #40
 1964 07d0 20000BE5 		str	r0, [fp, #-32]
 1965 07d4 24100BE5 		str	r1, [fp, #-36]
 1966 07d8 28200BE5 		str	r2, [fp, #-40]
 1967 07dc 2C300BE5 		str	r3, [fp, #-44]
  92:../elementos_pantalla.c **** 	char buffer[15];						//15 por darle un tamaño decente
  93:../elementos_pantalla.c **** 
  94:../elementos_pantalla.c **** 	//Se borra la zona de pantalla virtual donde están los numeritos del profiling que si no no funcio
  95:../elementos_pantalla.c **** 	LcdClrRect(20, 35, 75, 50, 0x0000);
 1968              		.loc 1 95 0
 1969 07e0 0030A0E3 		mov	r3, #0
 1970 07e4 00308DE5 		str	r3, [sp, #0]
 1971 07e8 1400A0E3 		mov	r0, #20
 1972 07ec 2310A0E3 		mov	r1, #35
 1973 07f0 4B20A0E3 		mov	r2, #75
 1974 07f4 3230A0E3 		mov	r3, #50
 1975 07f8 FEFFFFEB 		bl	LcdClrRect
  96:../elementos_pantalla.c **** 	LcdClrRect(20, 85, 95, 100, 0x0000);
 1976              		.loc 1 96 0
 1977 07fc 0030A0E3 		mov	r3, #0
 1978 0800 00308DE5 		str	r3, [sp, #0]
 1979 0804 1400A0E3 		mov	r0, #20
 1980 0808 5510A0E3 		mov	r1, #85
 1981 080c 5F20A0E3 		mov	r2, #95
 1982 0810 6430A0E3 		mov	r3, #100
 1983 0814 FEFFFFEB 		bl	LcdClrRect
  97:../elementos_pantalla.c **** 	LcdClrRect(20, 135, 95, 150, 0x0000);
 1984              		.loc 1 97 0
 1985 0818 0030A0E3 		mov	r3, #0
 1986 081c 00308DE5 		str	r3, [sp, #0]
 1987 0820 1400A0E3 		mov	r0, #20
 1988 0824 8710A0E3 		mov	r1, #135
 1989 0828 5F20A0E3 		mov	r2, #95
 1990 082c 9630A0E3 		mov	r3, #150
 1991 0830 FEFFFFEB 		bl	LcdClrRect
  98:../elementos_pantalla.c **** 	LcdClrRect(20, 185, 75, 200, 0x0000);
 1992              		.loc 1 98 0
 1993 0834 0030A0E3 		mov	r3, #0
 1994 0838 00308DE5 		str	r3, [sp, #0]
 1995 083c 1400A0E3 		mov	r0, #20
 1996 0840 B910A0E3 		mov	r1, #185
 1997 0844 4B20A0E3 		mov	r2, #75
 1998 0848 C830A0E3 		mov	r3, #200
 1999 084c FEFFFFEB 		bl	LcdClrRect
  99:../elementos_pantalla.c **** 
 100:../elementos_pantalla.c **** 	itoa(t_total, buffer, 10);				//10 es para indicar que pasamos a números decimales
 2000              		.loc 1 100 0
 2001 0850 1C304BE2 		sub	r3, fp, #28
 2002 0854 20001BE5 		ldr	r0, [fp, #-32]
 2003 0858 0310A0E1 		mov	r1, r3
 2004 085c 0A20A0E3 		mov	r2, #10
 2005 0860 FEFFFFEB 		bl	itoa
 101:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,35,BLACK,buffer);
 2006              		.loc 1 101 0
 2007 0864 1C304BE2 		sub	r3, fp, #28
 2008 0868 1400A0E3 		mov	r0, #20
 2009 086c 2310A0E3 		mov	r1, #35
 2010 0870 0F20A0E3 		mov	r2, #15
 2011 0874 FEFFFFEB 		bl	Lcd_DspAscII8x16
 102:../elementos_pantalla.c **** 	itoa(t_calc, buffer, 10);
 2012              		.loc 1 102 0
 2013 0878 1C304BE2 		sub	r3, fp, #28
 2014 087c 24001BE5 		ldr	r0, [fp, #-36]
 2015 0880 0310A0E1 		mov	r1, r3
 2016 0884 0A20A0E3 		mov	r2, #10
 2017 0888 FEFFFFEB 		bl	itoa
 103:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,85,BLACK,buffer);
 2018              		.loc 1 103 0
 2019 088c 1C304BE2 		sub	r3, fp, #28
 2020 0890 1400A0E3 		mov	r0, #20
 2021 0894 5510A0E3 		mov	r1, #85
 2022 0898 0F20A0E3 		mov	r2, #15
 2023 089c FEFFFFEB 		bl	Lcd_DspAscII8x16
 104:../elementos_pantalla.c **** 	itoa(t_pvolteo, buffer, 10);
 2024              		.loc 1 104 0
 2025 08a0 1C304BE2 		sub	r3, fp, #28
 2026 08a4 28001BE5 		ldr	r0, [fp, #-40]
 2027 08a8 0310A0E1 		mov	r1, r3
 2028 08ac 0A20A0E3 		mov	r2, #10
 2029 08b0 FEFFFFEB 		bl	itoa
 105:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,135,BLACK,buffer);
 2030              		.loc 1 105 0
 2031 08b4 1C304BE2 		sub	r3, fp, #28
 2032 08b8 1400A0E3 		mov	r0, #20
 2033 08bc 8710A0E3 		mov	r1, #135
 2034 08c0 0F20A0E3 		mov	r2, #15
 2035 08c4 FEFFFFEB 		bl	Lcd_DspAscII8x16
 106:../elementos_pantalla.c **** 	itoa(veces_pvolteo, buffer, 10);
 2036              		.loc 1 106 0
 2037 08c8 1C304BE2 		sub	r3, fp, #28
 2038 08cc 2C001BE5 		ldr	r0, [fp, #-44]
 2039 08d0 0310A0E1 		mov	r1, r3
 2040 08d4 0A20A0E3 		mov	r2, #10
 2041 08d8 FEFFFFEB 		bl	itoa
 107:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(20,185,BLACK,buffer);
 2042              		.loc 1 107 0
 2043 08dc 1C304BE2 		sub	r3, fp, #28
 2044 08e0 1400A0E3 		mov	r0, #20
 2045 08e4 B910A0E3 		mov	r1, #185
 2046 08e8 0F20A0E3 		mov	r2, #15
 2047 08ec FEFFFFEB 		bl	Lcd_DspAscII8x16
 108:../elementos_pantalla.c **** }
 2048              		.loc 1 108 0
 2049 08f0 0CD04BE2 		sub	sp, fp, #12
 2050 08f4 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2051 08f8 1EFF2FE1 		bx	lr
 2052              		.cfi_endproc
 2053              	.LFE7:
 2055              		.align	2
 2056              		.global	pintar_jugando
 2058              	pintar_jugando:
 2059              	.LFB8:
 109:../elementos_pantalla.c **** 
 110:../elementos_pantalla.c **** void pintar_jugando()
 111:../elementos_pantalla.c **** {
 2060              		.loc 1 111 0
 2061              		.cfi_startproc
 2062              		@ Function supports interworking.
 2063              		@ args = 0, pretend = 0, frame = 0
 2064              		@ frame_needed = 1, uses_anonymous_args = 0
 2065 08fc 0DC0A0E1 		mov	ip, sp
 2066              	.LCFI16:
 2067              		.cfi_def_cfa_register 12
 2068 0900 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2069 0904 04B04CE2 		sub	fp, ip, #4
 2070              		.cfi_offset 14, -8
 2071              		.cfi_offset 13, -12
 2072              		.cfi_offset 11, -16
 2073              	.LCFI17:
 2074              		.cfi_def_cfa 11, 4
 112:../elementos_pantalla.c **** 	Lcd_Clr();
 2075              		.loc 1 112 0
 2076 0908 FEFFFFEB 		bl	Lcd_Clr
 113:../elementos_pantalla.c **** 	//Lcd_Active_Clr();		//TODO no sé si es esta o la otra
 114:../elementos_pantalla.c **** 	pintar_cuadricula();
 2077              		.loc 1 114 0
 2078 090c FEFFFFEB 		bl	pintar_cuadricula
 115:../elementos_pantalla.c **** 	pintar_numeros_tablero();
 2079              		.loc 1 115 0
 2080 0910 FEFFFFEB 		bl	pintar_numeros_tablero
 116:../elementos_pantalla.c **** 	pintar_textos();
 2081              		.loc 1 116 0
 2082 0914 FEFFFFEB 		bl	pintar_textos
 117:../elementos_pantalla.c **** 	pintar_profiling(0,0,0,0);
 2083              		.loc 1 117 0
 2084 0918 0000A0E3 		mov	r0, #0
 2085 091c 0010A0E3 		mov	r1, #0
 2086 0920 0020A0E3 		mov	r2, #0
 2087 0924 0030A0E3 		mov	r3, #0
 2088 0928 FEFFFFEB 		bl	pintar_profiling
 118:../elementos_pantalla.c **** 	pintar_ficha(0,0,3);	//Pintar la ficha gris en 0,0
 2089              		.loc 1 118 0
 2090 092c 0000A0E3 		mov	r0, #0
 2091 0930 0010A0E3 		mov	r1, #0
 2092 0934 0320A0E3 		mov	r2, #3
 2093 0938 FEFFFFEB 		bl	pintar_ficha
 119:../elementos_pantalla.c **** 	pintar_ficha(3,3,1);	//Pintar las fichas blancas iniciales en 3,3 y 4,4
 2094              		.loc 1 119 0
 2095 093c 0300A0E3 		mov	r0, #3
 2096 0940 0310A0E3 		mov	r1, #3
 2097 0944 0120A0E3 		mov	r2, #1
 2098 0948 FEFFFFEB 		bl	pintar_ficha
 120:../elementos_pantalla.c **** 	pintar_ficha(4,4,1);
 2099              		.loc 1 120 0
 2100 094c 0400A0E3 		mov	r0, #4
 2101 0950 0410A0E3 		mov	r1, #4
 2102 0954 0120A0E3 		mov	r2, #1
 2103 0958 FEFFFFEB 		bl	pintar_ficha
 121:../elementos_pantalla.c **** 	pintar_ficha(3,4,2);	//Pintar las fichas negras en 3,4 y 4,3
 2104              		.loc 1 121 0
 2105 095c 0300A0E3 		mov	r0, #3
 2106 0960 0410A0E3 		mov	r1, #4
 2107 0964 0220A0E3 		mov	r2, #2
 2108 0968 FEFFFFEB 		bl	pintar_ficha
 122:../elementos_pantalla.c **** 	pintar_ficha(4,3,2);
 2109              		.loc 1 122 0
 2110 096c 0400A0E3 		mov	r0, #4
 2111 0970 0310A0E3 		mov	r1, #3
 2112 0974 0220A0E3 		mov	r2, #2
 2113 0978 FEFFFFEB 		bl	pintar_ficha
 123:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2114              		.loc 1 123 0
 2115 097c FEFFFFEB 		bl	Lcd_Dma_Trans
 124:../elementos_pantalla.c **** }
 2116              		.loc 1 124 0
 2117 0980 0CD04BE2 		sub	sp, fp, #12
 2118 0984 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2119 0988 1EFF2FE1 		bx	lr
 2120              		.cfi_endproc
 2121              	.LFE8:
 2123              		.section	.rodata
 2124 0082 0000     		.align	2
 2125              	.LC10:
 2126 0084 2C2C2C2C 		.ascii	",,,,,,%#########%%%%%##############################"
 2126      2C2C2523 
 2126      23232323 
 2126      23232323 
 2126      25252525 
 2127 00b7 23232323 		.ascii	"#######((/**************//////\000"
 2127      23232328 
 2127      282F2A2A 
 2127      2A2A2A2A 
 2127      2A2A2A2A 
 2128 00d6 0000     		.align	2
 2129              	.LC11:
 2130 00d8 2C2C2C2C 		.ascii	",,,,%###########%%%%%%#############################"
 2130      25232323 
 2130      23232323 
 2130      23232323 
 2130      25252525 
 2131 010b 23232323 		.ascii	"#######((/*********///////((((\000"
 2131      23232328 
 2131      282F2A2A 
 2131      2A2A2A2A 
 2131      2A2A2A2F 
 2132 012a 0000     		.align	2
 2133              	.LC12:
 2134 012c 23232323 		.ascii	"################%%%%%%%############################"
 2134      23232323 
 2134      23232323 
 2134      23232323 
 2134      25252525 
 2135 015f 23232323 		.ascii	"#######((/********////((((((##\000"
 2135      23232328 
 2135      282F2A2A 
 2135      2A2A2A2A 
 2135      2A2A2F2F 
 2136 017e 0000     		.align	2
 2137              	.LC13:
 2138 0180 5245474C 		.ascii	"REGLAS\000"
 2138      415300
 2139              		.text
 2140              		.align	2
 2141              		.global	pintar_prueba
 2143              	pintar_prueba:
 2144              	.LFB9:
 125:../elementos_pantalla.c **** 
 126:../elementos_pantalla.c **** void pintar_prueba()
 127:../elementos_pantalla.c **** {
 2145              		.loc 1 127 0
 2146              		.cfi_startproc
 2147              		@ Function supports interworking.
 2148              		@ args = 0, pretend = 0, frame = 0
 2149              		@ frame_needed = 1, uses_anonymous_args = 0
 2150 098c 0DC0A0E1 		mov	ip, sp
 2151              	.LCFI18:
 2152              		.cfi_def_cfa_register 12
 2153 0990 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2154 0994 04B04CE2 		sub	fp, ip, #4
 2155              		.cfi_offset 14, -8
 2156              		.cfi_offset 13, -12
 2157              		.cfi_offset 11, -16
 2158              	.LCFI19:
 2159              		.cfi_def_cfa 11, 4
 128:../elementos_pantalla.c **** 	/*pintar_cuadricula();
 129:../elementos_pantalla.c **** 	pintar_numeros_tablero();
 130:../elementos_pantalla.c **** 	pintar_textos();
 131:../elementos_pantalla.c **** 	pintar_ficha(0,0,1);
 132:../elementos_pantalla.c **** 	pintar_ficha(7,7,2);
 133:../elementos_pantalla.c **** 	pintar_ficha(3,3,3);
 134:../elementos_pantalla.c **** 	pintar_profiling(451245, 84512, 56456, 469352);*/
 135:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(0,0,BLACK,",,,,,,%#########%%%%%#####################################((/*********
 2160              		.loc 1 135 0
 2161 0998 0000A0E3 		mov	r0, #0
 2162 099c 0010A0E3 		mov	r1, #0
 2163 09a0 0F20A0E3 		mov	r2, #15
 2164 09a4 4C309FE5 		ldr	r3, .L29
 2165 09a8 FEFFFFEB 		bl	Lcd_DspAscII8x16
 136:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(8,16,BLACK,",,,,%###########%%%%%%####################################((/********
 2166              		.loc 1 136 0
 2167 09ac 0800A0E3 		mov	r0, #8
 2168 09b0 1010A0E3 		mov	r1, #16
 2169 09b4 0F20A0E3 		mov	r2, #15
 2170 09b8 3C309FE5 		ldr	r3, .L29+4
 2171 09bc FEFFFFEB 		bl	Lcd_DspAscII8x16
 137:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(16,32,BLACK,"################%%%%%%%###################################((/*******
 2172              		.loc 1 137 0
 2173 09c0 1000A0E3 		mov	r0, #16
 2174 09c4 2010A0E3 		mov	r1, #32
 2175 09c8 0F20A0E3 		mov	r2, #15
 2176 09cc 2C309FE5 		ldr	r3, .L29+8
 2177 09d0 FEFFFFEB 		bl	Lcd_DspAscII8x16
 138:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(24,48,BLACK,"REGLAS");
 2178              		.loc 1 138 0
 2179 09d4 1800A0E3 		mov	r0, #24
 2180 09d8 3010A0E3 		mov	r1, #48
 2181 09dc 0F20A0E3 		mov	r2, #15
 2182 09e0 1C309FE5 		ldr	r3, .L29+12
 2183 09e4 FEFFFFEB 		bl	Lcd_DspAscII8x16
 139:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2184              		.loc 1 139 0
 2185 09e8 FEFFFFEB 		bl	Lcd_Dma_Trans
 140:../elementos_pantalla.c **** }
 2186              		.loc 1 140 0
 2187 09ec 0CD04BE2 		sub	sp, fp, #12
 2188 09f0 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2189 09f4 1EFF2FE1 		bx	lr
 2190              	.L30:
 2191              		.align	2
 2192              	.L29:
 2193 09f8 84000000 		.word	.LC10
 2194 09fc D8000000 		.word	.LC11
 2195 0a00 2C010000 		.word	.LC12
 2196 0a04 80010000 		.word	.LC13
 2197              		.cfi_endproc
 2198              	.LFE9:
 2200              		.align	2
 2201              		.global	pintar_reglas
 2203              	pintar_reglas:
 2204              	.LFB10:
 141:../elementos_pantalla.c **** 
 142:../elementos_pantalla.c **** void pintar_reglas()
 143:../elementos_pantalla.c **** {
 2205              		.loc 1 143 0
 2206              		.cfi_startproc
 2207              		@ Function supports interworking.
 2208              		@ args = 0, pretend = 0, frame = 0
 2209              		@ frame_needed = 1, uses_anonymous_args = 0
 2210 0a08 0DC0A0E1 		mov	ip, sp
 2211              	.LCFI20:
 2212              		.cfi_def_cfa_register 12
 2213 0a0c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2214 0a10 04B04CE2 		sub	fp, ip, #4
 2215              		.cfi_offset 14, -8
 2216              		.cfi_offset 13, -12
 2217              		.cfi_offset 11, -16
 2218              	.LCFI21:
 2219              		.cfi_def_cfa 11, 4
 144:../elementos_pantalla.c **** 	Lcd_Active_Clr();
 2220              		.loc 1 144 0
 2221 0a14 FEFFFFEB 		bl	Lcd_Active_Clr
 145:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(1,30,BLACK,"REGLAS");
 2222              		.loc 1 145 0
 2223 0a18 0100A0E3 		mov	r0, #1
 2224 0a1c 1E10A0E3 		mov	r1, #30
 2225 0a20 0F20A0E3 		mov	r2, #15
 2226 0a24 10309FE5 		ldr	r3, .L32
 2227 0a28 FEFFFFEB 		bl	Lcd_DspAscII8x16
 146:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2228              		.loc 1 146 0
 2229 0a2c FEFFFFEB 		bl	Lcd_Dma_Trans
 147:../elementos_pantalla.c **** }
 2230              		.loc 1 147 0
 2231 0a30 0CD04BE2 		sub	sp, fp, #12
 2232 0a34 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2233 0a38 1EFF2FE1 		bx	lr
 2234              	.L33:
 2235              		.align	2
 2236              	.L32:
 2237 0a3c 80010000 		.word	.LC13
 2238              		.cfi_endproc
 2239              	.LFE10:
 2241              		.section	.rodata
 2242 0187 00       		.align	2
 2243              	.LC14:
 2244 0188 48415320 		.ascii	"HAS GANADO!\000"
 2244      47414E41 
 2244      444F2100 
 2245              		.text
 2246              		.align	2
 2247              		.global	pintar_fin_victoria
 2249              	pintar_fin_victoria:
 2250              	.LFB11:
 148:../elementos_pantalla.c **** 
 149:../elementos_pantalla.c **** void pintar_fin_victoria(int blancas, int negras)
 150:../elementos_pantalla.c **** {
 2251              		.loc 1 150 0
 2252              		.cfi_startproc
 2253              		@ Function supports interworking.
 2254              		@ args = 0, pretend = 0, frame = 8
 2255              		@ frame_needed = 1, uses_anonymous_args = 0
 2256 0a40 0DC0A0E1 		mov	ip, sp
 2257              	.LCFI22:
 2258              		.cfi_def_cfa_register 12
 2259 0a44 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2260 0a48 04B04CE2 		sub	fp, ip, #4
 2261              		.cfi_offset 14, -8
 2262              		.cfi_offset 13, -12
 2263              		.cfi_offset 11, -16
 2264              	.LCFI23:
 2265              		.cfi_def_cfa 11, 4
 2266 0a4c 08D04DE2 		sub	sp, sp, #8
 2267 0a50 10000BE5 		str	r0, [fp, #-16]
 2268 0a54 14100BE5 		str	r1, [fp, #-20]
 151:../elementos_pantalla.c **** 	Lcd_Active_Clr();
 2269              		.loc 1 151 0
 2270 0a58 FEFFFFEB 		bl	Lcd_Active_Clr
 152:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(1,30,BLACK,"HAS GANADO!");
 2271              		.loc 1 152 0
 2272 0a5c 0100A0E3 		mov	r0, #1
 2273 0a60 1E10A0E3 		mov	r1, #30
 2274 0a64 0F20A0E3 		mov	r2, #15
 2275 0a68 10309FE5 		ldr	r3, .L35
 2276 0a6c FEFFFFEB 		bl	Lcd_DspAscII8x16
 153:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2277              		.loc 1 153 0
 2278 0a70 FEFFFFEB 		bl	Lcd_Dma_Trans
 154:../elementos_pantalla.c **** }
 2279              		.loc 1 154 0
 2280 0a74 0CD04BE2 		sub	sp, fp, #12
 2281 0a78 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2282 0a7c 1EFF2FE1 		bx	lr
 2283              	.L36:
 2284              		.align	2
 2285              	.L35:
 2286 0a80 88010000 		.word	.LC14
 2287              		.cfi_endproc
 2288              	.LFE11:
 2290              		.section	.rodata
 2291              		.align	2
 2292              	.LC15:
 2293 0194 48415320 		.ascii	"HAS PERDIDO, TROZO DE ESCORIA!\000"
 2293      50455244 
 2293      49444F2C 
 2293      2054524F 
 2293      5A4F2044 
 2294              		.text
 2295              		.align	2
 2296              		.global	pintar_fin_derrota
 2298              	pintar_fin_derrota:
 2299              	.LFB12:
 155:../elementos_pantalla.c **** 
 156:../elementos_pantalla.c **** void pintar_fin_derrota(int blancas, int negas)
 157:../elementos_pantalla.c **** {
 2300              		.loc 1 157 0
 2301              		.cfi_startproc
 2302              		@ Function supports interworking.
 2303              		@ args = 0, pretend = 0, frame = 8
 2304              		@ frame_needed = 1, uses_anonymous_args = 0
 2305 0a84 0DC0A0E1 		mov	ip, sp
 2306              	.LCFI24:
 2307              		.cfi_def_cfa_register 12
 2308 0a88 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2309 0a8c 04B04CE2 		sub	fp, ip, #4
 2310              		.cfi_offset 14, -8
 2311              		.cfi_offset 13, -12
 2312              		.cfi_offset 11, -16
 2313              	.LCFI25:
 2314              		.cfi_def_cfa 11, 4
 2315 0a90 08D04DE2 		sub	sp, sp, #8
 2316 0a94 10000BE5 		str	r0, [fp, #-16]
 2317 0a98 14100BE5 		str	r1, [fp, #-20]
 158:../elementos_pantalla.c **** 	Lcd_Active_Clr();
 2318              		.loc 1 158 0
 2319 0a9c FEFFFFEB 		bl	Lcd_Active_Clr
 159:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(1,30,BLACK,"HAS PERDIDO, TROZO DE ESCORIA!");
 2320              		.loc 1 159 0
 2321 0aa0 0100A0E3 		mov	r0, #1
 2322 0aa4 1E10A0E3 		mov	r1, #30
 2323 0aa8 0F20A0E3 		mov	r2, #15
 2324 0aac 10309FE5 		ldr	r3, .L38
 2325 0ab0 FEFFFFEB 		bl	Lcd_DspAscII8x16
 160:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2326              		.loc 1 160 0
 2327 0ab4 FEFFFFEB 		bl	Lcd_Dma_Trans
 161:../elementos_pantalla.c **** }
 2328              		.loc 1 161 0
 2329 0ab8 0CD04BE2 		sub	sp, fp, #12
 2330 0abc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2331 0ac0 1EFF2FE1 		bx	lr
 2332              	.L39:
 2333              		.align	2
 2334              	.L38:
 2335 0ac4 94010000 		.word	.LC15
 2336              		.cfi_endproc
 2337              	.LFE12:
 2339              		.section	.rodata
 2340 01b3 00       		.align	2
 2341              	.LC16:
 2342 01b4 45524553 		.ascii	"ERES TAN IN\332TIL QUE NO GANAS PERO\000"
 2342      2054414E 
 2342      20494EDA 
 2342      54494C20 
 2342      51554520 
 2343 01d6 0000     		.align	2
 2344              	.LC17:
 2345 01d8 54414D50 		.ascii	"TAMPOCO PIERDES CON UNA PUTA CPU!\000"
 2345      4F434F20 
 2345      50494552 
 2345      44455320 
 2345      434F4E20 
 2346 01fa 0000     		.text
 2347              		.align	2
 2348              		.global	pintar_fin_empate
 2350              	pintar_fin_empate:
 2351              	.LFB13:
 162:../elementos_pantalla.c **** 
 163:../elementos_pantalla.c **** void pintar_fin_empate(int blancas, int negas)
 164:../elementos_pantalla.c **** {
 2352              		.loc 1 164 0
 2353              		.cfi_startproc
 2354              		@ Function supports interworking.
 2355              		@ args = 0, pretend = 0, frame = 8
 2356              		@ frame_needed = 1, uses_anonymous_args = 0
 2357 0ac8 0DC0A0E1 		mov	ip, sp
 2358              	.LCFI26:
 2359              		.cfi_def_cfa_register 12
 2360 0acc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2361 0ad0 04B04CE2 		sub	fp, ip, #4
 2362              		.cfi_offset 14, -8
 2363              		.cfi_offset 13, -12
 2364              		.cfi_offset 11, -16
 2365              	.LCFI27:
 2366              		.cfi_def_cfa 11, 4
 2367 0ad4 08D04DE2 		sub	sp, sp, #8
 2368 0ad8 10000BE5 		str	r0, [fp, #-16]
 2369 0adc 14100BE5 		str	r1, [fp, #-20]
 165:../elementos_pantalla.c **** 	Lcd_Active_Clr();
 2370              		.loc 1 165 0
 2371 0ae0 FEFFFFEB 		bl	Lcd_Active_Clr
 166:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(1,30,BLACK,"ERES TAN INÚTIL QUE NO GANAS PERO");
 2372              		.loc 1 166 0
 2373 0ae4 0100A0E3 		mov	r0, #1
 2374 0ae8 1E10A0E3 		mov	r1, #30
 2375 0aec 0F20A0E3 		mov	r2, #15
 2376 0af0 24309FE5 		ldr	r3, .L41
 2377 0af4 FEFFFFEB 		bl	Lcd_DspAscII8x16
 167:../elementos_pantalla.c **** 	Lcd_DspAscII8x16(1,50,BLACK,"TAMPOCO PIERDES CON UNA PUTA CPU!");
 2378              		.loc 1 167 0
 2379 0af8 0100A0E3 		mov	r0, #1
 2380 0afc 3210A0E3 		mov	r1, #50
 2381 0b00 0F20A0E3 		mov	r2, #15
 2382 0b04 14309FE5 		ldr	r3, .L41+4
 2383 0b08 FEFFFFEB 		bl	Lcd_DspAscII8x16
 168:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2384              		.loc 1 168 0
 2385 0b0c FEFFFFEB 		bl	Lcd_Dma_Trans
 169:../elementos_pantalla.c **** }
 2386              		.loc 1 169 0
 2387 0b10 0CD04BE2 		sub	sp, fp, #12
 2388 0b14 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2389 0b18 1EFF2FE1 		bx	lr
 2390              	.L42:
 2391              		.align	2
 2392              	.L41:
 2393 0b1c B4010000 		.word	.LC16
 2394 0b20 D8010000 		.word	.LC17
 2395              		.cfi_endproc
 2396              	.LFE13:
 2398              		.align	2
 2399              		.global	iniciar_DMA
 2401              	iniciar_DMA:
 2402              	.LFB14:
 170:../elementos_pantalla.c **** 
 171:../elementos_pantalla.c **** void iniciar_DMA()
 172:../elementos_pantalla.c **** {
 2403              		.loc 1 172 0
 2404              		.cfi_startproc
 2405              		@ Function supports interworking.
 2406              		@ args = 0, pretend = 0, frame = 0
 2407              		@ frame_needed = 1, uses_anonymous_args = 0
 2408 0b24 0DC0A0E1 		mov	ip, sp
 2409              	.LCFI28:
 2410              		.cfi_def_cfa_register 12
 2411 0b28 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2412 0b2c 04B04CE2 		sub	fp, ip, #4
 2413              		.cfi_offset 14, -8
 2414              		.cfi_offset 13, -12
 2415              		.cfi_offset 11, -16
 2416              	.LCFI29:
 2417              		.cfi_def_cfa 11, 4
 173:../elementos_pantalla.c **** 	Lcd_Dma_Trans();
 2418              		.loc 1 173 0
 2419 0b30 FEFFFFEB 		bl	Lcd_Dma_Trans
 174:../elementos_pantalla.c **** }
 2420              		.loc 1 174 0
 2421 0b34 0CD04BE2 		sub	sp, fp, #12
 2422 0b38 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2423 0b3c 1EFF2FE1 		bx	lr
 2424              		.cfi_endproc
 2425              	.LFE14:
 2427              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 elementos_pantalla.c
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1209   .text:00000000 $a
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1212   .text:00000000 pintar_cuadricula
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1352   .text:000001b0 pintar_numeros_tablero
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1448   .text:000002c8 $d
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1453   .rodata:00000000 $d
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1475   .text:000002cc $a
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1478   .text:000002cc pintar_textos
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1556   .text:00000398 $d
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1577   .text:000003b4 $a
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1580   .text:000003b4 pintar_ficha
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1739   .text:000005b4 $d
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1745   .text:000005c0 $a
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1748   .text:000005c0 borrar_ficha
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1862   .text:00000730 mover_gris_abajo
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1904   .text:00000778 mover_gris_derecha
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:1946   .text:000007c0 pintar_profiling
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2058   .text:000008fc pintar_jugando
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2143   .text:0000098c pintar_prueba
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2193   .text:000009f8 $d
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2200   .text:00000a08 $a
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2203   .text:00000a08 pintar_reglas
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2237   .text:00000a3c $d
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2246   .text:00000a40 $a
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2249   .text:00000a40 pintar_fin_victoria
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2286   .text:00000a80 $d
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2295   .text:00000a84 $a
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2298   .text:00000a84 pintar_fin_derrota
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2335   .text:00000ac4 $d
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2347   .text:00000ac8 $a
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2350   .text:00000ac8 pintar_fin_empate
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2393   .text:00000b1c $d
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2398   .text:00000b24 $a
C:\Users\guest\AppData\Local\Temp\cc5eOrRK.s:2401   .text:00000b24 iniciar_DMA
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
Lcd_Draw_Box
itoa
Lcd_DspAscII8x16
LcdClrRect
Lcd_Dma_Trans
Lcd_Clr
Lcd_Active_Clr
